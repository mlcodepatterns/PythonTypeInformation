[{"lineNumber": 15, "col_offset": 0, "nodeName": "alpha", "type": "float"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "test_gaussian_dummy_hellinger_distance_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 2, "nodeName": "test_gaussian_dummy_kl_divergence_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 2, "nodeName": "test_gaussian_dummy_js_divergence_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 2, "nodeName": "test_gaussian_dummy_divergence_measures_pdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "test_gaussian_dummy_wasserstein_distance_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "test_multidim_chauchy", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 2, "nodeName": "test_mc_intrgration_chauchy_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "test_mc_intrgration_chauchy_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 209, "col_offset": 2, "nodeName": "get_samples", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 2, "nodeName": "test_value_at_risk_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "test_value_at_risk_cdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 2, "nodeName": "test_conditional_value_at_risk_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 2, "nodeName": "test_conditional_value_at_risk_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 2, "nodeName": "test_mean_mc", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 2, "nodeName": "test_mean_pdf", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 2, "nodeName": "test_mean_mixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 2, "nodeName": "test_covariance1", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 2, "nodeName": "test_covariance2", "type": "Callable[[Any], Any]"}, {"lineNumber": 337, "col_offset": 2, "nodeName": "test_covariance_mixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 2, "nodeName": "test_skewness1", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 2, "nodeName": "test_skewness2", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 2, "nodeName": "test_kurtosis1", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 2, "nodeName": "test_kurtosis2", "type": "Callable[[Any], Any]"}, {"lineNumber": 411, "col_offset": 2, "nodeName": "test_conditional_value_at_risk_mixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 2, "nodeName": "test_tail_risks_risk_mixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 448, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "hd_squared_analytic_result", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "kl_divergence_analytical", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "hd_squared_analytic_result", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "kl_divergence_analytical", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "wasserstein_upper", "type": "Any"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "x1", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "x2", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "integral", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "integral", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "scale", "type": "float"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "Y", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "skew", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "skew", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "skew", "type": "Any"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "skew", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "CVaR_cdf", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "diff", "type": "Any"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "diff_cvar", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "diff_var", "type": "Any"}, {"lineNumber": 450, "col_offset": 5, "nodeName": "__name__", "type": "str"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "t", "type": "str"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "testmodules", "type": "List[str]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "hd_squared_analytic_result", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "hd_squared_analytic_result", "type": "Any"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "kl_divergence_analytical", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "kl_divergence_analytical", "type": "Any"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "hell_dist_mc", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "kl_div_mc", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "js_div_mc", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "divergence_measures_pdf", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "hd_squared_analytic_result", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "kl_divergence_analytical", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "trace", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 184, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "_mc_integration_cauchy", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "SimulationDummy", "type": "Type[cde.tests.Dummies.SimulationDummy]"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "GoodnessOfFit", "type": "Type[cde.evaluation.GoodnessOfFit.GoodnessOfFit]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "prob_model1", "type": "cde.tests.Dummies.SimulationDummy"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "_mc_integration_cauchy", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 43, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "std", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 214, "col_offset": 14, "nodeName": "Y", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 219, "col_offset": 6, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 6, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 221, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 224, "col_offset": 6, "nodeName": "alpha", "type": "float"}, {"lineNumber": 225, "col_offset": 6, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 226, "col_offset": 6, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 235, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 238, "col_offset": 6, "nodeName": "alpha", "type": "float"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 240, "col_offset": 6, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "sigma", "type": "Union[int, float]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "alpha", "type": "float"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 6, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 249, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 252, "col_offset": 6, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 253, "col_offset": 6, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 265, "col_offset": 6, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 270, "col_offset": 6, "nodeName": "alpha", "type": "float"}, {"lineNumber": 272, "col_offset": 6, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 273, "col_offset": 6, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "mean_", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "mean_", "type": "Any"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "MixtureDensityNetwork", "type": "Type[cde.density_estimator.MDN.MixtureDensityNetwork]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "mean_", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "covariance", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "covariance", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "MixtureDensityNetwork", "type": "Type[cde.density_estimator.MDN.MixtureDensityNetwork]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 348, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "covariance", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 10, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 358, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "_skewness_mc", "type": "Any"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "skew", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "_skewness_pdf", "type": "Any"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "skew", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 370, "col_offset": 10, "nodeName": "SkewNormalDummy", "type": "Type[cde.tests.Dummies.SkewNormalDummy]"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "_skewness_mc", "type": "Any"}, {"lineNumber": 374, "col_offset": 39, "nodeName": "skew", "type": "Any"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "skewness", "type": "Any"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "_skewness_pdf", "type": "Any"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "skew", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "skewness", "type": "Any"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "skewness", "type": "Any"}, {"lineNumber": 384, "col_offset": 9, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 386, "col_offset": 10, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "_kurtosis_mc", "type": "Any"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "_kurtosis_pdf", "type": "Any"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 398, "col_offset": 10, "nodeName": "SkewNormalDummy", "type": "Type[cde.tests.Dummies.SkewNormalDummy]"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "_kurtosis_mc", "type": "Any"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 403, "col_offset": 36, "nodeName": "kurtosis", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "_kurtosis_pdf", "type": "Any"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "kurtosis", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "kurtosis", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 413, "col_offset": 7, "nodeName": "Y", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "get_samples", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "KernelMixtureNetwork", "type": "Type[cde.density_estimator.KMN.KernelMixtureNetwork]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 415, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "conditional_value_at_risk", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 51, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "conditional_value_at_risk", "type": "Callable[..., Any]"}, {"lineNumber": 420, "col_offset": 62, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 420, "col_offset": 69, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "CVaR_cdf", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 426, "col_offset": 27, "nodeName": "diff", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 429, "col_offset": 7, "nodeName": "Y", "type": "Any"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "get_samples", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "KernelMixtureNetwork", "type": "Type[cde.density_estimator.KMN.KernelMixtureNetwork]"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 431, "col_offset": 17, "nodeName": "Y", "type": "Any"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "VaR_mixture", "type": "Any"}, {"lineNumber": 435, "col_offset": 17, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "tail_risk_measures", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 435, "col_offset": 57, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "VaR_cdf", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "CVaR_mc", "type": "Any"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "tail_risk_measures", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 436, "col_offset": 63, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 436, "col_offset": 70, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "CVaR_mc", "type": "Any"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 442, "col_offset": 27, "nodeName": "diff_cvar", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "diff_var", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "TestSuite", "type": "Type[unittest.TestSuite]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "run", "type": "Callable[[unittest.Testable], unittest.TestResult]"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 71, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 84, "col_offset": 84, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 102, "col_offset": 84, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 117, "col_offset": 84, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 138, "col_offset": 84, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "hell_dist_mc", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "kl_div_mc", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "js_div_mc", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "js_div_mc", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "wasserstein_distance_mc", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 84, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "integral", "type": "Any"}, {"lineNumber": 192, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "identity", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "mu2", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 84, "nodeName": "x_cond", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "self", "type": "TestGoodnessOfFitTests"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "integral", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "value_at_risk", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "alpha", "type": "float"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "sigma", "type": "Union[int, float]"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "value_at_risk", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "alpha", "type": "float"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "VaR_true", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "conditional_value_at_risk", "type": "Any"}, {"lineNumber": 255, "col_offset": 51, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 256, "col_offset": 50, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 259, "col_offset": 42, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "GaussianDummy", "type": "Type[cde.tests.Dummies.GaussianDummy]"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "fit", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "conditional_value_at_risk", "type": "Any"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 275, "col_offset": 42, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "CVaR_true", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "identity", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 37, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 291, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "identity", "type": "Any"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 320, "col_offset": 37, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 328, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 333, "col_offset": 14, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "scale", "type": "float"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "model", "type": "cde.density_estimator.MDN.MixtureDensityNetwork"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "skew", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 367, "col_offset": 27, "nodeName": "skew", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 373, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 375, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "skew", "type": "Any"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "skew", "type": "Any"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 384, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "mu", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 403, "col_offset": 27, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 403, "col_offset": 36, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "kurt", "type": "Any"}, {"lineNumber": 407, "col_offset": 36, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "est", "type": "cde.tests.Dummies.SkewNormalDummy"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "BaseDensityEstimator", "type": "Type[cde.density_estimator.BaseDensityEstimator.BaseDensityEstimator]"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 433, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "model", "type": "cde.density_estimator.KMN.KernelMixtureNetwork"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "BaseDensityEstimator", "type": "Type[cde.density_estimator.BaseDensityEstimator.BaseDensityEstimator]"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "abs", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "mod", "type": "module"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "suitefn", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "hellinger_distance_mc", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "hellinger_distance_mc", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "log", "type": "Any"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "kl_divergence_mc", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "kl_divergence_mc", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "js_divergence_mc", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "js_divergence_mc", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "log", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "_multidim_cauchy_pdf", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "x1", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 50, "nodeName": "_multidim_cauchy_pdf", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 71, "nodeName": "x1", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "_multidim_cauchy_pdf", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "x2", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 65, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "multivariate_normal", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 225, "col_offset": 68, "nodeName": "alpha", "type": "float"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 227, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 228, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 239, "col_offset": 68, "nodeName": "alpha", "type": "float"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "norm", "type": "Any"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "mu", "type": "Union[int, float]"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "sigma", "type": "Union[int, float]"}, {"lineNumber": 241, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 242, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "VaR_est", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 253, "col_offset": 81, "nodeName": "alpha", "type": "float"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "value_at_risk", "type": "Any"}, {"lineNumber": 259, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 260, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "identity", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "mu1", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 6, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 273, "col_offset": 82, "nodeName": "alpha", "type": "float"}, {"lineNumber": 275, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 276, "col_offset": 6, "nodeName": "self", "type": "TestRiskMeasures"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "CVaR_est", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "mean_est", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "sigma", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 350, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 60, "nodeName": "scale", "type": "float"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 389, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "CVaR_cdf", "type": "Any"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 31, "nodeName": "CVaR_mc", "type": "Any"}, {"lineNumber": 441, "col_offset": 41, "nodeName": "CVaR_mixture", "type": "Any"}, {"lineNumber": 444, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 444, "col_offset": 30, "nodeName": "VaR_mixture", "type": "Any"}, {"lineNumber": 444, "col_offset": 44, "nodeName": "VaR_cdf", "type": "Any"}, {"lineNumber": 461, "col_offset": 14, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "t", "type": "str"}, {"lineNumber": 462, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 26, "nodeName": "mod", "type": "module"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "addTest", "type": "Callable[[unittest.Testable], None]"}, {"lineNumber": 464, "col_offset": 14, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 464, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.TextTestRunner]"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "gof1", "type": "cde.evaluation.GoodnessOfFit.GoodnessOfFit"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 172, "col_offset": 65, "nodeName": "cauchy", "type": "Any"}, {"lineNumber": 172, "col_offset": 82, "nodeName": "x2", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "stats", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "stats", "type": "Any"}, {"lineNumber": 203, "col_offset": 73, "nodeName": "diag", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "alpha", "type": "float"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 253, "col_offset": 54, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "mu", "type": "Union[float, int]"}, {"lineNumber": 257, "col_offset": 37, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "est", "type": "cde.tests.Dummies.GaussianDummy"}, {"lineNumber": 257, "col_offset": 97, "nodeName": "alpha", "type": "float"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 40, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "sigma", "type": "Union[float, int]"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "alpha", "type": "float"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "pdf", "type": "Any"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 350, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 389, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 461, "col_offset": 39, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 463, "col_offset": 22, "nodeName": "suitefn", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "addTest", "type": "Callable[[unittest.Testable], None]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 154, "col_offset": 73, "nodeName": "dot", "type": "Any"}, {"lineNumber": 154, "col_offset": 84, "nodeName": "sigma2", "type": "Any"}, {"lineNumber": 172, "col_offset": 65, "nodeName": "stats", "type": "Any"}, {"lineNumber": 203, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "norm", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 252, "col_offset": 55, "nodeName": "alpha", "type": "float"}, {"lineNumber": 253, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 70, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "norm", "type": "Any"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "ppf", "type": "Any"}, {"lineNumber": 272, "col_offset": 57, "nodeName": "alpha", "type": "float"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "suite", "type": "unittest.TestSuite"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "loadTestsFromName", "type": "Callable[..., unittest.TestSuite]"}, {"lineNumber": 466, "col_offset": 67, "nodeName": "t", "type": "str"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 73, "nodeName": "sigma1", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "norm", "type": "Any"}, {"lineNumber": 257, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "norm", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "defaultTestLoader", "type": "unittest.TestLoader"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "cov_est", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "unittest", "type": "module"}]