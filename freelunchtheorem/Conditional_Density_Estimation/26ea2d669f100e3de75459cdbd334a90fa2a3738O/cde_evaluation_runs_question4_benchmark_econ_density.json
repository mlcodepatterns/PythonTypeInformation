[{"lineNumber": 18, "col_offset": 0, "nodeName": "question4", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "EXP_PREFIX", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "RESULTS_FILE", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "N_MC_SAMPLES", "type": "int"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "observations", "type": "Any"}, {"lineNumber": 62, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 5, "nodeName": "load", "type": "Any"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "mpl", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "estimator_params", "type": "Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], Dict[str, Union[List[int], List[Tuple[int, int]], List[float]]], Dict[str, Union[List[str], List[int], List[bool], List[List[float]], List[Tuple[int, int]], List[float]]]]]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "simulators_params", "type": "Dict[str, Dict[str, Union[List[int], List[bool]]]]"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "observations", "type": "Any"}, {"lineNumber": 63, "col_offset": 2, "nodeName": "estimator_params", "type": "Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], Dict[str, Union[List[int], List[Tuple[int, int]], List[float]]], Dict[str, Union[List[str], List[int], List[bool], List[List[float]], List[Tuple[int, int]], List[float]]]]]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "simulators_params", "type": "Dict[str, Dict[str, Union[List[int], List[bool]]]]"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "observations", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "question4", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "launch_experiment", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "estimator_params", "type": "Dict[str, Union[Dict[str, List[str]], Dict[nothing, nothing], Dict[str, Union[List[int], List[Tuple[int, int]], List[float]]], Dict[str, Union[List[str], List[int], List[bool], List[List[float]], List[Tuple[int, int]], List[float]]]]]"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "simulators_params", "type": "Dict[str, Dict[str, Union[List[int], List[bool]]]]"}, {"lineNumber": 64, "col_offset": 80, "nodeName": "observations", "type": "Any"}, {"lineNumber": 64, "col_offset": 94, "nodeName": "EXP_PREFIX", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "results_from_pkl_file", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "gof_result", "type": "cde.evaluation.GoodnessOfFitResults.GoodnessOfFitResults"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "results_df", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "gof_result", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "logspace", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "base_experiment", "type": "module"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "N_MC_SAMPLES", "type": "int"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "configure", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "EXP_PREFIX", "type": "str"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "GoodnessOfFitResults", "type": "Type[cde.evaluation.GoodnessOfFitResults.GoodnessOfFitResults]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "generate_results_dataframe", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "KEYS_OF_INTEREST", "type": "List[Union[str, List[str]]]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "load_dumped_estimators", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "gof_result", "type": "cde.evaluation.GoodnessOfFitResults.GoodnessOfFitResults"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "int32", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "logger", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "config", "type": "module"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "load_pkl_log", "type": "Any"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "RESULTS_FILE", "type": "str"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "results_from_pkl_file", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "gof_result", "type": "cde.evaluation.GoodnessOfFitResults.GoodnessOfFitResults"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "base_experiment", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "ConfigRunner", "type": "module"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "logger", "type": "Any"}]