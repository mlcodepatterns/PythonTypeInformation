[{"lineNumber": 8, "col_offset": 13, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "adversarial", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "find", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "unpack", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "Misclassification", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Attack"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Attack"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "image", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "image", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "Adversarial", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "find", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "adversarial", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "__class__", "type": "Type[Attack]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "find", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "image", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "find", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "_apply", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "adversarial", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "Attack"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "self", "type": "Attack"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "self", "type": "Attack"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "Adversarial", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "image", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "label", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "Attack"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "adversarial", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "best_distance", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "adversarial", "type": "Any"}]