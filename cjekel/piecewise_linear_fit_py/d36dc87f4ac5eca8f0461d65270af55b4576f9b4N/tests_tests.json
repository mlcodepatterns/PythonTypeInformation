[{"lineNumber": 6, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_break_point_spot_on", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_break_point_spot_on_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_degree_not_supported", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_x_c_not_supplied", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_y_c_not_supplied", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_lapack_driver", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_assembly", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_assembly_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_break_point_spot_on_r2", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_break_point_diff_x0_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_break_point_diff_x0_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_break_point_diff_x0_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_break_point_diff_x0_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_break_point_diff_x0_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_diff_evo", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_custom_bounds1", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_custom_bounds2", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_custom_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_custom_opt_with_con", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_single_force_break_point1", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "test_single_force_break_point2", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "test_single_force_break_point_degree", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_single_force_break_point_degree_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_opt_fit_with_force_points", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "test_se", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_p", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_nonlinear_p_and_se", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_pv", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "test_predict_with_custom_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "test_fit_guess", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "test_fit_guess_kwrds", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "test_multi_start_fitfast", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "test_n_parameters_correct", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "test_force_fits_through_points_other_degrees", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_fitfast", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "test_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "test_se_no_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "test_se_no_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "test_pv_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "test_pv_no_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 4, "nodeName": "test_r2_no_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 4, "nodeName": "test_pvalue_no_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "test_pvalues_wrong_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "test_all_stats", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "test_weighted_same_as_ols", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "test_heteroscedastic_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "test_not_supported_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "not_supported_fit_with_breaks_force_points", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "custom_opt_not_supported", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 512, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "rsq", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "my_fit2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "my_fit3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "my_fit4", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "my_fit5", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "my_fit6", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "n_data", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "true_beta", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "true_breaks", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "breaks", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "A0", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "A1", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "A2", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "y_predict_1", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "y_predict_2", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "my", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "breaks_w", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "w", "type": "List[Any]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "x0", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "x0", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "x0", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "use_custom_opt", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "fit_with_breaks_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "use_custom_opt", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "fit_with_breaks_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 52, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 188, "col_offset": 61, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 196, "col_offset": 61, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 56, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 56, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 212, "col_offset": 61, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "n_data", "type": "int"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 276, "col_offset": 39, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 292, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 299, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 300, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 304, "col_offset": 50, "nodeName": "breaks", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 58, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "breaks", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 58, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 50, "nodeName": "breaks", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 328, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 335, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 337, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 350, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 351, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 352, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 365, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 385, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 389, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 397, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 405, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 405, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 424, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 424, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "calc_slopes", "type": "Callable[[], Any]"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 432, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "calc_slopes", "type": "Callable[[], Any]"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 440, "col_offset": 53, "nodeName": "y_sin", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "calc_slopes", "type": "Callable[[], Any]"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 458, "col_offset": 17, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 459, "col_offset": 50, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "weights", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "weights", "type": "Any"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 472, "col_offset": 36, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 50, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 481, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 481, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 494, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 508, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "pi", "type": "Any"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 15, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 22, "col_offset": 64, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "PiecewiseLinFit", "type": "Type[pwlf.pwlf.PiecewiseLinFit]"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "A", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "Asb", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "A", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "Asb", "type": "numpy.ndarray"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "rsq", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "my_fit2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "my_fit3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "my_fit4", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "my_fit5", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "my_fit6", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 209, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 34, "nodeName": "n_data", "type": "int"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "true_beta", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "true_breaks", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 292, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 299, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 300, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 304, "col_offset": 58, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 305, "col_offset": 58, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "n_parameters", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "n_parameters", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "n_parameters", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "n_segments", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "n_segments", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "n_segments", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "normal", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 325, "col_offset": 22, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 335, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 337, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 350, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 351, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 352, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 365, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "standard_errors", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 383, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 386, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 389, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 389, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "x_sin", "type": "Any"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 397, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 405, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 405, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 413, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 413, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "p_values", "type": "Callable[..., Any]"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 424, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 424, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 432, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 440, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 443, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "my_pwlf_3", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 456, "col_offset": 48, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 458, "col_offset": 17, "nodeName": "my", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 458, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 459, "col_offset": 50, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "my_w", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 461, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 463, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 463, "col_offset": 43, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 472, "col_offset": 36, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 472, "col_offset": 50, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 473, "col_offset": 44, "nodeName": "weights", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "my_w", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "my_w", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 481, "col_offset": 67, "nodeName": "w", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 485, "col_offset": 31, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 494, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 494, "col_offset": 67, "nodeName": "w", "type": "List[Any]"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 498, "col_offset": 65, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 498, "col_offset": 70, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "use_custom_opt", "type": "Callable[..., None]"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 22, "col_offset": 64, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "mf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "mf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "n_segments", "type": "int"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 35, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 311, "col_offset": 29, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "pi", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 38, "nodeName": "y_predict_1", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "y_predict_2", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "my_pwlf_1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "my_pwlf_2", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "my_pwlf_0", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "my_fit1", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 443, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 44, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 460, "col_offset": 57, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 35, "nodeName": "my", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 463, "col_offset": 43, "nodeName": "my_w", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "my_fit", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "my_pwlf", "type": "pwlf.pwlf.PiecewiseLinFit"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "A0", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "A1", "type": "Any"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "A2", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 443, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 460, "col_offset": 57, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 39, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 465, "col_offset": 50, "nodeName": "breaks_w", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "x0", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "x0", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "x0", "type": "Any"}, {"lineNumber": 465, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 465, "col_offset": 59, "nodeName": "i", "type": "int"}]