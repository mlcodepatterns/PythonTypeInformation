[{"lineNumber": 6, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_break_point_spot_on", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_break_point_diff_x0_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_break_point_diff_x0_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_break_point_diff_x0_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_break_point_diff_x0_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_break_point_diff_x0_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_diff_evo", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "test_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_custom_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_multi_start_fitfast", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "my_fit2", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "my_fit3", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "my_fit4", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "my_fit5", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "my_fit6", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 9, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 18, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "x0", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "x0", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "x0", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "x0", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "x0", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "fitWithBreaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "useCustomOpt", "type": "Callable[[Any], None]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "fitWithBreaksOpt", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "piecewise_lin_fit", "type": "Type[pwlf.pwlf.piecewise_lin_fit]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 18, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 25, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "my_fit2", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "my_fit3", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "my_fit4", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "my_fit5", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "my_fit6", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "SSr", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 88, "col_offset": 55, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "SSr", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "self", "type": "test_everything"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlf.piecewise_lin_fit"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "np", "type": "module"}]