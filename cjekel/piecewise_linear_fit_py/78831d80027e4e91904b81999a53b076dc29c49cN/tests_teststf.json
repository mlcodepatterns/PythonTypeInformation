[{"lineNumber": 7, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_break_point_spot_on", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_single_precision", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_assembly", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_break_point_spot_on_r2", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_break_point_diff_x0_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_break_point_diff_x0_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_break_point_diff_x0_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_break_point_diff_x0_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_break_point_diff_x0_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_diff_evo", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_custom_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_single_force_break_point1", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_single_force_break_point2", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_opt_fit_with_force_points", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_se", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_p", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "test_pv", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_predict_with_custom_param", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "test_fit_guess", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_fit_guess_kwrds", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_multi_start_fitfast", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "xk", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "yk", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "rsq", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "my_fit2", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "my_fit3", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "my_fit4", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "my_fit5", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "my_fit6", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "se", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "pv", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "xk", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assemble_regression_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "x0", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "x_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "A", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "x0", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "r_squared", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "x0", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "xk", "type": "Any"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "yk", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "fit_with_breaks", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "xk", "type": "Any"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "yk", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "use_custom_opt", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "y_small", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "fit_with_breaks_force_points", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 62, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 129, "col_offset": 67, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "sin", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "x_c", "type": "List[float]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "standard_errors", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "p_values", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "prediction_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "fit_guess", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "PiecewiseLinFitTF", "type": "Type[pwlf.pwlftf.PiecewiseLinFitTF]"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "xk", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "yk", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "fitfast", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "eval", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "A", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "Asb", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "my_fit1", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "rsq", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "my_fit2", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "ssr2", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "my_fit3", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "ssr3", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "my_fit4", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "ssr4", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "my_fit5", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "ssr5", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "x_small", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "my_fit6", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "ssr6", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "min", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "max", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "fit_with_breaks_opt", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "x_guess", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "my_fit", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "y_c", "type": "List[float]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "yhat", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 181, "col_offset": 49, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "pwlf", "type": "module"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "ssr", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "A", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "xk", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "xk", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "yHat", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "yk", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "random", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "breaks", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "my_pwlf", "type": "pwlf.pwlftf.PiecewiseLinFitTF"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "self", "type": "TestEverything"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "x0", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "x0", "type": "Any"}]