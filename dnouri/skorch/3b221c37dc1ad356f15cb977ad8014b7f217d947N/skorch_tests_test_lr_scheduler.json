[{"lineNumber": 30, "col_offset": 40, "nodeName": "lr_scheduler_pack", "type": "List[Union[Tuple[str, Any, Dict[str, Callable[[Any], Any]]], Tuple[str, Any, Dict[str, int]], Tuple[str, Any, Dict[str, List[int]]], Tuple[str, Any, Dict[str, float]], Tuple[str, Any, Dict[nothing, nothing]], Tuple[str, Type[skorch.callbacks.lr_scheduler.WarmRestartLR], Dict[nothing, nothing]], Tuple[Type[skorch.callbacks.lr_scheduler.WarmRestartLR], Type[skorch.callbacks.lr_scheduler.WarmRestartLR], Dict[nothing, nothing]]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "lr_policy", "type": "skorch.callbacks.lr_scheduler.LRScheduler"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "targets", "type": "Union[List[Any], Any]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "policy", "type": "Union[str, Type[skorch.callbacks.lr_scheduler.WarmRestartLR]]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "instance", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "kwargs", "type": "Union[Dict[str, Callable[[Any], Any]], Dict[str, int], Dict[str, List[int]], Dict[str, float], Dict[nothing, nothing]]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "make_classification", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "float32", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "LRScheduler", "type": "Type[skorch.callbacks.lr_scheduler.LRScheduler]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.net.NeuralNetClassifier]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 72, "col_offset": 69, "nodeName": "targets", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "MultiStepLR", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "ExponentialLR", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "_lr_callback_init_policies", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "policy", "type": "Union[str, Type[skorch.callbacks.lr_scheduler.WarmRestartLR]]"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "instance", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "LRScheduler", "type": "Type[skorch.callbacks.lr_scheduler.LRScheduler]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "LRScheduler", "type": "Type[skorch.callbacks.lr_scheduler.LRScheduler]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "DummyClass", "type": "Type[Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "epoch", "type": "int"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "targets", "type": "Union[List[Any], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "cos", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "targets", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "targets", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "min", "type": "Callable"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Type[skorch.callbacks.lr_scheduler.WarmRestartLR]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "TestLRCallbacks"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Dict[str, List[int]], Dict[str, float], Dict[str, Callable[[Any], Any]], Dict[str, int]]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 58, "col_offset": 56, "nodeName": "lr_policy", "type": "skorch.callbacks.lr_scheduler.LRScheduler"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "map", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "scheduler", "type": "skorch.callbacks.lr_scheduler.WarmRestartLR"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "period", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "epochs", "type": "int"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 172, "col_offset": 44, "nodeName": "base_period", "type": "int"}, {"lineNumber": 172, "col_offset": 57, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "approx", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "pi", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "instance", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "arange", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "dense0", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "dense1", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 65, "nodeName": "epoch", "type": "int"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "x", "type": "Any"}]