[{"lineNumber": 20, "col_offset": 8, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "EpochScoring", "type": "Type[skorch.callbacks.scoring.EpochScoring]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "Ansi", "type": "Type[skorch.utils.Ansi]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "lines", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "sink", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "Checkpoint", "type": "Type[skorch.callbacks.training.Checkpoint]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "ProgressBar", "type": "Type[skorch.callbacks.logging.ProgressBar]"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "grad_clip_cls_and_mock", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "parameter_values", "type": "List[int]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "params_before", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "params_after", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "product", "type": "Callable"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "on_x_methods", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "method", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "columns", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "lines", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "color", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "is_best", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 142, "col_offset": 67, "nodeName": "are_best", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "is_best", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "tab", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "columns", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "keys_ignored", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "mock", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "NeuralNetRegressor", "type": "Type[skorch.net.NeuralNetRegressor]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 258, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 278, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "EpochScoring", "type": "Type[skorch.callbacks.scoring.EpochScoring]"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "NeuralNetRegressor", "type": "Type[skorch.net.NeuralNetRegressor]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 374, "col_offset": 72, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "grad_norm_clip_cls", "type": "Any"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "grad_norm_clip_cls", "type": "Any"}, {"lineNumber": 385, "col_offset": 28, "nodeName": "p", "type": "int"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "on_grad_computed", "type": "Any"}, {"lineNumber": 389, "col_offset": 52, "nodeName": "parameter_values", "type": "List[int]"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.net.NeuralNetClassifier]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "p0", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "p1", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "params_before", "type": "Any"}, {"lineNumber": 411, "col_offset": 41, "nodeName": "params_after", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "skorch", "type": "module"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "attr", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "Callback", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "itertools", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "callback", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "header", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "table", "type": "Callable[[Any], str]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "header", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "mock", "type": "Any"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "mock", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "Module", "type": "Type[Any]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "history", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "SkorchException", "type": "Type[skorch.exceptions.SkorchException]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "expected", "type": "str"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "epoch_3_scorer", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "Module", "type": "Type[Any]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 385, "col_offset": 42, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "clipping", "type": "Any"}, {"lineNumber": 386, "col_offset": 57, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 408, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "module_", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "p0", "type": "Any"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "p1", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 413, "col_offset": 31, "nodeName": "p0", "type": "Any"}, {"lineNumber": 413, "col_offset": 35, "nodeName": "p1", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "skorch", "type": "module"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "attr", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "scoring_cls", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "mse_scoring", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 142, "col_offset": 56, "nodeName": "ansi", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "item", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "history", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "mse_scoring", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 267, "col_offset": 50, "nodeName": "net", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "GradientNormClipping", "type": "Type[skorch.callbacks.regularization.GradientNormClipping]"}, {"lineNumber": 376, "col_offset": 40, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "_", "type": "str"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "p0", "type": "Any"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 412, "col_offset": 44, "nodeName": "p1", "type": "Any"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "attr", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "skorch", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "method", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "sink", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "sink", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "color", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "ENDC", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "sink", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "sink", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "history", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "scoring", "type": "skorch.callbacks.scoring.EpochScoring"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "progressbar_cls", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "progressbar_cls", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "module_", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "inspect", "type": "module"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "ansi", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "postfix", "type": "Any"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 401, "col_offset": 37, "nodeName": "GradientNormClipping", "type": "Type[skorch.callbacks.regularization.GradientNormClipping]"}, {"lineNumber": 408, "col_offset": 38, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "sink", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "cgn", "type": "Any"}]