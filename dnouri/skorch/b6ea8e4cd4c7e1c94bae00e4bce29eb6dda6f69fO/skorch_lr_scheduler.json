[{"lineNumber": 15, "col_offset": 0, "nodeName": "previous_epoch_train_loss_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "Callback", "type": "Type[skorch.callbacks.Callback]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "losses", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "history", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "history", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "average", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "losses", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_lr_scheduler", "type": "None"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "epoch", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "current_period", "type": "float"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "net", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "net", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "policy", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "policy", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "policy", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "policy", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "policy", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "_lr_scheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "min_lr", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "max_lr", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "_get_current_lr", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "current_period", "type": "Union[float, Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "policy", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "policy", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "history", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "epoch", "type": "int"}, {"lineNumber": 51, "col_offset": 73, "nodeName": "inf", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "epoch", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "epoch", "type": "int"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "scheduler_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "current_period", "type": "float"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "current_period", "type": "float"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "current_lrs", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "net", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "previous_epoch_train_loss_score", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "net", "type": "Any"}, {"lineNumber": 51, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "_lr_scheduler", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_lr_scheduler", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "WarmRestartLR", "type": "Type[WarmRestartLR]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "sys", "type": "module"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "__name__", "type": "str"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "cos", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 69, "nodeName": "period", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "pi", "type": "Any"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "np", "type": "module"}]