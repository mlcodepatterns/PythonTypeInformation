[{"lineNumber": 26, "col_offset": 8, "nodeName": "lr_sch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "lr_sch", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "total_iterations_per_epoch", "type": "float"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "total_training_iterations_per_epoch", "type": "float"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "expected", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "total_iterations_per_epoch", "type": "float"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "total_iterations_fit_run", "type": "float"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "total_iterations_partial_fit_run", "type": "float"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "total_iterations", "type": "float"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "mock_step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "mock_step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "targets", "type": "Union[List[Any], Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 332, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "target", "type": "List[int]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "targets", "type": "List[List[int]]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "target", "type": "List[Union[int, float]]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[float, int]]]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "p_group", "type": "Any"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "batch_idxs", "type": "int"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "policy", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "policy", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "total_iterations_per_epoch", "type": "float"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "batch_idx_", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "expected", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "total_iterations_per_epoch", "type": "float"}, {"lineNumber": 161, "col_offset": 64, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 165, "col_offset": 47, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "total_iterations_fit_run", "type": "float"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "total_iterations_partial_fit_run", "type": "float"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "total_iterations", "type": "float"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "batch_idx_", "type": "Any"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "expected", "type": "int"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 208, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "mock_step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "mock_step", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "get_net_with_mock", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "mock_step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "get_net_with_mock", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "best", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "score", "type": "Any"}, {"lineNumber": 268, "col_offset": 69, "nodeName": "targets", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 280, "col_offset": 18, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 289, "col_offset": 14, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 303, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 339, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 339, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 353, "col_offset": 20, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 367, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 367, "col_offset": 48, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 425, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "targets", "type": "List[List[int]]"}, {"lineNumber": 429, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 434, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 434, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 434, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 444, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 446, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 446, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 459, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 459, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[float, int]]]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 471, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 471, "col_offset": 55, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 474, "col_offset": 17, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 475, "col_offset": 27, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 479, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Any"}, {"lineNumber": 483, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 483, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 483, "col_offset": 55, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "batch_step", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "last_batch_idx", "type": "Any"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 502, "col_offset": 31, "nodeName": "batch_idxs", "type": "int"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "lr_sch", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "lr_sch", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 117, "col_offset": 66, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "total_training_iterations_per_epoch", "type": "float"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 147, "col_offset": 66, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "total_iterations_per_epoch", "type": "float"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "base_lrs", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "step", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 56, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "self", "type": "TestReduceLROnPlateau"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "epoch", "type": "int"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 275, "col_offset": 67, "nodeName": "targets", "type": "Union[Any, List[Any]]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "cos", "type": "Any"}, {"lineNumber": 280, "col_offset": 51, "nodeName": "targets", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "targets", "type": "Any"}, {"lineNumber": 290, "col_offset": 28, "nodeName": "min", "type": "Callable"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 295, "col_offset": 46, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 303, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 310, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 409, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "target", "type": "List[int]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "target", "type": "List[Union[int, float]]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "delta", "type": "int"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "delta", "type": "int"}, {"lineNumber": 442, "col_offset": 33, "nodeName": "delta", "type": "int"}, {"lineNumber": 442, "col_offset": 42, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 443, "col_offset": 56, "nodeName": "delta", "type": "int"}, {"lineNumber": 443, "col_offset": 65, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 444, "col_offset": 53, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 444, "col_offset": 70, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 453, "col_offset": 34, "nodeName": "delta", "type": "int"}, {"lineNumber": 453, "col_offset": 43, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "delta", "type": "int"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "delta", "type": "int"}, {"lineNumber": 454, "col_offset": 42, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 455, "col_offset": 56, "nodeName": "delta", "type": "int"}, {"lineNumber": 455, "col_offset": 65, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 456, "col_offset": 53, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 456, "col_offset": 70, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 467, "col_offset": 18, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 469, "col_offset": 53, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 469, "col_offset": 69, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 470, "col_offset": 69, "nodeName": "gamma", "type": "float"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 480, "col_offset": 53, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 480, "col_offset": 69, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 482, "col_offset": 53, "nodeName": "gamma", "type": "float"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 486, "col_offset": 26, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 487, "col_offset": 24, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 489, "col_offset": 19, "nodeName": "p_group", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 496, "col_offset": 54, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 501, "col_offset": 25, "nodeName": "targets", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "batch_step", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 504, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 504, "col_offset": 67, "nodeName": "targets", "type": "Any"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "map", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 118, "col_offset": 68, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 148, "col_offset": 68, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "policy", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 57, "nodeName": "period", "type": "Any"}, {"lineNumber": 290, "col_offset": 50, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "epochs", "type": "int"}, {"lineNumber": 370, "col_offset": 28, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 370, "col_offset": 44, "nodeName": "base_period", "type": "int"}, {"lineNumber": 370, "col_offset": 57, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 409, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 413, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 440, "col_offset": 40, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 443, "col_offset": 20, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 443, "col_offset": 34, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 443, "col_offset": 39, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 452, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 452, "col_offset": 40, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 455, "col_offset": 34, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 455, "col_offset": 39, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 467, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 467, "col_offset": 54, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 467, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 467, "col_offset": 69, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 478, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 478, "col_offset": 54, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 478, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 478, "col_offset": 69, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "mock_step", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "mock_step", "type": "unittest.mock.NonCallableMock"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "approx", "type": "Any"}, {"lineNumber": 279, "col_offset": 49, "nodeName": "pi", "type": "Any"}, {"lineNumber": 280, "col_offset": 34, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 467, "col_offset": 28, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 467, "col_offset": 30, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 467, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 467, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 478, "col_offset": 30, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 478, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 478, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 505, "col_offset": 44, "nodeName": "approx", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 276, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "arange", "type": "Any"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 279, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 505, "col_offset": 44, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 505, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "mode", "type": "Any"}, {"lineNumber": 276, "col_offset": 65, "nodeName": "epoch", "type": "int"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "sequential", "type": "Any"}, {"lineNumber": 505, "col_offset": 65, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 205, "col_offset": 42, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 205, "col_offset": 69, "nodeName": "monitor", "type": "Any"}]