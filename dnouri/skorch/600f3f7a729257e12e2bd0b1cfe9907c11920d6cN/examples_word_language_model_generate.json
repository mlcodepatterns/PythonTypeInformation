[{"lineNumber": 10, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "input", "type": "Any"}, {"lineNumber": 55, "col_offset": 3, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "Learner", "type": "Any"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "module_", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "module_", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "init_hidden", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 55, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "input", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "outf", "type": "file"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 11, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 13, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 23, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 27, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "learner", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "RNNModel", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "learner", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "learner", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "learner", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "module_", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "long", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "outf", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "words", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "word_weights", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "word_idx", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "word", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "learner", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "module_", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "input", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "hidden", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "word_idx", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "idx2word", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "mul", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "ntokens", "type": "int"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "learner", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "word_weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "word_idx", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "outf", "type": "file"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "word", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "log_interval", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "exp", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "words", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "div", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "temperature", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "output", "type": "Any"}]