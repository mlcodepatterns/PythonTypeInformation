[{"lineNumber": 17, "col_offset": 15, "nodeName": "regression_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "NeuralNetRegressor", "type": "Type[skorch.regressor.NeuralNetRegressor]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "train_losses", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected_keys", "type": "Set[str]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "history", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "multioutput_regression_data", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "make_regressor", "type": "Callable[..., functools.partial[Any]]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "make_regressor", "type": "Callable[..., functools.partial[Any]]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "multioutput_module_cls", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "fit", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "clone", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "net_fit", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "exc", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "msg", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "history", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "net_fit", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "X", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "X", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "y", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "r2_score", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "NotInitializedError", "type": "Type[skorch.exceptions.NotInitializedError]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "net", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "train_losses", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "issubset", "type": "Callable[[Iterable[Any]], bool]"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "row", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "net_fit", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "net_fit", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "net_fit", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "multioutput_net", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "multioutput_net", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "train_losses", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "expected_keys", "type": "Set[str]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "method", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "exc", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "exc", "type": "Any"}]