[{"lineNumber": 12, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "SliceDict", "type": "Type[skorch.helper.SliceDict]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "sliced", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "loc", "type": "Dict[str, Union[object, Any, Callable[..., numpy.ndarray]]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "found_keys", "type": "Set[Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "expected_keys", "type": "Set[str]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "gs", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "filter_requires_grad", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "filtered_optimizer", "type": "Callable[[Any, Any], Callable[..., Any]]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "filter_requires_grad", "type": "Callable[[Any], Generator[Any, Any, None]]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "filtered_opt", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "Module", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "make_classification", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "y", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "exc", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_dicts_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "sliced", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_dicts_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "expected", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_dicts_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "expected", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "loc", "type": "Dict[str, Union[object, Any, Callable[..., numpy.ndarray]]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assert_dicts_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "key", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "found_keys", "type": "Set[Any]"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "expected_keys", "type": "Set[str]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "params", "type": "Dict[str, Union[List[int], List[float]]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "best_score_", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "best_params_", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "filtered_optimizer", "type": "Any"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "filter_requires_grad", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "pgroups", "type": "List[Union[Dict[str, Union[float, List[Any]]], Dict[str, List[Any]]]]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "filtered_opt", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "filtered_optimizer", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 275, "col_offset": 50, "nodeName": "filter_requires_grad", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "MyModule", "type": "Type[Any]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 11, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "d0", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "astype", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "sl", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestSliceDict"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestSliceDict"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "loc", "type": "Dict[str, Union[object, Any, Callable[..., numpy.ndarray]]]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "sldict_cls", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestSliceDict"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "gs", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "gs", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "gs", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "filter_requires_grad", "type": "Any"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "pgroups", "type": "List[Union[Dict[str, Union[float, List[Any]]], Dict[str, List[Any]]]]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "filter_requires_grad", "type": "Any"}, {"lineNumber": 205, "col_offset": 51, "nodeName": "pgroups", "type": "List[Union[Dict[str, Union[float, List[Any]]], Dict[str, List[Any]]]]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "filter_requires_grad", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "pgroups", "type": "List[Union[Dict[str, Union[float, List[Any]]], Dict[str, List[Any]]]]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "optim", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "dense0", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "optim", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "d0", "type": "Any"}, {"lineNumber": 11, "col_offset": 28, "nodeName": "d1", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "d0", "type": "Any"}, {"lineNumber": 13, "col_offset": 40, "nodeName": "d1", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "exc", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "exc", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "item", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "exc", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "item", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "expected", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "exc", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "dense0", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 280, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 13, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "ones", "type": "Any"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "exc", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "sldict", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "filtered_opt", "type": "Any"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "filtered_opt", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "filter_pgroups", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "filtered_opt", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "filtered_opt", "type": "Any"}]