[{"lineNumber": 20, "col_offset": 8, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "Callback", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "EpochScoring", "type": "Type[skorch.callbacks.scoring.EpochScoring]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "Ansi", "type": "Type[skorch.utils.Ansi]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "lines", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "lines", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "sink", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "Checkpoint", "type": "Type[skorch.callbacks.training.Checkpoint]"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "ProgressBar", "type": "Type[skorch.callbacks.logging.ProgressBar]"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "grad_clip_cls_and_mock", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "parameter_values", "type": "List[int]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "params_before", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "params_after", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "product", "type": "Callable"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "on_x_methods", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "method", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "exc", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "columns", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "lines", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "color", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "is_best", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 155, "col_offset": 67, "nodeName": "are_best", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "is_best", "type": "Any"}, {"lineNumber": 165, "col_offset": 59, "nodeName": "tab", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "columns", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "keys_ignored", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "module_cls", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "on_epoch_end", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "net", "type": "unittest.mock.Mock"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 242, "col_offset": 54, "nodeName": "mock", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "side_effect", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "NeuralNetRegressor", "type": "Type[skorch.net.NeuralNetRegressor]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 291, "col_offset": 47, "nodeName": "e", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "EpochScoring", "type": "Type[skorch.callbacks.scoring.EpochScoring]"}, {"lineNumber": 310, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 342, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "NeuralNetRegressor", "type": "Type[skorch.net.NeuralNetRegressor]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "y", "type": "Any"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "net_cls", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 387, "col_offset": 73, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "grad_norm_clip_cls", "type": "Any"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "grad_norm_clip_cls", "type": "Any"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "p", "type": "int"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "on_grad_computed", "type": "Any"}, {"lineNumber": 402, "col_offset": 52, "nodeName": "parameter_values", "type": "List[int]"}, {"lineNumber": 412, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.net.NeuralNetClassifier]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "p0", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "p1", "type": "Any"}, {"lineNumber": 424, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "params_before", "type": "Any"}, {"lineNumber": 424, "col_offset": 41, "nodeName": "params_after", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "skorch", "type": "module"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "name", "type": "str"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "attr", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "Callback", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "itertools", "type": "module"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "callback", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "method_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "sink", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "header", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "table", "type": "Callable[[Any], str]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "header", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "readouterr", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "mock", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "mock", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "Module", "type": "Type[Any]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 280, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "history", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "SkorchException", "type": "Type[skorch.exceptions.SkorchException]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "expected", "type": "str"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "epoch_3_scorer", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "save_params_mock", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "Module", "type": "Type[Any]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 387, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 398, "col_offset": 42, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "clipping", "type": "Any"}, {"lineNumber": 399, "col_offset": 57, "nodeName": "named_parameters", "type": "List[Tuple[str, int]]"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 421, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "module_", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "p0", "type": "Any"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "p1", "type": "Any"}, {"lineNumber": 426, "col_offset": 19, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 426, "col_offset": 31, "nodeName": "p0", "type": "Any"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "p1", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "skorch", "type": "module"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "callbacks", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "attr", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "scoring_cls", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "mse_scoring", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 56, "nodeName": "ansi", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "item", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "print_log", "type": "skorch.callbacks.logging.PrintLog"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "print_log_cls", "type": "Any"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "history", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "mse_scoring", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "capsys", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "net", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "GradientNormClipping", "type": "Type[skorch.callbacks.regularization.GradientNormClipping]"}, {"lineNumber": 389, "col_offset": 40, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 398, "col_offset": 34, "nodeName": "_", "type": "str"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 30, "nodeName": "p0", "type": "Any"}, {"lineNumber": 425, "col_offset": 35, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 44, "nodeName": "p1", "type": "Any"}, {"lineNumber": 426, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "attr", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "skorch", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "callbacks", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "method", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "base_cls", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "sink", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "sink", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "color", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "ENDC", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 180, "col_offset": 38, "nodeName": "keys_ignored", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "sink", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "sink", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "history", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "scoring", "type": "skorch.callbacks.scoring.EpochScoring"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "checkpoint_cls", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "progressbar_cls", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "progressbar_cls", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "module_", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "inspect", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "exc", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "ansi", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "print_log", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "net", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 364, "col_offset": 41, "nodeName": "postfix", "type": "Any"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "scheme", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "cgn", "type": "Any"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "GradientNormClipping", "type": "Type[skorch.callbacks.regularization.GradientNormClipping]"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "net", "type": "skorch.net.NeuralNetClassifier"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "sink", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "tab", "type": "Any"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "cgn", "type": "Any"}]