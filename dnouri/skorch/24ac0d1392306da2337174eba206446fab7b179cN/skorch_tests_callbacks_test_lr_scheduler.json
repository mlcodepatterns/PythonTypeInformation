[{"lineNumber": 22, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "expected", "type": "int"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "mock_step", "type": "unittest.mock.Mock"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "step", "type": "unittest.mock.Mock"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "mock_step", "type": "unittest.mock.Mock"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "targets", "type": "Union[List[Any], Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "epochs", "type": "int"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "base_period", "type": "int"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "target", "type": "List[int]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "targets", "type": "List[List[int]]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "target", "type": "List[Union[int, float]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "targets", "type": "List[List[Union[float, int]]]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "batch_idxs", "type": "int"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "simulate", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "lrs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "policy", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "last_batch_idx", "type": "Any"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "expected", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "X", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "policy", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "partial_fit", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "mock_step", "type": "unittest.mock.Mock"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "get_net_with_mock", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "get_net_with_mock", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "classifier_data", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "targets", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "base_period", "type": "int"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 271, "col_offset": 48, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assert_lr_correct", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "min_lr_group", "type": "List[float]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "max_lr_group", "type": "List[float]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "base_period", "type": "int"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 328, "col_offset": 55, "nodeName": "targets", "type": "List[List[int]]"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 337, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 337, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 349, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 362, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 362, "col_offset": 55, "nodeName": "targets", "type": "List[List[Union[float, int]]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 374, "col_offset": 55, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "_test_cycle_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 386, "col_offset": 44, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 386, "col_offset": 55, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "batch_step", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "last_batch_idx", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "scale_fn", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "batch_idxs", "type": "int"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 110, "col_offset": 66, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "max_epochs", "type": "int"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "step", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "history", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "self", "type": "TestReduceLROnPlateau"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "targets", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "epoch", "type": "int"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 179, "col_offset": 67, "nodeName": "targets", "type": "Union[Any, List[Any]]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "cos", "type": "Any"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "targets", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "targets", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "min", "type": "Callable"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "remaining_epochs", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "_single_period_targets", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "period_epochs", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "WarmRestartLR", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "request", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 308, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 316, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "CyclicLR", "type": "Any"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "target", "type": "List[int]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "target", "type": "List[Union[int, float]]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "delta", "type": "int"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "delta", "type": "int"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "delta", "type": "int"}, {"lineNumber": 345, "col_offset": 42, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 346, "col_offset": 56, "nodeName": "delta", "type": "int"}, {"lineNumber": 346, "col_offset": 65, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 347, "col_offset": 53, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 347, "col_offset": 70, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "delta", "type": "int"}, {"lineNumber": 356, "col_offset": 43, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "delta", "type": "int"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "delta", "type": "int"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 358, "col_offset": 56, "nodeName": "delta", "type": "int"}, {"lineNumber": 358, "col_offset": 65, "nodeName": "deltas", "type": "List[int]"}, {"lineNumber": 359, "col_offset": 53, "nodeName": "base_lrs", "type": "List[int]"}, {"lineNumber": 359, "col_offset": 70, "nodeName": "max_lrs", "type": "List[int]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 372, "col_offset": 53, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 372, "col_offset": 69, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 373, "col_offset": 69, "nodeName": "gamma", "type": "float"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "target", "type": "List[float]"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "base_lr", "type": "int"}, {"lineNumber": 383, "col_offset": 69, "nodeName": "max_lr", "type": "int"}, {"lineNumber": 385, "col_offset": 53, "nodeName": "gamma", "type": "float"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "TestCyclicLR"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 396, "col_offset": 54, "nodeName": "scale_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "batch_step", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 404, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 404, "col_offset": 67, "nodeName": "targets", "type": "List[List[float]]"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "map", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 111, "col_offset": 68, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "lr_policy", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "NeuralNetClassifier", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "policy", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "call_args_list", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "call_args_list", "type": "unittest.mock._CallList"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "period", "type": "Any"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "excinfo", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "targets", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "_multi_period_targets", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "epochs", "type": "int"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "min_lr", "type": "float"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "max_lr", "type": "float"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "base_period", "type": "int"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "period_mult", "type": "int"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "x", "type": "Union[float, int]"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 355, "col_offset": 40, "nodeName": "num_groups", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 358, "col_offset": 24, "nodeName": "delta", "type": "int"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 358, "col_offset": 39, "nodeName": "base_target", "type": "List[Union[int, float]]"}, {"lineNumber": 370, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 370, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 370, "col_offset": 69, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 381, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 381, "col_offset": 54, "nodeName": "x", "type": "Union[int, float]"}, {"lineNumber": 381, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 381, "col_offset": 69, "nodeName": "xs", "type": "List[Union[int, float]]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 404, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "net", "type": "skorch.classifier.NeuralNetClassifier"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "mock_step", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "mock_step", "type": "unittest.mock.Mock"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "approx", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "pi", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "TestWarmRestartLR"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 370, "col_offset": 28, "nodeName": "x", "type": "Union[float, int]"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 370, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "x", "type": "Union[float, int]"}, {"lineNumber": 381, "col_offset": 30, "nodeName": "diff_lr", "type": "int"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 381, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "approx", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "instance", "type": "Any"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "arange", "type": "Any"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 183, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "dense0", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "dense1", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "classifier_module", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "dense0", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "dense1", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "output", "type": "Any"}, {"lineNumber": 405, "col_offset": 44, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 405, "col_offset": 58, "nodeName": "target", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 65, "nodeName": "epoch", "type": "int"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 405, "col_offset": 65, "nodeName": "batch_num", "type": "int"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "LRScheduler", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "monitor", "type": "Any"}]