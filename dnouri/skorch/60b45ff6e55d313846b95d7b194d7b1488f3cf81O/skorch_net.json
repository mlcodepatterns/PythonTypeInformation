[{"lineNumber": 189, "col_offset": 4, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "Dataset", "type": "Type[skorch.dataset.Dataset]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "initialized", "type": "Union[Any, bool]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "initialized", "type": "Union[bool, Any]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "_default_callbacks", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 427, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "criterion_params", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "criterion_", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "triggered_directly", "type": "Any"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "msg", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 475, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "initialized_", "type": "bool"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "y_train_is_ph", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "y_valid_is_ph", "type": "Any"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 772, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 809, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 849, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "is_multioutput", "type": "bool"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "is_multioutput", "type": "bool"}, {"lineNumber": 905, "col_offset": 8, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 906, "col_offset": 11, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 911, "col_offset": 8, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 913, "col_offset": 15, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 965, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 968, "col_offset": 8, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 969, "col_offset": 15, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 1031, "col_offset": 8, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1070, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1070, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1071, "col_offset": 8, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1073, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1079, "col_offset": 11, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1126, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1127, "col_offset": 11, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 1158, "col_offset": 11, "nodeName": "training", "type": "bool"}, {"lineNumber": 1188, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1189, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1190, "col_offset": 8, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1199, "col_offset": 11, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1213, "col_offset": 8, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1217, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1226, "col_offset": 15, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1229, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1232, "col_offset": 8, "nodeName": "params_cb", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1234, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 1272, "col_offset": 11, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1280, "col_offset": 8, "nodeName": "module_triggers_optimizer_reinit", "type": "bool"}, {"lineNumber": 1304, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1315, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1321, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1333, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1337, "col_offset": 8, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1345, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1346, "col_offset": 8, "nodeName": "cuda_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 1347, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1347, "col_offset": 19, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 1356, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1361, "col_offset": 8, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1362, "col_offset": 8, "nodeName": "load_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1370, "col_offset": 8, "nodeName": "set_cuda_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 1372, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1372, "col_offset": 19, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 1454, "col_offset": 8, "nodeName": "type_1", "type": "Any"}, {"lineNumber": 1455, "col_offset": 8, "nodeName": "type_2", "type": "Any"}, {"lineNumber": 1464, "col_offset": 15, "nodeName": "requested_device", "type": "Any"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 1597, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1599, "col_offset": 8, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1600, "col_offset": 8, "nodeName": "to_exclude", "type": "List[nothing]"}, {"lineNumber": 1601, "col_offset": 8, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1602, "col_offset": 11, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "CVSplit", "type": "Type[skorch.dataset.CVSplit]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_check_deprecated_params", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "cb", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "new_epoch", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "record", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "new_batch", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "cb", "type": "Any"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "_yield_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "grouped_cbs", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "_callbacks_grouped_by_name", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 404, "col_offset": 18, "nodeName": "cb", "type": "Any"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "_uniquely_named_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "kwargs", "type": "Union[Any, Dict[nothing, nothing]]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "Module", "type": "Any"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 474, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "_get_params_for_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 496, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 507, "col_offset": 23, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "initialize_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "initialize_criterion", "type": "Callable[[], Any]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "initialize_module", "type": "Callable[[], Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "initialize_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "initialize_history", "type": "Callable[[], Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 552, "col_offset": 22, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 576, "col_offset": 28, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "get_loss", "type": "Callable[..., Any]"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 577, "col_offset": 37, "nodeName": "yi", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 589, "col_offset": 22, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 606, "col_offset": 15, "nodeName": "FirstStepAccumulator", "type": "Type[skorch.utils.FirstStepAccumulator]"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "get_train_step_accumulator", "type": "Callable[[], Any]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "step_fn", "type": "Callable[[], Any]"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "get_step", "type": "Callable[[], Any]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "check_data", "type": "Callable[..., Any]"}, {"lineNumber": 688, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 688, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 689, "col_offset": 17, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 689, "col_offset": 51, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 691, "col_offset": 39, "nodeName": "get_split_datasets", "type": "Callable[..., Any]"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 692, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 694, "col_offset": 29, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 695, "col_offset": 29, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 698, "col_offset": 24, "nodeName": "uses_placeholder_y", "type": "Callable[[Any], Any]"}, {"lineNumber": 698, "col_offset": 43, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 699, "col_offset": 24, "nodeName": "uses_placeholder_y", "type": "Callable[[Any], Any]"}, {"lineNumber": 699, "col_offset": 43, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 701, "col_offset": 23, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 763, "col_offset": 15, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 769, "col_offset": 15, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 808, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 808, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 847, "col_offset": 18, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 847, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 848, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 849, "col_offset": 12, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 849, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 897, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "cat", "type": "Any"}, {"lineNumber": 902, "col_offset": 25, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 905, "col_offset": 21, "nodeName": "duplicate_items", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 905, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 905, "col_offset": 40, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 911, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 911, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 912, "col_offset": 22, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 928, "col_offset": 12, "nodeName": "to_tensor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 928, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 929, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 929, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 929, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 930, "col_offset": 12, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "module_", "type": "Any"}, {"lineNumber": 932, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "forward_iter", "type": "Callable[..., Any]"}, {"lineNumber": 965, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 966, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 968, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 968, "col_offset": 33, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 1000, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 1000, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1031, "col_offset": 17, "nodeName": "to_tensor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1031, "col_offset": 27, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1032, "col_offset": 15, "nodeName": "criterion_", "type": "Any"}, {"lineNumber": 1032, "col_offset": 31, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 1032, "col_offset": 39, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1067, "col_offset": 11, "nodeName": "is_dataset", "type": "Callable[[Any], bool]"}, {"lineNumber": 1067, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 1068, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 1070, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1073, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1074, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1074, "col_offset": 22, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1080, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1082, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1082, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 1082, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 1126, "col_offset": 18, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 1126, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 1126, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 1127, "col_offset": 11, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1132, "col_offset": 15, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 1132, "col_offset": 30, "nodeName": "dataset_valid", "type": "Optional[Any]"}, {"lineNumber": 1159, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1160, "col_offset": 12, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1160, "col_offset": 23, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 1162, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1163, "col_offset": 23, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 1165, "col_offset": 31, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1166, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1171, "col_offset": 15, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1171, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1174, "col_offset": 15, "nodeName": "params_for", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1174, "col_offset": 26, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 1174, "col_offset": 34, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1188, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1188, "col_offset": 38, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 1189, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1189, "col_offset": 22, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 1192, "col_offset": 12, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 1192, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 1192, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 1193, "col_offset": 12, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1195, "col_offset": 15, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1202, "col_offset": 26, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1214, "col_offset": 15, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1215, "col_offset": 19, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1217, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1217, "col_offset": 29, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1218, "col_offset": 12, "nodeName": "key", "type": "nothing"}, {"lineNumber": 1218, "col_offset": 17, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1218, "col_offset": 24, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 1218, "col_offset": 30, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1218, "col_offset": 42, "nodeName": "_default_callbacks", "type": "List[Union[Tuple[str, skorch.callbacks.logging.EpochTimer], Tuple[str, skorch.callbacks.scoring.BatchScoring], Tuple[str, skorch.callbacks.logging.PrintLog]]]"}, {"lineNumber": 1219, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1220, "col_offset": 27, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1229, "col_offset": 17, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 1229, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1232, "col_offset": 20, "nodeName": "_get_params_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 1233, "col_offset": 22, "nodeName": "params_cb", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "_check_deprecated_params", "type": "Callable[..., Any]"}, {"lineNumber": 1250, "col_offset": 8, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1250, "col_offset": 23, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1250, "col_offset": 34, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1251, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1251, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1251, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1259, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 1259, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1261, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1261, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1261, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1277, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1281, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1283, "col_offset": 12, "nodeName": "module_triggers_optimizer_reinit", "type": "bool"}, {"lineNumber": 1289, "col_offset": 11, "nodeName": "module_triggers_optimizer_reinit", "type": "bool"}, {"lineNumber": 1289, "col_offset": 47, "nodeName": "optimizer_changed", "type": "bool"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1302, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1310, "col_offset": 26, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1314, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 1314, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 1314, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1315, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1316, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1321, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1322, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1324, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 1325, "col_offset": 12, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1337, "col_offset": 24, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1338, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1338, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1338, "col_offset": 41, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1342, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1342, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1342, "col_offset": 36, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1345, "col_offset": 16, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1347, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1351, "col_offset": 48, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1361, "col_offset": 23, "nodeName": "get_map_location", "type": "Callable[..., Any]"}, {"lineNumber": 1362, "col_offset": 39, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1363, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1363, "col_offset": 26, "nodeName": "_check_device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1363, "col_offset": 62, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1365, "col_offset": 48, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1368, "col_offset": 12, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 1371, "col_offset": 21, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1372, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1376, "col_offset": 48, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1379, "col_offset": 12, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1381, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 1381, "col_offset": 21, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1382, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 1421, "col_offset": 11, "nodeName": "f", "type": "Any"}, {"lineNumber": 1428, "col_offset": 12, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1428, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 1430, "col_offset": 11, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1438, "col_offset": 11, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1446, "col_offset": 11, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 1454, "col_offset": 30, "nodeName": "requested_device", "type": "Any"}, {"lineNumber": 1455, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 1455, "col_offset": 30, "nodeName": "map_device", "type": "Any"}, {"lineNumber": 1456, "col_offset": 11, "nodeName": "type_1", "type": "Any"}, {"lineNumber": 1456, "col_offset": 21, "nodeName": "type_2", "type": "Any"}, {"lineNumber": 1461, "col_offset": 19, "nodeName": "map_device", "type": "Any"}, {"lineNumber": 1508, "col_offset": 12, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1509, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 1513, "col_offset": 11, "nodeName": "f", "type": "Any"}, {"lineNumber": 1518, "col_offset": 12, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1518, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 1520, "col_offset": 11, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1521, "col_offset": 12, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 1523, "col_offset": 11, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 1526, "col_offset": 12, "nodeName": "formatted_files", "type": "Any"}, {"lineNumber": 1527, "col_offset": 12, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1528, "col_offset": 12, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1530, "col_offset": 11, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1536, "col_offset": 12, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1539, "col_offset": 11, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1545, "col_offset": 12, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1575, "col_offset": 12, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "to_file", "type": "Any"}, {"lineNumber": 1577, "col_offset": 29, "nodeName": "f", "type": "Any"}, {"lineNumber": 1589, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1592, "col_offset": 12, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 1594, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1594, "col_offset": 23, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 1594, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 1597, "col_offset": 17, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 1602, "col_offset": 11, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1603, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1604, "col_offset": 12, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1605, "col_offset": 12, "nodeName": "to_exclude", "type": "List[str]"}, {"lineNumber": 1607, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 1607, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1607, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 1613, "col_offset": 12, "nodeName": "val", "type": "str"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1619, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1619, "col_offset": 25, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "method_name", "type": "str"}, {"lineNumber": 282, "col_offset": 43, "nodeName": "cb_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "history", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "get_default_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 52, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "item", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 352, "col_offset": 39, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 352, "col_offset": 54, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 365, "col_offset": 41, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "grouped_cbs", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "cb", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 37, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 406, "col_offset": 65, "nodeName": "Dummy", "type": "Any"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 407, "col_offset": 37, "nodeName": "Dummy", "type": "Any"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "cb", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "cb", "type": "Any"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 432, "col_offset": 43, "nodeName": "criterion_params", "type": "Any"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 447, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 468, "col_offset": 57, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "msg", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 474, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 493, "col_offset": 25, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 496, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 498, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 499, "col_offset": 18, "nodeName": "_format_reinit_msg", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 29, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "msg", "type": "Any"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 503, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 503, "col_offset": 50, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 549, "col_offset": 19, "nodeName": "get_loss", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 33, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 549, "col_offset": 41, "nodeName": "yi", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 576, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 577, "col_offset": 43, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 583, "col_offset": 14, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 584, "col_offset": 14, "nodeName": "yi", "type": "Any"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "train_step_single", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 42, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 634, "col_offset": 46, "nodeName": "yi", "type": "Any"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "store_step", "type": "Callable[[Any], None]"}, {"lineNumber": 635, "col_offset": 40, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 636, "col_offset": 19, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 649, "col_offset": 13, "nodeName": "set_grad_enabled", "type": "Any"}, {"lineNumber": 649, "col_offset": 36, "nodeName": "training", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "training", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 651, "col_offset": 30, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 689, "col_offset": 27, "nodeName": "epochs", "type": "None"}, {"lineNumber": 689, "col_offset": 51, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 691, "col_offset": 39, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 692, "col_offset": 20, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 704, "col_offset": 20, "nodeName": "yi", "type": "Any"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 704, "col_offset": 44, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 707, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "yi", "type": "Any"}, {"lineNumber": 716, "col_offset": 26, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 716, "col_offset": 44, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 763, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 766, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 766, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "fit_loop", "type": "Callable[..., Any]"}, {"lineNumber": 768, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 768, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 771, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 771, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 805, "col_offset": 15, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 805, "col_offset": 38, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 808, "col_offset": 33, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 847, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 848, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 848, "col_offset": 55, "nodeName": "training", "type": "Any"}, {"lineNumber": 850, "col_offset": 17, "nodeName": "evaluation_step", "type": "Callable[..., Any]"}, {"lineNumber": 850, "col_offset": 38, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 851, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 851, "col_offset": 26, "nodeName": "yp", "type": "Any"}, {"lineNumber": 851, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 897, "col_offset": 23, "nodeName": "forward_iter", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 899, "col_offset": 46, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 899, "col_offset": 69, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 901, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 908, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 908, "col_offset": 29, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 909, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 909, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 928, "col_offset": 32, "nodeName": "device", "type": "Any"}, {"lineNumber": 930, "col_offset": 21, "nodeName": "_merge_x_and_fit_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 930, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 930, "col_offset": 53, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 931, "col_offset": 19, "nodeName": "module_", "type": "Any"}, {"lineNumber": 932, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 932, "col_offset": 33, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 965, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 966, "col_offset": 53, "nodeName": "yp", "type": "Any"}, {"lineNumber": 967, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 968, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1000, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1031, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 1032, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1071, "col_offset": 29, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 1071, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1073, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1075, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1082, "col_offset": 31, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1126, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1128, "col_offset": 43, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 1129, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1129, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 1131, "col_offset": 12, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 1131, "col_offset": 27, "nodeName": "dataset_valid", "type": "None"}, {"lineNumber": 1131, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1159, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1160, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1162, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1163, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1166, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1166, "col_offset": 35, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1168, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1169, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1169, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1169, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1171, "col_offset": 35, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1174, "col_offset": 34, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1188, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1192, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1196, "col_offset": 16, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 1200, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1202, "col_offset": 16, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1218, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1219, "col_offset": 35, "nodeName": "key", "type": "nothing"}, {"lineNumber": 1220, "col_offset": 12, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1221, "col_offset": 15, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1223, "col_offset": 16, "nodeName": "subkey", "type": "nothing"}, {"lineNumber": 1223, "col_offset": 24, "nodeName": "subval", "type": "nothing"}, {"lineNumber": 1223, "col_offset": 34, "nodeName": "items", "type": "nothing"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "subname", "type": "str"}, {"lineNumber": 1225, "col_offset": 34, "nodeName": "subval", "type": "nothing"}, {"lineNumber": 1229, "col_offset": 17, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 1229, "col_offset": 53, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1229, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 1232, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1232, "col_offset": 52, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1233, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1249, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1249, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1251, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1252, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1253, "col_offset": 33, "nodeName": "val", "type": "Any"}, {"lineNumber": 1259, "col_offset": 8, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 1259, "col_offset": 41, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1261, "col_offset": 24, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 1274, "col_offset": 12, "nodeName": "initialize_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 1275, "col_offset": 12, "nodeName": "_set_params_callback", "type": "Callable[..., Any]"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "initialize_criterion", "type": "Callable[[], Any]"}, {"lineNumber": 1282, "col_offset": 12, "nodeName": "initialize_module", "type": "Callable[[], Any]"}, {"lineNumber": 1286, "col_offset": 12, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1287, "col_offset": 20, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "initialize_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 1311, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1311, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1315, "col_offset": 19, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1316, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 1321, "col_offset": 19, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1322, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 1323, "col_offset": 12, "nodeName": "part0", "type": "str"}, {"lineNumber": 1323, "col_offset": 19, "nodeName": "part1", "type": "str"}, {"lineNumber": 1323, "col_offset": 27, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 1324, "col_offset": 21, "nodeName": "part1", "type": "str"}, {"lineNumber": 1325, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1325, "col_offset": 49, "nodeName": "part0", "type": "str"}, {"lineNumber": 1326, "col_offset": 15, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1337, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "cb_name", "type": "Any"}, {"lineNumber": 1338, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 1339, "col_offset": 15, "nodeName": "cb_name", "type": "Any"}, {"lineNumber": 1339, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 1345, "col_offset": 16, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1348, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1348, "col_offset": 22, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1349, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 1350, "col_offset": 34, "nodeName": "val", "type": "Any"}, {"lineNumber": 1351, "col_offset": 13, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 1352, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 1352, "col_offset": 23, "nodeName": "cuda_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 1352, "col_offset": 35, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1353, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1354, "col_offset": 12, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1354, "col_offset": 50, "nodeName": "read", "type": "Callable"}, {"lineNumber": 1361, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 1363, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1363, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 1365, "col_offset": 13, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 1366, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 1367, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1368, "col_offset": 25, "nodeName": "load", "type": "Any"}, {"lineNumber": 1368, "col_offset": 36, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1371, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1373, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1373, "col_offset": 26, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1375, "col_offset": 12, "nodeName": "set_cuda_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 1375, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 1375, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 1376, "col_offset": 13, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 1377, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 1377, "col_offset": 23, "nodeName": "cuda_attrs", "type": "Any"}, {"lineNumber": 1377, "col_offset": 35, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1378, "col_offset": 12, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1379, "col_offset": 25, "nodeName": "load", "type": "Any"}, {"lineNumber": 1379, "col_offset": 36, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1381, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1422, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1427, "col_offset": 16, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 1436, "col_offset": 50, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1444, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 1444, "col_offset": 53, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "to_file", "type": "Any"}, {"lineNumber": 1447, "col_offset": 33, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1455, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1457, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1460, "col_offset": 16, "nodeName": "DeviceWarning", "type": "Type[skorch.exceptions.DeviceWarning]"}, {"lineNumber": 1508, "col_offset": 27, "nodeName": "get_map_location", "type": "Callable[..., Any]"}, {"lineNumber": 1508, "col_offset": 44, "nodeName": "device", "type": "Any"}, {"lineNumber": 1509, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1509, "col_offset": 26, "nodeName": "_check_device", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1509, "col_offset": 45, "nodeName": "device", "type": "Any"}, {"lineNumber": 1509, "col_offset": 58, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1510, "col_offset": 19, "nodeName": "load", "type": "Any"}, {"lineNumber": 1510, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1517, "col_offset": 16, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 1521, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1521, "col_offset": 27, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 1521, "col_offset": 45, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1525, "col_offset": 16, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 1526, "col_offset": 30, "nodeName": "get_formatted_files", "type": "Any"}, {"lineNumber": 1526, "col_offset": 61, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1527, "col_offset": 23, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1528, "col_offset": 26, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1536, "col_offset": 25, "nodeName": "_get_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 1536, "col_offset": 41, "nodeName": "f_params", "type": "Any"}, {"lineNumber": 1537, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 1537, "col_offset": 41, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1545, "col_offset": 25, "nodeName": "_get_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 1545, "col_offset": 41, "nodeName": "f_optimizer", "type": "Any"}, {"lineNumber": 1546, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 1546, "col_offset": 44, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1572, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 1589, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1594, "col_offset": 23, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 1597, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1607, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 1610, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1613, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1613, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 1614, "col_offset": 23, "nodeName": "val", "type": "str"}, {"lineNumber": 1615, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 1616, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1618, "col_offset": 8, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "EpochTimer", "type": "Type[skorch.callbacks.logging.EpochTimer]"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "BatchScoring", "type": "Type[skorch.callbacks.scoring.BatchScoring]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "train_loss_score", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "BatchScoring", "type": "Type[skorch.callbacks.scoring.BatchScoring]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "valid_loss_score", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "cb", "type": "Any"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "method_name", "type": "str"}, {"lineNumber": 284, "col_offset": 45, "nodeName": "cb_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 333, "col_offset": 52, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "cb", "type": "Any"}, {"lineNumber": 340, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "cb", "type": "Any"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 344, "col_offset": 26, "nodeName": "cb", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "cb", "type": "Any"}, {"lineNumber": 344, "col_offset": 50, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 356, "col_offset": 57, "nodeName": "cb", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "unique_name", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 406, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 412, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 412, "col_offset": 65, "nodeName": "name", "type": "Any"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 420, "col_offset": 21, "nodeName": "cb", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "cb", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "cb", "type": "Any"}, {"lineNumber": 448, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 466, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "module", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 468, "col_offset": 57, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "_format_reinit_msg", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 56, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "msg", "type": "Any"}, {"lineNumber": 472, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 493, "col_offset": 25, "nodeName": "module_", "type": "Any"}, {"lineNumber": 499, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 500, "col_offset": 56, "nodeName": "triggered_directly", "type": "bool"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 548, "col_offset": 38, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 549, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 549, "col_offset": 47, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "TeeGenerator", "type": "Type[skorch.utils.TeeGenerator]"}, {"lineNumber": 634, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 634, "col_offset": 52, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 649, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "module_", "type": "Any"}, {"lineNumber": 651, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 702, "col_offset": 44, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 704, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 705, "col_offset": 25, "nodeName": "yi", "type": "Any"}, {"lineNumber": 706, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 23, "nodeName": "train_step", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 39, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 707, "col_offset": 43, "nodeName": "yi", "type": "Any"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 709, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 710, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 716, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 717, "col_offset": 25, "nodeName": "yi", "type": "Any"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "validation_step", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 44, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 719, "col_offset": 48, "nodeName": "yi", "type": "Any"}, {"lineNumber": 720, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 724, "col_offset": 42, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 768, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 805, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 805, "col_offset": 38, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 850, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 850, "col_offset": 51, "nodeName": "training", "type": "Any"}, {"lineNumber": 897, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 897, "col_offset": 53, "nodeName": "training", "type": "Any"}, {"lineNumber": 897, "col_offset": 70, "nodeName": "device", "type": "Any"}, {"lineNumber": 899, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 899, "col_offset": 29, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 899, "col_offset": 57, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 901, "col_offset": 25, "nodeName": "map", "type": "Callable"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "cat", "type": "Any"}, {"lineNumber": 928, "col_offset": 32, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 930, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 931, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 931, "col_offset": 34, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 966, "col_offset": 26, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 966, "col_offset": 37, "nodeName": "yp", "type": "Any"}, {"lineNumber": 966, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 966, "col_offset": 17, "nodeName": "yp", "type": "Any"}, {"lineNumber": 967, "col_offset": 12, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 967, "col_offset": 28, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 967, "col_offset": 37, "nodeName": "yp", "type": "Any"}, {"lineNumber": 1031, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1075, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1077, "col_offset": 46, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1128, "col_offset": 43, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1129, "col_offset": 30, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1159, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1162, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1197, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1200, "col_offset": 12, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1220, "col_offset": 19, "nodeName": "name", "type": "str"}, {"lineNumber": 1224, "col_offset": 40, "nodeName": "subkey", "type": "nothing"}, {"lineNumber": 1225, "col_offset": 16, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1252, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1253, "col_offset": 16, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1254, "col_offset": 17, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1255, "col_offset": 38, "nodeName": "val", "type": "Any"}, {"lineNumber": 1257, "col_offset": 37, "nodeName": "val", "type": "Any"}, {"lineNumber": 1262, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1263, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1268, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1268, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1268, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 1268, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 1274, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1275, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1275, "col_offset": 40, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1277, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1277, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 1277, "col_offset": 54, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1281, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 1281, "col_offset": 51, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1282, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1294, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1294, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1300, "col_offset": 57, "nodeName": "optimizer_changed", "type": "bool"}, {"lineNumber": 1302, "col_offset": 8, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 1302, "col_offset": 13, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1311, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1314, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1314, "col_offset": 32, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1317, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 1317, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 1317, "col_offset": 44, "nodeName": "names", "type": "Any"}, {"lineNumber": 1318, "col_offset": 16, "nodeName": "_replace_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1318, "col_offset": 39, "nodeName": "name", "type": "str"}, {"lineNumber": 1323, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 1324, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1324, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 1327, "col_offset": 16, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 1329, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1340, "col_offset": 16, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1340, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 1340, "col_offset": 42, "nodeName": "new_val", "type": "Any"}, {"lineNumber": 1345, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1349, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1349, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 1350, "col_offset": 16, "nodeName": "cuda_attrs", "type": "Dict[str, Any]"}, {"lineNumber": 1351, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1352, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1353, "col_offset": 12, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1354, "col_offset": 50, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1365, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1366, "col_offset": 12, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1366, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 1367, "col_offset": 12, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1368, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1368, "col_offset": 41, "nodeName": "load_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1375, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 1375, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 1376, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1377, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1378, "col_offset": 12, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1379, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1379, "col_offset": 41, "nodeName": "load_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1382, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1422, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1431, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1431, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1436, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1436, "col_offset": 23, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1439, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1439, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1444, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1444, "col_offset": 23, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 1457, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1458, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1459, "col_offset": 43, "nodeName": "map_device", "type": "Any"}, {"lineNumber": 1459, "col_offset": 55, "nodeName": "requested_device", "type": "Any"}, {"lineNumber": 1508, "col_offset": 44, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1509, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1509, "col_offset": 45, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1510, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1510, "col_offset": 46, "nodeName": "map_location", "type": "Any"}, {"lineNumber": 1514, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1521, "col_offset": 27, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 1524, "col_offset": 15, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1524, "col_offset": 37, "nodeName": "f_history", "type": "Any"}, {"lineNumber": 1525, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1525, "col_offset": 31, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 1525, "col_offset": 49, "nodeName": "f_history_", "type": "Any"}, {"lineNumber": 1526, "col_offset": 30, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 1527, "col_offset": 35, "nodeName": "formatted_files", "type": "Any"}, {"lineNumber": 1528, "col_offset": 41, "nodeName": "formatted_files", "type": "Any"}, {"lineNumber": 1531, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1531, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1537, "col_offset": 12, "nodeName": "module_", "type": "Any"}, {"lineNumber": 1540, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1540, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1546, "col_offset": 12, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 1577, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1601, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1601, "col_offset": 21, "nodeName": "__class__", "type": "Type[NeuralNet]"}, {"lineNumber": 1607, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 1608, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1615, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1616, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1616, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1616, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 1616, "col_offset": 48, "nodeName": "val", "type": "str"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "p", "type": "str"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "p", "type": "str"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "prefixes_", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "msg", "type": "str"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "noop", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "noop", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "cb", "type": "Any"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 41, "nodeName": "cb", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "cb", "type": "Any"}, {"lineNumber": 347, "col_offset": 32, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "callbacks", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 370, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 374, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 375, "col_offset": 38, "nodeName": "grouped_cbs", "type": "collections.OrderedDict[Any, List[Any]]"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "unique_name", "type": "Any"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "cb", "type": "Any"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 415, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 448, "col_offset": 45, "nodeName": "kwargs", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 468, "col_offset": 34, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 493, "col_offset": 25, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 582, "col_offset": 42, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 650, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 705, "col_offset": 35, "nodeName": "y_train_is_ph", "type": "Any"}, {"lineNumber": 706, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 706, "col_offset": 48, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 706, "col_offset": 54, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 707, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 707, "col_offset": 49, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 708, "col_offset": 56, "nodeName": "item", "type": "Any"}, {"lineNumber": 709, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 709, "col_offset": 62, "nodeName": "get_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 709, "col_offset": 70, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 710, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 710, "col_offset": 46, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 710, "col_offset": 52, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 710, "col_offset": 77, "nodeName": "step", "type": "Any"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 713, "col_offset": 46, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 717, "col_offset": 35, "nodeName": "y_valid_is_ph", "type": "Any"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 718, "col_offset": 48, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 718, "col_offset": 54, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 719, "col_offset": 54, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 720, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 720, "col_offset": 56, "nodeName": "item", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 721, "col_offset": 62, "nodeName": "get_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 721, "col_offset": 70, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 722, "col_offset": 46, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 722, "col_offset": 52, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 722, "col_offset": 78, "nodeName": "step", "type": "Any"}, {"lineNumber": 852, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 854, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 854, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 901, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 901, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1193, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 1193, "col_offset": 45, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1193, "col_offset": 55, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1194, "col_offset": 23, "nodeName": "fnmatch", "type": "Callable"}, {"lineNumber": 1194, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 1194, "col_offset": 45, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 1196, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1197, "col_offset": 16, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1197, "col_offset": 42, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 1197, "col_offset": 47, "nodeName": "group", "type": "Any"}, {"lineNumber": 1200, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 1223, "col_offset": 34, "nodeName": "get_params", "type": "nothing"}, {"lineNumber": 1224, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 1225, "col_offset": 23, "nodeName": "subname", "type": "str"}, {"lineNumber": 1253, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 1255, "col_offset": 16, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1257, "col_offset": 16, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1277, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1281, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1286, "col_offset": 16, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1286, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 1286, "col_offset": 55, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1311, "col_offset": 39, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1318, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1318, "col_offset": 45, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1318, "col_offset": 56, "nodeName": "key", "type": "str"}, {"lineNumber": 1324, "col_offset": 28, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1325, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1325, "col_offset": 28, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1327, "col_offset": 16, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1327, "col_offset": 38, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 1330, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1331, "col_offset": 51, "nodeName": "part0", "type": "str"}, {"lineNumber": 1340, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 1349, "col_offset": 22, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1350, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 1436, "col_offset": 23, "nodeName": "module_", "type": "Any"}, {"lineNumber": 1444, "col_offset": 23, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1524, "col_offset": 37, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 1525, "col_offset": 31, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 1525, "col_offset": 49, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 1537, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1546, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1601, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1603, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1603, "col_offset": 25, "nodeName": "__class__", "type": "Type[NeuralNet]"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1610, "col_offset": 34, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1610, "col_offset": 46, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1610, "col_offset": 56, "nodeName": "to_exclude", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 1615, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 242, "col_offset": 49, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 242, "col_offset": 56, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "cb", "type": "Any"}, {"lineNumber": 374, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 582, "col_offset": 42, "nodeName": "module_", "type": "Any"}, {"lineNumber": 708, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 709, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 720, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 854, "col_offset": 22, "nodeName": "yp", "type": "Any"}, {"lineNumber": 901, "col_offset": 45, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 1193, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 1193, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 1194, "col_offset": 23, "nodeName": "fnmatch", "type": "module"}, {"lineNumber": 1196, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1196, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 1196, "col_offset": 47, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 1196, "col_offset": 56, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1200, "col_offset": 53, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1223, "col_offset": 34, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1254, "col_offset": 21, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1254, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1254, "col_offset": 48, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1254, "col_offset": 58, "nodeName": "prefixes_", "type": "List[str]"}, {"lineNumber": 1255, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 1257, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 1286, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 1318, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1325, "col_offset": 28, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1436, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1444, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1603, "col_offset": 25, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1608, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1608, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1608, "col_offset": 50, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1608, "col_offset": 60, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1610, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 1615, "col_offset": 34, "nodeName": "val", "type": "str"}, {"lineNumber": 376, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 378, "col_offset": 49, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 582, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 708, "col_offset": 56, "nodeName": "step", "type": "Any"}, {"lineNumber": 720, "col_offset": 56, "nodeName": "step", "type": "Any"}, {"lineNumber": 852, "col_offset": 28, "nodeName": "to", "type": "Any"}, {"lineNumber": 852, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 852, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 852, "col_offset": 50, "nodeName": "yp", "type": "Any"}, {"lineNumber": 1196, "col_offset": 21, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1200, "col_offset": 45, "nodeName": "_", "type": "Any"}, {"lineNumber": 1200, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 1254, "col_offset": 21, "nodeName": "key", "type": "str"}, {"lineNumber": 1254, "col_offset": 58, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1608, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 852, "col_offset": 28, "nodeName": "n", "type": "Any"}]