[{"lineNumber": 38, "col_offset": 0, "nodeName": "NeuralNetClassifier", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "NeuralNetRegressor", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "nnc", "type": "Type[skorch.classifier.NeuralNetClassifier]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "nnr", "type": "Type[skorch.regressor.NeuralNetRegressor]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "Dataset", "type": "Type[skorch.dataset.Dataset]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "lr", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "initialized", "type": "Union[Any, bool]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "history", "type": "Optional[Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "initialized", "type": "Union[bool, Any]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "_default_callbacks", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "criterion_params", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "criterion_", "type": "Any"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "initialized_", "type": "bool"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "y_train_is_ph", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "y_valid_is_ph", "type": "Any"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 696, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 743, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 780, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 820, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "is_multioutput", "type": "bool"}, {"lineNumber": 871, "col_offset": 11, "nodeName": "is_multioutput", "type": "bool"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 877, "col_offset": 11, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 884, "col_offset": 15, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 899, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 939, "col_offset": 8, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 940, "col_offset": 15, "nodeName": "y_proba", "type": "Any"}, {"lineNumber": 1002, "col_offset": 8, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1041, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1042, "col_offset": 8, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1044, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1050, "col_offset": 11, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1097, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1098, "col_offset": 11, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 1129, "col_offset": 11, "nodeName": "training", "type": "bool"}, {"lineNumber": 1159, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1160, "col_offset": 8, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1161, "col_offset": 8, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1170, "col_offset": 11, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1184, "col_offset": 8, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1188, "col_offset": 8, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1197, "col_offset": 15, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1200, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1203, "col_offset": 8, "nodeName": "params_cb", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1205, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 1238, "col_offset": 11, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1258, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1269, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1275, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1287, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1291, "col_offset": 8, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1299, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1300, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1300, "col_offset": 19, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 1308, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1316, "col_offset": 8, "nodeName": "disable_cuda", "type": "bool"}, {"lineNumber": 1317, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1317, "col_offset": 19, "nodeName": "cuda_dependent_attributes_", "type": "List[str]"}, {"lineNumber": 1334, "col_offset": 11, "nodeName": "disable_cuda", "type": "bool"}, {"lineNumber": 1392, "col_offset": 8, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 1393, "col_offset": 8, "nodeName": "cuda_req_not_met", "type": "Union[Any, bool]"}, {"lineNumber": 1450, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1452, "col_offset": 8, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1453, "col_offset": 8, "nodeName": "to_exclude", "type": "List[nothing]"}, {"lineNumber": 1454, "col_offset": 8, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1455, "col_offset": 11, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "CVSplit", "type": "Type[skorch.dataset.CVSplit]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "_check_deprecated_params", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "cb", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "new_epoch", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "record", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "new_batch", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "callbacks", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "cb", "type": "Any"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "_yield_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "callbacks", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "grouped_cbs", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 371, "col_offset": 21, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "_callbacks_grouped_by_name", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 372, "col_offset": 18, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "cb", "type": "Any"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "_uniquely_named_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 438, "col_offset": 26, "nodeName": "criterion", "type": "Any"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 449, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 450, "col_offset": 36, "nodeName": "module", "type": "Any"}, {"lineNumber": 450, "col_offset": 44, "nodeName": "Module", "type": "Any"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "_get_params_for_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 473, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 480, "col_offset": 23, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "initialize_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "initialize_criterion", "type": "Callable[[], Any]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "initialize_module", "type": "Callable[[], Any]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "initialize_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "initialize_history", "type": "Callable[[], Any]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 524, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "get_loss", "type": "Callable[..., Any]"}, {"lineNumber": 550, "col_offset": 29, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 550, "col_offset": 37, "nodeName": "yi", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 559, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 560, "col_offset": 22, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 577, "col_offset": 15, "nodeName": "FirstStepAccumulator", "type": "Type[skorch.utils.FirstStepAccumulator]"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "get_train_step_accumulator", "type": "Callable[[], Any]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "step_fn", "type": "Callable[[], Any]"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "get_step", "type": "Callable[[], Any]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "check_data", "type": "Callable[..., Any]"}, {"lineNumber": 659, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 659, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 660, "col_offset": 17, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 660, "col_offset": 51, "nodeName": "max_epochs", "type": "Any"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "get_split_datasets", "type": "Callable[..., Any]"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 663, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 665, "col_offset": 29, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 666, "col_offset": 29, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 669, "col_offset": 24, "nodeName": "uses_placeholder_y", "type": "Callable[[Any], Any]"}, {"lineNumber": 669, "col_offset": 43, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "uses_placeholder_y", "type": "Callable[[Any], Any]"}, {"lineNumber": 670, "col_offset": 43, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 672, "col_offset": 23, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 740, "col_offset": 15, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "partial_fit", "type": "Callable[..., Any]"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 779, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 818, "col_offset": 18, "nodeName": "X", "type": "Any"}, {"lineNumber": 819, "col_offset": 19, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 819, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 820, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 821, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 868, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 873, "col_offset": 15, "nodeName": "cat", "type": "Any"}, {"lineNumber": 873, "col_offset": 25, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 876, "col_offset": 21, "nodeName": "duplicate_items", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 876, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 876, "col_offset": 40, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 878, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 879, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 882, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 882, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 883, "col_offset": 22, "nodeName": "fit_params", "type": "Any"}, {"lineNumber": 899, "col_offset": 12, "nodeName": "to_tensor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 899, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 900, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 900, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 900, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 901, "col_offset": 12, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 903, "col_offset": 15, "nodeName": "module_", "type": "Any"}, {"lineNumber": 903, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 936, "col_offset": 18, "nodeName": "forward_iter", "type": "Callable[..., Any]"}, {"lineNumber": 936, "col_offset": 36, "nodeName": "X", "type": "Any"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "yp", "type": "Any"}, {"lineNumber": 939, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 939, "col_offset": 33, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 971, "col_offset": 15, "nodeName": "predict_proba", "type": "Callable[[Any], Any]"}, {"lineNumber": 971, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 1002, "col_offset": 17, "nodeName": "to_tensor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1002, "col_offset": 27, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1003, "col_offset": 15, "nodeName": "criterion_", "type": "Any"}, {"lineNumber": 1003, "col_offset": 31, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 1003, "col_offset": 39, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 1038, "col_offset": 11, "nodeName": "is_dataset", "type": "Callable[[Any], bool]"}, {"lineNumber": 1038, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 1039, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 1041, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1044, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1045, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1045, "col_offset": 22, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 1051, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1053, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1053, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 1053, "col_offset": 26, "nodeName": "y", "type": "Any"}, {"lineNumber": 1097, "col_offset": 18, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 1097, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 1097, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 1098, "col_offset": 11, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1103, "col_offset": 15, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 1103, "col_offset": 30, "nodeName": "dataset_valid", "type": "Optional[Any]"}, {"lineNumber": 1130, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1131, "col_offset": 12, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1131, "col_offset": 23, "nodeName": "iterator_train", "type": "Any"}, {"lineNumber": 1133, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1134, "col_offset": 12, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1134, "col_offset": 23, "nodeName": "iterator_valid", "type": "Any"}, {"lineNumber": 1136, "col_offset": 31, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1137, "col_offset": 35, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 1142, "col_offset": 15, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 1142, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1145, "col_offset": 15, "nodeName": "params_for", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1145, "col_offset": 26, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 1145, "col_offset": 34, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1159, "col_offset": 17, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1159, "col_offset": 38, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 1160, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 1160, "col_offset": 22, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 1163, "col_offset": 12, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 1163, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 1163, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 1164, "col_offset": 12, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1166, "col_offset": 15, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1173, "col_offset": 26, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 1185, "col_offset": 15, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1186, "col_offset": 19, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1188, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1188, "col_offset": 29, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1189, "col_offset": 12, "nodeName": "key", "type": "nothing"}, {"lineNumber": 1189, "col_offset": 17, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1189, "col_offset": 24, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 1189, "col_offset": 30, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1189, "col_offset": 42, "nodeName": "_default_callbacks", "type": "List[Union[Tuple[str, skorch.callbacks.logging.EpochTimer], Tuple[str, skorch.callbacks.scoring.BatchScoring], Tuple[str, skorch.callbacks.logging.PrintLog]]]"}, {"lineNumber": 1190, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1191, "col_offset": 27, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1200, "col_offset": 17, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 1200, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1203, "col_offset": 20, "nodeName": "_get_params_callbacks", "type": "Callable[..., Any]"}, {"lineNumber": 1204, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 1204, "col_offset": 22, "nodeName": "params_cb", "type": "Dict[nothing, nothing]"}, {"lineNumber": 1220, "col_offset": 8, "nodeName": "_check_deprecated_params", "type": "Callable[..., Any]"}, {"lineNumber": 1221, "col_offset": 8, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1221, "col_offset": 23, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1221, "col_offset": 34, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1222, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1222, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1222, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1230, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 1230, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1232, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 1232, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1232, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 1242, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1244, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1247, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1256, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1256, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1264, "col_offset": 26, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1268, "col_offset": 8, "nodeName": "names", "type": "Any"}, {"lineNumber": 1268, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 1268, "col_offset": 19, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1269, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1270, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1276, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 1278, "col_offset": 12, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 1279, "col_offset": 12, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1291, "col_offset": 24, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1292, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 1292, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1292, "col_offset": 41, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1296, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1296, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1296, "col_offset": 36, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1299, "col_offset": 16, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 1300, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1317, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1320, "col_offset": 12, "nodeName": "dump", "type": "Any"}, {"lineNumber": 1333, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 1341, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 1366, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 1366, "col_offset": 46, "nodeName": "f", "type": "Any"}, {"lineNumber": 1392, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1393, "col_offset": 28, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 1394, "col_offset": 11, "nodeName": "use_cuda", "type": "Any"}, {"lineNumber": 1394, "col_offset": 23, "nodeName": "cuda_req_not_met", "type": "Union[Any, bool]"}, {"lineNumber": 1399, "col_offset": 15, "nodeName": "cuda_req_not_met", "type": "Union[Any, bool]"}, {"lineNumber": 1405, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 1407, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 1409, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 1434, "col_offset": 39, "nodeName": "fp", "type": "Any"}, {"lineNumber": 1446, "col_offset": 39, "nodeName": "fp", "type": "Any"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "history", "type": "skorch.history.History"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 1455, "col_offset": 11, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1456, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1457, "col_offset": 12, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1458, "col_offset": 12, "nodeName": "to_exclude", "type": "List[str]"}, {"lineNumber": 1460, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 1460, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 1460, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 1466, "col_offset": 12, "nodeName": "val", "type": "str"}, {"lineNumber": 1471, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1472, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1472, "col_offset": 25, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "method_name", "type": "str"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "cb_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "history", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "get_default_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 339, "col_offset": 52, "nodeName": "callbacks", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "item", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "callbacks", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "grouped_cbs", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "cb", "type": "Any"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 412, "col_offset": 37, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 412, "col_offset": 65, "nodeName": "Dummy", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "Dummy", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "param_callback", "type": "Any"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "cb", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "cb", "type": "Any"}, {"lineNumber": 425, "col_offset": 30, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 437, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 438, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "criterion_params", "type": "Any"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 450, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 456, "col_offset": 33, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 462, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 476, "col_offset": 42, "nodeName": "args", "type": "Any"}, {"lineNumber": 476, "col_offset": 50, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 520, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "get_loss", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 33, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 522, "col_offset": 41, "nodeName": "yi", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 549, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "train_step_single", "type": "Callable[..., Any]"}, {"lineNumber": 605, "col_offset": 42, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 605, "col_offset": 46, "nodeName": "yi", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "store_step", "type": "Callable[[Any], None]"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 607, "col_offset": 19, "nodeName": "step", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 620, "col_offset": 13, "nodeName": "set_grad_enabled", "type": "Any"}, {"lineNumber": 620, "col_offset": 36, "nodeName": "training", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 621, "col_offset": 31, "nodeName": "training", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 622, "col_offset": 30, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "epochs", "type": "None"}, {"lineNumber": 660, "col_offset": 51, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 662, "col_offset": 39, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 663, "col_offset": 20, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 16, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 675, "col_offset": 20, "nodeName": "yi", "type": "Any"}, {"lineNumber": 675, "col_offset": 26, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 675, "col_offset": 44, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 676, "col_offset": 16, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 687, "col_offset": 16, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 687, "col_offset": 20, "nodeName": "yi", "type": "Any"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "get_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 687, "col_offset": 44, "nodeName": "dataset_valid", "type": "Any"}, {"lineNumber": 688, "col_offset": 16, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 737, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 737, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "fit_loop", "type": "Callable[..., Any]"}, {"lineNumber": 739, "col_offset": 26, "nodeName": "X", "type": "Any"}, {"lineNumber": 739, "col_offset": 29, "nodeName": "y", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 742, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 742, "col_offset": 43, "nodeName": "y", "type": "Any"}, {"lineNumber": 776, "col_offset": 15, "nodeName": "warm_start", "type": "Any"}, {"lineNumber": 776, "col_offset": 38, "nodeName": "initialized_", "type": "Union[bool, Any]"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 779, "col_offset": 33, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 818, "col_offset": 23, "nodeName": "is_dataset", "type": "Callable[[Any], bool]"}, {"lineNumber": 818, "col_offset": 34, "nodeName": "X", "type": "Any"}, {"lineNumber": 818, "col_offset": 42, "nodeName": "get_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 818, "col_offset": 59, "nodeName": "X", "type": "Any"}, {"lineNumber": 819, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 819, "col_offset": 55, "nodeName": "training", "type": "Any"}, {"lineNumber": 821, "col_offset": 17, "nodeName": "evaluation_step", "type": "Callable[..., Any]"}, {"lineNumber": 821, "col_offset": 38, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 822, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 822, "col_offset": 26, "nodeName": "yp", "type": "Any"}, {"lineNumber": 822, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 868, "col_offset": 23, "nodeName": "forward_iter", "type": "Callable[..., Any]"}, {"lineNumber": 868, "col_offset": 41, "nodeName": "X", "type": "Any"}, {"lineNumber": 870, "col_offset": 46, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 870, "col_offset": 69, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 873, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 879, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 879, "col_offset": 29, "nodeName": "duplicates", "type": "Set[Any]"}, {"lineNumber": 880, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 880, "col_offset": 29, "nodeName": "msg", "type": "str"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 899, "col_offset": 32, "nodeName": "device", "type": "Any"}, {"lineNumber": 901, "col_offset": 21, "nodeName": "_merge_x_and_fit_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 901, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 901, "col_offset": 53, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 902, "col_offset": 19, "nodeName": "module_", "type": "Any"}, {"lineNumber": 903, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 903, "col_offset": 33, "nodeName": "fit_params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 936, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 937, "col_offset": 53, "nodeName": "yp", "type": "Any"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 939, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 971, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1002, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 1003, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1042, "col_offset": 29, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 1042, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1044, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1046, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 1053, "col_offset": 31, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1097, "col_offset": 18, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1099, "col_offset": 43, "nodeName": "train_split", "type": "Any"}, {"lineNumber": 1100, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1100, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 1102, "col_offset": 12, "nodeName": "dataset_train", "type": "Any"}, {"lineNumber": 1102, "col_offset": 27, "nodeName": "dataset_valid", "type": "None"}, {"lineNumber": 1102, "col_offset": 43, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1130, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1131, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1133, "col_offset": 21, "nodeName": "_get_params_for", "type": "Callable[[Any], Any]"}, {"lineNumber": 1134, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1137, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1137, "col_offset": 35, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1139, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1140, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1140, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1140, "col_offset": 39, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 1142, "col_offset": 35, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1145, "col_offset": 34, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1159, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1163, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1167, "col_offset": 16, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 1171, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1173, "col_offset": 16, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1189, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1190, "col_offset": 35, "nodeName": "key", "type": "nothing"}, {"lineNumber": 1191, "col_offset": 12, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1192, "col_offset": 15, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1194, "col_offset": 16, "nodeName": "subkey", "type": "nothing"}, {"lineNumber": 1194, "col_offset": 24, "nodeName": "subval", "type": "nothing"}, {"lineNumber": 1194, "col_offset": 34, "nodeName": "items", "type": "nothing"}, {"lineNumber": 1195, "col_offset": 16, "nodeName": "subname", "type": "str"}, {"lineNumber": 1196, "col_offset": 34, "nodeName": "subval", "type": "nothing"}, {"lineNumber": 1200, "col_offset": 17, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 1200, "col_offset": 53, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1200, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 1203, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1203, "col_offset": 52, "nodeName": "deep", "type": "bool"}, {"lineNumber": 1204, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 1220, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1220, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1222, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 1223, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1224, "col_offset": 33, "nodeName": "val", "type": "Any"}, {"lineNumber": 1230, "col_offset": 8, "nodeName": "BaseEstimator", "type": "Any"}, {"lineNumber": 1230, "col_offset": 41, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1232, "col_offset": 24, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1233, "col_offset": 15, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 1240, "col_offset": 12, "nodeName": "initialize_callbacks", "type": "Callable[[], Any]"}, {"lineNumber": 1241, "col_offset": 12, "nodeName": "_set_params_callback", "type": "Callable[..., Any]"}, {"lineNumber": 1243, "col_offset": 12, "nodeName": "initialize_criterion", "type": "Callable[[], Any]"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "initialize_module", "type": "Callable[[], Any]"}, {"lineNumber": 1246, "col_offset": 12, "nodeName": "initialize_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 1254, "col_offset": 12, "nodeName": "initialize_optimizer", "type": "Callable[[], Any]"}, {"lineNumber": 1265, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1265, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1269, "col_offset": 19, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1270, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 1275, "col_offset": 19, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1276, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 1277, "col_offset": 12, "nodeName": "part0", "type": "str"}, {"lineNumber": 1277, "col_offset": 19, "nodeName": "part1", "type": "str"}, {"lineNumber": 1277, "col_offset": 27, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 1278, "col_offset": 21, "nodeName": "part1", "type": "str"}, {"lineNumber": 1279, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 1279, "col_offset": 49, "nodeName": "part0", "type": "str"}, {"lineNumber": 1280, "col_offset": 15, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1291, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1292, "col_offset": 16, "nodeName": "cb_name", "type": "Any"}, {"lineNumber": 1292, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 1293, "col_offset": 15, "nodeName": "cb_name", "type": "Any"}, {"lineNumber": 1293, "col_offset": 26, "nodeName": "name", "type": "Any"}, {"lineNumber": 1299, "col_offset": 16, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1301, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1301, "col_offset": 22, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1302, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 1312, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 1312, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 1312, "col_offset": 34, "nodeName": "device", "type": "Any"}, {"lineNumber": 1313, "col_offset": 16, "nodeName": "device", "type": "Any"}, {"lineNumber": 1313, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 1314, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1318, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1318, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 1320, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 1320, "col_offset": 29, "nodeName": "key", "type": "str"}, {"lineNumber": 1321, "col_offset": 52, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1333, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 1335, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1338, "col_offset": 16, "nodeName": "DeviceWarning", "type": "Type[skorch.exceptions.DeviceWarning]"}, {"lineNumber": 1339, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "__dict__", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 1361, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1361, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1366, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1366, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 1386, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1386, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1392, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 1404, "col_offset": 16, "nodeName": "device", "type": "str"}, {"lineNumber": 1405, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 1405, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 1407, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 1407, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "module_", "type": "Any"}, {"lineNumber": 1434, "col_offset": 13, "nodeName": "open_file_like", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 1434, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 1435, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 1435, "col_offset": 46, "nodeName": "fp", "type": "Any"}, {"lineNumber": 1446, "col_offset": 13, "nodeName": "open_file_like", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 1446, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 1447, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1447, "col_offset": 27, "nodeName": "History", "type": "Type[skorch.history.History]"}, {"lineNumber": 1450, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1460, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 1463, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1466, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1466, "col_offset": 22, "nodeName": "val", "type": "Any"}, {"lineNumber": 1467, "col_offset": 23, "nodeName": "val", "type": "str"}, {"lineNumber": 1468, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 1469, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1471, "col_offset": 8, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 257, "col_offset": 13, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "EpochTimer", "type": "Type[skorch.callbacks.logging.EpochTimer]"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "BatchScoring", "type": "Type[skorch.callbacks.scoring.BatchScoring]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "train_loss_score", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "BatchScoring", "type": "Type[skorch.callbacks.scoring.BatchScoring]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "valid_loss_score", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "cb", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "method_name", "type": "str"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "cb_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 311, "col_offset": 41, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 339, "col_offset": 52, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 340, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "cb", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "cb", "type": "Any"}, {"lineNumber": 346, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "cb", "type": "Any"}, {"lineNumber": 350, "col_offset": 30, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "cb", "type": "Any"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "PrintLog", "type": "Type[skorch.callbacks.logging.PrintLog]"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 362, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 362, "col_offset": 57, "nodeName": "cb", "type": "Any"}, {"lineNumber": 373, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 373, "col_offset": 40, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "unique_name", "type": "Any"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 412, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 418, "col_offset": 65, "nodeName": "name", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 420, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "cb", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "cb", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "callbacks_", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 430, "col_offset": 37, "nodeName": "cb", "type": "Any"}, {"lineNumber": 450, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 454, "col_offset": 30, "nodeName": "module", "type": "Any"}, {"lineNumber": 456, "col_offset": 33, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "module_", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 520, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 521, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 521, "col_offset": 38, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 522, "col_offset": 47, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 555, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 605, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 605, "col_offset": 52, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "step_accumulator", "type": "skorch.utils.FirstStepAccumulator"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 620, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "module_", "type": "Any"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 673, "col_offset": 44, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 675, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 676, "col_offset": 25, "nodeName": "yi", "type": "Any"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 23, "nodeName": "train_step", "type": "Callable[..., Any]"}, {"lineNumber": 678, "col_offset": 39, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 678, "col_offset": 43, "nodeName": "yi", "type": "Any"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 687, "col_offset": 26, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 688, "col_offset": 25, "nodeName": "yi", "type": "Any"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 690, "col_offset": 23, "nodeName": "validation_step", "type": "Callable[..., Any]"}, {"lineNumber": 690, "col_offset": 44, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 690, "col_offset": 48, "nodeName": "yi", "type": "Any"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 692, "col_offset": 16, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 693, "col_offset": 16, "nodeName": "notify", "type": "Callable[..., Any]"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 695, "col_offset": 42, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 739, "col_offset": 34, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 776, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 776, "col_offset": 38, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 818, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 821, "col_offset": 17, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 821, "col_offset": 51, "nodeName": "training", "type": "Any"}, {"lineNumber": 868, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 868, "col_offset": 53, "nodeName": "training", "type": "Any"}, {"lineNumber": 868, "col_offset": 70, "nodeName": "device", "type": "Any"}, {"lineNumber": 870, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 870, "col_offset": 29, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 870, "col_offset": 57, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 872, "col_offset": 25, "nodeName": "map", "type": "Callable"}, {"lineNumber": 872, "col_offset": 29, "nodeName": "cat", "type": "Any"}, {"lineNumber": 899, "col_offset": 32, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 901, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 902, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 902, "col_offset": 34, "nodeName": "x_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 937, "col_offset": 26, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 937, "col_offset": 37, "nodeName": "yp", "type": "Any"}, {"lineNumber": 937, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 937, "col_offset": 17, "nodeName": "yp", "type": "Any"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "y_probas", "type": "List[Any]"}, {"lineNumber": 938, "col_offset": 28, "nodeName": "to_numpy", "type": "Callable[[Any], Any]"}, {"lineNumber": 938, "col_offset": 37, "nodeName": "yp", "type": "Any"}, {"lineNumber": 1002, "col_offset": 42, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1046, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1048, "col_offset": 46, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 1099, "col_offset": 43, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1100, "col_offset": 30, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 1130, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1133, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1171, "col_offset": 12, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1176, "col_offset": 15, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1191, "col_offset": 19, "nodeName": "name", "type": "str"}, {"lineNumber": 1195, "col_offset": 40, "nodeName": "subkey", "type": "nothing"}, {"lineNumber": 1196, "col_offset": 16, "nodeName": "params", "type": "Dict[str, nothing]"}, {"lineNumber": 1223, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1224, "col_offset": 16, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1225, "col_offset": 17, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1226, "col_offset": 38, "nodeName": "val", "type": "Any"}, {"lineNumber": 1228, "col_offset": 37, "nodeName": "val", "type": "Any"}, {"lineNumber": 1233, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1234, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1236, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 1236, "col_offset": 24, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1236, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 1236, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 1240, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1241, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1241, "col_offset": 40, "nodeName": "cb_params", "type": "Dict[str, Any]"}, {"lineNumber": 1242, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1242, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 1242, "col_offset": 54, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1243, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1244, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 1244, "col_offset": 51, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1245, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1246, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1247, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1247, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 1247, "col_offset": 54, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1252, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 1252, "col_offset": 27, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1254, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1256, "col_offset": 8, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 1256, "col_offset": 13, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1265, "col_offset": 39, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1268, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 1268, "col_offset": 32, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1271, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 1271, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 1271, "col_offset": 44, "nodeName": "names", "type": "Any"}, {"lineNumber": 1272, "col_offset": 16, "nodeName": "_replace_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 1272, "col_offset": 39, "nodeName": "name", "type": "str"}, {"lineNumber": 1277, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 1278, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1278, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 1281, "col_offset": 16, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 1283, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 1294, "col_offset": 16, "nodeName": "callbacks_new", "type": "Any"}, {"lineNumber": 1294, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 1294, "col_offset": 42, "nodeName": "new_val", "type": "Any"}, {"lineNumber": 1299, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1302, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1302, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 1303, "col_offset": 56, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1312, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1313, "col_offset": 25, "nodeName": "device", "type": "Any"}, {"lineNumber": 1314, "col_offset": 19, "nodeName": "device", "type": "Any"}, {"lineNumber": 1320, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 1321, "col_offset": 17, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 1322, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 1322, "col_offset": 24, "nodeName": "dump", "type": "Any"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1328, "col_offset": 20, "nodeName": "disable_cuda", "type": "bool"}, {"lineNumber": 1332, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 1333, "col_offset": 18, "nodeName": "key", "type": "str"}, {"lineNumber": 1335, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1341, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1366, "col_offset": 19, "nodeName": "module_", "type": "Any"}, {"lineNumber": 1392, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1393, "col_offset": 45, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 1400, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 1403, "col_offset": 20, "nodeName": "ResourceWarning", "type": "Type[ResourceWarning]"}, {"lineNumber": 1404, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1405, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1405, "col_offset": 55, "nodeName": "storage", "type": "Any"}, {"lineNumber": 1407, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1409, "col_offset": 8, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1435, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 1435, "col_offset": 22, "nodeName": "to_list", "type": "Any"}, {"lineNumber": 1447, "col_offset": 35, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 1447, "col_offset": 45, "nodeName": "fp", "type": "Any"}, {"lineNumber": 1454, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1454, "col_offset": 21, "nodeName": "__class__", "type": "Type[NeuralNet]"}, {"lineNumber": 1460, "col_offset": 31, "nodeName": "params", "type": "Any"}, {"lineNumber": 1461, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 1468, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1469, "col_offset": 12, "nodeName": "parts", "type": "List[str]"}, {"lineNumber": 1469, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1469, "col_offset": 43, "nodeName": "key", "type": "Any"}, {"lineNumber": 1469, "col_offset": 48, "nodeName": "val", "type": "str"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "p", "type": "str"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "p", "type": "str"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "prefixes_", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "msg", "type": "str"}, {"lineNumber": 256, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 256, "col_offset": 49, "nodeName": "unexpected_kwargs", "type": "List[str]"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "noop", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "noop", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "cb", "type": "Any"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "print_logs", "type": "List[Tuple[Any, Any, bool]]"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "cb", "type": "Any"}, {"lineNumber": 351, "col_offset": 45, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 353, "col_offset": 28, "nodeName": "cb", "type": "Any"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "named_by_user", "type": "bool"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "names_set_by_user", "type": "Set[Any]"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "callbacks", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 376, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "cbs", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 380, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 381, "col_offset": 23, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "grouped_cbs", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "unique_name", "type": "Any"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "cb", "type": "Any"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 421, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "cb", "type": "Any"}, {"lineNumber": 428, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 676, "col_offset": 35, "nodeName": "y_train_is_ph", "type": "Any"}, {"lineNumber": 677, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 677, "col_offset": 48, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 677, "col_offset": 54, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 678, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 678, "col_offset": 49, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 679, "col_offset": 56, "nodeName": "item", "type": "Any"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 680, "col_offset": 62, "nodeName": "get_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 680, "col_offset": 70, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 681, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 681, "col_offset": 46, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 681, "col_offset": 52, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 681, "col_offset": 77, "nodeName": "step", "type": "Any"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 684, "col_offset": 46, "nodeName": "on_epoch_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 688, "col_offset": 35, "nodeName": "y_valid_is_ph", "type": "Any"}, {"lineNumber": 689, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 689, "col_offset": 48, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 689, "col_offset": 54, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 690, "col_offset": 23, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 690, "col_offset": 54, "nodeName": "fit_params", "type": "Dict[str, Any]"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 691, "col_offset": 56, "nodeName": "item", "type": "Any"}, {"lineNumber": 692, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 692, "col_offset": 62, "nodeName": "get_len", "type": "Callable[[Any], Any]"}, {"lineNumber": 692, "col_offset": 70, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 693, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 693, "col_offset": 46, "nodeName": "Xi", "type": "Any"}, {"lineNumber": 693, "col_offset": 52, "nodeName": "yi_res", "type": "Any"}, {"lineNumber": 693, "col_offset": 78, "nodeName": "step", "type": "Any"}, {"lineNumber": 823, "col_offset": 22, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 825, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 825, "col_offset": 28, "nodeName": "device", "type": "Any"}, {"lineNumber": 872, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 872, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 1164, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 1164, "col_offset": 45, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 1164, "col_offset": 55, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1165, "col_offset": 23, "nodeName": "fnmatch", "type": "Callable"}, {"lineNumber": 1165, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 1165, "col_offset": 45, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 1167, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 1168, "col_offset": 16, "nodeName": "pgroups", "type": "List[Union[Dict[Any, Any], Dict[str, List[Any]]]]"}, {"lineNumber": 1168, "col_offset": 42, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 1168, "col_offset": 47, "nodeName": "group", "type": "Any"}, {"lineNumber": 1171, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 1194, "col_offset": 34, "nodeName": "get_params", "type": "nothing"}, {"lineNumber": 1195, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 1196, "col_offset": 23, "nodeName": "subname", "type": "str"}, {"lineNumber": 1224, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 1226, "col_offset": 16, "nodeName": "special_params", "type": "Dict[str, Any]"}, {"lineNumber": 1228, "col_offset": 16, "nodeName": "normal_params", "type": "Dict[str, Any]"}, {"lineNumber": 1242, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1244, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1247, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 1265, "col_offset": 39, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1272, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1272, "col_offset": 45, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1272, "col_offset": 56, "nodeName": "key", "type": "str"}, {"lineNumber": 1278, "col_offset": 28, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1279, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 1279, "col_offset": 28, "nodeName": "callbacks_", "type": "Any"}, {"lineNumber": 1281, "col_offset": 16, "nodeName": "callback", "type": "Optional[Any]"}, {"lineNumber": 1281, "col_offset": 38, "nodeName": "kwarg", "type": "Dict[str, Any]"}, {"lineNumber": 1284, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1285, "col_offset": 51, "nodeName": "part0", "type": "str"}, {"lineNumber": 1294, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 1302, "col_offset": 22, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1303, "col_offset": 21, "nodeName": "SpooledTemporaryFile", "type": "Type[tempfile.SpooledTemporaryFile[Any]]"}, {"lineNumber": 1304, "col_offset": 20, "nodeName": "save", "type": "Any"}, {"lineNumber": 1304, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 1304, "col_offset": 36, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1305, "col_offset": 20, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 1306, "col_offset": 20, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 1306, "col_offset": 33, "nodeName": "read", "type": "Callable"}, {"lineNumber": 1321, "col_offset": 17, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1322, "col_offset": 16, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1323, "col_offset": 16, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1325, "col_offset": 24, "nodeName": "uses_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 1329, "col_offset": 26, "nodeName": "load", "type": "Any"}, {"lineNumber": 1330, "col_offset": 24, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1332, "col_offset": 26, "nodeName": "load", "type": "Any"}, {"lineNumber": 1332, "col_offset": 37, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1366, "col_offset": 19, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1393, "col_offset": 45, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 1400, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 1435, "col_offset": 22, "nodeName": "history", "type": "Any"}, {"lineNumber": 1447, "col_offset": 35, "nodeName": "json", "type": "module"}, {"lineNumber": 1454, "col_offset": 21, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1456, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 1456, "col_offset": 25, "nodeName": "__class__", "type": "Type[NeuralNet]"}, {"lineNumber": 1463, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1463, "col_offset": 34, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1463, "col_offset": 46, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1463, "col_offset": 56, "nodeName": "to_exclude", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 1468, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 349, "col_offset": 27, "nodeName": "cb", "type": "Any"}, {"lineNumber": 380, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 382, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "module_", "type": "Any"}, {"lineNumber": 679, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 692, "col_offset": 16, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 825, "col_offset": 22, "nodeName": "yp", "type": "Any"}, {"lineNumber": 872, "col_offset": 45, "nodeName": "y_infer", "type": "List[Any]"}, {"lineNumber": 1164, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 1164, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 1165, "col_offset": 23, "nodeName": "fnmatch", "type": "module"}, {"lineNumber": 1167, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 1167, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 1167, "col_offset": 47, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 1167, "col_offset": 56, "nodeName": "matches", "type": "List[int]"}, {"lineNumber": 1171, "col_offset": 53, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1194, "col_offset": 34, "nodeName": "val", "type": "nothing"}, {"lineNumber": 1225, "col_offset": 21, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 1225, "col_offset": 36, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1225, "col_offset": 48, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1225, "col_offset": 58, "nodeName": "prefixes_", "type": "List[str]"}, {"lineNumber": 1226, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 1228, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 1272, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 1279, "col_offset": 28, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1303, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 1304, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1305, "col_offset": 20, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1306, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 1306, "col_offset": 33, "nodeName": "f", "type": "tempfile.SpooledTemporaryFile[nothing]"}, {"lineNumber": 1325, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 1326, "col_offset": 28, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 1329, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1332, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1393, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 1435, "col_offset": 22, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1456, "col_offset": 25, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1461, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 1461, "col_offset": 38, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1461, "col_offset": 50, "nodeName": "prefix", "type": "str"}, {"lineNumber": 1461, "col_offset": 60, "nodeName": "to_include", "type": "List[str]"}, {"lineNumber": 1463, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 1468, "col_offset": 34, "nodeName": "val", "type": "str"}, {"lineNumber": 382, "col_offset": 41, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 384, "col_offset": 49, "nodeName": "unique_name", "type": "str"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 679, "col_offset": 56, "nodeName": "step", "type": "Any"}, {"lineNumber": 691, "col_offset": 56, "nodeName": "step", "type": "Any"}, {"lineNumber": 823, "col_offset": 28, "nodeName": "to", "type": "Any"}, {"lineNumber": 823, "col_offset": 33, "nodeName": "device", "type": "Any"}, {"lineNumber": 823, "col_offset": 45, "nodeName": "n", "type": "Any"}, {"lineNumber": 823, "col_offset": 50, "nodeName": "yp", "type": "Any"}, {"lineNumber": 1167, "col_offset": 21, "nodeName": "params", "type": "List[Any]"}, {"lineNumber": 1171, "col_offset": 45, "nodeName": "_", "type": "Any"}, {"lineNumber": 1171, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 1225, "col_offset": 21, "nodeName": "key", "type": "str"}, {"lineNumber": 1225, "col_offset": 58, "nodeName": "self", "type": "NeuralNet"}, {"lineNumber": 1326, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 1330, "col_offset": 61, "nodeName": "storage", "type": "Any"}, {"lineNumber": 1461, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 823, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 1326, "col_offset": 28, "nodeName": "torch", "type": "Any"}]