[{"lineNumber": 29, "col_offset": 0, "nodeName": "_check_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "Callback", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "TorchCyclicLR", "type": "None"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "n", "type": "int"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "lr", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "policy", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "step_every", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "step_every", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "policy_cls", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "sch", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "policy_", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "lr_scheduler_", "type": "None"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "batch_idx_", "type": "int"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "excluded", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "history", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "batch_idx_", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 249, "col_offset": 27, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "current_period", "type": "float"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "current_lrs", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "lr", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "lr", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "_get_policy_cls", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "policy_cls", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "steps", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "_get_policy_cls", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "policy", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "_get_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "policy_", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "optimizer_", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "_check_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 247, "col_offset": 53, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "_check_lr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "base_period", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "current_period", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "period_mult", "type": "Any"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "_get_current_lr", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "current_period", "type": "Union[Any, float]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "n", "type": "int"}, {"lineNumber": 37, "col_offset": 54, "nodeName": "name", "type": "str"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "optim", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "policy_", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "TorchCyclicLR", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "policy", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "batch_idx_", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "step_every", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "score", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "record_batch", "type": "Any"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "policy", "type": "Any"}, {"lineNumber": 193, "col_offset": 36, "nodeName": "scheduler_kwargs", "type": "Dict[str, Union[Any, int]]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "scheduler_kwargs", "type": "Dict[str, Union[Any, int]]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "net", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "scheduler_kwargs", "type": "Dict[str, Union[Any, int]]"}, {"lineNumber": 258, "col_offset": 26, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "epoch_idx", "type": "float"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "current_period", "type": "float"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "current_period", "type": "float"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "current_lrs", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "test", "type": "Any"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "initial_lr", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "sch", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "policy_", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "step_every", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "items", "type": "Callable"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "batch_idx_", "type": "int"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "net", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "mode", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "score", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "event_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "step_every", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 183, "col_offset": 37, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "history", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "WarmRestartLR", "type": "Type[WarmRestartLR]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "self", "type": "WarmRestartLR"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "sys", "type": "module"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "__name__", "type": "str"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "history", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "mode", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "score", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "inf", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "score", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 254, "col_offset": 40, "nodeName": "min_lr", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "cos", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "excluded", "type": "Tuple[str, str, str, str]"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "net", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "period", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "key", "type": "str"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "b", "type": "Any"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "b", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "net", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "lr_scheduler_", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "pi", "type": "Any"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "history", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "monitor", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "self", "type": "LRScheduler"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "net", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "self", "type": "LRScheduler"}]