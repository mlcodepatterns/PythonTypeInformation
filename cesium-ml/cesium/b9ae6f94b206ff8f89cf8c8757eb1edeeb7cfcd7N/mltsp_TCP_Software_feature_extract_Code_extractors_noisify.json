[{"lineNumber": 7, "col_offset": 14, "nodeName": "InterExtractor", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "noisifier", "type": "Type[noisifier]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "noisifier", "type": "Type[noisifier]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "noisifier", "type": "Type[noisifier]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "noisifier", "type": "Type[noisifier]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "noisifier", "type": "Type[noisifier]"}, {"lineNumber": 9, "col_offset": 1, "nodeName": "active", "type": "bool"}, {"lineNumber": 10, "col_offset": 1, "nodeName": "extname", "type": "str"}, {"lineNumber": 11, "col_offset": 1, "nodeName": "list_of_noisifiers", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 1, "nodeName": "dic_of_noisifiers", "type": "Dict[str, Any]"}, {"lineNumber": 12, "col_offset": 34, "nodeName": "badpoints", "type": "Any"}, {"lineNumber": 12, "col_offset": 59, "nodeName": "addgaussian", "type": "Any"}, {"lineNumber": 12, "col_offset": 82, "nodeName": "cliptop", "type": "Any"}, {"lineNumber": 12, "col_offset": 104, "nodeName": "clipbottom", "type": "Any"}, {"lineNumber": 12, "col_offset": 130, "nodeName": "makefainter", "type": "Any"}, {"lineNumber": 14, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 16, "col_offset": 2, "nodeName": "generator", "type": "Any"}, {"lineNumber": 17, "col_offset": 2, "nodeName": "signal", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "signal", "type": "Any"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "time_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "n", "type": "int"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "inf", "type": "Any"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "maxvalue", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "maxvalue", "type": "Any"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "minvalue", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "minvalue", "type": "Any"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 57, "col_offset": 2, "nodeName": "gauss", "type": "Any"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 72, "col_offset": 2, "nodeName": "isitbad", "type": "Any"}, {"lineNumber": 73, "col_offset": 2, "nodeName": "nbadpoints", "type": "Any"}, {"lineNumber": 74, "col_offset": 2, "nodeName": "isitbad", "type": "Any"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "gauss", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "gauss", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "mags", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "mags", "type": "Any"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "mags", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 9, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "badpoints", "type": "Any"}, {"lineNumber": 11, "col_offset": 53, "nodeName": "addgaussian", "type": "Any"}, {"lineNumber": 11, "col_offset": 77, "nodeName": "cliptop", "type": "Any"}, {"lineNumber": 11, "col_offset": 101, "nodeName": "clipbottom", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "noisify", "type": "Any"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "noisified_gen", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "list_of_noisifiers", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "generate", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "dic", "type": "Any"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "self", "type": "noisifier"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 24, "col_offset": 2, "nodeName": "self", "type": "noisifier"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "self", "type": "noisifier"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "myaction", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "self", "type": "cliptop"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "self", "type": "cliptop"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 37, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "self", "type": "cliptop"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 43, "col_offset": 2, "nodeName": "self", "type": "clipbottom"}, {"lineNumber": 45, "col_offset": 2, "nodeName": "self", "type": "clipbottom"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "clip", "type": "Any"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "self", "type": "clipbottom"}, {"lineNumber": 55, "col_offset": 2, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "normal", "type": "Any"}, {"lineNumber": 58, "col_offset": 2, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "gauss", "type": "Any"}, {"lineNumber": 59, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 60, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 69, "col_offset": 2, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 70, "col_offset": 2, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "normal", "type": "Any"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "self", "type": "makefainter"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "self", "type": "makefainter"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "makefainter"}, {"lineNumber": 86, "col_offset": 2, "nodeName": "inputdic", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "self", "type": "makefainter"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "list_of_noisifiers", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "list_of_noisifiers", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "self", "type": "noisify"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "generator", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "self", "type": "noisify"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "self", "type": "noisifier"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "self", "type": "noisifier"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "maxvalue", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "flux_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "minvalue", "type": "Any"}, {"lineNumber": 45, "col_offset": 66, "nodeName": "inf", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "n", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "n", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "isitbad", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "isitbad", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 75, "col_offset": 60, "nodeName": "nbadpoints", "type": "Any"}, {"lineNumber": 76, "col_offset": 2, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "isitbad", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "self", "type": "noisify"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "self", "type": "noisify"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "list_of_noisifiers", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "self", "type": "cliptop"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "inf", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "self", "type": "cliptop"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "clipbottom"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "self", "type": "clipbottom"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "self", "type": "addgaussian"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "self", "type": "badpoints"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "self", "type": "noisify"}, {"lineNumber": 15, "col_offset": 56, "nodeName": "i", "type": "int"}]