[{"lineNumber": 51, "col_offset": 0, "nodeName": "IntersectDicts", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "nonIntersectDicts", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "pars", "type": "Dict[str, List[Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "mismatch", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "mismatch", "type": "Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "k", "type": "str"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "mismatch", "type": "Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]"}, {"lineNumber": 171, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "TestMethods", "type": "Test_Methods"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "mismatch", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "pars", "type": "Dict[str, List[Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]]]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "pars", "type": "Dict[str, List[Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "test_dict", "type": "Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "orig_fpath", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "temp_fpath", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "s_orig", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "s_temp", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "non_intersect_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "non_intersect_dict_keys", "type": "dict_keys[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "orig_fpath", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "out_str", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "temp_xml_fpath", "type": "str"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "out_str", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "temp_xml_fpath_2", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "Test_Methods", "type": "Type[Test_Methods]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "pars", "type": "Dict[str, List[Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]]]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "mismatch", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "d1", "type": "Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "k", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Test_Methods"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "pars", "type": "Dict[str, List[Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "fpath", "type": "str"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "non_intersect_dict", "type": "Union[Dict[Any, Any], Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "Source", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "source_dict_to_xml", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "temp_fpath", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "write_xml", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "Source", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "Source", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "nonIntersectDicts", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "remove", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "Source", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "source_dict_to_xml__simptimeseries", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "temp_xml_fpath", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "out_str", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "system", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], int]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "Source", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "source_dict_to_xml__simptimeseries", "type": "Any"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "temp_xml_fpath_2", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "out_str", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "test_xmlread_using_example_files", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "test_rw_oldxml_files_compare_xsdict", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "test_write_simpletimeseries_xml", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "TestMethods", "type": "Test_Methods"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "items", "type": "Any"}, {"lineNumber": 67, "col_offset": 83, "nodeName": "items", "type": "Callable"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "mismatch", "type": "Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "d1", "type": "Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]]]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "self", "type": "Test_Methods"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "Source", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "nonIntersectDicts", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 81, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "orig_fpath", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "system", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "temp_fpath", "type": "str"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "orig_fpath", "type": "str"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "temp_fpath", "type": "str"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "s_orig", "type": "Any"}, {"lineNumber": 117, "col_offset": 63, "nodeName": "s_temp", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "non_intersect_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "non_intersect_dict_keys", "type": "dict_keys[Any]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "non_intersect_dict_keys", "type": "dict_keys[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 94, "nodeName": "fpath", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "pprint", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "pprint", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "orig_fpath", "type": "str"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "s", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 147, "col_offset": 79, "nodeName": "temp_xml_fpath", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "temp_xml_fpath", "type": "str"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "s", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Test_Methods"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Test_Methods"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Test_Methods"}, {"lineNumber": 55, "col_offset": 75, "nodeName": "d1", "type": "Any"}, {"lineNumber": 67, "col_offset": 83, "nodeName": "d1", "type": "Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]]]"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "d2", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "test_dict", "type": "Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "fpath", "type": "str"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "test_dict", "type": "Union[Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], float, str, int]], str]], Dict[str, Union[Dict[str, Union[Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float, str, int]], str]]]"}, {"lineNumber": 96, "col_offset": 81, "nodeName": "s", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "non_intersect_dict", "type": "Union[Dict[Any, Any], Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "fpath", "type": "str"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "fpath", "type": "str"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "temp_fpath", "type": "str"}, {"lineNumber": 121, "col_offset": 101, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "pprint", "type": "module"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "pprint", "type": "module"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 121, "col_offset": 101, "nodeName": "non_intersect_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "s_orig", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "s_temp", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "non_intersect_dict", "type": "Union[Dict[Any, Any], Dict[str, Union[int, str, Dict[str, Dict[str, Union[Dict[str, List[nothing]], List[float], List[str]]]], Dict[str, Dict[str, Union[List[str], List[float], Dict[str, List[nothing]], List[Optional[str]]]]], float]]]"}]