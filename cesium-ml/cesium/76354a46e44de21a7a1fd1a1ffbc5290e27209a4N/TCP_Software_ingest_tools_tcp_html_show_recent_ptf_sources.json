[{"lineNumber": 147, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "json_out_string", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "json_out_string", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "html_str", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "html_str", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "pg_conn", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "select_str", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "conn", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "column_list", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "column_str", "type": "str"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "select_str", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "out_str", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "out_str", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "elem", "type": "str"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "column_list", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "out_str", "type": "str"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "out_str", "type": "str"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "out_str", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "src_id", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "source_id", "type": "int"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "html_table", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "source_id", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "connect", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "set_isolation_level", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "candidate_id", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "execute", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "select_str", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "select_str", "type": "str"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "fetchall", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "rollback", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "x_sub", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "y_sub", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "ptffield", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "ccdid", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "date_obs", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "date_yyyymmdd", "type": "str"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "url_prefix", "type": "str"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "url_suffix", "type": "str"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "url_type", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "connect", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "column_list", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 130, "nodeName": "column_str", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "execute", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "select_str", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "out_str", "type": "str"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "fetchall", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "out_str", "type": "str"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "out_str", "type": "str"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "elem", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "out_str", "type": "str"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "Show_Recent_Ptf_Sources", "type": "ShowRecentPtfSources"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "json_out_string", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "candidate_id", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "lightcurve", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "lightcurve", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "GetPeriodFoldForWeb", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "psycopg2", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "pg_conn", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "pg_conn", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "pg_conn", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "pg_conn", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "url_str", "type": "str"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "psycopg2", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "conn", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 133, "col_offset": 63, "nodeName": "elem", "type": "str"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "pg_cursor", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "row", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "out_str", "type": "str"}, {"lineNumber": 154, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "ShowRecentPtfSources", "type": "Type[ShowRecentPtfSources]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "get_period_fold", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 70, "nodeName": "src_id", "type": "int"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "json_out_string", "type": "Any"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "server", "type": "xmlrpc.client.ServerProxy"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.client.ServerProxy"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "rdb_rows", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "year", "type": "Any"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "month", "type": "Any"}, {"lineNumber": 85, "col_offset": 77, "nodeName": "day", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "date_yyyymmdd", "type": "str"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "ptffield", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "ccdid", "type": "Any"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "x_sub", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "y_sub", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "url_suffix", "type": "str"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "url_str", "type": "str"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "Show_Recent_Ptf_Sources", "type": "ShowRecentPtfSources"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "sys", "type": "module"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "ServerProxy", "type": "Type[xmlrpc.client.ServerProxy]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "ServerProxy", "type": "Type[xmlrpc.client.ServerProxy]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.server.SimpleXMLRPCServer"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "date_obs", "type": "Any"}, {"lineNumber": 85, "col_offset": 61, "nodeName": "date_obs", "type": "Any"}, {"lineNumber": 85, "col_offset": 77, "nodeName": "date_obs", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "url_prefix", "type": "str"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "url_type", "type": "str"}, {"lineNumber": 137, "col_offset": 133, "nodeName": "row", "type": "Any"}, {"lineNumber": 137, "col_offset": 141, "nodeName": "row", "type": "Any"}, {"lineNumber": 137, "col_offset": 149, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 72, "nodeName": "elem", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "sys", "type": "module"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "client", "type": "module"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "generate_imgsrc_for_id", "type": "xmlrpc.client._Method"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "candidate_id", "type": "int"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "sys", "type": "module"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "client", "type": "module"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "get_it", "type": "xmlrpc.client._Method"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "SimpleXMLRPCServer", "type": "Type[xmlrpc.server.SimpleXMLRPCServer]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "register_instance", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "register_multicall_functions", "type": "Callable[[], None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "register_introspection_functions", "type": "Callable[[], None]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "serve_forever", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "src_id", "type": "int"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.client.ServerProxy"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 137, "col_offset": 153, "nodeName": "row", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "xmlrpc", "type": "module"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "server", "type": "xmlrpc.client.ServerProxy"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "xmlrpc", "type": "module"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "server", "type": "xmlrpc.client.ServerProxy"}, {"lineNumber": 200, "col_offset": 9, "nodeName": "sys", "type": "module"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "server", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.server.SimpleXMLRPCServer"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "ShowRecentPtfSources", "type": "Type[ShowRecentPtfSources]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.server.SimpleXMLRPCServer"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.server.SimpleXMLRPCServer"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "server", "type": "xmlrpc.server.SimpleXMLRPCServer"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 212, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "ServerProxy", "type": "Type[xmlrpc.client.ServerProxy]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "show", "type": "ShowRecentPtfSources"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "html_table_str", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "html_table_str", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 190, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "xmlrpc", "type": "module"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "sys", "type": "module"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "client", "type": "module"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "ShowRecentPtfSources", "type": "Type[ShowRecentPtfSources]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "get_html_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 48, "nodeName": "src_id", "type": "int"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "html_table_str", "type": "str"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "xmlrpc", "type": "module"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "show", "type": "ShowRecentPtfSources"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "pars", "type": "Dict[str, Union[int, str]]"}]