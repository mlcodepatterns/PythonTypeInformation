[{"lineNumber": 12, "col_offset": 0, "nodeName": "test_shorten_fname", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_get_docker_client", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_docker_images_available", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "test_robust_literal_eval", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "test_check_model_param_types", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_make_list", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_remove_files", "type": "Callable[[], Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "dockerpy_installed", "type": "bool"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "expected", "type": "Dict[str, Union[List[Union[float, int, str]], Dict[str, float], bool, float, str, int]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Union[Dict[str, float], bool, float, str, int]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "params", "type": "Dict[str, int]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "params", "type": "Dict[str, float]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Union[bool, Dict[str, float]]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "params", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "params", "type": "Dict[str, List[float]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "model_type", "type": "str"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "params_to_optimize", "type": "Dict[str, List[Union[float, int, str]]]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "fpath", "type": "str"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "f", "type": "None"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "f", "type": "None"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "dockerpy_installed", "type": "bool"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "dockerpy_installed", "type": "bool"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "k", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "expected", "type": "Dict[str, Union[List[Union[float, int, str]], Dict[str, float], bool, float, str, int]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Union[Dict[str, float], bool, float, str, int]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "params", "type": "Dict[str, int]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "params", "type": "Dict[str, float]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Union[bool, Dict[str, float]]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "params", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "params", "type": "Dict[str, List[float]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "check_model_param_types", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "model_type", "type": "str"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "params_to_optimize", "type": "Dict[str, List[Union[float, int, str]]]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "fpath", "type": "str"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "remove_files", "type": "Callable[[Any], None]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "fpath", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "fpath", "type": "str"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "remove_files", "type": "Callable[[Any], None]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "remove_files", "type": "Callable[[Any], None]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "fpath", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "shorten_fname", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "shorten_fname", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "shorten_fname", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "shorten_fname", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assert_raises", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "get_docker_client", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "docker_images_available", "type": "Callable[[], bool]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "robust_literal_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "v", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "make_list", "type": "Callable"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "make_list", "type": "Callable"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "fpath", "type": "str"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "fpath", "type": "str"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "fpath", "type": "str"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "util", "type": "module"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "npt", "type": "module"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "util", "type": "module"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "Client", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "k", "type": "str"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "v", "type": "str"}, {"lineNumber": 51, "col_offset": 57, "nodeName": "items", "type": "Callable"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "open", "type": "Callable"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "fpath", "type": "str"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "open", "type": "Callable"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "fpath", "type": "str"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "get_docker_client", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "docker", "type": "Any"}, {"lineNumber": 51, "col_offset": 57, "nodeName": "params", "type": "Dict[str, str]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "util", "type": "module"}]