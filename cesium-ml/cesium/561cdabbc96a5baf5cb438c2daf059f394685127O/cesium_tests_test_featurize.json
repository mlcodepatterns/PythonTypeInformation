[{"lineNumber": 20, "col_offset": 0, "nodeName": "test_featurize_files_function", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "test_featurize_time_series_single", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_featurize_time_series_single_multichannel", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "test_featurize_time_series_multiple", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "test_featurize_time_series_multiple_multichannel", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_featurize_time_series_uneven_multichannel", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_featurize_time_series_custom_functions", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_featurize_time_series_custom_dask_graph", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_featurize_time_series_default_times", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_featurize_time_series_default_errors", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "test_featurize_time_series_pandas_metafeatures", "type": "Callable[[], Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "test_impute", "type": "Callable[[], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "test_roundtrip_featureset", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "DATA_PATH", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "FEATURES_CSV_PATH", "type": "str"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "pjoin", "type": "Callable"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "DATA_PATH", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "n_series", "type": "int"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "meta_features", "type": "List[Dict[str, float]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "n_series", "type": "int"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "t", "type": "List[List[Any]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "e", "type": "List[List[Any]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "custom_functions", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "custom_functions", "type": "Dict[str, Tuple[Callable[[Any], Any], str]]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "e", "type": "List[List[Any]]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "e", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "t", "type": "List[List[Any]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "m", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "meta_features", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "n_series", "type": "int"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "meta_features", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "inf", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "nan", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "other_values", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "fset_path", "type": "str"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "__file__", "type": "str"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "ts_paths", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "fset", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "labels", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "float64", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 44, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "n_series", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 58, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "meta_features", "type": "List[Dict[str, float]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "t", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "e", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 101, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "pi", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 117, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[str, float]"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "columns", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 134, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "e", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "e", "type": "List[List[Any]]"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "m", "type": "Any"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "e", "type": "Any"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "t", "type": "List[List[Any]]"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 168, "col_offset": 55, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "meta_features", "type": "Dict[nothing, nothing]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "columns", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "m", "type": "Any"}, {"lineNumber": 175, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "Series", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "t", "type": "Any"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "m", "type": "Any"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "e", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "meta_features", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "featurize_time_series", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "times", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 58, "nodeName": "errors", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "features_to_use", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 43, "nodeName": "meta_features", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "labels", "type": "Union[numpy.ndarray, List[str]]"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "sample_featureset", "type": "Callable"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "values", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "fset", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "fset", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "labels", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "sample_ts_files", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "fset", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "labels", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "featurize_ts_files", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 23, "col_offset": 52, "nodeName": "ts_paths", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "fset", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 48, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "fset", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "fset", "type": "Any"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "t", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "fset", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "custom_functions", "type": "Dict[str, Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "get", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "fset", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "fset", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 124, "col_offset": 60, "nodeName": "custom_functions", "type": "Dict[str, Tuple[Callable[[Any], Any], str]]"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "get", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "fset", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 143, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "e", "type": "List[List[Any]]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 148, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 161, "col_offset": 10, "nodeName": "t", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "t", "type": "List[List[Any]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "m", "type": "List[List[Any]]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "fset", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 179, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "fset", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "sample_values", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "pd", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "featurize", "type": "module"}, {"lineNumber": 190, "col_offset": 68, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "fset", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "fset", "type": "Any"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "pd", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 210, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "values", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "median", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "featurize", "type": "module"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "featurize", "type": "module"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "npt", "type": "module"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "impute_featureset", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "fset", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "pred_probs", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "featurize", "type": "module"}, {"lineNumber": 25, "col_offset": 62, "nodeName": "get", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 48, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "n_series", "type": "int"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 62, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "get_level_values", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "n_series", "type": "int"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 78, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "m", "type": "Any"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "dask", "type": "Any"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "dask", "type": "Any"}, {"lineNumber": 138, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 140, "col_offset": 10, "nodeName": "m", "type": "Any"}, {"lineNumber": 141, "col_offset": 10, "nodeName": "e", "type": "Any"}, {"lineNumber": 143, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 148, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 162, "col_offset": 10, "nodeName": "m", "type": "Any"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 179, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "n_series", "type": "int"}, {"lineNumber": 184, "col_offset": 46, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "n_series", "type": "int"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "n_series", "type": "int"}, {"lineNumber": 190, "col_offset": 68, "nodeName": "dask", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "fset", "type": "Any"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "fset", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "fset", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "nanmax", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "amplitude", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "featurize", "type": "module"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "fset", "type": "Any"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "labels", "type": "Union[numpy.ndarray, List[str], List[nothing]]"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "sample_featureset", "type": "Callable"}, {"lineNumber": 244, "col_offset": 48, "nodeName": "n_channels", "type": "int"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "labels", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "save_featureset", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 38, "nodeName": "fset", "type": "Any"}, {"lineNumber": 252, "col_offset": 44, "nodeName": "fset_path", "type": "str"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "fset_loaded", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "data_loaded", "type": "Dict[Any, Any]"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "load_featureset", "type": "Callable[[Any], Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 254, "col_offset": 65, "nodeName": "fset_path", "type": "str"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "values", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "values", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "index", "type": "Any"}, {"lineNumber": 256, "col_offset": 47, "nodeName": "index", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "columns", "type": "Any"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "columns", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "fset_loaded", "type": "Any"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "labels", "type": "Union[List[str], List[nothing], numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "pred_probs", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "columns", "type": "Any"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "columns", "type": "Any"}, {"lineNumber": 25, "col_offset": 62, "nodeName": "dask", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "fset", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "columns", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "e", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "list_of_series", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "values", "type": "Any"}, {"lineNumber": 212, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "abs", "type": "Any"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "other_values", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "imputed", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "fset", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "pd", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "values", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "featurize", "type": "module"}, {"lineNumber": 252, "col_offset": 62, "nodeName": "labels", "type": "Union[List[str], List[nothing], numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 49, "nodeName": "pred_probs", "type": "Any"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "featurize", "type": "module"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "fset", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "fset_loaded", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "fset", "type": "Any"}, {"lineNumber": 256, "col_offset": 47, "nodeName": "fset_loaded", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "fset", "type": "Any"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "fset_loaded", "type": "Any"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "pd", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 259, "col_offset": 43, "nodeName": "data_loaded", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "data_loaded", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "npt", "type": "module"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "pred_probs", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "fset", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "fset", "type": "Any"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "amp_values", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "index", "type": "Any"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "data_loaded", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "stats", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 60, "nodeName": "fset", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "fset", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "scipy", "type": "Any"}]