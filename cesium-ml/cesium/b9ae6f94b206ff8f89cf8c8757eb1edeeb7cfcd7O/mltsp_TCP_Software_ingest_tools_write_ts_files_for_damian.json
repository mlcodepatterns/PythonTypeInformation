[{"lineNumber": 33, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "Database_Utils", "type": "Type[Database_Utils]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 227, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "WTS", "type": "Write_TS_For_Damian"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "standard_library", "type": "module"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pars", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "pars", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "tcp_cursor", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "tutor_cursor", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "classid_shortname", "type": "Dict[Any, Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "select_str", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "results", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "classid_shortname", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "classid_shortname", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "user_classifs_fpaths", "type": "Dict[int, str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "all_srcid_classid", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "all_srcid_classid", "type": "Dict[Any, Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "srcid_classname", "type": "Dict[Any, Any]"}, {"lineNumber": 247, "col_offset": 10, "nodeName": "Write_TS_For_Damian", "type": "Type[Write_TS_For_Damian]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Database_Utils"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "connect_to_tcp_db", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "connect_to_tutor_db", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "connect", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "connect", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "connect_to_tcp_db", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "connect_to_tutor_db", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "dirpath", "type": "str"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "xml_fpaths", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "xml_fpath", "type": "str"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "xml_fpaths", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "src_id", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "select_str", "type": "str"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "select_str", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "algo_class_list", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "results", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "write_str", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "execute", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "select_str", "type": "str"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "fetchall", "type": "Any"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "row", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "class_short_name", "type": "Any"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "get_classid_shortname_lookup", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "fpath", "type": "str"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "parse_xmls_write_dats", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "parse_actlearn_classifs", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "make_summary_file", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "set_trace", "type": "Callable[[], None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "WTS", "type": "Write_TS_For_Damian"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Database_Utils"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Database_Utils"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "MySQLdb", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "tcp_db", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "MySQLdb", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "tutor_db", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "src_id", "type": "int"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "do_write", "type": "bool"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 118, "col_offset": 140, "nodeName": "src_id", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "select_str", "type": "str"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "fetchall", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "tutor_class_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "results", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "survey_name", "type": "str"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "tutor_class_name", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "select_str", "type": "str"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "fetchall", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "row", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "algo_class_str", "type": "str"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "algo_class_str", "type": "str"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "write_str", "type": "str"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "write_str", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "tcp_cursor", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "tcp_cursor", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "class_short_name", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "classid_shortname", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "expandvars", "type": "Callable"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "user_classifs_fpaths", "type": "Dict[int, str]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "loadtxt", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "fpath", "type": "str"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "src_id", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 221, "col_offset": 70, "nodeName": "srcid_classname", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "pdb", "type": "module"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "glob", "type": "module"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "dirpath", "type": "str"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "signals_list", "type": "List[nothing]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "gen", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "signalgen", "type": "Dict[nothing, nothing]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "sig", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "t", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "m", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "m_err", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "dat_fpath", "type": "str"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "tutor_cursor", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "tutor_cursor", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "get", "type": "Callable"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "src_id", "type": "int"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 139, "col_offset": 298, "nodeName": "src_id", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "tcp_cursor", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "tcp_cursor", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "class_short_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "rank", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "prob", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "algo_class_list", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "algo_class_list", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "src_id", "type": "int"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "survey_name", "type": "str"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "tutor_class_name", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "algo_class_str", "type": "str"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "all_srcid_classid", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "classid_shortname", "type": "Dict[Any, Any]"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "srcid_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "proj_id", "type": "int"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "src_id", "type": "int"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "from_xml", "type": "Any"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "signals_list", "type": "List[nothing]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "gen", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "gen", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "Source", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "open", "type": "Callable"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "dat_fpath", "type": "str"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "srcid_classname", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "survey_name", "type": "str"}, {"lineNumber": 139, "col_offset": 269, "nodeName": "pars", "type": "Dict[str, Union[int, str, Dict[int, str]]]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "algo_class_list", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "class_short_name", "type": "Any"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "src_id", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "xml_fpath", "type": "str"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "generators_importers", "type": "Any"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "db_importer", "type": "Any"}, {"lineNumber": 93, "col_offset": 60, "nodeName": "xml_fpath", "type": "str"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "src_id", "type": "int"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "write", "type": "Callable"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "source_name", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "survey_name", "type": "str"}, {"lineNumber": 139, "col_offset": 269, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 145, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "prob", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "pars", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "fp", "type": "TextIO"}, {"lineNumber": 204, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 79, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "rfind", "type": "Callable[..., int]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "values", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "values", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "self", "type": "Write_TS_For_Damian"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "rfind", "type": "Callable[..., int]"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "xml_fpath", "type": "str"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "t", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 104, "col_offset": 64, "nodeName": "m_err", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "xml_fpath", "type": "str"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "x_sdict", "type": "Any"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "sig", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "sig", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "sig", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "gen", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "gen", "type": "Any"}]