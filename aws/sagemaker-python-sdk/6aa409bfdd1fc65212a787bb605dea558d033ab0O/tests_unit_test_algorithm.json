[{"lineNumber": 157, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_valid_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_bad_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_valid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 443, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_invalid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 0, "nodeName": "test_algorithm_distributed_training_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 507, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 576, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_categorical_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 684, "col_offset": 0, "nodeName": "test_algorithm_required_hyperparameters_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 772, "col_offset": 0, "nodeName": "test_algorithm_required_free_text_hyperparameter_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 840, "col_offset": 0, "nodeName": "test_algorithm_create_transformer_without_completed_training_job", "type": "Callable[[Any], Any]"}, {"lineNumber": 883, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_no_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_with_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 919, "col_offset": 0, "nodeName": "test_algorithm_encrypt_inter_container_traffic", "type": "Callable[[Any], Any]"}, {"lineNumber": 939, "col_offset": 0, "nodeName": "test_algorithm_no_required_hyperparameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 472, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 524, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 557, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 593, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 627, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 628, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 661, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 662, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]]"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 705, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 756, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 791, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 792, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[bool, str]]]"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 829, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 831, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 833, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 877, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 879, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 902, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 921, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 935, "col_offset": 38, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 213, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 316, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 353, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 394, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 415, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 469, "col_offset": 37, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 472, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 472, "col_offset": 41, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 475, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 494, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 523, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 526, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 556, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 559, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 592, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 595, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 627, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 630, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 661, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 664, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 666, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 707, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 709, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 755, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 758, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 791, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 794, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 817, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 820, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 828, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 828, "col_offset": 49, "nodeName": "session", "type": "Any"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 830, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 835, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 835, "col_offset": 22, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 835, "col_offset": 35, "nodeName": "Transformer", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 837, "col_offset": 11, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 842, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 845, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 853, "col_offset": 40, "nodeName": "error", "type": "Any"}, {"lineNumber": 861, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 861, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 862, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 863, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 874, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 874, "col_offset": 49, "nodeName": "session", "type": "Any"}, {"lineNumber": 875, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 879, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "env", "type": "Any"}, {"lineNumber": 885, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 888, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 897, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 902, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 904, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 907, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 915, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 916, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 921, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 922, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 923, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 926, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 935, "col_offset": 38, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 936, "col_offset": 11, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 941, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 944, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 949, "col_offset": 11, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "module"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 182, "col_offset": 68, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 245, "col_offset": 68, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 283, "col_offset": 68, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 316, "col_offset": 68, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 319, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 394, "col_offset": 68, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 423, "col_offset": 21, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 431, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 445, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 453, "col_offset": 21, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 457, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 457, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 470, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 472, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 475, "col_offset": 68, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 483, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 491, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 494, "col_offset": 68, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 497, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 526, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 533, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 537, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 559, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 566, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 569, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 593, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 595, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 602, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 606, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 607, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 608, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 628, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 630, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 630, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 637, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 640, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 640, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 643, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 643, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 664, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 664, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 671, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 677, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 677, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 680, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 680, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 704, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 707, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 707, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 714, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 723, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 758, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 765, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 791, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 792, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 794, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 794, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 801, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 806, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 806, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 810, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 810, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 818, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 825, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 833, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 836, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 837, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 843, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 850, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 853, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 853, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 861, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 864, "col_offset": 21, "nodeName": "response", "type": "Any"}, {"lineNumber": 871, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 879, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 880, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 886, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 893, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 902, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 905, "col_offset": 21, "nodeName": "response", "type": "Any"}, {"lineNumber": 912, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 915, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 921, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 924, "col_offset": 21, "nodeName": "response", "type": "Any"}, {"lineNumber": 931, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 941, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 944, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 944, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 954, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 319, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 457, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 497, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 503, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 569, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 640, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 643, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 677, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 680, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 718, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 723, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 806, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 810, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 853, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 855, "col_offset": 82, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 855, "col_offset": 86, "nodeName": "error", "type": "Any"}]