[{"lineNumber": 34, "col_offset": 0, "nodeName": "processing_output", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "processing_input", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_pyspark_processor_instantiation", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "test_spark_processor_base_run", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 420, "col_offset": 0, "nodeName": "test_terminate_history_server", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 493, "col_offset": 0, "nodeName": "test_is_notebook_instance", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 644, "col_offset": 0, "nodeName": "test_validate_s3_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 651, "col_offset": 0, "nodeName": "test_config_aws_credentials", "type": "Callable[[Any], Any]"}, {"lineNumber": 894, "col_offset": 0, "nodeName": "test_history_server_down", "type": "Callable[[Any], Any]"}, {"lineNumber": 905, "col_offset": 0, "nodeName": "test_get_run_history_server_cmd", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "REGION", "type": "str"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "_SparkProcessorBase", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "PySparkProcessor", "type": "Any"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "invalid_classification_dict", "type": "Dict[str, Union[Dict[nothing, nothing], str]]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "invalid_classification_list", "type": "List[Dict[str, Union[Dict[nothing, nothing], str]]]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "missing_classification_dict", "type": "Dict[str, Dict[nothing, nothing]]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "missing_classification_list", "type": "List[Dict[str, Dict[nothing, nothing]]]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "missing_properties_dict", "type": "Dict[str, str]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "missing_properties_list", "type": "List[Dict[str, str]]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "serialized_configuration", "type": "io.BytesIO"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "boto_mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "default_bucket", "type": "unittest.mock.Mock"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "session_mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "spark_processor_base", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "spark", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "tmp", "type": "IO[bytes]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "invalid_classification_dict", "type": "Dict[str, Union[Dict[nothing, nothing], str]]"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "missing_classification_dict", "type": "Dict[str, Dict[nothing, nothing]]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "missing_properties_dict", "type": "Dict[str, str]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 259, "col_offset": 44, "nodeName": "processing_input", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "processing_output", "type": "Any"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "desired_s3_uri", "type": "str"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "return_value", "type": "io.BytesIO"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "serialized_configuration", "type": "io.BytesIO"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "submit_deps", "type": "None"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 422, "col_offset": 40, "nodeName": "mock_history_server", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "_spark_event_logs_s3_uri", "type": "str"}, {"lineNumber": 483, "col_offset": 50, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 506, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "return_value", "type": "bool"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "return_value", "type": "Tuple[Any, Any]"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "creds", "type": "unittest.mock.MagicMock"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "return_value", "type": "Tuple[Any, str]"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "return_value", "type": "Tuple[Any, str]"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "ProcessingOutput", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "ProcessingInput", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "session_mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "_SparkProcessorBase", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "PySparkProcessor", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "cleanup", "type": "Callable[[], None]"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "cleanup", "type": "Callable[[], None]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "tempdir", "type": "tempfile.TemporaryDirectory[Union[str, bytes]]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "name", "type": "str"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "PySparkProcessor", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "PySparkProcessor", "type": "Any"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "mock_stage_configuration", "type": "Any"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "mock_processing_output", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "_extend_processing_args", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "extended_inputs", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "extended_outputs", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "mock_bytesIO", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "_stage_configuration", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "desired_s3_uri", "type": "str"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "jar_file", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "submit_deps", "type": "List[Optional[Union[Any, str]]]"}, {"lineNumber": 323, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 399, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "terminate_history_server", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "mock_ecr_login", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "start_history_server", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "mock_get_notebook_instance_domain", "type": "Any"}, {"lineNumber": 462, "col_offset": 13, "nodeName": "_prepare_history_server_env_variables", "type": "Any"}, {"lineNumber": 462, "col_offset": 70, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 465, "col_offset": 59, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 466, "col_offset": 35, "nodeName": "REGION", "type": "str"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "mock_get_notebook_instance_domain", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "_prepare_history_server_env_variables", "type": "Any"}, {"lineNumber": 475, "col_offset": 70, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 477, "col_offset": 59, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 481, "col_offset": 35, "nodeName": "REGION", "type": "str"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "mock_get_notebook_instance_domain", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "_prepare_history_server_env_variables", "type": "Any"}, {"lineNumber": 489, "col_offset": 59, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 490, "col_offset": 35, "nodeName": "REGION", "type": "str"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "mock_is_file", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "_is_notebook_instance", "type": "Any"}, {"lineNumber": 506, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 508, "col_offset": 55, "nodeName": "expected", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "mock_is_notebook_instance", "type": "Any"}, {"lineNumber": 559, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 560, "col_offset": 4, "nodeName": "mock_is_history_server_started", "type": "Any"}, {"lineNumber": 560, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 565, "col_offset": 59, "nodeName": "cm", "type": "Any"}, {"lineNumber": 568, "col_offset": 11, "nodeName": "expected", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "mock_stage_submit_deps", "type": "Any"}, {"lineNumber": 622, "col_offset": 13, "nodeName": "_handle_script_dependencies", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "command", "type": "Any"}, {"lineNumber": 627, "col_offset": 11, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 640, "col_offset": 4, "nodeName": "mock_urlopen", "type": "Any"}, {"lineNumber": 640, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 641, "col_offset": 62, "nodeName": "expected", "type": "Any"}, {"lineNumber": 645, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 648, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 648, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 648, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 659, "col_offset": 72, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 662, "col_offset": 59, "nodeName": "expected_result", "type": "Dict[str, str]"}, {"lineNumber": 664, "col_offset": 72, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "mock_stage_submit_deps", "type": "Any"}, {"lineNumber": 708, "col_offset": 43, "nodeName": "processing_input", "type": "Any"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "mock_generate_current_job_name", "type": "Any"}, {"lineNumber": 711, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "mock_stage_submit_deps", "type": "Any"}, {"lineNumber": 817, "col_offset": 43, "nodeName": "processing_input", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "mock_generate_current_job_name", "type": "Any"}, {"lineNumber": 820, "col_offset": 26, "nodeName": "SparkJarProcessor", "type": "Any"}, {"lineNumber": 830, "col_offset": 7, "nodeName": "expected", "type": "Any"}, {"lineNumber": 830, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 870, "col_offset": 21, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 896, "col_offset": 21, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "down", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 914, "col_offset": 21, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 914, "col_offset": 36, "nodeName": "args", "type": "Dict[str, str]"}, {"lineNumber": 915, "col_offset": 13, "nodeName": "_get_run_history_server_cmd", "type": "Any"}, {"lineNumber": 922, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 922, "col_offset": 21, "nodeName": "expected_cmd", "type": "str"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "SPARK_EVENT_LOGS_S3_URI", "type": "str"}, {"lineNumber": 53, "col_offset": 59, "nodeName": "REGION", "type": "str"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "boto_mock", "type": "unittest.mock.MagicMock"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "REGION", "type": "str"}, {"lineNumber": 61, "col_offset": 75, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "resolve", "type": "Callable"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "jars_dir", "type": "str"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "tmp", "type": "IO[bytes]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "tmp", "type": "IO[bytes]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "_validate_configuration", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "spark_processor_base", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "mock_super_run", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "spark_processor_base", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "expected", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "mock_s3_upload", "type": "Any"}, {"lineNumber": 285, "col_offset": 13, "nodeName": "serialized_configuration", "type": "io.BytesIO"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "desired_s3_uri", "type": "str"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 320, "col_offset": 7, "nodeName": "config", "type": "Any"}, {"lineNumber": 324, "col_offset": 40, "nodeName": "e", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "_stage_submit_deps", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "submit_deps", "type": "Optional[List[Optional[Union[Any, str]]]]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "expected_source", "type": "str"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "down", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "mock_pull_image", "type": "Any"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "mock_prepare_history_server_env_variables", "type": "Any"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "mock_history_server_run", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "mock_check_history_server", "type": "Any"}, {"lineNumber": 462, "col_offset": 13, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 464, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 465, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 466, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 475, "col_offset": 13, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 476, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 476, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 477, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 487, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 490, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "_get_network_config", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "_get_notebook_instance_domain", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "mock_get_notebook_instance_domain", "type": "Any"}, {"lineNumber": 563, "col_offset": 57, "nodeName": "config", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "_check_history_server", "type": "Any"}, {"lineNumber": 568, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 621, "col_offset": 43, "nodeName": "config", "type": "Any"}, {"lineNumber": 621, "col_offset": 66, "nodeName": "config", "type": "Any"}, {"lineNumber": 622, "col_offset": 13, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 623, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 623, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 626, "col_offset": 11, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 626, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "expected", "type": "Any"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "_is_history_server_started", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 645, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "_validate_s3_uri", "type": "Any"}, {"lineNumber": 648, "col_offset": 22, "nodeName": "e", "type": "Any"}, {"lineNumber": 660, "col_offset": 45, "nodeName": "creds", "type": "unittest.mock.MagicMock"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "_config_aws_credentials", "type": "Any"}, {"lineNumber": 665, "col_offset": 44, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "_config_aws_credentials", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 827, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 874, "col_offset": 4, "nodeName": "mock_down", "type": "Any"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "mock_subprocess_popen", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 898, "col_offset": 4, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "mock_subprocess_call", "type": "Any"}, {"lineNumber": 915, "col_offset": 13, "nodeName": "history_server", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "spark", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "_validate_configuration", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "config", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 266, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "submit_deps_dict", "type": "Dict[Optional[str], Optional[Union[str, Any]]]"}, {"lineNumber": 321, "col_offset": 56, "nodeName": "submit_dep", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "_stage_submit_deps", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "submit_deps", "type": "Optional[List[Optional[Union[Any, str]]]]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "e", "type": "Any"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "expected", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "input_channel", "type": "Any"}, {"lineNumber": 335, "col_offset": 19, "nodeName": "spark_opt", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "source", "type": "Any"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "expected_source", "type": "str"}, {"lineNumber": 339, "col_offset": 19, "nodeName": "spark_opt", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "_retrieve_image_uri", "type": "Any"}, {"lineNumber": 410, "col_offset": 27, "nodeName": "_retrieve_image_uri", "type": "Any"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "mock_history_server", "type": "Any"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "arg_remote_domain_name", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "arg_event_logs_s3_uri", "type": "Any"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "arg_event_logs_s3_uri", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "arg_remote_domain_name", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "arg_event_logs_s3_uri", "type": "Any"}, {"lineNumber": 508, "col_offset": 11, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 568, "col_offset": 23, "nodeName": "cm", "type": "Any"}, {"lineNumber": 641, "col_offset": 11, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 645, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 662, "col_offset": 11, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 667, "col_offset": 15, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 712, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 712, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 713, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "mock_super_run", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 831, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 831, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "spark_jar_processor", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "mock_super_run", "type": "Any"}, {"lineNumber": 850, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 901, "col_offset": 9, "nodeName": "call", "type": "Any"}, {"lineNumber": 901, "col_offset": 53, "nodeName": "call", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "name", "type": "str"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "spark", "type": "Any"}, {"lineNumber": 321, "col_offset": 40, "nodeName": "submit_dep", "type": "Any"}, {"lineNumber": 321, "col_offset": 70, "nodeName": "config", "type": "Any"}, {"lineNumber": 324, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 325, "col_offset": 63, "nodeName": "config", "type": "Any"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "input_channel", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 410, "col_offset": 27, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 465, "col_offset": 18, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 488, "col_offset": 18, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "_HistoryServer", "type": "Any"}, {"lineNumber": 712, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 713, "col_offset": 12, "nodeName": "py_spark_processor", "type": "Any"}, {"lineNumber": 722, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 723, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 724, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 725, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 730, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 831, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 832, "col_offset": 12, "nodeName": "spark_jar_processor", "type": "Any"}, {"lineNumber": 841, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 842, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 843, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 844, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 845, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 849, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "dir", "type": "tempfile.TemporaryDirectory[nothing]"}, {"lineNumber": 714, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 715, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 716, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 717, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 718, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 833, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 834, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 835, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 836, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 837, "col_offset": 23, "nodeName": "config", "type": "Any"}]