[{"lineNumber": 29, "col_offset": 0, "nodeName": "test_renamed_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_removed_arg", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_removed_kwargs", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_removed_function", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "test_removed_function_from_instance", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "test_removed_function_from_class", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_deprecated_function", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "test_deprecated_serialize", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_deprecated_deserialize", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_deprecated_class", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "val", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "arg", "type": "None"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "kwarg", "type": "Dict[str, int]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "removed", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "B", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "b", "type": "int"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "renamed_kwargs", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "removed_arg", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "arg", "type": "None"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "arg", "type": "str"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "removed_kwargs", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "kwarg", "type": "Dict[str, int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "kwarg", "type": "Dict[str, int]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "removed_function", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "a", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "removed_function", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "deprecated_function", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "deprecated_serialize", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "deprecated_deserialize", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "deprecated_class", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "b", "type": "int"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "renamed_kwargs", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "removed_arg", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "arg", "type": "str"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "removed_kwargs", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "kwarg", "type": "Dict[str, int]"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "removed", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "removed_function", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "b", "type": "int"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, int]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "deprecated", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "serialize", "type": "Any"}, {"lineNumber": 109, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "deserialize", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "a", "type": "Any"}]