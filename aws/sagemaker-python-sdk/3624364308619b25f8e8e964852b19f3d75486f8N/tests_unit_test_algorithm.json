[{"lineNumber": 157, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_valid_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_bad_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_valid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_invalid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "test_algorithm_distributed_training_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 536, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 572, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_categorical_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 680, "col_offset": 0, "nodeName": "test_algorithm_required_hyperparameters_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 768, "col_offset": 0, "nodeName": "test_algorithm_required_free_text_hyperparameter_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 835, "col_offset": 0, "nodeName": "test_algorithm_create_transformer_without_completed_training_job", "type": "Callable[[Any], Any]"}, {"lineNumber": 876, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_no_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 892, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_with_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 910, "col_offset": 0, "nodeName": "test_algorithm_encrypt_inter_container_traffic", "type": "Callable[[Any], Any]"}, {"lineNumber": 929, "col_offset": 0, "nodeName": "test_algorithm_no_required_hyperparameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 948, "col_offset": 0, "nodeName": "test_algorithm_attach_from_hyperparameter_tuning", "type": "Callable[[], Any]"}, {"lineNumber": 1020, "col_offset": 0, "nodeName": "test_algorithm_supported_with_spot_instances", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 520, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 552, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 553, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 589, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 623, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 624, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 657, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 658, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]]"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 700, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 701, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 751, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 752, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 787, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 788, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[bool, str]]]"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 826, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 855, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 868, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 870, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 894, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 906, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 912, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 925, "col_offset": 4, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 925, "col_offset": 38, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 931, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 949, "col_offset": 4, "nodeName": "session", "type": "mock.Mock"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "job_name", "type": "str"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "algo_arn", "type": "str"}, {"lineNumber": 952, "col_offset": 4, "nodeName": "role_arn", "type": "str"}, {"lineNumber": 953, "col_offset": 4, "nodeName": "instance_count", "type": "int"}, {"lineNumber": 954, "col_offset": 4, "nodeName": "instance_type", "type": "str"}, {"lineNumber": 955, "col_offset": 4, "nodeName": "train_volume_size", "type": "int"}, {"lineNumber": 956, "col_offset": 4, "nodeName": "input_mode", "type": "str"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, List[nothing]]"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 959, "col_offset": 63, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 1009, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 213, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 296, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 316, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 353, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 394, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 415, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 422, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 443, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 450, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 471, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 490, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 519, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 522, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 552, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 555, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 591, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 626, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 657, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 660, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 662, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 700, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 700, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 703, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 705, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 754, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 787, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 787, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 790, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 813, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 815, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 823, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 823, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 823, "col_offset": 49, "nodeName": "session", "type": "Any"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 826, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 828, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 830, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 830, "col_offset": 22, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 830, "col_offset": 35, "nodeName": "Transformer", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 832, "col_offset": 11, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 837, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 839, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 847, "col_offset": 40, "nodeName": "error", "type": "Any"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 855, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 857, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 859, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 867, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 867, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 867, "col_offset": 49, "nodeName": "session", "type": "Any"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 869, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 870, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "env", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 878, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 880, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 889, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 894, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 894, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 896, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 906, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 907, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 912, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 912, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 913, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 914, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 916, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 925, "col_offset": 38, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 926, "col_offset": 11, "nodeName": "encrypt_inter_container_traffic", "type": "Any"}, {"lineNumber": 931, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 931, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 934, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 939, "col_offset": 11, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 949, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "list_tags", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "describe_algorithm", "type": "Any"}, {"lineNumber": 961, "col_offset": 27, "nodeName": "job_name", "type": "str"}, {"lineNumber": 981, "col_offset": 19, "nodeName": "role_arn", "type": "str"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "attach", "type": "Any"}, {"lineNumber": 1009, "col_offset": 42, "nodeName": "job_name", "type": "str"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "algorithm_arn", "type": "Any"}, {"lineNumber": 1011, "col_offset": 38, "nodeName": "algo_arn", "type": "str"}, {"lineNumber": 1012, "col_offset": 11, "nodeName": "role", "type": "Any"}, {"lineNumber": 1012, "col_offset": 29, "nodeName": "role_arn", "type": "str"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "train_instance_count", "type": "Any"}, {"lineNumber": 1013, "col_offset": 45, "nodeName": "instance_count", "type": "int"}, {"lineNumber": 1014, "col_offset": 11, "nodeName": "train_instance_type", "type": "Any"}, {"lineNumber": 1014, "col_offset": 44, "nodeName": "instance_type", "type": "str"}, {"lineNumber": 1015, "col_offset": 11, "nodeName": "train_volume_size", "type": "Any"}, {"lineNumber": 1015, "col_offset": 42, "nodeName": "train_volume_size", "type": "int"}, {"lineNumber": 1016, "col_offset": 11, "nodeName": "input_mode", "type": "Any"}, {"lineNumber": 1016, "col_offset": 35, "nodeName": "input_mode", "type": "str"}, {"lineNumber": 1017, "col_offset": 11, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 1017, "col_offset": 42, "nodeName": "session", "type": "mock.Mock"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 1022, "col_offset": 50, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 1024, "col_offset": 11, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "module"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 182, "col_offset": 68, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 245, "col_offset": 68, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 283, "col_offset": 68, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 316, "col_offset": 68, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 319, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 394, "col_offset": 68, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 422, "col_offset": 68, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 429, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 437, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 443, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 450, "col_offset": 68, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 453, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 471, "col_offset": 68, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 487, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 490, "col_offset": 68, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 493, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 493, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 529, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 533, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 555, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 555, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 562, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 565, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 568, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 568, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 591, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 598, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 602, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 603, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 604, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 623, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 626, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 633, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 636, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 636, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 639, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 639, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 658, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 660, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 660, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 667, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 670, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 671, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 673, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 673, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 676, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 676, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 700, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 703, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 703, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 710, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 714, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 714, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 752, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 754, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 754, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 761, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 787, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 790, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 797, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 802, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 806, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 806, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 813, "col_offset": 68, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 820, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 828, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 832, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 837, "col_offset": 68, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 844, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 847, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 855, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 857, "col_offset": 68, "nodeName": "response", "type": "Any"}, {"lineNumber": 864, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 872, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 878, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 878, "col_offset": 68, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 885, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 888, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 894, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 896, "col_offset": 68, "nodeName": "response", "type": "Any"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 906, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 912, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 914, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 914, "col_offset": 68, "nodeName": "response", "type": "Any"}, {"lineNumber": 921, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 931, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 934, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 934, "col_offset": 68, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 944, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 962, "col_offset": 87, "nodeName": "job_name", "type": "str"}, {"lineNumber": 964, "col_offset": 10, "nodeName": "job_name", "type": "str"}, {"lineNumber": 977, "col_offset": 52, "nodeName": "algo_arn", "type": "str"}, {"lineNumber": 977, "col_offset": 83, "nodeName": "input_mode", "type": "str"}, {"lineNumber": 1002, "col_offset": 28, "nodeName": "instance_type", "type": "str"}, {"lineNumber": 1003, "col_offset": 29, "nodeName": "instance_count", "type": "int"}, {"lineNumber": 1004, "col_offset": 30, "nodeName": "train_volume_size", "type": "int"}, {"lineNumber": 1009, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 1009, "col_offset": 70, "nodeName": "session", "type": "mock.Mock"}, {"lineNumber": 1010, "col_offset": 11, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 1011, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1012, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1013, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1014, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1015, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1016, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1017, "col_offset": 11, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 1022, "col_offset": 68, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]], List[Dict[str, Union[bool, str]]]]], datetime.datetime, bool]]"}, {"lineNumber": 1031, "col_offset": 26, "nodeName": "session", "type": "Any"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 319, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 409, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 453, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 493, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "session", "type": "Any"}, {"lineNumber": 565, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 568, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 636, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 639, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 673, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 676, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 714, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 802, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 806, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 847, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 849, "col_offset": 82, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 849, "col_offset": 86, "nodeName": "error", "type": "Any"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "session", "type": "mock.Mock"}, {"lineNumber": 959, "col_offset": 4, "nodeName": "session", "type": "mock.Mock"}, {"lineNumber": 1010, "col_offset": 11, "nodeName": "estimator", "type": "Any"}]