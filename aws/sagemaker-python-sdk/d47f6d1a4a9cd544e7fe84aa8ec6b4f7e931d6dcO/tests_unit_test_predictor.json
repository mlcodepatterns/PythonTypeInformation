[{"lineNumber": 29, "col_offset": 0, "nodeName": "test_json_serializer_numpy_valid", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_json_serializer_numpy_valid_2dimensional", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_json_serializer_numpy_invalid_empty", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "test_json_serializer_python_array", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_json_serializer_python_invalid_empty", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_json_serializer_csv_buffer", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_csv_serializer_str", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_csv_serializer_python_array", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_csv_serializer_numpy_valid", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "test_csv_serializer_numpy_valid_2dimensional", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_csv_serializer_list_of_str", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "test_csv_serializer_list_of_list", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "test_csv_serializer_list_of_empty", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "test_csv_serializer_numpy_invalid_empty", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_csv_serializer_python_invalid_empty", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "test_csv_serializer_csv_reader", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "test_json_deserializer_array", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "test_json_deserializer_2dimensional", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_json_deserializer_invalid_data", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_bytes_deserializer", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_string_deserializer", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_stream_deserializer", "type": "Callable[[], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "test_numpy_deser_from_csv", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_numpy_deser_from_csv_ragged", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_numpy_deser_from_csv_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "test_numpy_deser_from_json", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "test_numpy_deser_from_json_ragged", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "test_numpy_deser_from_json_alpha", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "empty_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_predict_call_pass_through", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "test_predict_call_with_headers", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 0, "nodeName": "json_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "test_predict_call_with_headers_and_json", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "ret_csv_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "test_predict_call_with_headers_and_csv", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 207, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 208, "col_offset": 0, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "CSV_CONTENT_TYPE", "type": "str"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "RETURN_VALUE", "type": "int"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "CSV_RETURN_VALUE", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "csv_file_path", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "original", "type": "str"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "csv_file_path", "type": "str"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "read", "type": "mock.Mock"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "close", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "data", "type": "str"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "called", "type": "bool"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "data", "type": "str"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "called", "type": "bool"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "read", "type": "mock.Mock"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "close", "type": "mock.Mock"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "called", "type": "bool"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "read", "type": "mock.Mock"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "close", "type": "mock.Mock"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "called", "type": "bool"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "validation_value", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "original", "type": "str"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "validation_data", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "json_deserializer", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "json_deserializer", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "stream", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "content_type", "type": "Any"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "read", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "content_type", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 215, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "empty_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "RealTimePredictor", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 228, "col_offset": 44, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "data", "type": "str"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "expected_request_args", "type": "Dict[str, str]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "RETURN_VALUE", "type": "int"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "empty_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "RealTimePredictor", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 247, "col_offset": 44, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "data", "type": "str"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "data", "type": "str"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "expected_request_args", "type": "Dict[str, str]"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "RETURN_VALUE", "type": "int"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 270, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 271, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "json_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "RealTimePredictor", "type": "Any"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "expected_request_args", "type": "Dict[str, str]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 308, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 314, "col_offset": 51, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "ret_csv_sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "RealTimePredictor", "type": "Any"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 322, "col_offset": 44, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "predict", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 332, "col_offset": 18, "nodeName": "CSV_CONTENT_TYPE", "type": "str"}, {"lineNumber": 334, "col_offset": 23, "nodeName": "CSV_CONTENT_TYPE", "type": "str"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "ENDPOINT", "type": "str"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "invoke_endpoint", "type": "mock.Mock"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "expected_request_args", "type": "Dict[str, str]"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "CSV_RETURN_VALUE", "type": "str"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "error", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "csv_file_path", "type": "str"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "read", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "validation_value", "type": "str"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "invalid_input", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "error", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "csv_file_path", "type": "str"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "read", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "validation_data", "type": "str"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "json_deserializer", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "error", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "BytesDeserializer", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "StringDeserializer", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "StreamDeserializer", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "stream", "type": "Any"}, {"lineNumber": 173, "col_offset": 10, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "error", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 10, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 10, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "RETURN_VALUE", "type": "int"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "ims", "type": "mock.Mock"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 270, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "json_serializer", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 308, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 312, "col_offset": 51, "nodeName": "CSV_RETURN_VALUE", "type": "str"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "CSV_CONTENT_TYPE", "type": "str"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "csv_serializer", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "sagemaker_runtime_client", "type": "mock.Mock"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "csv_file", "type": "TextIO"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "io", "type": "module"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "io", "type": "module"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "io", "type": "module"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "io", "type": "module"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "io", "type": "module"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "io", "type": "module"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "NumpyDeserializer", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "BytesIO", "type": "Type[io.BytesIO]"}, {"lineNumber": 184, "col_offset": 40, "nodeName": "io", "type": "module"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "io", "type": "module"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "io", "type": "module"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "io", "type": "module"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 102, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 277, "col_offset": 78, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 278, "col_offset": 85, "nodeName": "DEFAULT_CONTENT_TYPE", "type": "str"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "json", "type": "module"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "json", "type": "module"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "RETURN_VALUE", "type": "int"}, {"lineNumber": 315, "col_offset": 78, "nodeName": "response_body", "type": "mock.Mock"}, {"lineNumber": 316, "col_offset": 85, "nodeName": "CSV_CONTENT_TYPE", "type": "str"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "sagemaker_session", "type": "mock.Mock"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "io", "type": "module"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "io", "type": "module"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "json", "type": "module"}, {"lineNumber": 274, "col_offset": 63, "nodeName": "RETURN_VALUE", "type": "int"}]