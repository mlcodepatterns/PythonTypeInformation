[{"lineNumber": 35, "col_offset": 0, "nodeName": "test_get_config_value", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "test_deferred_error", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_bad_import", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_name_from_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_name_from_base_short", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_unique_name_from_base", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_unique_name_from_base_truncated", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "test_to_str_with_native_string", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "test_to_str_with_unicode_string", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "test_name_from_tuning_arn", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "test_name_from_training_arn", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_true", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_false", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_prev_missing", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_prev_none", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_current_missing", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_secondary_training_status_changed_empty", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "test_secondary_training_status_message_status_changed", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_secondary_training_status_message_status_not_changed", "type": "Callable[[], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "test_secondary_training_status_message_prev_missing", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_download_folder", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "test_download_folder_points_to_single_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_download_file", "type": "Callable[[], Any]"}, {"lineNumber": 267, "col_offset": 0, "nodeName": "test_create_tar_file_with_provided_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "NAME", "type": "str"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "MESSAGE", "type": "str"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "de", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "called_once", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "called_once", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "value", "type": "str"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "value", "type": "str"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "arn", "type": "str"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "arn", "type": "str"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "changed", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, str]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "validation_data", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "key", "type": "str"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 202, "col_offset": 47, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "key", "type": "str"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "s3_files", "type": "List[mock.Mock]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "return_value", "type": "List[mock.Mock]"}, {"lineNumber": 206, "col_offset": 79, "nodeName": "s3_files", "type": "List[mock.Mock]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, str]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "return_value", "type": "str"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "key", "type": "str"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "s3_files", "type": "List[mock.Mock]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "return_value", "type": "List[mock.Mock]"}, {"lineNumber": 239, "col_offset": 79, "nodeName": "s3_files", "type": "List[mock.Mock]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "return_value", "type": "Dict[str, str]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "bucket_mock", "type": "mock.Mock"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 258, "col_offset": 51, "nodeName": "bucket_mock", "type": "mock.Mock"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "session", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "open", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "__enter__", "type": "mock.Mock"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "__exit__", "type": "mock.Mock"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "file_list", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "open", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "__enter__", "type": "mock.Mock"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "__exit__", "type": "mock.Mock"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "file_list", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "path", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "DeferredError", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "name_from_base", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "NAME", "type": "str"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "sagemaker_timestamp", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "name_from_base", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "NAME", "type": "str"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "sagemaker_short_timestamp", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "match", "type": "Callable"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "value", "type": "str"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "value", "type": "str"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "extract_name_from_job_arn", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "arn", "type": "str"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "extract_name_from_job_arn", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "arn", "type": "str"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 128, "col_offset": 76, "nodeName": "TRAINING_JOB_DESCRIPTION_2", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 133, "col_offset": 76, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "secondary_training_status_changed", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "TRAINING_JOB_DESCRIPTION_EMPTY", "type": "Dict[str, List[nothing]]"}, {"lineNumber": 153, "col_offset": 80, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "changed", "type": "Any"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "now", "type": "Callable"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "MESSAGE", "type": "str"}, {"lineNumber": 165, "col_offset": 108, "nodeName": "expected", "type": "str"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "now", "type": "Callable"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "MESSAGE", "type": "str"}, {"lineNumber": 176, "col_offset": 104, "nodeName": "expected", "type": "str"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "now", "type": "Callable"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "MESSAGE", "type": "str"}, {"lineNumber": 187, "col_offset": 80, "nodeName": "expected", "type": "str"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "get_caller_identity", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "Session", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "bucket_name", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "bucket_name", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "validation_data", "type": "mock.Mock"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "validation_data", "type": "mock.Mock"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "filter", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "Object", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "download_folder", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 212, "col_offset": 68, "nodeName": "session", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "download_folder", "type": "Any"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 221, "col_offset": 69, "nodeName": "session", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "get_caller_identity", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "Session", "type": "Any"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "bucket_name", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "filter", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "Object", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "download_folder", "type": "Any"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 245, "col_offset": 89, "nodeName": "session", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 249, "col_offset": 44, "nodeName": "calls", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "reset_mock", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "get_caller_identity", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "Bucket", "type": "Any"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "Session", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 262, "col_offset": 54, "nodeName": "session", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "assert_called_with", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "create_tar_file", "type": "Any"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "file_list", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "create_tar_file", "type": "Any"}, {"lineNumber": 284, "col_offset": 43, "nodeName": "file_list", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "get_config_value", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, str]]]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "get_config_value", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, str]]]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "get_config_value", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, str]]]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "get_config_value", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "something", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "unique_name_from_base", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "unique_name_from_base", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "value", "type": "str"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "value", "type": "str"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "MESSAGE", "type": "str"}, {"lineNumber": 116, "col_offset": 72, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 119, "col_offset": 84, "nodeName": "STATUS", "type": "str"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "secondary_training_status_message", "type": "Any"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 165, "col_offset": 73, "nodeName": "TRAINING_JOB_DESCRIPTION_EMPTY", "type": "Dict[str, List[nothing]]"}, {"lineNumber": 169, "col_offset": 10, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "secondary_training_status_message", "type": "Any"}, {"lineNumber": 176, "col_offset": 45, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 176, "col_offset": 73, "nodeName": "TRAINING_JOB_DESCRIPTION_2", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "secondary_training_status_message", "type": "Any"}, {"lineNumber": 187, "col_offset": 45, "nodeName": "TRAINING_JOB_DESCRIPTION_1", "type": "Dict[str, Union[List[Dict[str, str]], datetime.datetime]]"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "validation_data", "type": "mock.Mock"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "objects", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "call", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "call", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 231, "col_offset": 45, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "train_data", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "objects", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "call", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "filter", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 259, "col_offset": 45, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "utils", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "utils", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "de", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "DeferredError", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 195, "col_offset": 73, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 231, "col_offset": 73, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "obj_mock", "type": "mock.Mock"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "objects", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "client", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 259, "col_offset": 73, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "bucket_mock", "type": "mock.Mock"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "sagemaker", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "Bucket", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "Bucket", "type": "Any"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "mktime", "type": "Callable[[Union[Tuple[int, int, int, int, int, int, int, int, int], time.struct_time]], float]"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "Bucket", "type": "Any"}, {"lineNumber": 250, "col_offset": 43, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "time", "type": "module"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "time", "type": "module"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "time", "type": "module"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "timetuple", "type": "Callable[[], time.struct_time]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "resource", "type": "Any"}, {"lineNumber": 161, "col_offset": 46, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 172, "col_offset": 46, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "now", "type": "datetime.datetime"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "resource", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "boto_mock", "type": "mock.Mock"}]