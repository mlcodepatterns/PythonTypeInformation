[{"lineNumber": 34, "col_offset": 0, "nodeName": "sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_init_enable_network_isolation", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_init_all_pca_hyperparameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_init_estimator_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "test_data_location_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "test_data_location_does_not_call_default_bucket", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_prepare_for_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "test_prepare_for_training_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_prepare_for_training_list_no_train_channel", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 0, "nodeName": "test_prepare_for_training_encrypt", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_fit_ndarray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "test_fit_pass_experiment_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "test_build_shards", "type": "Callable[[], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "test_upload_numpy_to_s3_shards", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "test_file_system_record_set_efs_default_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 0, "nodeName": "test_file_system_record_set_efs_customized_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "test_file_system_record_set_fsx_default_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 381, "col_offset": 0, "nodeName": "test_file_system_record_set_fsx_customized_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 414, "col_offset": 0, "nodeName": "test_file_system_record_set_data_channel", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "REGION", "type": "str"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "TIMESTAMP", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "boto_region_name", "type": "str"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "REGION", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "data_location", "type": "str"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "records", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "resource", "type": "mock.Mock"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "called_args", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "shards", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "shards", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "put", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "num_objects", "type": "int"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 429, "col_offset": 35, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 430, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "expected", "type": "Dict[str, mock.Mock]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 85, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "algorithm_mode", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "extra_components", "type": "Any"}, {"lineNumber": 110, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "instance_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "instance_count", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "role", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "max_run", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "data_location", "type": "Any"}, {"lineNumber": 125, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "data_location", "type": "str"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "data_location", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "data_location", "type": "str"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 143, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "records", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "mini_batch_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "mini_batch_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 173, "col_offset": 38, "nodeName": "ex", "type": "Any"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 186, "col_offset": 9, "nodeName": "mock_upload", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 200, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "boto_session", "type": "Any"}, {"lineNumber": 201, "col_offset": 46, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 204, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 232, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "shards", "type": "Any"}, {"lineNumber": 255, "col_offset": 13, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "expected", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "shards", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "shards", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "upload_numpy_to_s3_shards", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 276, "col_offset": 78, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 85, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "reset", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "upload_numpy_to_s3_shards", "type": "Any"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 283, "col_offset": 69, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 76, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 313, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 375, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 408, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "data_channel", "type": "Any"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 432, "col_offset": 21, "nodeName": "expected", "type": "Dict[str, mock.Mock]"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "REGION", "type": "str"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "REGION", "type": "str"}, {"lineNumber": 45, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "returned_job_description", "type": "Dict[str, Union[Dict[str, str], str, Dict[str, int], Dict[str, Union[str, int]], Dict[str, Any]]]"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 89, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 115, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 125, "col_offset": 71, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "data_location", "type": "str"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "default_bucket", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 143, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "pca", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 55, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 155, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 167, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 48, "nodeName": "ex", "type": "Any"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 180, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "call", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 191, "col_offset": 50, "nodeName": "encrypt", "type": "bool"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "mock_upload", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 201, "col_offset": 64, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 208, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "put", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "map", "type": "Callable"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 257, "col_offset": 30, "nodeName": "out", "type": "Any"}, {"lineNumber": 257, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "make_all_put_calls", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "make_all_put_calls", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 359, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 411, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "retrieve", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "pca", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "pca", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "make_upload_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 59, "nodeName": "make_upload_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "pca", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "called_args", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 67, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "j", "type": "int"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 274, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 278, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "image_uris", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 268, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 269, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 274, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 274, "col_offset": 56, "nodeName": "num_objects", "type": "int"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}]