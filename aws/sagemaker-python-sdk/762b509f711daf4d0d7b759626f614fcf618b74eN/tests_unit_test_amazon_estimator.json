[{"lineNumber": 38, "col_offset": 0, "nodeName": "sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "test_gov_ecr_uri", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "test_init_enable_network_isolation", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_init_all_pca_hyperparameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "test_init_estimator_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "test_data_location_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_data_location_does_not_call_default_bucket", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "test_prepare_for_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "test_prepare_for_training_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 0, "nodeName": "test_prepare_for_training_list_no_train_channel", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_prepare_for_training_encrypt", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "test_fit_ndarray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 0, "nodeName": "test_fit_pass_experiment_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 0, "nodeName": "test_build_shards", "type": "Callable[[], Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "test_upload_numpy_to_s3_shards", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "test_file_system_record_set_efs_default_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 335, "col_offset": 0, "nodeName": "test_file_system_record_set_efs_customized_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "test_file_system_record_set_fsx_default_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 398, "col_offset": 0, "nodeName": "test_file_system_record_set_fsx_customized_parameters", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 0, "nodeName": "test_file_system_record_set_data_channel", "type": "Callable[[], Any]"}, {"lineNumber": 452, "col_offset": 0, "nodeName": "test_get_xgboost_image_uri", "type": "Callable[[], Any]"}, {"lineNumber": 494, "col_offset": 0, "nodeName": "test_get_xgboost_image_uri_warning_with_legacy", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 0, "nodeName": "test_get_xgboost_image_uri_warning_with_no_sagemaker_version", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 0, "nodeName": "test_get_xgboost_image_uri_no_warning_with_latest", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 0, "nodeName": "test_get_xgboost_image_uri_throws_error_for_unsupported_version", "type": "Callable[[], Any]"}, {"lineNumber": 519, "col_offset": 0, "nodeName": "test_regitry_throws_error_if_mapping_does_not_exist_for_lda", "type": "Callable[[], Any]"}, {"lineNumber": 525, "col_offset": 0, "nodeName": "test_regitry_throws_error_if_mapping_does_not_exist_for_default_algorithm", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 0, "nodeName": "test_is_latest_xgboost_version", "type": "Callable[[], Any]"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "test_get_image_uri_warn", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "REGION", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "TIMESTAMP", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "boto_region_name", "type": "str"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "REGION", "type": "str"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "data_location", "type": "str"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "records", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "resource", "type": "mock.Mock"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "called_args", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "shards", "type": "Any"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "shards", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "put", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "num_objects", "type": "int"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 373, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 433, "col_offset": 4, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 434, "col_offset": 4, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "num_records", "type": "int"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "actual", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "expected", "type": "Dict[str, mock.Mock]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "updated_xgb_image_uri", "type": "Any"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "updated_xgb_image_uri_v2", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "version", "type": "Any"}, {"lineNumber": 532, "col_offset": 19, "nodeName": "XGBOOST_SUPPORTED_VERSIONS", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 41, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 113, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "num_components", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "algorithm_mode", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "extra_components", "type": "Any"}, {"lineNumber": 127, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "train_instance_type", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "train_instance_count", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "role", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "train_max_run", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "data_location", "type": "Any"}, {"lineNumber": 142, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "data_location", "type": "str"}, {"lineNumber": 149, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "data_location", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "data_location", "type": "str"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "called", "type": "Any"}, {"lineNumber": 160, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "records", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "mini_batch_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "mini_batch_size", "type": "Any"}, {"lineNumber": 184, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 203, "col_offset": 9, "nodeName": "mock_upload", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "boto_session", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 221, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "assert_any_call", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "call_count", "type": "Any"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 247, "col_offset": 18, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "PCA", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "shards", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "expected", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "shards", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "shards", "type": "Any"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "return_value", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "upload_numpy_to_s3_shards", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 293, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 293, "col_offset": 78, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 85, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "reset", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "upload_numpy_to_s3_shards", "type": "Any"}, {"lineNumber": 300, "col_offset": 33, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 300, "col_offset": 69, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 76, "nodeName": "labels", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "assert_has_calls", "type": "Any"}, {"lineNumber": 311, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 329, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 342, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 362, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 364, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 375, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 392, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 394, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 405, "col_offset": 13, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 425, "col_offset": 46, "nodeName": "expected_input_config", "type": "Dict[str, Dict[str, Dict[str, str]]]"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "num_records", "type": "Any"}, {"lineNumber": 426, "col_offset": 33, "nodeName": "num_records", "type": "int"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 427, "col_offset": 33, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "channel", "type": "Any"}, {"lineNumber": 437, "col_offset": 17, "nodeName": "FileSystemRecordSet", "type": "Any"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "data_channel", "type": "Any"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "file_system_input", "type": "mock.Mock"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "expected", "type": "Dict[str, mock.Mock]"}, {"lineNumber": 453, "col_offset": 27, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 453, "col_offset": 41, "nodeName": "REGION", "type": "str"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 455, "col_offset": 41, "nodeName": "REGION", "type": "str"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 457, "col_offset": 41, "nodeName": "REGION", "type": "str"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "legacy_xgb_image_uri", "type": "Any"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 460, "col_offset": 42, "nodeName": "REGION", "type": "str"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "updated_xgb_image_uri", "type": "Any"}, {"lineNumber": 466, "col_offset": 31, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 466, "col_offset": 45, "nodeName": "REGION", "type": "str"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "updated_xgb_image_uri_v2", "type": "Any"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 495, "col_offset": 18, "nodeName": "REGION", "type": "str"}, {"lineNumber": 496, "col_offset": 68, "nodeName": "text", "type": "Any"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "REGION", "type": "str"}, {"lineNumber": 501, "col_offset": 68, "nodeName": "text", "type": "Any"}, {"lineNumber": 505, "col_offset": 4, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 505, "col_offset": 18, "nodeName": "REGION", "type": "str"}, {"lineNumber": 506, "col_offset": 72, "nodeName": "text", "type": "Any"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 520, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 526, "col_offset": 38, "nodeName": "error", "type": "Any"}, {"lineNumber": 544, "col_offset": 4, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 545, "col_offset": 11, "nodeName": "warning_message", "type": "str"}, {"lineNumber": 545, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "REGION", "type": "str"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "REGION", "type": "str"}, {"lineNumber": 49, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "returned_job_description", "type": "Dict[str, Union[Dict[str, str], str, Dict[str, int], Dict[str, Union[str, int]], Dict[str, Any]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 96, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 132, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "data_location", "type": "str"}, {"lineNumber": 153, "col_offset": 10, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "default_bucket", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 160, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "pca", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 55, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 172, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 172, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 184, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "ex", "type": "Any"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 197, "col_offset": 72, "nodeName": "COMMON_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "patch", "type": "mock._patcher"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "call", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 208, "col_offset": 50, "nodeName": "encrypt", "type": "bool"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "mock_upload", "type": "Any"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 218, "col_offset": 64, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 225, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "put", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "pca", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 37, "nodeName": "map", "type": "Callable"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "out", "type": "Any"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "expected", "type": "Any"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "_build_shards", "type": "Any"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "Object", "type": "mock.Mock"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "make_all_put_calls", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "mock_put", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "make_all_put_calls", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 330, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 378, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 408, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "file_system_input", "type": "Any"}, {"lineNumber": 426, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 428, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "file_system_id", "type": "str"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "file_system_type", "type": "str"}, {"lineNumber": 440, "col_offset": 23, "nodeName": "directory_path", "type": "str"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "num_records", "type": "int"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "feature_dim", "type": "int"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "record_set", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 477, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 481, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 489, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 496, "col_offset": 68, "nodeName": "caplog", "type": "Any"}, {"lineNumber": 501, "col_offset": 68, "nodeName": "caplog", "type": "Any"}, {"lineNumber": 506, "col_offset": 72, "nodeName": "caplog", "type": "Any"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 510, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 512, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 512, "col_offset": 71, "nodeName": "error", "type": "Any"}, {"lineNumber": 514, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "get_image_uri", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "REGION", "type": "str"}, {"lineNumber": 516, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 516, "col_offset": 78, "nodeName": "error", "type": "Any"}, {"lineNumber": 520, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "registry", "type": "Any"}, {"lineNumber": 522, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 522, "col_offset": 76, "nodeName": "error", "type": "Any"}, {"lineNumber": 526, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "registry", "type": "Any"}, {"lineNumber": 528, "col_offset": 81, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 528, "col_offset": 85, "nodeName": "error", "type": "Any"}, {"lineNumber": 533, "col_offset": 11, "nodeName": "version", "type": "Any"}, {"lineNumber": 533, "col_offset": 22, "nodeName": "XGBOOST_LATEST_VERSION", "type": "Any"}, {"lineNumber": 545, "col_offset": 30, "nodeName": "caplog", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "pca", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "pca", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "pca", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 190, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "make_upload_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 59, "nodeName": "make_upload_call", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "pca", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 36, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "mock_object", "type": "mock.Mock"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "pca", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "train", "type": "List[List[float]]"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 49, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "called_args", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 67, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "j", "type": "int"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "call", "type": "Any"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "mock_s3", "type": "mock.Mock"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "call", "type": "Any"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "actual", "type": "Any"}, {"lineNumber": 505, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 514, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 520, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 526, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "registry", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 285, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "ANY", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 291, "col_offset": 56, "nodeName": "num_objects", "type": "int"}, {"lineNumber": 505, "col_offset": 37, "nodeName": "XGBOOST_LATEST_VERSION", "type": "Any"}, {"lineNumber": 534, "col_offset": 19, "nodeName": "_is_latest_xgboost_version", "type": "Any"}, {"lineNumber": 534, "col_offset": 46, "nodeName": "version", "type": "Any"}, {"lineNumber": 536, "col_offset": 19, "nodeName": "_is_latest_xgboost_version", "type": "Any"}, {"lineNumber": 536, "col_offset": 46, "nodeName": "version", "type": "Any"}, {"lineNumber": 285, "col_offset": 34, "nodeName": "range", "type": "Type[range]"}]