[{"lineNumber": 51, "col_offset": 0, "nodeName": "sagemaker_session", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_init_required_positional", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_init_required_named", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_all_hyperparameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_call_fit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "test_prepare_for_training_no_mini_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_prepare_for_training_wrong_type_mini_batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_prepare_for_training_feature_dim_greater_than_max_allowed", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 0, "nodeName": "test_model_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "test_predictor_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "ROLE", "type": "str"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "TRAIN_INSTANCE_COUNT", "type": "int"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "TRAIN_INSTANCE_TYPE", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "NUM_SAMPLES_PER_TREE", "type": "int"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "NUM_TREES", "type": "int"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "EVAL_METRICS", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "REGION", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "MAX_FEATURE_DIM", "type": "int"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "ROLE", "type": "str"}, {"lineNumber": 28, "col_offset": 59, "nodeName": "TRAIN_INSTANCE_COUNT", "type": "int"}, {"lineNumber": 29, "col_offset": 44, "nodeName": "TRAIN_INSTANCE_TYPE", "type": "str"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "boto_region_name", "type": "str"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "REGION", "type": "str"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "default_bucket", "type": "mock.Mock"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "describe_endpoint", "type": "mock.Mock"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "describe_endpoint_config", "type": "mock.Mock"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "COMMON_TRAIN_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "ROLE", "type": "str"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "TRAIN_INSTANCE_COUNT", "type": "int"}, {"lineNumber": 67, "col_offset": 66, "nodeName": "TRAIN_INSTANCE_TYPE", "type": "str"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "NUM_SAMPLES_PER_TREE", "type": "int"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "NUM_TREES", "type": "int"}, {"lineNumber": 68, "col_offset": 71, "nodeName": "EVAL_METRICS", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "role", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "ROLE", "type": "str"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "train_instance_count", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "TRAIN_INSTANCE_COUNT", "type": "int"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "train_instance_type", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "TRAIN_INSTANCE_TYPE", "type": "str"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "num_trees", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "NUM_TREES", "type": "int"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "num_samples_per_tree", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "NUM_SAMPLES_PER_TREE", "type": "int"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "eval_metrics", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "EVAL_METRICS", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "role", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "train_instance_count", "type": "Any"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "TRAIN_INSTANCE_COUNT", "type": "int"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "train_instance_type", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assert_called_once", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "mini_batch_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "image", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "RecordSet", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 200, "col_offset": 30, "nodeName": "MINI_BATCH_SIZE", "type": "int"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "deploy", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "TRAIN_INSTANCE_TYPE", "type": "str"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "RandomCutForestPredictor", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "REGION", "type": "str"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "boto_mock", "type": "mock.Mock"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "REGION", "type": "str"}, {"lineNumber": 57, "col_offset": 66, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "DESCRIBE_TRAINING_JOB_RESULT", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "ENDPOINT_DESC", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "sms", "type": "mock.Mock"}, {"lineNumber": 61, "col_offset": 70, "nodeName": "ENDPOINT_CONFIG_DESC", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 79, "col_offset": 77, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "COMMON_TRAIN_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "COMMON_TRAIN_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 87, "col_offset": 85, "nodeName": "NUM_TREES", "type": "int"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "NUM_SAMPLES_PER_TREE", "type": "int"}, {"lineNumber": 89, "col_offset": 51, "nodeName": "EVAL_METRICS", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 67, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "hyperparameters", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 98, "col_offset": 77, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "train_image", "type": "Any"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "RandomCutForest", "type": "Any"}, {"lineNumber": 142, "col_offset": 89, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 145, "col_offset": 90, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "base_fit", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 89, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 159, "col_offset": 90, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 167, "col_offset": 89, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 170, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 170, "col_offset": 90, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 178, "col_offset": 89, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 181, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "_prepare_for_training", "type": "Any"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 189, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 189, "col_offset": 77, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 190, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 190, "col_offset": 90, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 198, "col_offset": 77, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "BUCKET_NAME", "type": "str"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "PREFIX", "type": "str"}, {"lineNumber": 199, "col_offset": 90, "nodeName": "FEATURE_DIM", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "registry", "type": "Any"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "REGION", "type": "str"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "iterable_hyper_parameters", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "value", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "optional_hyper_parameters", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "value", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "ALL_REQ_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "optional_hyper_parameters", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "test_params", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 173, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 181, "col_offset": 90, "nodeName": "MAX_FEATURE_DIM", "type": "int"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "randomcutforest", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "registry", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "REGION", "type": "str"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "NUM_SAMPLES_PER_TREE", "type": "int"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "NUM_TREES", "type": "int"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "EVAL_METRICS", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "base_fit", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "base_fit", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "base_fit", "type": "Any"}]