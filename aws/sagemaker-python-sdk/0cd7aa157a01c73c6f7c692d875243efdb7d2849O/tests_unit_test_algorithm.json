[{"lineNumber": 157, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_valid_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "test_algorithm_supported_input_mode_with_bad_input_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_algorithm_trainining_channels_with_expected_channels", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "test_algorithm_trainining_channels_with_invalid_channels", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_valid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 0, "nodeName": "test_algorithm_train_instance_types_invalid_instance_types", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 0, "nodeName": "test_algorithm_distributed_training_validation", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 532, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_integer_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 567, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_valid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 601, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_continuous_range_invalid_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 636, "col_offset": 0, "nodeName": "test_algorithm_hyperparameter_categorical_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 672, "col_offset": 0, "nodeName": "test_algorithm_required_hyperparameters_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 714, "col_offset": 0, "nodeName": "test_algorithm_required_hyperparameters_are_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 0, "nodeName": "test_algorithm_required_free_text_hyperparameter_not_provided", "type": "Callable[[Any], Any]"}, {"lineNumber": 799, "col_offset": 0, "nodeName": "test_algorithm_create_transformer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 824, "col_offset": 0, "nodeName": "test_algorithm_create_transformer_without_completed_training_job", "type": "Callable[[Any], Any]"}, {"lineNumber": 841, "col_offset": 0, "nodeName": "test_algorithm_create_transformer_with_product_id", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 865, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_no_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 881, "col_offset": 0, "nodeName": "test_algorithm_enable_network_isolation_with_product_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "train_instance_types", "type": "List[str]"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 516, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 548, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 583, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 616, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 617, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]]"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 650, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]]"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 691, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 692, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 741, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 742, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 777, "col_offset": 69, "nodeName": "hyperparameters", "type": "List[Dict[str, Union[bool, str]]]"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "describe_algorithm", "type": "mock.Mock"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 815, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 817, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "latest_training_job", "type": "Any"}, {"lineNumber": 857, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "return_value", "type": "mock.Mock"}, {"lineNumber": 859, "col_offset": 32, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 861, "col_offset": 4, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 877, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 882, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 181, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 212, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 314, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 350, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 369, "col_offset": 38, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 390, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 417, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 446, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 465, "col_offset": 41, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 468, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 487, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 518, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 550, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 582, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 582, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 585, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 616, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 619, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 649, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 652, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 691, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 694, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 696, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 741, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 744, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 746, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 776, "col_offset": 30, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "sagemaker_client", "type": "Any"}, {"lineNumber": 779, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 781, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 801, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 804, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 812, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 812, "col_offset": 49, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 815, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 817, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 819, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 819, "col_offset": 22, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 819, "col_offset": 35, "nodeName": "Transformer", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "assert_called", "type": "Any"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 825, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 836, "col_offset": 40, "nodeName": "error", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 843, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 844, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 845, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 848, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 856, "col_offset": 36, "nodeName": "_TrainingJob", "type": "Any"}, {"lineNumber": 856, "col_offset": 49, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 858, "col_offset": 4, "nodeName": "model", "type": "mock.Mock"}, {"lineNumber": 859, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 861, "col_offset": 18, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 862, "col_offset": 11, "nodeName": "env", "type": "Any"}, {"lineNumber": 866, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 869, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 878, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 882, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 882, "col_offset": 29, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 883, "col_offset": 4, "nodeName": "response", "type": "Any"}, {"lineNumber": 884, "col_offset": 60, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 887, "col_offset": 16, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 895, "col_offset": 24, "nodeName": "enable_network_isolation", "type": "Any"}, {"lineNumber": 896, "col_offset": 11, "nodeName": "network_isolation", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "datetime", "type": "module"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 181, "col_offset": 78, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 212, "col_offset": 78, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 244, "col_offset": 78, "nodeName": "any_input_algo", "type": "Any"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 281, "col_offset": 78, "nodeName": "file_mode_algo", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 314, "col_offset": 78, "nodeName": "pipe_mode_algo", "type": "Any"}, {"lineNumber": 317, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 329, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 350, "col_offset": 78, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 357, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "copy", "type": "module"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 390, "col_offset": 78, "nodeName": "training_channels", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 401, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 434, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "copy", "type": "module"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "describe_algo_response", "type": "Any"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 451, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 462, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 468, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 468, "col_offset": 78, "nodeName": "distributed_algo", "type": "Any"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 484, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 487, "col_offset": 78, "nodeName": "single_instance_algo", "type": "Any"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "AlgorithmEstimator", "type": "Any"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 516, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 518, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 525, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 529, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 550, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 550, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 557, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 560, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 563, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 582, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 585, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 585, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 592, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 617, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 619, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 626, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 629, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 629, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 632, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 632, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 652, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 659, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 662, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 665, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 665, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 668, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 694, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 694, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 701, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 705, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 741, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 742, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 744, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 744, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 751, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 779, "col_offset": 4, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 779, "col_offset": 78, "nodeName": "some_algo", "type": "Any"}, {"lineNumber": 786, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 791, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 791, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 795, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 795, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "set_hyperparameters", "type": "Any"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 809, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 817, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 820, "col_offset": 4, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 821, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 826, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 836, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 836, "col_offset": 23, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 846, "col_offset": 21, "nodeName": "response", "type": "Any"}, {"lineNumber": 853, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 861, "col_offset": 18, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 862, "col_offset": 11, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 867, "col_offset": 21, "nodeName": "DESCRIBE_ALGORITHM_RESPONSE", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, str], str]], Dict[str, List[Dict[str, str]]], str, Dict[str, Union[bool, str, List[Dict[str, Union[Dict[str, Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[str, Dict[str, Dict[str, str]]]], int]], Dict[str, Union[Dict[str, int], Dict[str, Union[int, str]], Dict[str, str], List[Dict[str, Union[str, Dict[str, Dict[str, str]]]]], Dict[nothing, nothing], str]], str]]]]], Dict[str, Union[List[str], str]], Dict[str, Union[List[Dict[str, str]], List[Dict[str, Union[List[str], bool, str]]], bool, List[str], List[Union[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]], Dict[str, Union[bool, str]]]], str, List[Dict[str, Union[str, bool, Dict[str, Dict[str, List[str]]]]]], List[Dict[str, Union[str, bool, Dict[str, Dict[str, str]]]]], List[Dict[str, Union[bool, str]]], List[Union[Dict[str, Union[bool, Dict[str, Dict[str, List[str]]], str]], Dict[str, Union[bool, str]]]]]], datetime.datetime]]"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 877, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 882, "col_offset": 15, "nodeName": "copy", "type": "module"}, {"lineNumber": 885, "col_offset": 21, "nodeName": "response", "type": "Any"}, {"lineNumber": 892, "col_offset": 26, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 895, "col_offset": 24, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 284, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 317, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 323, "col_offset": 30, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 401, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 451, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 457, "col_offset": 30, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 490, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 496, "col_offset": 30, "nodeName": "sagemaker_session", "type": "Any"}, {"lineNumber": 560, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 563, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 629, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 632, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 665, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 668, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 705, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 710, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 791, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 795, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 836, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 838, "col_offset": 82, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 838, "col_offset": 86, "nodeName": "error", "type": "Any"}]