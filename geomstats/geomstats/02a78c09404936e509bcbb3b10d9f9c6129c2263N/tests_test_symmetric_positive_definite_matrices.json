[{"lineNumber": 9, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 76, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "sym_mat_1", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "sym_mat_2", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected_2", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "group_log_1", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "make_symmetric", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "make_symmetric", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "matrix_to_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "sym_mat_1", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "vector_to_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "vector_to_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "matrix_to_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "sym_mat_2", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "group_log", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "group_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "group_log_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "riemannian_log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "ref_point_1", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "riemannian_exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "ref_point_1", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 60, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "is_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 50, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "is_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 51, "nodeName": "not_a_sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "expected_2", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "eye", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesMethods"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "spd_matrices", "type": "module"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "np", "type": "module"}]