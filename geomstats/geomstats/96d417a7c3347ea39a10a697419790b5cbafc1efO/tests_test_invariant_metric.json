[{"lineNumber": 16, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 414, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "diag_mat_at_identity", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "spd_matrices_space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "sym_mat_at_identity", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "base_point", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "identity", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "inner_product_mat_at_identity", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "inner_product_mat_at_identity", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "inner_prod_mat", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "inner_product_mat_at_identity", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "inv_inner_prod_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "exp_from_id", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "log_from_id", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "SpecialEuclideanGroup", "type": "Type[geomstats.special_euclidean_group.SpecialEuclideanGroup]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "diag_mat_at_identity", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "diag_mat_at_identity", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "InvariantMetric", "type": "Type[geomstats.invariant_metric.InvariantMetric]"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "InvariantMetric", "type": "Type[geomstats.invariant_metric.InvariantMetric]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "SPDMatricesSpace", "type": "Type[geomstats.spd_matrices_space.SPDMatricesSpace]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "dimension", "type": "int"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "InvariantMetric", "type": "Type[geomstats.invariant_metric.InvariantMetric]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "InvariantMetric", "type": "Type[geomstats.invariant_metric.InvariantMetric]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "inner_product_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "inner_product_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "inv", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "inner_prod_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "dot", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "inv_inner_prod_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "inner_prod_mat", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "eye", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "dimension", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "left_exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "left_log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "left_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "left_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "left_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 122, "col_offset": 56, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "left_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "left_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "left_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 56, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "left_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "left_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 200, "col_offset": 51, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 51, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 51, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 51, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 272, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 292, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 298, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 313, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 49, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 332, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 49, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 49, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 352, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "base_point", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 49, "nodeName": "point_small", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 362, "col_offset": 57, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 57, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 368, "col_offset": 52, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 371, "col_offset": 52, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 52, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 376, "col_offset": 52, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "squared_norm", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "squared_norm", "type": "Callable[..., Any]"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 53, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "squared_norm", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "squared_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 48, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "squared_norm", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "n", "type": "int"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "dimension", "type": "int"}, {"lineNumber": 23, "col_offset": 58, "nodeName": "dimension", "type": "int"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "eye", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "eye", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "diag_mat_at_identity", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "diag_mat_at_identity", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "spd_matrices_space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "sym_mat_at_identity", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "sym_mat_at_identity", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 67, "col_offset": 66, "nodeName": "base_point", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "base_point", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 86, "col_offset": 62, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "left_exp_from_id", "type": "Any"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "exp_from_id", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "left_log_from_id", "type": "Any"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "log_from_id", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 122, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 145, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 158, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 182, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 200, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 205, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 212, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 218, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 230, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 235, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 245, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 264, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 272, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 276, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 277, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 294, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 300, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 318, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 337, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 339, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 339, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 350, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 351, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 356, "col_offset": 49, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 362, "col_offset": 57, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 363, "col_offset": 57, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 365, "col_offset": 36, "nodeName": "sq_dist_1_2", "type": "Any"}, {"lineNumber": 365, "col_offset": 49, "nodeName": "sq_dist_2_1", "type": "Any"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 368, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 371, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 375, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 376, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 377, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 380, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 381, "col_offset": 60, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "left_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 387, "col_offset": 51, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 46, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "left_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 390, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 391, "col_offset": 56, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 395, "col_offset": 53, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 396, "col_offset": 53, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 397, "col_offset": 52, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 398, "col_offset": 47, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 400, "col_offset": 56, "nodeName": "log", "type": "Any"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 406, "col_offset": 48, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "right_diag_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 407, "col_offset": 52, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 47, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "right_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 410, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 411, "col_offset": 56, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 23, "col_offset": 58, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 377, "col_offset": 14, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 377, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 381, "col_offset": 60, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 387, "col_offset": 14, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 387, "col_offset": 51, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 388, "col_offset": 46, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 391, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 395, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 397, "col_offset": 14, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 397, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 398, "col_offset": 47, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 407, "col_offset": 52, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 408, "col_offset": 47, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 409, "col_offset": 19, "nodeName": "self", "type": "TestInvariantMetricMethods"}, {"lineNumber": 411, "col_offset": 56, "nodeName": "self", "type": "TestInvariantMetricMethods"}]