[{"lineNumber": 10, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 104, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "riem_log_2", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "riem_exp_2", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "point_b_1", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 24, "col_offset": 64, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "intrinsic_to_extrinsic_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 55, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "intrinsic_to_extrinsic_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "point_intrinsic_2", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 40, "col_offset": 66, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 51, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "riem_log_2", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 59, "col_offset": 66, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 66, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 63, "col_offset": 66, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 72, "col_offset": 66, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "riem_exp_2", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 75, "col_offset": 66, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "riemannian_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 83, "col_offset": 63, "nodeName": "point_b_1", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "riemannian_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 97, "col_offset": 65, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "math", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "embedding_squared_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "hyperbolic_space", "type": "module"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "np", "type": "module"}]