[{"lineNumber": 12, "col_offset": 0, "nodeName": "copy", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "indexing", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "float_to_double", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "byte_to_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "while_loop", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "logical_or", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "get_mask_i_float", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "gather", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "vectorize", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "cond", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "real", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "reshape", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "cast_to_complex", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "boolean_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "flip", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "amax", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "arctan2", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "cast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "divide", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "repeat", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "asarray", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 0, "nodeName": "append", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "concatenate", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "hstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "stack", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "vstack", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "array", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "ones_like", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "empty_like", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "all", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "allclose", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "sin", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "cos", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "cosh", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "sinh", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "tanh", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "arccosh", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "tan", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "arcsin", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "arccos", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "dot", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "maximum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "greater", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "greater_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "to_ndarray", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "sqrt", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "norm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 0, "nodeName": "rand", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "randint", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "isclose", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "less_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 0, "nodeName": "less", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "eye", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 0, "nodeName": "average", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 0, "nodeName": "matmul", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 0, "nodeName": "sum", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "einsum", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "transpose", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 0, "nodeName": "squeeze", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 0, "nodeName": "zeros_like", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "trace", "type": "Callable[..., Any]"}, {"lineNumber": 293, "col_offset": 0, "nodeName": "mod", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "linspace", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "equal", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "floor", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 0, "nodeName": "cross", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "triu_indices", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 0, "nodeName": "where", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "tile", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 0, "nodeName": "clip", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 0, "nodeName": "any", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 0, "nodeName": "expand_dims", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 0, "nodeName": "outer", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 0, "nodeName": "hsplit", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 0, "nodeName": "argmax", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 0, "nodeName": "argmin", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "diagonal", "type": "Callable[..., Any]"}, {"lineNumber": 371, "col_offset": 0, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 0, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 0, "nodeName": "cov", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 0, "nodeName": "ndim", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 0, "nodeName": "nonzero", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 0, "nodeName": "ix_", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 0, "nodeName": "arange", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 0, "nodeName": "prod", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 0, "nodeName": "sign", "type": "Callable[..., Any]"}, {"lineNumber": 411, "col_offset": 0, "nodeName": "mean", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 0, "nodeName": "normal", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "cumprod", "type": "Callable[..., Any]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "int32", "type": "Any"}, {"lineNumber": 6, "col_offset": 8, "nodeName": "int32", "type": "Any"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "int8", "type": "Any"}, {"lineNumber": 7, "col_offset": 7, "nodeName": "int8", "type": "Any"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "float32", "type": "Any"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "float64", "type": "Any"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "float64", "type": "Any"}, {"lineNumber": 6, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 7, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "iteration", "type": "int"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "loop_vars", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "bool_result", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "bool_result", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "range_n", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "i_float", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "mask_i", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "mask_i_float", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "mask_i_float", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "multiple_args", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "pred", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "m", "type": "int"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "copy", "type": "Any"}, {"lineNumber": 30, "col_offset": 10, "nodeName": "cond", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "loop_vars", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "iteration", "type": "int"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "arange", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "equal", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "range_n", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "i_float", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "cast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "mask_i", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "false_fn", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "real", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "flip", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "amax", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "arctan2", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "divide", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "append", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "identity", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "val", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "abs", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "val", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "ones", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "a", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "sin", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "cos", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "cosh", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "sinh", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "arccosh", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "tan", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "arcsin", "type": "Any"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "arccos", "type": "Any"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "val", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "dot", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "a", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "b", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "greater", "type": "Any"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "a", "type": "Any"}, {"lineNumber": 218, "col_offset": 31, "nodeName": "b", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "to_ndim", "type": "int"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "randint", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "b", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "less", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "b", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "eye", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "average", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "trace", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "mod", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "equal", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "floor", "type": "Any"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "cross", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "triu_indices", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "where", "type": "Any"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "tile", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "clip", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "to_ndarray", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 331, "col_offset": 7, "nodeName": "n", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "k", "type": "Any"}, {"lineNumber": 335, "col_offset": 7, "nodeName": "k", "type": "Any"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 17, "nodeName": "aux", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 338, "col_offset": 19, "nodeName": "m", "type": "int"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "outer", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "hsplit", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "argmin", "type": "Any"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "diagonal", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "exp", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "log", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "cov", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "ix_", "type": "Any"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "sign", "type": "Any"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "mean", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "axis", "type": "Any"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "normal", "type": "Any"}, {"lineNumber": 420, "col_offset": 7, "nodeName": "axis", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "loop_vars", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "body", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "iteration", "type": "int"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "maximum_iterations", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "cast", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "int32", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "indices", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "true_fn", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "complex", "type": "Type[complex]"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "mask", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 7, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "to_ndim", "type": "int"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "axis", "type": "Any"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "largs", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 282, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 332, "col_offset": 10, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "diagflat", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "m", "type": "int"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 337, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "aux", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 360, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 380, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 400, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 27, "nodeName": "axis", "type": "Any"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 416, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "cumprod", "type": "Any"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "loop_vars", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "array", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "pyfunc", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "signature", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "axis", "type": "int"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "axis", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "i", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "signature", "type": "Any"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "i", "type": "int"}]