[{"lineNumber": 9, "col_offset": 0, "nodeName": "RTOL", "type": "float"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "TestCase", "type": "Type[geomstats.tests.TestCase]"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "tests", "type": "module"}, {"lineNumber": 12, "col_offset": 31, "nodeName": "geomstats", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "n_samples", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "expected", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "imat_a", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "mat_b", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "group_log", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "point", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "idty", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "path", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "time", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "point", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "GeneralLinear", "type": "Type[geomstats.geometry.general_linear.GeneralLinear]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "belongs", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "mats", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "random_uniform", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "belongs", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "point", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "expected", "type": "bool"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "random_uniform", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "belongs", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "point", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "compose", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "mat1", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "mat2", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "mat_a", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "point", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "group_log", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "point", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "point", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "identity", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "orbit", "type": "Callable[..., Callable[[Any], Any]]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "point", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "path", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "time", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "array", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "exp", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "n", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "ImportWarning", "type": "Type[ImportWarning]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "gs", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "gs", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "gs", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "identity", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "eye", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "array", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "mat_a", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "mat_b", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "eye", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "n", "type": "int"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "gs", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "gs", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "gs", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "idty", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "point", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "gs", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "log", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "point", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "gs", "type": "Any"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "gs", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "gs", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "gs", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "mat_a", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "mat_b", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "gs", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "GeneralLinear", "type": "Type[geomstats.geometry.general_linear.GeneralLinear]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "GeneralLinear", "type": "Type[geomstats.geometry.general_linear.GeneralLinear]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "group", "type": "geomstats.geometry.general_linear.GeneralLinear"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "gs", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "gs", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "GeneralLinear", "type": "Type[geomstats.geometry.general_linear.GeneralLinear]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "exp", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "exp", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "self", "type": "TestGeneralLinearMethods"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "gs", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "gs", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "gs", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "gs", "type": "Any"}]