[{"lineNumber": 11, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 117, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "HyperbolicMetric", "type": "Type[geomstats.hyperbolic_space.HyperbolicMetric]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "HyperbolicSpace", "type": "Type[geomstats.hyperbolic_space.HyperbolicSpace]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "ref_point", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "riem_log_2", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "riem_exp_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "point_b_1", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "belongs", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "ref_point", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "riem_log_1", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "intrinsic_to_extrinsic_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "ref_point_intrinsic_2", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "intrinsic_to_extrinsic_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "point_intrinsic_2", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 54, "col_offset": 59, "nodeName": "riem_log_2", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 73, "col_offset": 61, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 74, "col_offset": 59, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 84, "col_offset": 61, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "riemannian_log", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "riem_exp_2", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "ref_point_2", "type": "Any"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "vector_2", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "riemannian_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "point_a_1", "type": "Any"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "point_b_1", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "random_uniform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "DIMENSION", "type": "int"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "projection_to_tangent_space", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 59, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "vector_1", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "riemannian_exp", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "riemannian_dist", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "ref_point_1", "type": "Any"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "riem_exp_1", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "riemannian_squared_norm", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "sq_norm", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "SPACE", "type": "geomstats.hyperbolic_space.HyperbolicSpace"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "embedding_metric", "type": "geomstats.minkowski_space.MinkowskiMetric"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "math", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "expected_1", "type": "float"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "METRIC", "type": "geomstats.hyperbolic_space.HyperbolicMetric"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "self", "type": "TestHyperbolicSpaceMethods"}]