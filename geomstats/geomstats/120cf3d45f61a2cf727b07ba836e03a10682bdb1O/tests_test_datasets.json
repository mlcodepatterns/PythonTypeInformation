[{"lineNumber": 15, "col_offset": 19, "nodeName": "TestCase", "type": "Type[geomstats.tests.TestCase]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "tests", "type": "module"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "geomstats", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "sphere", "type": "geomstats.geometry.hypersphere.Hypersphere"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tokyo", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "so3", "type": "Union[geomstats.geometry.special_orthogonal._SpecialOrthogonal2Vectors, geomstats.geometry.special_orthogonal._SpecialOrthogonal3Vectors, geomstats.geometry.special_orthogonal._SpecialOrthogonalMatrices]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "se3", "type": "Union[geomstats.geometry.special_euclidean._SpecialEuclidean2Vectors, geomstats.geometry.special_euclidean._SpecialEuclidean3Vectors, geomstats.geometry.special_euclidean._SpecialEuclideanMatrices]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "expected", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "expected", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "paths", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "paths", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "spd", "type": "geomstats.geometry.spd_matrices.SPDMatrices"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "beta", "type": "geomstats.geometry.beta_distributions.BetaDistributions"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "data_emg", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "expected_col_name", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "good_col_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "n_monkeys", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "dim", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "expected", "type": "Tuple[int, int, int]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "landmarks_space", "type": "geomstats.geometry.landmarks.Landmarks"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "n_hands", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "dim", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "expected", "type": "Tuple[int, int, int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "landmarks_space", "type": "geomstats.geometry.landmarks.Landmarks"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "Hypersphere", "type": "Type[geomstats.geometry.hypersphere.Hypersphere]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "load_cities", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "tokyo", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "belongs", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "SpecialOrthogonal", "type": "Type[geomstats.geometry.special_orthogonal.SpecialOrthogonal]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "load_poses", "type": "Callable[..., Tuple[Any, List[Any]]]"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "belongs", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "SpecialEuclidean", "type": "Type[geomstats.geometry.special_euclidean.SpecialEuclidean]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "load_poses", "type": "Callable[..., Tuple[Any, List[Any]]]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "belongs", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "load_karate_graph", "type": "Callable[[], geomstats.datasets.prepare_graph_data.Graph]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "load_random_graph", "type": "Callable[[], geomstats.datasets.prepare_graph_data.Graph]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "load_random_graph", "type": "Callable[[], geomstats.datasets.prepare_graph_data.Graph]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "random_walk", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "load_karate_graph", "type": "Callable[[], geomstats.datasets.prepare_graph_data.Graph]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "random_walk", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "SPDMatrices", "type": "Type[geomstats.geometry.spd_matrices.SPDMatrices]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "load_connectomes", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "expected", "type": "Tuple[int, int]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "load_connectomes", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "belongs", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "BetaDistributions", "type": "Type[geomstats.geometry.beta_distributions.BetaDistributions]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "beta_param", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "distrib_type", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "load_leaves", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "belongs", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "beta_param", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "distrib_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "result", "type": "int"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "load_emg", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "good_col_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "load_optical_nerves", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "n_monkeys", "type": "int"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "dim", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "expected", "type": "Tuple[int, int, int]"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "Landmarks", "type": "Type[geomstats.geometry.landmarks.Landmarks]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "belongs", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "labels", "type": "Any"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "bone_list", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "load_hands", "type": "Callable[[], Tuple[Any, Any, Any]]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "n_hands", "type": "int"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "dim", "type": "int"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "result", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "expected", "type": "Tuple[int, int, int]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "Landmarks", "type": "Type[geomstats.geometry.landmarks.Landmarks]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "belongs", "type": "Any"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "logical_and", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "array", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "sphere", "type": "geomstats.geometry.hypersphere.Hypersphere"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "so3", "type": "Union[geomstats.geometry.special_orthogonal._SpecialOrthogonal2Vectors, geomstats.geometry.special_orthogonal._SpecialOrthogonal3Vectors, geomstats.geometry.special_orthogonal._SpecialOrthogonalMatrices]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "se3", "type": "Union[geomstats.geometry.special_euclidean._SpecialEuclidean2Vectors, geomstats.geometry.special_euclidean._SpecialEuclidean3Vectors, geomstats.geometry.special_euclidean._SpecialEuclideanMatrices]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "edges", "type": "Dict[int, Any]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "labels", "type": "Dict[int, List[int]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "result", "type": "int"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "expected", "type": "int"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "edges", "type": "Dict[int, Any]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "labels", "type": "Dict[int, List[int]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "result", "type": "int"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "expected", "type": "int"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "paths", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "paths", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "n_walks_per_node", "type": "int"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "walk_length", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "spd", "type": "geomstats.geometry.spd_matrices.SPDMatrices"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "gs", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "beta", "type": "geomstats.geometry.beta_distributions.BetaDistributions"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "beta_param", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "landmarks_space", "type": "geomstats.geometry.landmarks.Landmarks"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "gs", "type": "Any"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "data_utils", "type": "module"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 171, "col_offset": 59, "nodeName": "k_landmarks", "type": "int"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "landmarks_space", "type": "geomstats.geometry.landmarks.Landmarks"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "gs", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestDatasets"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "gs", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "gs", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "paths", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "edges", "type": "Dict[int, Any]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "paths", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "edges", "type": "Dict[int, Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "expected_col_name", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "Euclidean", "type": "Type[geomstats.geometry.euclidean.Euclidean]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "Euclidean", "type": "Type[geomstats.geometry.euclidean.Euclidean]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "gs", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "graph", "type": "geomstats.datasets.prepare_graph_data.Graph"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "keys", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "data_emg", "type": "Any"}]