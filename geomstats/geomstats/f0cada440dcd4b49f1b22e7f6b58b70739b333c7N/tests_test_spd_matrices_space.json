[{"lineNumber": 10, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 87, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "dimension", "type": "int"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "metric", "type": "geomstats.spd_matrices_space.SPDMetric"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "metric", "type": "geomstats.spd_matrices_space.SPDMetric"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "sym_mat_1", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "sym_mat_2", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "expected_2", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "group_log_1", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "log_1", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "SPDMatricesSpace", "type": "Type[geomstats.spd_matrices_space.SPDMatricesSpace]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "make_symmetric", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "make_symmetric", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "mat", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "matrix_to_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "sym_mat_1", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "vector_to_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "vector_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "vector_to_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "vector_2", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "matrix_to_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "sym_mat_2", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "group_log", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "group_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "group_log_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 48, "nodeName": "dimension", "type": "int"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "is_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 56, "nodeName": "sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "is_symmetric", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "not_a_sym_mat", "type": "numpy.ndarray"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "belongs", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "sym_pos_def_mat", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "expected_2", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "eye", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "metric", "type": "geomstats.spd_matrices_space.SPDMetric"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "base_point_1", "type": "numpy.ndarray"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "metric", "type": "geomstats.spd_matrices_space.SPDMetric"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "log_1", "type": "Any"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "base_point_1", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "expected_1", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 48, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "spd_matrices_space", "type": "module"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "space", "type": "geomstats.spd_matrices_space.SPDMatricesSpace"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "self", "type": "TestSPDMatricesSpaceMethods"}]