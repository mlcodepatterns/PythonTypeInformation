[{"lineNumber": 10, "col_offset": 39, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 39, "nodeName": "unittest", "type": "module"}, {"lineNumber": 477, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "transfo_2", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "base_point", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "inv_transfo_1", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "identity", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "rot_and_parallel_trans", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "rot_and_parallel_trans", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "transfo_base_point", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "transfo_2", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "tangent_rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "tangent_translation_1", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "transfo_1", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "transfo_1", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "transfo_2", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "transfo_2", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "log_1", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "log_2", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "right_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "aux_1", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "aux_2", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "rot_vec_base_point", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "rot_vec_base_point", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "rot_vec_base_point", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "rot_vec_base_point", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "sq_dist_1_2", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "sq_dist_2_1", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "SpecialEuclideanGroup", "type": "Type[geomstats.special_euclidean_group.SpecialEuclideanGroup]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "regularize", "type": "Callable"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "identity", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "regularize", "type": "Callable"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "point", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "identity", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "identity", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "inverse", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "inv_transfo_1", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "compose", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "inv_transfo_1", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "group_log", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "group_log", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "group_exp", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "group_exp", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "group_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "group_log_then_exp_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "group_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "transfo_1", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "group_exp_then_log_from_identity", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "group_exp", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "group_log", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "group_log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "group_log_then_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "transfo_1", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "transfo_2", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "log_2", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 285, "col_offset": 44, "nodeName": "aux_1", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "log_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "exp_from_identity", "type": "Callable[[Any], Any]"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "aux_2", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 362, "col_offset": 29, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "squared_dist", "type": "Any"}, {"lineNumber": 451, "col_offset": 62, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 71, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "squared_dist", "type": "Any"}, {"lineNumber": 452, "col_offset": 62, "nodeName": "point_2", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 71, "nodeName": "point_1", "type": "numpy.ndarray"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 18, "nodeName": "random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "group_exponential_barycenter", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "random_uniform", "type": "Callable[[], Any]"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "group_exponential_barycenter", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "group_exponential_barycenter", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "n", "type": "int"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "belongs", "type": "Callable[[Any], bool]"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "base_point", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "pi", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "pi", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "identity", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "identity", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "rot_and_parallel_trans", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "identity", "type": "Any"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "identity", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "rot_and_parallel_trans", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 118, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 131, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 134, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "expected", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "transfo_base_point", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "transfo_2", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "helper", "type": "module"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "transfo_base_point", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "transfo_small", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "result", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "tangent_rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "tangent_translation_1", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 207, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 47, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 34, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 251, "col_offset": 47, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 252, "col_offset": 56, "nodeName": "log_1", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 255, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 268, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 34, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 289, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 289, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 45, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 45, "nodeName": "rot_vec_base_point", "type": "numpy.ndarray"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 51, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 321, "col_offset": 52, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "tangent_vec_1", "type": "Any"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 325, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 325, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 45, "nodeName": "rot_vec_base_point", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 34, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 342, "col_offset": 34, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 348, "col_offset": 50, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 349, "col_offset": 45, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 351, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 351, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "pi", "type": "Any"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "rot_vec_base_point", "type": "Any"}, {"lineNumber": 363, "col_offset": 44, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 34, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 374, "col_offset": 48, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 376, "col_offset": 53, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 377, "col_offset": 54, "nodeName": "aux_1", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 380, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 391, "col_offset": 51, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 392, "col_offset": 46, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "left_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 394, "col_offset": 51, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 395, "col_offset": 52, "nodeName": "aux_2", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 398, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 398, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "pi", "type": "Any"}, {"lineNumber": 407, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 408, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "rot_vec_base_point", "type": "Any"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "translation_base_point", "type": "numpy.ndarray"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 34, "nodeName": "rot_vec_1", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 34, "nodeName": "translation_1", "type": "numpy.ndarray"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "right_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 420, "col_offset": 44, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "right_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 422, "col_offset": 49, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 423, "col_offset": 50, "nodeName": "aux_1", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "result_1", "type": "Any"}, {"lineNumber": 426, "col_offset": 46, "nodeName": "expected_1", "type": "Any"}, {"lineNumber": 430, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 432, "col_offset": 34, "nodeName": "rot_vec_2", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 34, "nodeName": "translation_2", "type": "numpy.ndarray"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "right_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 436, "col_offset": 49, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 437, "col_offset": 44, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "right_canonical_metric", "type": "geomstats.invariant_metric.InvariantMetric"}, {"lineNumber": 439, "col_offset": 49, "nodeName": "transfo_base_point", "type": "Any"}, {"lineNumber": 440, "col_offset": 50, "nodeName": "aux_2", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 443, "col_offset": 36, "nodeName": "result_2", "type": "Any"}, {"lineNumber": 443, "col_offset": 46, "nodeName": "expected_2", "type": "Any"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "left_canonical_metric", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "left_canonical_metric", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 453, "col_offset": 36, "nodeName": "sq_dist_1_2", "type": "Any"}, {"lineNumber": 453, "col_offset": 49, "nodeName": "sq_dist_2_1", "type": "Any"}, {"lineNumber": 457, "col_offset": 18, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "belongs", "type": "Callable[[Any], bool]"}, {"lineNumber": 474, "col_offset": 43, "nodeName": "result_3", "type": "Any"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "pi", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 351, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 18, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 459, "col_offset": 40, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 459, "col_offset": 49, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 463, "col_offset": 18, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 465, "col_offset": 40, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 465, "col_offset": 49, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 471, "col_offset": 40, "nodeName": "point_1", "type": "Any"}, {"lineNumber": 471, "col_offset": 49, "nodeName": "point_2", "type": "Any"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "group", "type": "geomstats.special_euclidean_group.SpecialEuclideanGroup"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 435, "col_offset": 16, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 438, "col_offset": 19, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "self", "type": "TestSpecialEuclideanGroupMethods"}]