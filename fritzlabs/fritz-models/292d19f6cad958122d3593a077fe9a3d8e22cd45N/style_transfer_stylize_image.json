[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "image_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "transfer_style", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "output_image", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "output_image", "type": "Any"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "InstanceNormalization", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "DeprocessStylizedImage", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "load_model", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "model_checkpoint", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "input", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "function", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "load_image", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "output_image", "type": "Any"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "model_checkpoint", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "models", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "custom_objects", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "transfer_net", "type": "Any"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "transfer_net", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "learning_phase", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "transfer_net", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "backend", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "utils", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "image_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "image_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "transfer_style", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "Image", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "output_image", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "keras_contrib", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "keras", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "backend", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "keras", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "input_image", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "output_image", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "keras", "type": "Any"}]