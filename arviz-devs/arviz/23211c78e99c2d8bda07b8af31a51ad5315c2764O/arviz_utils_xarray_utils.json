[{"lineNumber": 11, "col_offset": 0, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "numpy_to_data_array", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 0, "nodeName": "pystan_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "default_dims", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "coords", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "data_vars", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "InferenceData", "type": "Type[arviz.inference_data.InferenceData]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "obj", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "InferenceData", "type": "Type[arviz.inference_data.InferenceData]"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "obj", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "group", "type": "Any"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "props", "type": "Tuple[str]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "props", "type": "Tuple[str]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "wrapped", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "dims", "type": "Optional[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "can_squeeze", "type": "bool"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "coords", "type": "Dict[nothing, nothing]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "default_dims", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "coords", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "ary", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "coords", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "key", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "ary", "type": "Any"}, {"lineNumber": 168, "col_offset": 7, "nodeName": "dims", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "dims", "type": "Dict[nothing, nothing]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "trace", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "prior", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "prior", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "coords", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "dims", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "dims", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "stat", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "stat_names", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "fit", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "coords", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "dims", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "dims", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "model_pars", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "var_dict", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "stan_integer", "type": "str"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "stan_limits", "type": "str"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "stan_param", "type": "str"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "stan_ws", "type": "str"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "stan_code", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "stan_code", "type": "str"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "stan_code", "type": "str"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "dtypes", "type": "Dict[Any, str]"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "dtypes", "type": "Dict[Any, str]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "obj", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "xr", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "obj", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 58, "nodeName": "group", "type": "Any"}, {"lineNumber": 109, "col_offset": 72, "nodeName": "coords", "type": "Any"}, {"lineNumber": 109, "col_offset": 85, "nodeName": "dims", "type": "Any"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "requires"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "prop", "type": "str"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "props", "type": "Tuple[str]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "ary", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "can_squeeze", "type": "bool"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "ary", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "can_squeeze", "type": "bool"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "ary", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "dims", "type": "Optional[Any]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "default_dims", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "coords", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "coords", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "arange", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "IndexVariable", "type": "Any"}, {"lineNumber": 163, "col_offset": 66, "nodeName": "key", "type": "Any"}, {"lineNumber": 163, "col_offset": 73, "nodeName": "dims", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "xr", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "coords", "type": "Any"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "dims", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "numpy_to_data_array", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "values", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "xr", "type": "Any"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "data_vars", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "get_default_varnames", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "trace", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "InferenceData", "type": "Type[arviz.inference_data.InferenceData]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "fit", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "infer_dtypes", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "extract", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "int64", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "int64", "type": "Any"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "get_sampler_params", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "get_stancode", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 285, "col_offset": 27, "nodeName": "pattern_remove_comments", "type": "Pattern[str]"}, {"lineNumber": 285, "col_offset": 56, "nodeName": "stan_code", "type": "str"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "pattern_int", "type": "Pattern[str]"}, {"lineNumber": 287, "col_offset": 41, "nodeName": "stan_code", "type": "str"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "InferenceData", "type": "Type[arviz.inference_data.InferenceData]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "from_netcdf", "type": "Callable[[Any], arviz.inference_data.InferenceData]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "obj", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "obj", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "obj", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "group", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "self", "type": "requires"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "func", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "cls", "type": "PyMC3Converter"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "atleast_3d", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "SyntaxWarning", "type": "Type[SyntaxWarning]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "ary", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "dim_len", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "default_dims", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "dims", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "xr", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "coords", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "utils", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "trace", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "coords", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "dims", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "coords", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "dims", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "coords", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "dims", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "fit", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 237, "col_offset": 60, "nodeName": "dtypes", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "var_dict", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "coords", "type": "Any"}, {"lineNumber": 240, "col_offset": 62, "nodeName": "dims", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "fit", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "coords", "type": "Any"}, {"lineNumber": 265, "col_offset": 62, "nodeName": "dims", "type": "Any"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "re", "type": "module"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "DOTALL", "type": "int"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "MULTILINE", "type": "int"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 288, "col_offset": 51, "nodeName": "dtypes", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "PyMC3Converter", "type": "Type[PyMC3Converter]"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "PyStanConverter", "type": "Type[PyStanConverter]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "InferenceData", "type": "Type[arviz.inference_data.InferenceData]"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "pystan_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "coords", "type": "Any"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "dims", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "dict_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "group", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "ary", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "shape", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "coords", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "arange", "type": "Any"}, {"lineNumber": 151, "col_offset": 45, "nodeName": "dim_len", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "coords", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 176, "col_offset": 59, "nodeName": "key", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "pm", "type": "arviz.compat.optional_dep.OptionalDep"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "get_values", "type": "Any"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "stat", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "get_sampler_stats", "type": "Any"}, {"lineNumber": 203, "col_offset": 63, "nodeName": "stat", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 213, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 240, "col_offset": 62, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "rename_key", "type": "Dict[str, str]"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "key", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "name", "type": "str"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 265, "col_offset": 62, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "stan_integer", "type": "str"}, {"lineNumber": 277, "col_offset": 35, "nodeName": "stan_ws", "type": "str"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "stan_limits", "type": "str"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "stan_ws", "type": "str"}, {"lineNumber": 277, "col_offset": 66, "nodeName": "stan_param", "type": "str"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "stan_code", "type": "str"}, {"lineNumber": 288, "col_offset": 18, "nodeName": "item", "type": "Any"}, {"lineNumber": 288, "col_offset": 77, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "trace", "type": "Any"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "prior", "type": "None"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "posterior_predictive", "type": "None"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "dims", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "dims", "type": "Any"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "obj", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "obj", "type": "Any"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "coords", "type": "Any"}, {"lineNumber": 48, "col_offset": 69, "nodeName": "dims", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "pymc3_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "obj", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "coords", "type": "Any"}, {"lineNumber": 58, "col_offset": 66, "nodeName": "dims", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "cls", "type": "PyMC3Converter"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "prop", "type": "str"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "n_chains", "type": "Any"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "n_samples", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "key", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "dims", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "trace", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "trace", "type": "Any"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 60, "nodeName": "k", "type": "Any"}, {"lineNumber": 213, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "items", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "posterior_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "sample_stats_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "posterior_predictive_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "prior_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "re", "type": "module"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 264, "col_offset": 71, "nodeName": "j", "type": "Any"}, {"lineNumber": 264, "col_offset": 76, "nodeName": "sampler_params", "type": "Any"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "strip", "type": "Any"}, {"lineNumber": 288, "col_offset": 77, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "posterior_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "sample_stats_to_xarray", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "obj", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "obj", "type": "Any"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "coords", "type": "Any"}, {"lineNumber": 50, "col_offset": 70, "nodeName": "dims", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "allowable_types", "type": "Tuple[str, str, str, str, str, str]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 150, "col_offset": 67, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 81, "nodeName": "idx", "type": "int"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "prior", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "get", "type": "Callable"}, {"lineNumber": 264, "col_offset": 61, "nodeName": "key", "type": "Any"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "stan_code", "type": "Any"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "item", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "self", "type": "PyStanConverter"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "obj", "type": "Any"}, {"lineNumber": 213, "col_offset": 68, "nodeName": "self", "type": "PyMC3Converter"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "dtypes", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "key", "type": "Any"}]