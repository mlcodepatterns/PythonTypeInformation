[{"lineNumber": 117, "col_offset": 0, "nodeName": "test_dict_to_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "test_convert_to_dataset_idempotent", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "test_convert_to_inference_data_idempotent", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "test_convert_to_inference_data_from_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_convert_to_inference_data_bad", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_convert_to_dataset_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "CheckNetCDFUtils", "type": "Type[CheckNetCDFUtils]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "CheckNetCDFUtils", "type": "Type[CheckNetCDFUtils]"}, {"lineNumber": 245, "col_offset": 28, "nodeName": "CheckNetCDFUtils", "type": "Type[CheckNetCDFUtils]"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "CheckNetCDFUtils", "type": "Type[CheckNetCDFUtils]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "dims", "type": "Dict[str, List[Optional[str]]]"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "first", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "first", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "foo", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "to_netcdf", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "filename", "type": "str"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "filename", "type": "str"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "foo", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "to_netcdf", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "filename", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "stan_dict", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "filename", "type": "str"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "check_var_names_coords_dims", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "obj", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "convert_to_inference_data", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "extract", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "model_pars", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "vals", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "prior", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "pymc3_to_inference_data", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "randn", "type": "Any"}, {"lineNumber": 14, "col_offset": 53, "nodeName": "size", "type": "int"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "size", "type": "int"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "SyntaxWarning", "type": "Type[SyntaxWarning]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "convert_to_dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "randn", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "randn", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 72, "nodeName": "arange", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[Optional[str]]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 154, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "draws", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "school", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "theta", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "draws", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "draws", "type": "int"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "chains", "type": "int"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 207, "col_offset": 26, "nodeName": "stan_dict", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "vals", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "draws", "type": "int"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "chains", "type": "int"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "sample_prior_predictive", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "sample_posterior_predictive", "type": "Any"}, {"lineNumber": 223, "col_offset": 66, "nodeName": "obj", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "prior", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "draws", "type": "int"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "chains", "type": "int"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "draws", "type": "int"}, {"lineNumber": 266, "col_offset": 59, "nodeName": "chains", "type": "int"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "foo", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "foo", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "foo", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "arange", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 186, "col_offset": 49, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 218, "col_offset": 59, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "pm", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "pm", "type": "Any"}, {"lineNumber": 223, "col_offset": 66, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 266, "col_offset": 59, "nodeName": "cls", "type": "Type[TestNumpyNetCDFUtils]"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "arange", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 192, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 62, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "self", "type": "CheckNetCDFUtils"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}]