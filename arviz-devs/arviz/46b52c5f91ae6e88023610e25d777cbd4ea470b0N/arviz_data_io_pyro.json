[{"lineNumber": 8, "col_offset": 0, "nodeName": "_get_var_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "from_pyro", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "sample_point", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "latent", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "exec_traces", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "node", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "latent", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "coords", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "dims", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "dims", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "latent_vars", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "observed_vars", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "to_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "node", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "observed_vars", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "latent_vars", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "_get_var_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "dict_to_dataset", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "InferenceData", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "node", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "coords", "type": "Any"}, {"lineNumber": 60, "col_offset": 81, "nodeName": "dims", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "coords", "type": "Any"}, {"lineNumber": 70, "col_offset": 81, "nodeName": "dims", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "PyroConverter", "type": "Type[PyroConverter]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 22, "col_offset": 61, "nodeName": "node", "type": "Any"}, {"lineNumber": 24, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "get_samples_and_weights", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 60, "col_offset": 81, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "get_samples_and_weights", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 70, "col_offset": 81, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "coords", "type": "Any"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "dims", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "sample_point", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "posterior_to_xarray", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "observed_data_to_xarray", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "EmpiricalMarginal", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "EmpiricalMarginal", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 58, "col_offset": 62, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "samples", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "self", "type": "PyroConverter"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "samples", "type": "Any"}]