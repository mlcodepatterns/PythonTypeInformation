[{"lineNumber": 48, "col_offset": 4, "nodeName": "energy", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "bfmi", "type": "Any"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "legend", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "ax", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "get_stats", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "figsize", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "figsize", "type": "Tuple[int, int]"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "ax", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "fill_kwargs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fill_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "fill_alpha", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "fill_color", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "kind", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "series", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "set_xticks", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "trace", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "ax", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "color", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "color", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "kind", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "series", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "ax", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "ax", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "legend", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "skip_first", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "plt", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "figsize", "type": "Union[Any, Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "energy", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "diff", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "energy", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "fill_kwargs", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "fill_kwargs", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "kdeplot", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "color", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "e_bfmi", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "trace", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "plot", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ax", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "plot_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "bw", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "plot_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 57, "nodeName": "fill_kwargs", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 76, "col_offset": 73, "nodeName": "ax", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "hist", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 63, "nodeName": "kind", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "plt", "type": "Any"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "energy", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "ax", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "label", "type": "Any"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "color", "type": "Any"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 66, "nodeName": "idx", "type": "int"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "val", "type": "Any"}]