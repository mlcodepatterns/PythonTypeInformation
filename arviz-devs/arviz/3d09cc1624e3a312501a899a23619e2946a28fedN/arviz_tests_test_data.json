[{"lineNumber": 125, "col_offset": 0, "nodeName": "test_dict_to_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_convert_to_dataset_idempotent", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "test_convert_to_inference_data_idempotent", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_convert_to_inference_data_from_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_convert_to_inference_data_bad", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "test_convert_to_dataset_bad", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "BaseArvizTest", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "second", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "dims", "type": "Dict[str, List[Optional[str]]]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "first", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "first", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "foo", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "to_netcdf", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "filename", "type": "str"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "filename", "type": "str"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "equals", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "foo", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "to_netcdf", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "filename", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "stan_dict", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "fake_chains", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "observed_data", "type": "Dict[str, Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "inference_data1", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "inference_data2", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "here", "type": "str"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "observed_data_path", "type": "str"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "datadict", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "randn", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "coords", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "second", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "foo", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "second", "type": "Any"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "join", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "first", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "filename", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "extract", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "model_pars", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "vals", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "check_var_names_coords_dims", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "convert_to_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "chains", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "cls", "type": "Type[TestEmceeNetCDFUtils]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "from_emcee", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "model", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "prior", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "from_pymc3", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "draws", "type": "int"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "chains", "type": "int"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "from_pystan", "type": "Callable[..., Any]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "from_pystan", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "get_inference_data", "type": "Callable[[], Any]"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "get_inference_data2", "type": "Callable[[], Any]"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "observed_data", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "observed_data", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "here", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "cls", "type": "Type[TestCmdStanNetCDFUtils]"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 376, "col_offset": 46, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "from_cmdstan", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "_", "type": "str"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "y_mean_true", "type": "int"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "y_mean", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "x_mean_true", "type": "numpy.ndarray"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "x_mean", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "Z_mean_true", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "Z_mean", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 410, "col_offset": 17, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 435, "col_offset": 17, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 460, "col_offset": 17, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "post_pred", "type": "str"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "post_pred", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "randn", "type": "Any"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "size", "type": "int"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "size", "type": "int"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "SyntaxWarning", "type": "Type[SyntaxWarning]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "convert_to_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "randn", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "randn", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "arange", "type": "Any"}, {"lineNumber": 65, "col_offset": 72, "nodeName": "arange", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[str]]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "arange", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "arange", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "coords", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "dims", "type": "Dict[str, List[Optional[str]]]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "first", "type": "Any"}, {"lineNumber": 161, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 169, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "draws", "type": "int"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "chains", "type": "int"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "stan_fit", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "stan_dict", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "data_vars", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "coords", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "draws", "type": "int"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "chains", "type": "int"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "school", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "theta", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "chains", "type": "int"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "draws", "type": "int"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "cls", "type": "Type[TestEmceeNetCDFUtils]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "cls", "type": "Type[TestEmceeNetCDFUtils]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "cls", "type": "Type[TestEmceeNetCDFUtils]"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "draws", "type": "int"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "fake_chains", "type": "int"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "TestEmceeNetCDFUtils"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "from_emcee", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "from_emcee", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "draws", "type": "int"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "chains", "type": "int"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "sample_prior_predictive", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "sample_posterior_predictive", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "obj", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 256, "col_offset": 18, "nodeName": "prior", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "posterior_predictive", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "load_cached_models", "type": "Any"}, {"lineNumber": 282, "col_offset": 48, "nodeName": "draws", "type": "int"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "chains", "type": "int"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "obj", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "extract", "type": "Any"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "obj", "type": "Any"}, {"lineNumber": 305, "col_offset": 41, "nodeName": "observed_data", "type": "Dict[str, Any]"}, {"lineNumber": 306, "col_offset": 42, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 322, "col_offset": 26, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "inference_data1", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "inference_data1", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "inference_data2", "type": "Any"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "inference_data2", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 333, "col_offset": 47, "nodeName": "__file__", "type": "str"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 348, "col_offset": 44, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 366, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 366, "col_offset": 48, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 379, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 379, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 384, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 388, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 53, "nodeName": "path", "type": "Union[str, List[str]]"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 392, "col_offset": 27, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 394, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "y_mean", "type": "Any"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "y_mean_true", "type": "int"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 428, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 429, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 430, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 430, "col_offset": 27, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 431, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 432, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 432, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 453, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 454, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 457, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 461, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 464, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 479, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 482, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 483, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 489, "col_offset": 24, "nodeName": "paths", "type": "Dict[str, Union[List[str], str]]"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "get_inference_data", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 506, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 506, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 507, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 508, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 508, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 509, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 509, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 68, "nodeName": "shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "foo", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "foo", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "foo", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "foo", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "self", "type": "TestConvertToDataset"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "b", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "arange", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "swapaxes", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "vals", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "cls", "type": "Type[TestEmceeNetCDFUtils]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "self", "type": "TestEmceeNetCDFUtils"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "self", "type": "TestEmceeNetCDFUtils"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "cls", "type": "Type[TestPyMC3NetCDFUtils]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "pm", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "pm", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 282, "col_offset": 48, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "cls", "type": "Type[TestPyStanNetCDFUtils]"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "obj", "type": "Any"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 366, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 382, "col_offset": 23, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 392, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 394, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 400, "col_offset": 60, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 403, "col_offset": 60, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 413, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 414, "col_offset": 23, "nodeName": "path", "type": "Union[str, List[str]]"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "path", "type": "Union[str, List[str]]"}, {"lineNumber": 417, "col_offset": 30, "nodeName": "observed_data_path", "type": "str"}, {"lineNumber": 430, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 439, "col_offset": 23, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 440, "col_offset": 22, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "observed_data_path", "type": "str"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 463, "col_offset": 24, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 464, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "post_pred", "type": "str"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "observed_data_path", "type": "str"}, {"lineNumber": 481, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 489, "col_offset": 24, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 491, "col_offset": 23, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "path", "type": "Union[List[str], str]"}, {"lineNumber": 493, "col_offset": 37, "nodeName": "post_pred", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "observed_data_path", "type": "str"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "var_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "cls", "type": "Type[TestDictNetCDFUtils]"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "arange", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 205, "col_offset": 61, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "arange", "type": "Any"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 348, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 360, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 363, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 366, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 404, "col_offset": 30, "nodeName": "x_mean", "type": "Any"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "x_mean_true", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 407, "col_offset": 30, "nodeName": "Z_mean", "type": "Any"}, {"lineNumber": 407, "col_offset": 38, "nodeName": "Z_mean_true", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 30, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 468, "col_offset": 30, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 494, "col_offset": 30, "nodeName": "self", "type": "TestCmdStanNetCDFUtils"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 397, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 403, "col_offset": 21, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 60, "nodeName": "dims", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 497, "col_offset": 34, "nodeName": "arange", "type": "Any"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "self", "type": "TestDictNetCDFUtils"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "self", "type": "TestPyMC3NetCDFUtils"}, {"lineNumber": 289, "col_offset": 55, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "self", "type": "TestPyStanNetCDFUtils"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 445, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "inference_data", "type": "Any"}]