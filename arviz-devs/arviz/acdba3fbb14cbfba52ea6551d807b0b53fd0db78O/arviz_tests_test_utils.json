[{"lineNumber": 12, "col_offset": 0, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test_var_names_warning", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "utils_with_numba_import_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "test_utils_fixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "test_conditional_jit_decorator_no_numba", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_conditional_jit_numba_decorator", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "test_conditional_jit_numba_decorator_keyword", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "centered_eight", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "var_names_expected", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "var_names", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "side_effect", "type": "Type[ImportError]"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "jit", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "jit", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "placeholder_func", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "load_arviz_data", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "centered_eight", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "importlib", "type": "module"}, {"lineNumber": 56, "col_offset": 58, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "importlib", "type": "module"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "function_results", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "wrapper_result", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "wrapper_result", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "function_results", "type": "Any"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "expected", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "import_module", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 105, "col_offset": 68, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "format_sig_figs", "type": "Any"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "var_names", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "importlib", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "default", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "utils_with_numba_import_fail", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "np", "type": "module"}]