[{"lineNumber": 22, "col_offset": 0, "nodeName": "_create_test_data", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "model_code", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "stan_file", "type": "str"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "stan_data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "fit_no_warmup", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "fit_files", "type": "Dict[str, List[pathlib.Path]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "csv_files", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "fit_warmup", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "csv_files", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "fit_files", "type": "Dict[str, List[pathlib.Path]]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "file_handle", "type": "TextIO"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "CmdStanModel", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "stan_file", "type": "str"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "save_csvfiles", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "runset", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "save_csvfiles", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "runset", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "stan_file", "type": "str"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "here", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "data_directory", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "files", "type": "Dict[str, List[str]]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "files", "type": "Dict[str, List[str]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "CmdStanMCMC", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "CmdStanMCMC", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "RunSet", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "RunSet", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "CmdStanArgs", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "CmdStanArgs", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "SamplerArgs", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "SamplerArgs", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "Data", "type": "Type[Any]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "inference_data1", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "inference_data2", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "inference_data3", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "inference_data4", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, Union[List[str], List[Any]]]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "inference_data_true_is_true", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "fails", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "stan_file", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "model_code", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "stan_file", "type": "str"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "stan_data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "fit_no_warmup", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "fit_no_warmup", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_", "type": "str"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "num", "type": "str"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "move", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "stan_data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "fit_warmup", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "fit_no_warmup", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_", "type": "str"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "num", "type": "str"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "move", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "new_path", "type": "pathlib.Path"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "here", "type": "str"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "stanfit", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "runset_obj", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "_csv_files", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "args_warmup", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "runset_obj_warmup", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "_csv_files", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "from_cmdstanpy", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "get_inference_data", "type": "Any"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 309, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 309, "col_offset": 48, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "get_inference_data", "type": "Any"}, {"lineNumber": 314, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 314, "col_offset": 56, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "get_inference_data2", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "data", "type": "Any"}, {"lineNumber": 315, "col_offset": 57, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "get_inference_data3", "type": "Any"}, {"lineNumber": 316, "col_offset": 51, "nodeName": "data", "type": "Any"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "get_inference_data4", "type": "Any"}, {"lineNumber": 317, "col_offset": 51, "nodeName": "data", "type": "Any"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 328, "col_offset": 48, "nodeName": "inference_data1", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, Union[List[str], List[Any]]]"}, {"lineNumber": 342, "col_offset": 48, "nodeName": "inference_data2", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 352, "col_offset": 48, "nodeName": "inference_data3", "type": "Any"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 356, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 356, "col_offset": 48, "nodeName": "inference_data4", "type": "Any"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "get_inference_data_warmup_true_is_true", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 363, "col_offset": 18, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "get_inference_data_warmup_false_is_true", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "get_inference_data_warmup_true_is_false", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 371, "col_offset": 40, "nodeName": "get_inference_data", "type": "Any"}, {"lineNumber": 371, "col_offset": 64, "nodeName": "data", "type": "Any"}, {"lineNumber": 371, "col_offset": 70, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 386, "col_offset": 48, "nodeName": "inference_data_true_is_true", "type": "Any"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 398, "col_offset": 48, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 399, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 401, "col_offset": 43, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 402, "col_offset": 46, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "inference_data_false_is_true", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 414, "col_offset": 48, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 418, "col_offset": 46, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 419, "col_offset": 37, "nodeName": "inference_data_true_is_false", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "check_multiple_attrs", "type": "Any"}, {"lineNumber": 430, "col_offset": 37, "nodeName": "test_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 430, "col_offset": 48, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "fails", "type": "Any"}, {"lineNumber": 432, "col_offset": 41, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 433, "col_offset": 43, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 434, "col_offset": 46, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "inference_data_false_is_false", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "file_handle", "type": "TextIO"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "stem", "type": "str"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 89, "col_offset": 78, "nodeName": "suffix", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "stem", "type": "str"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 97, "col_offset": 76, "nodeName": "suffix", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "parent", "type": "pathlib.Path"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "__file__", "type": "str"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "cmdstanpy", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "args", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "runset_obj", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "runset_obj", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "validate_csv_files", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "_assemble_draws", "type": "Any"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "args_warmup", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "runset_obj_warmup", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "runset_obj_warmup", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "validate_csv_files", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_assemble_draws", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 314, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 338, "col_offset": 46, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 89, "col_offset": 72, "nodeName": "num", "type": "str"}, {"lineNumber": 89, "col_offset": 78, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "fit_files", "type": "Dict[str, List[pathlib.Path]]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 97, "col_offset": 70, "nodeName": "num", "type": "str"}, {"lineNumber": 97, "col_offset": 76, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fit_files", "type": "Dict[str, List[pathlib.Path]]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "stem", "type": "str"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "stem", "type": "str"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "data_directory", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "data_directory", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "obj_warmup", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 243, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "lp", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "theta", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "mu", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "path", "type": "pathlib.Path"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "arange", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 247, "col_offset": 44, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 268, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 269, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "sample_stats", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "eight_schools_params", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "inference_data", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "inference_data4", "type": "Any"}, {"lineNumber": 359, "col_offset": 19, "nodeName": "inference_data4", "type": "Any"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "system", "type": "Callable[[], str]"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "platform", "type": "module"}]