[{"lineNumber": 10, "col_offset": 0, "nodeName": "eight_schools_params", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "pystan_noncentered_schools", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "pymc3_noncentered_schools", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "CheckXarrayUtils", "type": "Type[CheckXarrayUtils]"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "CheckXarrayUtils", "type": "Type[CheckXarrayUtils]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "draws", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "chains", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "stan_model", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "draws", "type": "int"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "chains", "type": "int"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "StanModel", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "sampling", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mu", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tau", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "theta_tilde", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "expected_varnames", "type": "Set[str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "varname", "type": "str"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "expected_varnames", "type": "Set[str]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "PyMC3ToXarray", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "PyStanToXarray", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "pystan", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "schools_code", "type": "str"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "stan_model", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "draws", "type": "int"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "chains", "type": "int"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "Model", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "HalfCauchy", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "Deterministic", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "draws", "type": "int"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "expected_varnames", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "coords", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "coords", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "coords", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "dims", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "default_varnames_coords_dims", "type": "Any"}, {"lineNumber": 79, "col_offset": 71, "nodeName": "obj", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "check_varnames_coords_dims", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "coords", "type": "Any"}, {"lineNumber": 80, "col_offset": 58, "nodeName": "dims", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "default_varnames_coords_dims", "type": "Any"}, {"lineNumber": 83, "col_offset": 71, "nodeName": "obj", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check_varnames_coords_dims", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "coords", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "dims", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "coords", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "coords", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "dims", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "default_varnames_coords_dims", "type": "Any"}, {"lineNumber": 90, "col_offset": 71, "nodeName": "obj", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_varnames_coords_dims", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "coords", "type": "Any"}, {"lineNumber": 91, "col_offset": 58, "nodeName": "dims", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "good", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "message", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "verify_coords_dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "good", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "message", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "message", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "default_varnames_coords_dims", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "check_varnames_coords_dims", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "coords", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "dims", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "good", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "verify_coords_dims", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "convert_to_xarray", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "draws", "type": "int"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "chains", "type": "int"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "eight_schools_params", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "pymc3_noncentered_schools", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "draws", "type": "int"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "chains", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "draws", "type": "int"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "chains", "type": "int"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "eight_schools_params", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "pystan_noncentered_schools", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "draws", "type": "int"}, {"lineNumber": 156, "col_offset": 66, "nodeName": "chains", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "pm", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "pm", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "pm", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "pm", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "pm", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "mu", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "pm", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "theta", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "pm", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "chains", "type": "int"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "varnames", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "varname", "type": "str"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "dims", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "cls", "type": "Any"}, {"lineNumber": 79, "col_offset": 71, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "cls", "type": "Any"}, {"lineNumber": 83, "col_offset": 71, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "cls", "type": "Any"}, {"lineNumber": 90, "col_offset": 71, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "cls", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "draws", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "school", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "theta", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "draws", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "draw", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "draws", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "chain", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "school", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "theta", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "chains", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "draws", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "cls", "type": "Type[TestPyMC3XarrayUtils]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 156, "col_offset": 66, "nodeName": "cls", "type": "Type[TestPyStanXarrayUtils]"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "tau", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "theta_tilde", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "data", "type": "Dict[str, Union[numpy.ndarray, int]]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 84, "col_offset": 77, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "cls", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "obj", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "coords", "type": "Any"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "dims", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "cls", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "obj", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "coords", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "dims", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 120, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 120, "col_offset": 61, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "self", "type": "CheckXarrayUtils"}]