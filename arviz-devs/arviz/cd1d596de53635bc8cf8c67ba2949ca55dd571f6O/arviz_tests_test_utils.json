[{"lineNumber": 11, "col_offset": 0, "nodeName": "data", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "utils_with_numba_import_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_utils_fixture", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "test_conditional_jit_decorator_no_numba", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_conditional_jit_numba_decorator", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_conditional_jit_numba_decorator_keyword", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "centered_eight", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "posterior", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "var_names_expected", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "side_effect", "type": "Type[ImportError]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "utils", "type": "module"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "jit", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "jit", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "placeholder_func", "type": "Any"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "load_arviz_data", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "centered_eight", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "expected", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "importlib", "type": "module"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "failed_import", "type": "unittest.mock.Mock"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "Mock", "type": "Type[unittest.mock.Mock]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "importlib", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "function_results", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "wrapper_result", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "wrapper_result", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "function_results", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "_var_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "var_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "import_module", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "utils", "type": "module"}, {"lineNumber": 90, "col_offset": 68, "nodeName": "numba_mock", "type": "unittest.mock.Mock"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "importlib", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "utils_with_numba_import_fail", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "x", "type": "Any"}]