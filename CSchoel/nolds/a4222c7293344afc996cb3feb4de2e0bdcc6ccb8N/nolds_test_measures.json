[{"lineNumber": 13, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 17, "col_offset": 2, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 2, "nodeName": "test_delay_embed_lag2", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 2, "nodeName": "test_delay_embed", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 2, "nodeName": "test_delay_embed_lag3", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 2, "nodeName": "test_delay_embed_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 77, "col_offset": 2, "nodeName": "test_binary_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 2, "nodeName": "test_binary_n_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 2, "nodeName": "test_logarithmic_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 2, "nodeName": "test_logarithmic_r", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 98, "col_offset": 2, "nodeName": "test_lyap_logistic", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 2, "nodeName": "test_lyap_fbm", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 2, "nodeName": "test_lyap_limits", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 2, "nodeName": "test_lyap_e_limits", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 205, "col_offset": 2, "nodeName": "test_hurst_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 2, "nodeName": "test_hurst_pracma", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 261, "col_offset": 2, "nodeName": "test_dfa_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 2, "nodeName": "test_dfa_fbm", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 298, "col_offset": 2, "nodeName": "test_corr_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 314, "col_offset": 2, "nodeName": "test_sampen_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "logistic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 257, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 332, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "print_arrays", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "rvals", "type": "List[float]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "sign", "type": "List[int]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "x0", "type": "float"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "le", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "walk", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "xgn", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "hgn", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "xlm", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "hlm", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "walk", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "hs", "type": "List[float]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "h", "type": "float"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "hs", "type": "List[float]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "cd", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "cd", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 333, "col_offset": 2, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 65, "col_offset": 6, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "binary_n", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "binary_n", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "logarithmic_n", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "logarithmic_r", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "r", "type": "float"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "s", "type": "int"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "rvals", "type": "List[float]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "sign", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "x", "type": "float"}, {"lineNumber": 108, "col_offset": 10, "nodeName": "x0", "type": "float"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "le", "type": "Any"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "lr", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "fbm", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "n", "type": "int"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "data", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 170, "col_offset": 6, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 171, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 210, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "cumsum", "type": "Any"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "walk", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "brown72", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "h72", "type": "Any"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "normal", "type": "Any"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "xgn", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "hgn", "type": "Any"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "xlm", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "hlm", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 266, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "cumsum", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "walk", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "data", "type": "Any"}, {"lineNumber": 290, "col_offset": 6, "nodeName": "he", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "corr_dim", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 302, "col_offset": 27, "nodeName": "cd", "type": "Any"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 303, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "corr_dim", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "cd", "type": "Any"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 324, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 333, "col_offset": 2, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 20, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "alltrue", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "lyap_r", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "s", "type": "int"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "s", "type": "int"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "le", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "n", "type": "int"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "lyap_e_len", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 238, "col_offset": 10, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 239, "col_offset": 6, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 245, "col_offset": 10, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 249, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "logistic_map", "type": "Any"}, {"lineNumber": 250, "col_offset": 10, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "fbm", "type": "Any"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "he", "type": "Any"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "self", "type": "TestNoldsCorrDim"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "self", "type": "TestNoldsCorrDim"}, {"lineNumber": 318, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 330, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "r", "type": "float"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "x", "type": "float"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "x", "type": "float"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "logistic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "x", "type": "float"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "r", "type": "float"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "x", "type": "float"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 115, "col_offset": 60, "nodeName": "r", "type": "float"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "r", "type": "float"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "randint", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "lyap_r_len", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 147, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 6, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "h", "type": "float"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 291, "col_offset": 6, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "h", "type": "float"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "sign", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "le", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "sign", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "lr", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "lyap_r_len", "type": "Any"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "randint", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "arange", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "lyap_r", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "lyap_r_len", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "lyap_r", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "all", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 151, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 72, "nodeName": "e", "type": "ValueError"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "msg", "type": "unicode"}]