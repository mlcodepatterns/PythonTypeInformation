[{"lineNumber": 11, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 2, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 2, "nodeName": "test_delay_embed_lag2", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 2, "nodeName": "test_delay_embed", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 2, "nodeName": "test_delay_embed_lag3", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "test_delay_embed_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 75, "col_offset": 2, "nodeName": "test_binary_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 2, "nodeName": "test_binary_n_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "test_logarithmic_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 2, "nodeName": "test_logarithmic_r", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 96, "col_offset": 2, "nodeName": "test_lyap_logistic", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 2, "nodeName": "test_lyap_fbm", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 126, "col_offset": 2, "nodeName": "test_hurst_basic", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 156, "col_offset": 2, "nodeName": "test_dfa_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 2, "nodeName": "test_dfa_fbm", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "test_corr_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 208, "col_offset": 2, "nodeName": "test_sampen_base", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "logistic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 226, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "print_arrays", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "rvals", "type": "List[float]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "sign", "type": "List[int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "x0", "type": "float"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "le", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "walk", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "walk", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "hs", "type": "List[float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "h", "type": "float"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "hs", "type": "List[float]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "cd", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "cd", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "se", "type": "Any"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assert_array_equals", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 63, "col_offset": 6, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "binary_n", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "binary_n", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "logarithmic_n", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "logarithmic_r", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "r", "type": "float"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "s", "type": "int"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "rvals", "type": "List[float]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "sign", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "x", "type": "float"}, {"lineNumber": 106, "col_offset": 10, "nodeName": "x0", "type": "float"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "le", "type": "Any"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "lr", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "fbm", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "cumsum", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "hurst_rs", "type": "Any"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "walk", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "h_neg", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "h_rand", "type": "Any"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "cumsum", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "walk", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "h_walk", "type": "Any"}, {"lineNumber": 184, "col_offset": 6, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 6, "nodeName": "he", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "arange", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "corr_dim", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "cd", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 199, "col_offset": 9, "nodeName": "corr_dim", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "cd", "type": "Any"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "data", "type": "List[int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 213, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "sampen", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "data", "type": "List[Union[int, float]]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "se", "type": "Any"}, {"lineNumber": 227, "col_offset": 2, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 18, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 20, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "alltrue", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "delay_embedding", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "self", "type": "TestNoldsUtility"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "lyap_r", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "s", "type": "int"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "s", "type": "int"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "le", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "self", "type": "TestNoldsHurst"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "fbm", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "dfa", "type": "Any"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "he", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "self", "type": "TestNoldsCorrDim"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "self", "type": "TestNoldsCorrDim"}, {"lineNumber": 212, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 224, "col_offset": 9, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "self", "type": "TestNoldsSampEn"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "actual", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "expected", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 66, "col_offset": 6, "nodeName": "self", "type": "TestNoldsHelperFunctions"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "r", "type": "float"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "x", "type": "float"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "x", "type": "float"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "logistic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "x", "type": "float"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "r", "type": "float"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "x", "type": "float"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "lyap_e", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "log", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "r", "type": "float"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "self", "type": "TestNoldsLyap"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "r", "type": "float"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "seq_neg", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "h", "type": "float"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 186, "col_offset": 6, "nodeName": "self", "type": "TestNoldsDFA"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "h", "type": "float"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "log", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "log", "type": "List[float]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "nolds", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "sign", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "le", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "sign", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "lr", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "np", "type": "module"}]