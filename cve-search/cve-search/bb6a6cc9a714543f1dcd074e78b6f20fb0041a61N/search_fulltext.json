[{"lineNumber": 17, "col_offset": 0, "nodeName": "indexpath", "type": "str"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "schema", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "ix", "type": "Any"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 50, "col_offset": 3, "nodeName": "q", "type": "Any"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "Schema", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "open_dir", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 45, "col_offset": 3, "nodeName": "f", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "cves", "type": "Any"}, {"lineNumber": 50, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 71, "nodeName": "TEXT", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "index", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "argparse", "type": "module"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "q", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "l", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "g", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 3, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "last", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "results", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "xr", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "TEXT", "type": "Any"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "ID", "type": "Any"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "cves", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "r", "type": "Any"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "n", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "parse", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "search", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "query", "type": "Any"}, {"lineNumber": 61, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "l", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "g", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "reader", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "most_frequent_terms", "type": "Any"}, {"lineNumber": 68, "col_offset": 5, "nodeName": "l", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "xr", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 5, "nodeName": "g", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "ix", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "join", "type": "Callable"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "q", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "xr", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 68, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "g", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "reader", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "lexicon", "type": "Any"}, {"lineNumber": 72, "col_offset": 5, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "s", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "xr", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "s", "type": "Dict[str, Union[List[Dict[str, Any]], str]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "QueryParser", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "schema", "type": "Any"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "f", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "xr", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "lmtzr", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "reader", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "most_frequent_terms", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "query", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "ix", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "ix", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "WordNetLemmatizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "xr", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "parse", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "term", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "term", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "term", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "v", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "s", "type": "Dict[str, Union[List[Dict[str, Any]], str]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "argParser", "type": "argparse.ArgumentParser"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "getcve", "type": "Any"}, {"lineNumber": 58, "col_offset": 81, "nodeName": "default", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "ix", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "searcher", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "lemmatize", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "term", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "cves", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 81, "nodeName": "json_util", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "ix", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "QueryParser", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "schema", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "lmtzr", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "words", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "term", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "s", "type": "Dict[str, Union[List[Dict[str, Any]], str]]"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "ix", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "stopwords", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "term", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "term", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "d", "type": "Dict[Any, Dict[str, int]]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "term", "type": "Any"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "y", "type": "Any"}]