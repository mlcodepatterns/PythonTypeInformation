[{"lineNumber": 7, "col_offset": 0, "nodeName": "lat_lon_from_geojson_or_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "remove_same_points", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "convert_csv", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "convert_maproulette", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "convert_geojson", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "mainfunc", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "build_element", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "build_element", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "build_element", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "lat", "type": "Any"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "lon", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "elements", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "elements", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "elements", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "value", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "value", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "value", "type": "str"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "conv_kw", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "conv_func", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "conversion_funcs", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 158, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "get", "type": "Callable"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "get", "type": "Callable"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "crosswalk", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "remove_same_points", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "elements", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "f", "type": "file"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "element", "type": "Dict[str, Union[Dict[str, Union[str, List[Dict[str, Union[str, Dict[nothing, nothing], Dict[str, Union[str, List[Any]]]]]]]], str]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "f", "type": "file"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "element", "type": "Dict[str, Union[str, Dict[nothing, nothing], Dict[str, Union[str, List[Any]]]]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "f", "type": "file"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "outputfile", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "conversion_funcs", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "mainfunc", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "entry", "type": "Dict[Any, Any]"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "entry", "type": "Dict[Any, Any]"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "lat", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "lon", "type": "Any"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "lat", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "lon", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "tupleized", "type": "Tuple[Any, ...]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "tupleized", "type": "Tuple[Any, ...]"}, {"lineNumber": 26, "col_offset": 80, "nodeName": "linesep", "type": "str"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "crosswalk", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "build_element", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 75, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 30, "col_offset": 88, "nodeName": "elements", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "linesep", "type": "str"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 56, "nodeName": "elements", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "ext", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "value", "type": "str"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "ext", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "value", "type": "str"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "ext", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "output_filename", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "value", "type": "str"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "args", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "conv_kw", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "conv_kw", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "conv_func", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "convert_csv", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "convert_geojson", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "convert_maproulette", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "coordinates", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "format", "type": "Callable"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "lat", "type": "Any"}, {"lineNumber": 17, "col_offset": 55, "nodeName": "format", "type": "Callable"}, {"lineNumber": 17, "col_offset": 62, "nodeName": "lon", "type": "Any"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 26, "col_offset": 80, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "get", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "lat_lon_from_geojson_or_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "elements", "type": "List[Dict[str, Union[Dict[str, Union[str, List[Dict[str, Union[str, Dict[nothing, nothing], Dict[str, Union[str, List[Any]]]]]]]], str]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "get", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "outer", "type": "Dict[str, Union[str, List[nothing], List[Dict[str, Union[str, Dict[nothing, nothing], Dict[str, Union[str, List[Any]]]]]]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "outputfile", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "conv_kw", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "conv_kw", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "entry", "type": "Dict[Any, Any]"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 71, "nodeName": "get", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "uuid4", "type": "Callable[[], uuid.UUID]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "get", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "file_args", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 21, "col_offset": 73, "nodeName": "item", "type": "Any"}, {"lineNumber": 21, "col_offset": 81, "nodeName": "elements", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 28, "col_offset": 71, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "uuid", "type": "module"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "items", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "item", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "crosswalk", "type": "Dict[Any, Any]"}]