[{"lineNumber": 9, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_getTileByPoint", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_getTilesIndexes", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_mergeImage", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_getBigTile", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "ZurichBellvue", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "bbox", "type": "src.base.Bbox.Bbox"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "proxy", "type": "src.service.TilesLoader.TileProxy.TileProxy"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "point", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "indexes", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "node1", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "node2", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "tile", "type": "src.base.Tile.Tile"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "ZurichBellvue", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "TileProxy", "type": "Type[src.service.TilesLoader.TileProxy.TileProxy]"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "bbox", "type": "src.base.Bbox.Bbox"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "Point", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "getTileByPoint", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "point", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "tile", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "Point", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "getTileIndexes", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "point", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "mergeImage", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Point", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Point", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "getBigTile", "type": "Callable[[Any, Any], src.base.Tile.Tile]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "node1", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "node2", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "Bbox", "type": "Type[src.base.Bbox.Bbox]"}, {"lineNumber": 11, "col_offset": 51, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 11, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "proxy", "type": "src.service.TilesLoader.TileProxy.TileProxy"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "proxy", "type": "src.service.TilesLoader.TileProxy.TileProxy"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "indexes", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "indexes", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "proxy", "type": "src.service.TilesLoader.TileProxy.TileProxy"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "proxy", "type": "src.service.TilesLoader.TileProxy.TileProxy"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "TestCrosswalkLoader", "type": "Type[TestCrosswalkLoader]"}, {"lineNumber": 11, "col_offset": 35, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "image", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "self", "type": "TestCrosswalkLoader"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "image", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "image", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "tile", "type": "src.base.Tile.Tile"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "tile", "type": "src.base.Tile.Tile"}]