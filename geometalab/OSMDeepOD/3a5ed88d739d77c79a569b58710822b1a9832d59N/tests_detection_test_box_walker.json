[{"lineNumber": 4, "col_offset": 0, "nodeName": "test_load_tile", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "test_load_streets", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "test_walk_no_compare", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test_walk", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_compare_to_bool_true", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "test_compare_to_bool_false", "type": "Callable[[], Any]"}, {"lineNumber": 5, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 5, "col_offset": 23, "nodeName": "small_bbox", "type": "Any"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "load_tiles", "type": "Callable[[], None]"}, {"lineNumber": 7, "col_offset": 11, "nodeName": "tile", "type": "Any"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "small_bbox", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "load_streets", "type": "Callable[[], None]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "streets", "type": "Any"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "zurich_bellevue", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "load_convnet", "type": "Callable[[], None]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "load_tiles", "type": "Callable[[], None]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "load_streets", "type": "Callable[[], None]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "walk", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "zurich_bellevue", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "load_convnet", "type": "Callable[[], None]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "load_tiles", "type": "Callable[[], None]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "load_streets", "type": "Callable[[], None]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "walk", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 5, "col_offset": 49, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 7, "col_offset": 11, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 11, "col_offset": 49, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 17, "col_offset": 54, "nodeName": "configuration_no_compare", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 27, "col_offset": 54, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "walker", "type": "src.detection.box_walker.BoxWalker"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "crosswalk_nodes", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "_compare_string_to_bool", "type": "Callable[[Any], bool]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "BoxWalker", "type": "Type[src.detection.box_walker.BoxWalker]"}]