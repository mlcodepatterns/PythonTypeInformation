[{"lineNumber": 6, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "testDataset_read_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_dataset_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_dataset_split_nodouble", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_dataset_load_images", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_dataset_to_input_response", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "testCategorie_read_folder", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "testCategorie_tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "testSample_ctor", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "testSample_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 6, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "factor", "type": "float"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "testinstance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "factor", "type": "float"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "should_input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "should_response_shape", "type": "Tuple[int, int]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "folder", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "folder", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "filepath", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "filepath", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "from_sourcefolder", "type": "Callable"}, {"lineNumber": 14, "col_offset": 55, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "read_samples", "type": "Callable[[], None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 58, "nodeName": "nb_samples", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "from_sourcefolder", "type": "Callable"}, {"lineNumber": 24, "col_offset": 59, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "read_samples", "type": "Callable[[], None]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "test_set", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "split_train_test", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 26, "col_offset": 62, "nodeName": "factor", "type": "float"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "from_sourcefolder", "type": "Callable"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "read_samples", "type": "Callable[[], None]"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "test_set", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "split_train_test", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "factor", "type": "float"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "test_set", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "train_sample", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "from_sourcefolder", "type": "Callable"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "read_samples", "type": "Callable[[], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "load_images", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "pil_image", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "from_sourcefolder", "type": "Callable"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "read_samples", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "load_images", "type": "Callable[[], None]"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "inputs", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "responses", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "to_input_response", "type": "Callable[[], Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "should_input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "should_response_shape", "type": "Tuple[int, int]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "from_default", "type": "Callable"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "folder", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "read_folder", "type": "Callable[[], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "from_default", "type": "Callable"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "folder", "type": "str"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "read_folder", "type": "Callable[[], None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "tag", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "filepath", "type": "str"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "filepath", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "tag", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "pil_image", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "numpy_array", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "get_test_dataset_path", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "dataset_path", "type": "str"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "from_file", "type": "Callable"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "filepath", "type": "str"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "tag", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "load_image", "type": "Callable[[], None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "pil_image", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "numpy_array", "type": "Any"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 10, "col_offset": 31, "nodeName": "__file__", "type": "str"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "Crosswalk_dataset", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Crosswalk_dataset", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "testinstance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "testinstance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "Crosswalk_dataset", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "Crosswalk_dataset", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "Crosswalk_dataset", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "inputs", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "responses", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "Categorie", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Categorie]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "Categorie", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Categorie]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "Sample", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Sample]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "Sample", "type": "Type[src.detection.deep.training.Crosswalk_dataset.Sample]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "sample", "type": "src.detection.deep.training.Crosswalk_dataset.Sample"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "samples_crosswalk", "type": "Any"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "samples_nocrosswalk", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "train_set", "type": "Any"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "test_set", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "samples_shuffled", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "testCrosswalk_dataset"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "test_sample", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "train_sample", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "instance", "type": "src.detection.deep.training.Crosswalk_dataset.Crosswalk_dataset"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "cat", "type": "src.detection.deep.training.Crosswalk_dataset.Categorie"}]