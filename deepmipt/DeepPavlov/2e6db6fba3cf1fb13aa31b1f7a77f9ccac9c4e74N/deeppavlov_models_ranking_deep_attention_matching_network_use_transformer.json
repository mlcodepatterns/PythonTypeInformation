[{"lineNumber": 27, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "TensorflowBaseMatchingModel", "type": "Type[deeppavlov.models.ranking.tf_base_matching_model.TensorflowBaseMatchingModel]"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "__name__", "type": "str"}, {"lineNumber": 368, "col_offset": 61, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "seed", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "max_sentence_len", "type": "int"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "max_sequence_length", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "word_embedding_size", "type": "int"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "trainable", "type": "bool"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "trainable_embeddings", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "is_positional", "type": "bool"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "is_positional", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "stack_num", "type": "int"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "stack_num", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "emb_matrix", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "emb_matrix", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "decay_steps", "type": "int"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "decay_steps", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "sess_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "allow_growth", "type": "bool"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "response_embeddings", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "list_turn_t", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "list_turn_length", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "list_turn_t_sent", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "sim_turns", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "sim", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "sample_len", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "batch_buffer_context_len", "type": "List[List[int]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "batch_buffer_response_len", "type": "List[int]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "raw_batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "raw_batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "context_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "raw_context_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "raw_response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "lens", "type": "List[List[int]]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "context", "type": "List[numpy.ndarray]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "batch_buffer_context_len", "type": "List[List[int]]"}, {"lineNumber": 344, "col_offset": 36, "nodeName": "lens", "type": "List[List[int]]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "response", "type": "numpy.ndarray"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "batch_buffer_response_len", "type": "List[int]"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "raw_batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "raw_batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "input_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "input_context_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "input_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "input_response_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "input_raw_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "input_raw_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 388, "col_offset": 22, "nodeName": "batch", "type": "List[Tuple[numpy.ndarray]]"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "set_random_seed", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "seed", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_init_graph", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "ConfigProto", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "gpu_options", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "Session", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "utterance_ph", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "all_utterance_len_ph", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "response_ph", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "response_sent_ph", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "embed_context_turns", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "embed_response", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "sent_embedder_context", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "sent_embedder_response", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_init_placeholders", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_init_sentence_encoder", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "a", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "sent_embedder_context", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "sent_embedder_response", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "response_embeddings", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "is_positional", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "stack_num", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "utterance_ph", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "all_utterance_len_ph", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "unstack", "type": "Any"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "sent_embedder_context", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "turn_t", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "turn_t_sent", "type": "Any"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "list_turn_t", "type": "Any"}, {"lineNumber": 197, "col_offset": 67, "nodeName": "list_turn_length", "type": "Any"}, {"lineNumber": 197, "col_offset": 85, "nodeName": "list_turn_t_sent", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "r_a_t_stack", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "t_a_r_stack", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "t_a_r", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "r_a_t", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "stack", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "sim_turns", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "final_info", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "initial_learning_rate", "type": "Any"}, {"lineNumber": 277, "col_offset": 36, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "capped_gvs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "print_number_of_parameters", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "sample", "type": "List[numpy.ndarray]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "sample", "type": "List[numpy.ndarray]"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "sample", "type": "List[numpy.ndarray]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "sample", "type": "List[numpy.ndarray]"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "sample", "type": "List[numpy.ndarray]"}, {"lineNumber": 332, "col_offset": 33, "nodeName": "context_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 34, "nodeName": "response_sentence", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "context_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "context_sentences_lens", "type": "List[int]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "context", "type": "List[numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "response_sentence", "type": "numpy.ndarray"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "raw_context_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 38, "nodeName": "raw_sent", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "utterance_ph", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "all_utterance_len_ph", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "response_ph", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "context_sent_ph", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "response_sent_ph", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "sess_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "sess_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "int32", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "int32", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "string", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "string", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "hub", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "stack", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "embed", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "response_sent_ph", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "embed_context_turns", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 146, "col_offset": 57, "nodeName": "embed_response", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "stack", "type": "Any"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "a", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "dense_emb", "type": "Any"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "sent_embedder_response", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "embedding_lookup", "type": "Any"}, {"lineNumber": 170, "col_offset": 57, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 170, "col_offset": 74, "nodeName": "response_ph", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "stack_num", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "concat", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "embedding_lookup", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "turn_t", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "is_positional", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "stack_num", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "t_a_r_stack", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "r_a_t_stack", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "sim", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 29, "nodeName": "sim", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "CNN_3d", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "sim", "type": "Any"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "loss", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "loss", "type": "Any"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "final_info", "type": "Any"}, {"lineNumber": 272, "col_offset": 61, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "logits", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "scalar", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 277, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "exponential_decay", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "initial_learning_rate", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "compute_gradients", "type": "Any"}, {"lineNumber": 286, "col_offset": 62, "nodeName": "loss", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "apply_gradients", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "capped_gvs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 53, "nodeName": "List", "type": "Any"}, {"lineNumber": 300, "col_offset": 76, "nodeName": "List", "type": "Any"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 332, "col_offset": 55, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 63, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 334, "col_offset": 56, "nodeName": "response_sentence", "type": "numpy.ndarray"}, {"lineNumber": 334, "col_offset": 77, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 337, "col_offset": 46, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "context_sentences_lens", "type": "List[int]"}, {"lineNumber": 347, "col_offset": 47, "nodeName": "response_sentence", "type": "numpy.ndarray"}, {"lineNumber": 347, "col_offset": 68, "nodeName": "response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 353, "col_offset": 63, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 71, "nodeName": "raw_response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 355, "col_offset": 51, "nodeName": "raw_sent", "type": "numpy.ndarray"}, {"lineNumber": 355, "col_offset": 63, "nodeName": "raw_response_sentences", "type": "List[numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "input_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 48, "nodeName": "input_context_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 39, "nodeName": "input_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 400, "col_offset": 43, "nodeName": "input_response_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 401, "col_offset": 43, "nodeName": "input_raw_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "input_raw_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "DAMNetworkUSETransformer", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "layers", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 170, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "positional_encoding_vector", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "sent_embedder_response", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "Hr", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "stack_num", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "concat", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "stack_num", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "t_a_r", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "r_a_t", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "t_a_r_stack", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "r_a_t_stack", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "sim_turns", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "sim", "type": "Any"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 271, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "layers", "type": "module"}, {"lineNumber": 272, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "train", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "decay_steps", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "train", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 286, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 292, "col_offset": 65, "nodeName": "var", "type": "Any"}, {"lineNumber": 292, "col_offset": 87, "nodeName": "grads_and_vars", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 300, "col_offset": 58, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 81, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 59, "nodeName": "sample_len", "type": "int"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "sample_len", "type": "int"}, {"lineNumber": 325, "col_offset": 73, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 342, "col_offset": 46, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "lens", "type": "List[List[int]]"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "response", "type": "numpy.ndarray"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "buf", "type": "List[Union[Tuple[Any, ...], Tuple[Union[List[numpy.ndarray], List[int], numpy.ndarray, int], ...]]]"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "input_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "input_context_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "input_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 391, "col_offset": 34, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "input_response_len", "type": "List[numpy.ndarray]"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "input_raw_context", "type": "List[numpy.ndarray]"}, {"lineNumber": 393, "col_offset": 37, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "input_raw_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 394, "col_offset": 38, "nodeName": "sample", "type": "Tuple[numpy.ndarray]"}, {"lineNumber": 397, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 113, "col_offset": 94, "nodeName": "max_sentence_len", "type": "Any"}, {"lineNumber": 114, "col_offset": 78, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 117, "col_offset": 69, "nodeName": "max_sentence_len", "type": "Any"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "num_context_turns", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "embed", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "glorot_uniform", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "l2", "type": "Any"}, {"lineNumber": 156, "col_offset": 57, "nodeName": "l2", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "a", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "dense_emb", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "constant", "type": "Any"}, {"lineNumber": 167, "col_offset": 70, "nodeName": "emb_matrix", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "op", "type": "module"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 186, "col_offset": 62, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "positional_encoding_vector", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "turn_t_sent", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "Hu", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "t_a_r_stack", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "r_a_t_stack", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 258, "col_offset": 51, "nodeName": "t_a_r", "type": "Any"}, {"lineNumber": 258, "col_offset": 58, "nodeName": "r_a_t", "type": "Any"}, {"lineNumber": 258, "col_offset": 67, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "var", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "clip_by_value", "type": "Any"}, {"lineNumber": 292, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 292, "col_offset": 74, "nodeName": "grad", "type": "Any"}, {"lineNumber": 292, "col_offset": 80, "nodeName": "var", "type": "Any"}, {"lineNumber": 292, "col_offset": 87, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 55, "nodeName": "sample_len", "type": "int"}, {"lineNumber": 325, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 40, "nodeName": "sample_len", "type": "int"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 31, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 341, "col_offset": 43, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "sent_len", "type": "int"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "context_sentences_lens", "type": "List[int]"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 94, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 78, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "initializers", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 156, "col_offset": 57, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "sent_embedder_context", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 93, "nodeName": "float32", "type": "Any"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "index", "type": "int"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "op", "type": "module"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 213, "col_offset": 59, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 75, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 258, "col_offset": 81, "nodeName": "word_embedding_size", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 348, "col_offset": 36, "nodeName": "response", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "batch_buffer_context_len", "type": "List[List[int]]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "batch_buffer_response_len", "type": "List[int]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "raw_batch_buffer_context", "type": "List[List[numpy.ndarray]]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "raw_batch_buffer_response", "type": "List[numpy.ndarray]"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "context_sent_ph", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "keras", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "keras", "type": "Any"}, {"lineNumber": 156, "col_offset": 57, "nodeName": "keras", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 93, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 210, "col_offset": 59, "nodeName": "index", "type": "int"}, {"lineNumber": 221, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 221, "col_offset": 59, "nodeName": "index", "type": "int"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 62, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "reuse_variables", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 232, "col_offset": 59, "nodeName": "index", "type": "int"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 62, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 236, "col_offset": 70, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "reuse_variables", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 81, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "sent", "type": "numpy.ndarray"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 362, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 364, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 57, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "index", "type": "int"}, {"lineNumber": 224, "col_offset": 71, "nodeName": "index", "type": "int"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 62, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 230, "col_offset": 63, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "index", "type": "int"}, {"lineNumber": 235, "col_offset": 71, "nodeName": "index", "type": "int"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "Hr_stack", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 62, "nodeName": "Hu_stack", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "response_len_ph", "type": "Any"}, {"lineNumber": 241, "col_offset": 70, "nodeName": "t_turn_length", "type": "Any"}, {"lineNumber": 139, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "index", "type": "int"}, {"lineNumber": 229, "col_offset": 71, "nodeName": "index", "type": "int"}, {"lineNumber": 230, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 240, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 240, "col_offset": 54, "nodeName": "index", "type": "int"}, {"lineNumber": 240, "col_offset": 71, "nodeName": "index", "type": "int"}, {"lineNumber": 241, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 82, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 91, "nodeName": "context_sent_ph", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 82, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 91, "nodeName": "self", "type": "Any"}]