[{"lineNumber": 29, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "StrUTF8EncoderInfo", "type": "Union[Type[List[str]], Type[List[Any]]]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "Estimator", "type": "Type[deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 29, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "Union", "type": "Any"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "StrUTF8EncoderInfo", "type": "Union[Type[List[str]], Type[List[Any]]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_max_word_length", "type": "int"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_reverse", "type": "bool"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "reversed_sentense_tokens", "type": "bool"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_pad_special_char_use", "type": "bool"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "pad_special_char_use", "type": "bool"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_word_boundary_special_char_use", "type": "bool"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "word_boundary_special_char_use", "type": "bool"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_sentence_boundary_special_char_use", "type": "bool"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "sentence_boundary_special_char_use", "type": "bool"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "bos_char", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "eos_char", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "bow_char", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "eow_char", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "pad_char", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_len", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "bos_chars", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "eos_chars", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "_sentence_boundary_special_char_use", "type": "bool"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_word_char_ids", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "token", "type": "nothing"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "bos_chars", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "eos_chars", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "words", "type": "itertools.chain[nothing]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "freqs", "type": "Counter[nothing]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "code", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "_pad_special_char_use", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "_word_boundary_special_char_use", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "chars_ids", "type": "Union[Any, List[Any]]"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "_reverse", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "_len", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "word_boundary_special_char_use", "type": "bool"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "indx", "type": "numpy.ndarray"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_word_boundary_special_char_use", "type": "bool"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "_pad_special_char_use", "type": "bool"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "code", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "_make_bos_eos", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "bos_char", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "_make_bos_eos", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "eos_char", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "_eos_chars", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "_bos_chars", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_eos_chars", "type": "List[nothing]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_bos_chars", "type": "List[nothing]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_word_char_ids", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_word_char_ids", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "batch", "type": "Union[List[str], Tuple[str]]"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 59, "nodeName": "f", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "token", "type": "nothing"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "_", "type": "int"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "most_common", "type": "Callable"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "pad_char", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "bow_char", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "eow_char", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "_pad_special_char_use", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "_word_boundary_special_char_use", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "word", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "_word_char_ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "_wrap_in_s_char", "type": "Any"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "chars_ids", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "_pad_special_char_use", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "chars_ids", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "ret", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "_pad_special_char_use", "type": "Any"}, {"lineNumber": 209, "col_offset": 65, "nodeName": "ret", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "max_word_length", "type": "int"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "code", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "indx", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "eos_chars", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "bos_chars", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_word_char_ids", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "_convert_word_to_char_ids", "type": "Any"}, {"lineNumber": 112, "col_offset": 72, "nodeName": "token", "type": "nothing"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "bos", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "eos", "type": "str"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "Union", "type": "Any"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "ln", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "freqs", "type": "Counter[nothing]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "_max_word_length", "type": "Any"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "int32", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "chr_id", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "chr_id", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "chr_id", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "chr_id", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "_word_char_ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "_convert_word_to_char_ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "word", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "cur_word", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 65, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 204, "col_offset": 70, "nodeName": "chars_ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "_bos_chars", "type": "Any"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "_eos_chars", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "ret", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "indx", "type": "int"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "indx", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "pad", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "code", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "token", "type": "nothing"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "batch", "type": "Union[List[str], Tuple[str]]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "_encode_chars", "type": "Any"}, {"lineNumber": 127, "col_offset": 42, "nodeName": "batch", "type": "Union[List[str], Tuple[str]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "open", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "_word_char_ids", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "token", "type": "nothing"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "_word_char_ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "_word_char_ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "_convert_word_to_char_ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 76, "nodeName": "token", "type": "nothing"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "encode", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "encode", "type": "Any"}, {"lineNumber": 177, "col_offset": 59, "nodeName": "_max_word_length", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "code", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "code", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "word", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "_eos_chars", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "chars_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "_bos_chars", "type": "Any"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "chars_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "pad_char", "type": "int"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "token", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "token", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "words", "type": "itertools.chain[nothing]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "token", "type": "nothing"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "word", "type": "Any"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "_max_word_length", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "k", "type": "int"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "word", "type": "Any"}, {"lineNumber": 177, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "k", "type": "int"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "bow_char", "type": "int"}, {"lineNumber": 85, "col_offset": 88, "nodeName": "eow_char", "type": "int"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "_max_word_length", "type": "int"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "split", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 88, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "word_encoded", "type": "Any"}, {"lineNumber": 89, "col_offset": 64, "nodeName": "code", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "strip", "type": "Any"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "ln", "type": "Any"}]