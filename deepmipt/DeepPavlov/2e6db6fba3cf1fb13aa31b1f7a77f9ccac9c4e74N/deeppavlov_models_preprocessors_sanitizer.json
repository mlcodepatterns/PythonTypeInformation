[{"lineNumber": 24, "col_offset": 16, "nodeName": "Component", "type": "Type[deeppavlov.core.models.component.Component]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "diacritical", "type": "bool"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "diacritical", "type": "bool"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "nums", "type": "bool"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "nums", "type": "bool"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "combining_characters", "type": "Dict[int, None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "filter_diacritical", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "nums", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "fromkeys", "type": "Callable"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "sanitized_utterance", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "token", "type": "str"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "sanitized_utterance", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "filter_diacritical", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "replace_nums", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "tokens_batch", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "c", "type": "int"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "normalize", "type": "Callable[[str, str], str]"}, {"lineNumber": 48, "col_offset": 53, "nodeName": "token", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "sanitized_batch", "type": "List[List[str]]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "maxunicode", "type": "int"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "combining", "type": "Callable[[str], int]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "sanitized_utterance", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "translate", "type": "Callable[[Union[Mapping[Any, Any], Sequence[Any]]], str]"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "combining_characters", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "token", "type": "Any"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "token", "type": "Any"}, {"lineNumber": 56, "col_offset": 77, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "sys", "type": "module"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 40, "col_offset": 76, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 40, "col_offset": 80, "nodeName": "c", "type": "int"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "token", "type": "str"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "re", "type": "module"}]