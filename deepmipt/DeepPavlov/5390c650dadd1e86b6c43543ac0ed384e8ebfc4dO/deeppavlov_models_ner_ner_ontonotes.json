[{"lineNumber": 28, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "TFModel", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "save", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "save_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "train_on_batch", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "shutdown", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "get_logger", "type": "Callable[[Any], logging.Logger]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "network_parameter_names", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "sess", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_network_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "network_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_net", "type": "deeppavlov.models.ner.network_ontonotes.NerNetwork"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "params_to_save", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "VOCABS", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "par", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "Session", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network_ontonotes.NerNetwork]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "save_params", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "param", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "fp", "type": "file"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "batch", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "batch", "type": "Union[List[Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "opt", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "par", "type": "Any"}, {"lineNumber": 41, "col_offset": 60, "nodeName": "network_parameter_names", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "network_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "param", "type": "Any"}, {"lineNumber": 61, "col_offset": 63, "nodeName": "param", "type": "Any"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "GRAPH_PARAMS", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "params_to_save", "type": "Dict[Any, Any]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "path", "type": "str"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "path", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "params_to_save", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "fp", "type": "file"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "_net", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_net", "type": "deeppavlov.models.ner.network_ontonotes.NerNetwork"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "signature", "type": "Any"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "par", "type": "Any"}, {"lineNumber": 41, "col_offset": 87, "nodeName": "par", "type": "Any"}, {"lineNumber": 41, "col_offset": 94, "nodeName": "opt", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "tokenize_reg", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 75, "col_offset": 62, "nodeName": "batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "inspect", "type": "module"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network_ontonotes.NerNetwork]"}, {"lineNumber": 41, "col_offset": 94, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "with_suffix", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 63, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 63, "col_offset": 75, "nodeName": "opt", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 75, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 84, "nodeName": "vocab", "type": "Any"}]