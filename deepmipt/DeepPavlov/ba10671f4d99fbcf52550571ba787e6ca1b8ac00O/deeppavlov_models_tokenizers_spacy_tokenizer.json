[{"lineNumber": 28, "col_offset": 0, "nodeName": "_try_load_spacy_model", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "Component", "type": "Type[deeppavlov.core.models.component.Component]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "disable", "type": "Set[str]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "disable", "type": "Iterable[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "stopwords", "type": "Optional[Union[List[str], List[nothing]]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "batch_size", "type": "Optional[int]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "batch_size", "type": "Optional[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "ngram_range", "type": "Tuple[int, ...]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "lemmas", "type": "bool"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "lemmas", "type": "bool"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "lowercase", "type": "Optional[bool]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "lowercase", "type": "Optional[bool]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "alphas_only", "type": "Optional[bool]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "alphas_only", "type": "Optional[bool]"}, {"lineNumber": 95, "col_offset": 68, "nodeName": "Union", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "_batch_size", "type": "Union[Any, int]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "_ngram_range", "type": "Optional[Union[Tuple[int, int], Any]]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_batch_size", "type": "Union[Any, int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_ngram_range", "type": "Optional[Union[Tuple[int, int], Any]]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "_alphas_only", "type": "Union[Any, bool]"}, {"lineNumber": 181, "col_offset": 69, "nodeName": "List", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "stopwords", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "stopwords", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "model_name", "type": "str"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "disable", "type": "Optional[Iterable[str]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "ngram_range", "type": "Optional[List[int]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "ngram_range", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "stopwords", "type": "Optional[List[str]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "_try_load_spacy_model", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "spacy_model", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "ngram_range", "type": "Optional[List[int]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "lemmas", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "ngram_range", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "ngram_range", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "_lowercase", "type": "bool"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "lowercase", "type": "bool"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "_lowercase", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "_lowercase", "type": "Union[Any, bool]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "processed_doc", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 155, "col_offset": 101, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "ngram_range", "type": "Optional[Tuple[int, int]]"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "ngram_range", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "processed_doc", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "alphas_only", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "_alphas_only", "type": "bool"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "alphas_only", "type": "bool"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "_alphas_only", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "alphas_only", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "filter_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "filter_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 181, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "disable", "type": "Set[str]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 88, "col_offset": 64, "nodeName": "disable", "type": "Optional[Union[List[str], Iterable[str]]]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "Union", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "_filter", "type": "Any"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "ngramize", "type": "Callable[..., Generator[List[str], Any, None]]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "processed_doc", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 120, "col_offset": 66, "nodeName": "Any", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "data", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "lemma_", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "_filter", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "ngramize", "type": "Callable[..., Generator[List[str], Any, None]]"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "filtered", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "processed_doc", "type": "Generator[List[str], Any, None]"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "Any", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "filter_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "load", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "e", "type": "OSError"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "detokenize", "type": "Callable[[Any], str]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "doc", "type": "Union[str, List[str]]"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "doc", "type": "Union[List[str], str]"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 117, "col_offset": 81, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 95, "col_offset": 74, "nodeName": "List", "type": "Any"}, {"lineNumber": 95, "col_offset": 91, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 59, "nodeName": "_batch_size", "type": "Union[int, Any]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "lower_", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "_ngram_range", "type": "Optional[Union[Any, Tuple[int, int]]]"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "List", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "_batch_size", "type": "Union[int, Any]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "t", "type": "Any"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "t", "type": "Any"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "doc", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "_ngram_range", "type": "Optional[Union[Tuple[int, int], Any]]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 56, "nodeName": "disable", "type": "Set[str]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "Language", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "_lemmatize", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "_tokenize", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 117, "col_offset": 86, "nodeName": "batch", "type": "Union[List[List[str]], List[str]]"}, {"lineNumber": 95, "col_offset": 96, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "doc", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "t", "type": "Any"}, {"lineNumber": 150, "col_offset": 42, "nodeName": "doc", "type": "Any"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 198, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 79, "nodeName": "stopwords", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 63, "nodeName": "stopwords", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "model_name", "type": "str"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "language", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 79, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "isspace", "type": "Any"}, {"lineNumber": 198, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "isspace", "type": "Any"}, {"lineNumber": 200, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "model_name", "type": "str"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 84, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 75, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 200, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "List", "type": "Any"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}]