[{"lineNumber": 13, "col_offset": 22, "nodeName": "Serializable", "type": "Type[deeppavlov.core.models.serializable.Serializable]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "BasicLemmatizer", "type": "Type[BasicLemmatizer]"}, {"lineNumber": 25, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "answer", "type": "List[List[Any]]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "answer", "type": "List[List[Any]]"}, {"lineNumber": 38, "col_offset": 89, "nodeName": "List", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "transform_lemmas", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "transform_lemmas", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "converter", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "memo", "type": "Dict[nothing, nothing]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "parses", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "best_lemma", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "best_lemma", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "save_path", "type": "Optional[str]"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "load_path", "type": "Optional[str]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "tags", "type": "Optional[List[List[str]]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "tags", "type": "List[List[None]]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_reset", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "MorphAnalyzer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "converter", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "save_path", "type": "Optional[str]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "load_path", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "word", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "best_lemma", "type": "str"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "best_distance", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "word", "type": "str"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "inf", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "parse", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "parses", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "distance", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "memo", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "tags", "type": "Optional[Union[List[List[str]], List[List[None]]]]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "elem", "type": "Union[Tuple[List[str], List[str]], Tuple[List[str], List[None]]]"}, {"lineNumber": 38, "col_offset": 94, "nodeName": "List", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "converters", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "memo", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "word", "type": "str"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "analyzer", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "curr_tag", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "curr_lemma", "type": "Any"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "normal_form", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "get_tag_distance", "type": "Callable[..., int]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "curr_tag", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "distance", "type": "int"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "best_distance", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 25, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "sent", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "elem", "type": "Union[Tuple[List[str], List[None]], Tuple[List[str], List[str]]]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "_lemmatize", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "word", "type": "Any"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "tag", "type": "Any"}, {"lineNumber": 55, "col_offset": 87, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 55, "col_offset": 91, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 55, "col_offset": 97, "nodeName": "tags", "type": "Optional[Union[List[List[str]], List[List[None]]]]"}, {"lineNumber": 38, "col_offset": 99, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "converter", "type": "Any"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "parse", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "best_lemma", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "best_distance", "type": "int"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "curr_lemma", "type": "Any"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "distance", "type": "int"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "distance", "type": "int"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "word", "type": "str"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "tag", "type": "Optional[str]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "_", "type": "str"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "sent", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "data", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "tags", "type": "Optional[Union[List[List[str]], List[List[None]]]]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "BasicLemmatizer"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "word", "type": "Any"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "tag", "type": "Any"}, {"lineNumber": 55, "col_offset": 63, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "tag", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "elem", "type": "Union[Tuple[List[str], List[str]], Tuple[List[str], List[None]]]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "elem", "type": "Union[Tuple[List[str], List[str]], Tuple[List[str], List[None]]]"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "elem", "type": "Union[Tuple[List[str], List[None]], Tuple[List[str], List[str]]]"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "parse", "type": "Any"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "List", "type": "Any"}, {"lineNumber": 38, "col_offset": 71, "nodeName": "str", "type": "Type[str]"}]