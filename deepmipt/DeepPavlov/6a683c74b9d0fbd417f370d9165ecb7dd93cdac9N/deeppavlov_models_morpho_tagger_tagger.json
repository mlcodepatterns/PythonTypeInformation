[{"lineNumber": 24, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "NNModel", "type": "Type[deeppavlov.core.models.nn_model.NNModel]"}, {"lineNumber": 24, "col_offset": 6, "nodeName": "get_logger", "type": "Callable[[Any], logging.Logger]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "model_file_exist", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "model_file_exist", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "par", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "CharacterTagger", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "par", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "exists", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "labels", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "x_batch", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "save_path", "type": "str"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "load_path", "type": "str"}, {"lineNumber": 42, "col_offset": 72, "nodeName": "mode", "type": "str"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "par", "type": "str"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "par", "type": "str"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "absolute", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "path", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "_net", "type": "Any"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "par", "type": "str"}, {"lineNumber": 52, "col_offset": 82, "nodeName": "par", "type": "str"}, {"lineNumber": 52, "col_offset": 89, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "par", "type": "str"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "par", "type": "str"}, {"lineNumber": 60, "col_offset": 86, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "path", "type": "str"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_net", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "save_path", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "inspect", "type": "module"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "CharacterTagger", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "inspect", "type": "module"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "_net", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "self", "type": "Any"}]