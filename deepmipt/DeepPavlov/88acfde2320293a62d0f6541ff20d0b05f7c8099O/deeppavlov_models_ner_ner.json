[{"lineNumber": 29, "col_offset": 10, "nodeName": "TFModel", "type": "Type[deeppavlov.core.models.tf_model.TFModel]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "sess", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_net", "type": "deeppavlov.models.ner.network.NerNetwork"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "par", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "Session", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "par", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "batch_x", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "batch_y", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "batch", "type": "List[List[Any]]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 42, "nodeName": "batch", "type": "Union[List[List[Any]], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "opt", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 38, "col_offset": 53, "nodeName": "par", "type": "str"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "par", "type": "str"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "train_parameters", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_net", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "par", "type": "str"}, {"lineNumber": 38, "col_offset": 87, "nodeName": "par", "type": "str"}, {"lineNumber": 38, "col_offset": 94, "nodeName": "opt", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "train_on_batch", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "par", "type": "str"}, {"lineNumber": 47, "col_offset": 84, "nodeName": "par", "type": "str"}, {"lineNumber": 47, "col_offset": 91, "nodeName": "opt", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "tokenize_reg", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 61, "col_offset": 62, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "inspect", "type": "module"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 38, "col_offset": 94, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "inspect", "type": "module"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 47, "col_offset": 91, "nodeName": "self", "type": "Any"}]