[{"lineNumber": 25, "col_offset": 20, "nodeName": "DataLearningIterator", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "DataLearningIterator", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "with_answer_rate", "type": "float"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "with_answer_rate", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "data_len", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "data_examples", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "qcas", "type": "Any"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "article", "type": "Any"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 94, "col_offset": 97, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 78, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "data_type", "type": "str"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "np_random", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "batch", "type": "List[nothing]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "question", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "context", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "dt", "type": "str"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "par", "type": "Any"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "seed", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "data_type", "type": "str"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "ans_contexts", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "noans_contexts", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "answer_text", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "answer_start", "type": "Union[List[Any], List[int]]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "data_type", "type": "str"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "qcas", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "qcas", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "answer_text", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "answer_start", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "_extract_cqas", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "article", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "context", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "qa", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "min", "type": "Callable"}, {"lineNumber": 120, "col_offset": 67, "nodeName": "data_len", "type": "int"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "context", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "noans_scores", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "noans_scores", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "context", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "data_examples", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 141, "col_offset": 63, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 141, "col_offset": 87, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "SquadIterator", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 72, "nodeName": "dt", "type": "str"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "Any", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "par", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "par", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "answer", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "data_type", "type": "str"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "data_len", "type": "int"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "c", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "contexts", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "with_answer_rate", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "choice", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "ans_contexts", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "noans_scores", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "noans_contexts", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "batch", "type": "List[nothing]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "data_examples", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "qa", "type": "Any"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "qa", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 44, "col_offset": 75, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "j", "type": "int"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "noans_contexts", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "sum", "type": "Any"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "noans_scores", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 76, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "ans", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "ans", "type": "Any"}, {"lineNumber": 137, "col_offset": 85, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "ans", "type": "Any"}, {"lineNumber": 137, "col_offset": 56, "nodeName": "ans", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "q", "type": "Any"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "answer_text", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 138, "col_offset": 69, "nodeName": "answer_start", "type": "Union[List[Any], List[int]]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "batch", "type": "List[nothing]"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "context", "type": "Any"}, {"lineNumber": 147, "col_offset": 59, "nodeName": "context", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "question", "type": "Any"}, {"lineNumber": 148, "col_offset": 71, "nodeName": "answer_text", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 84, "nodeName": "answer_start", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 69, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 65, "nodeName": "noans_contexts", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 136, "col_offset": 80, "nodeName": "context", "type": "Any"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "context", "type": "Any"}, {"lineNumber": 137, "col_offset": 89, "nodeName": "context", "type": "Any"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "context", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "context", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "context", "type": "Any"}, {"lineNumber": 141, "col_offset": 93, "nodeName": "List", "type": "Any"}, {"lineNumber": 141, "col_offset": 104, "nodeName": "List", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "answer", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "answer", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "context", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "q", "type": "Any"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "c", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "c", "type": "Any"}, {"lineNumber": 134, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 134, "col_offset": 77, "nodeName": "noans_scores", "type": "Any"}, {"lineNumber": 141, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 98, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 109, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "List", "type": "Any"}, {"lineNumber": 44, "col_offset": 92, "nodeName": "List", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "random", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 44, "col_offset": 86, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 97, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 102, "col_offset": 72, "nodeName": "List", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}]