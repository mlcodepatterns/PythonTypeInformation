[{"lineNumber": 15, "col_offset": 10, "nodeName": "SimpleTFModel", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_model_dir", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_model_file", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "model_file", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "network_parameter_names", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_net", "type": "deeppavlov.models.ner.network.NerNetwork"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "train_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "train_now", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "USR_PATH", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "par", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "checkpoint_exists", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "path", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mkdir", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "strip", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "tokenize_reg", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "utterance", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "input", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "infer", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "s", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "opt", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "par", "type": "str"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "train_parameters_names", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "absolute", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "train", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "parent", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "absolute", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "path", "type": "str"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_net", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "default_n_epochs", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "eval_conll", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "eval_conll", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "ner", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "network_parameters", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "opt", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "train_on_batch", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "par", "type": "str"}, {"lineNumber": 43, "col_offset": 79, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 43, "col_offset": 97, "nodeName": "opt", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "model_path_", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_net", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "model_path_", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "model_path_", "type": "Any"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "sys", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "train_parameters", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "train", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "eval_conll", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_net", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "_net", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_net", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_net", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "inspect", "type": "module"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "inspect", "type": "module"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "NerNetwork", "type": "Type[deeppavlov.models.ner.network.NerNetwork]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "sys", "type": "module"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_net", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "train_parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_net", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "sys", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "preprocess_tokenize", "type": "Any"}, {"lineNumber": 84, "col_offset": 68, "nodeName": "sample", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "self", "type": "Any"}]