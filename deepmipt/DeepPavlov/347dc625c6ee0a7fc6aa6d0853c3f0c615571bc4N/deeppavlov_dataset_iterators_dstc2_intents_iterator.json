[{"lineNumber": 22, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "BasicClassificationDatasetIterator", "type": "Any"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "__name__", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "field", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "fields_to_merge", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "merged_field", "type": "str"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "field_to_split", "type": "str"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "split_fields", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "split_proportions", "type": "List[float]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "turn", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "seed", "type": "int"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "reply", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "turn", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "reply", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "intent", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "reply", "type": "Any"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "slot", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "reply", "type": "Any"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "intent", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "reply", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "field", "type": "str"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "slot", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "intent", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "intent", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 74, "nodeName": "slot", "type": "Any"}, {"lineNumber": 74, "col_offset": 74, "nodeName": "slot", "type": "Any"}, {"lineNumber": 72, "col_offset": 52, "nodeName": "intent", "type": "Any"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "intent", "type": "Any"}]