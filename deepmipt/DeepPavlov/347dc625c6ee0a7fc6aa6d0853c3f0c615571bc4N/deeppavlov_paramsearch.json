[{"lineNumber": 43, "col_offset": 0, "nodeName": "get_best_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "p", "type": "pathlib.Path"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "resolve", "type": "Callable"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "__name__", "type": "str"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "max_id", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "best_params", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "best_params", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "params_helper", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "is_loo", "type": "bool"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "n_folds", "type": "None"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "pipeline_config_path", "type": "pathlib.Path"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "config_init", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "param_paths", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "param_values", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "param_paths", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "best_config", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "config_init", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "best_model_filename", "type": "pathlib.Path"}, {"lineNumber": 133, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "p", "type": "pathlib.Path"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 79, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 85, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "best_params", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "ParamsSearch", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "folds", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "is_loo", "type": "bool"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "find_config", "type": "Callable[[Union[str, pathlib.Path]], pathlib.Path]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "read_json", "type": "Callable[[Union[str, pathlib.Path]], Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "pipeline_config_path", "type": "pathlib.Path"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "parse_config", "type": "Callable[[Union[Dict[Any, Any], str, pathlib.Path]], Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "config_init", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "read_data_by_config", "type": "Callable[[Dict[Any, Any]], Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "param_value_search", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "search_type", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "combinations", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "comb", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "combinations", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "best_params_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "with_suffix", "type": "Callable"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "save_json", "type": "Callable[[Dict[Any, Any], Union[str, pathlib.Path]], None]"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "best_config", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "best_model_filename", "type": "pathlib.Path"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "max_id", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "folds", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "n_folds", "type": "None"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "find_model_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "get_value_from_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "path", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "path", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "param_value_search", "type": "Any"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "get_best_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "combinations", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 65, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 78, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "pipeline_config_path", "type": "pathlib.Path"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "best_model_filename", "type": "pathlib.Path"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "combinations", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "n_folds", "type": "int"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "params_helper", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "params_helper", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "param_names", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "param_values", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "config_init", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "param_path", "type": "nothing"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "param_value", "type": "nothing"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "param_paths", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "comb", "type": "Tuple[Any, ...]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "parse_config", "type": "Callable[[Union[Dict[Any, Any], str, pathlib.Path]], Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "is_loo", "type": "bool"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "score_dict", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "data_to_evaluate", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "score", "type": "float"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "score", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "best_params_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "best_params_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "insert_value_or_dict_into_config", "type": "Any"}, {"lineNumber": 124, "col_offset": 59, "nodeName": "best_config", "type": "Dict[Any, Any]"}, {"lineNumber": 32, "col_offset": 5, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "__file__", "type": "str"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "max_id", "type": "Any"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "folds", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "folds", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "parse_config", "type": "Callable[[Union[Dict[Any, Any], str, pathlib.Path]], Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "config_init", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "param_values", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "insert_value_or_dict_into_config", "type": "Any"}, {"lineNumber": 96, "col_offset": 63, "nodeName": "config", "type": "Any"}, {"lineNumber": 96, "col_offset": 71, "nodeName": "param_path", "type": "nothing"}, {"lineNumber": 96, "col_offset": 83, "nodeName": "param_value", "type": "nothing"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "n_folds", "type": "Optional[int]"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "calc_cv_score", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "score_dict", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "copy", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "get_iterator_from_config", "type": "Callable[[Dict[Any, Any], Dict[Any, Any]], Any]"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "data_to_evaluate", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "params_helper", "type": "Any"}, {"lineNumber": 124, "col_offset": 72, "nodeName": "param_paths", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 88, "nodeName": "best_params_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "params_helper", "type": "Any"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 70, "nodeName": "n_folds", "type": "Optional[int]"}, {"lineNumber": 101, "col_offset": 86, "nodeName": "is_loo", "type": "bool"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 75, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 110, "col_offset": 93, "nodeName": "target_metric", "type": "Any"}, {"lineNumber": 124, "col_offset": 84, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 105, "nodeName": "param_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "next", "type": "Callable"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "data_to_evaluate", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "data_to_evaluate", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "train_evaluate_model_from_config", "type": "Callable[..., Dict[str, Dict[str, float]]]"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "score_dict", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 110, "col_offset": 74, "nodeName": "iterator", "type": "Any"}]