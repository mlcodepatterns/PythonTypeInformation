[{"lineNumber": 30, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "TorchModel", "type": "Type[deeppavlov.core.models.torch_model.TorchModel]"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "__name__", "type": "str"}, {"lineNumber": 91, "col_offset": 101, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "one_hot_labels", "type": "bool"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "one_hot_labels", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "multilabel", "type": "bool"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "multilabel", "type": "bool"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "bert_config_file", "type": "Optional[str]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "bert_config_file", "type": "Optional[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "attention_probs_keep_prob", "type": "Optional[float]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "attention_probs_keep_prob", "type": "Optional[float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "hidden_keep_prob", "type": "Optional[float]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "hidden_keep_prob", "type": "Optional[float]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "clip_norm", "type": "Optional[float]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "clip_norm", "type": "Optional[float]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "input_ids", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "input_masks", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "input_type_ids", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "b_input_ids", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "b_input_masks", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "b_input_type_ids", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "clip_norm", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "input_ids", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "input_masks", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "input_type_ids", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "b_input_ids", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "b_input_masks", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "b_input_type_ids", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "return_probas", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "Union", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "multilabel", "type": "bool"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "multilabel", "type": "bool"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "device", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "to", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "device", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "to", "type": "Any"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "device", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "b_labels", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "b_labels", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "b_input_ids", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "token_type_ids", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "device", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "to", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "device", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "to", "type": "Any"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "device", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "fname", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "to", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "lr_scheduler_name", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "one_hot_labels", "type": "bool"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "optimizer", "type": "str"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "optimizer_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 91, "col_offset": 63, "nodeName": "Union", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "f", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "device", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 112, "col_offset": 74, "nodeName": "device", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 62, "nodeName": "b_input_type_ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 95, "nodeName": "b_input_masks", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "b_labels", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 122, "col_offset": 68, "nodeName": "clip_norm", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "f", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "f", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "b_input_ids", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "logits", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "multilabel", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "pred", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "pred", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "from_pretrained", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "bert_config_file", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 188, "col_offset": 46, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "optimizer_parameters", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "with_suffix", "type": "Callable"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "epochs_done", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "InputFeatures", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "cat", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "input_ids", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "cat", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "input_masks", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "input_type_ids", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "utils", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 122, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "InputFeatures", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "cat", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "input_ids", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "cat", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "input_masks", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "input_type_ids", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "b_input_type_ids", "type": "Any"}, {"lineNumber": 150, "col_offset": 93, "nodeName": "b_input_masks", "type": "Any"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "logits", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "logits", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 130, "col_offset": 63, "nodeName": "List", "type": "Any"}, {"lineNumber": 130, "col_offset": 74, "nodeName": "List", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "is_file", "type": "Callable[[], bool]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "BertForSequenceClassification", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "is_file", "type": "Callable[[], bool]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "from_json_file", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "attention_probs_keep_prob", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "attention_probs_dropout_prob", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "hidden_keep_prob", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "hidden_dropout_prob", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "BertForSequenceClassification", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 66, "nodeName": "lr_scheduler_name", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "lr_scheduler_parameters", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "resolve", "type": "Any"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "load", "type": "Any"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "functional", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "functional", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "BertConfig", "type": "Any"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 179, "col_offset": 70, "nodeName": "attention_probs_keep_prob", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "hidden_keep_prob", "type": "Any"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "optim", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "is_dir", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 67, "nodeName": "device", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "checkpoint", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 91, "col_offset": 69, "nodeName": "List", "type": "Any"}, {"lineNumber": 91, "col_offset": 80, "nodeName": "List", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "y", "type": "Union[List[List[int]], List[int]]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "y", "type": "Union[List[List[int]], List[int]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 79, "nodeName": "List", "type": "Any"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 175, "col_offset": 39, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "bert_config_file", "type": "Any"}, {"lineNumber": 176, "col_offset": 61, "nodeName": "expand_path", "type": "Callable[[Union[str, pathlib.Path]], pathlib.Path]"}, {"lineNumber": 176, "col_offset": 73, "nodeName": "bert_config_file", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "parent", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 207, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 57, "nodeName": "weights_path", "type": "pathlib.Path"}, {"lineNumber": 91, "col_offset": 74, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 130, "col_offset": 84, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 91, "col_offset": 85, "nodeName": "List", "type": "Any"}, {"lineNumber": 112, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "detach", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 90, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "logits", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "logits", "type": "Any"}]