[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "DatasetReader", "type": "Type[deeppavlov.core.data.dataset_reader.DatasetReader]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "url", "type": "str"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "data_types", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "data_types", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "columns", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "data_types", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "columns", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "download", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "mark_done", "type": "Callable[[Union[str, pathlib.Path]], None]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "pd", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "joinpath", "type": "Callable"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 61, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 40, "col_offset": 72, "nodeName": "url", "type": "Any"}, {"lineNumber": 40, "col_offset": 82, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "url", "type": "Any"}, {"lineNumber": 46, "col_offset": 67, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "joinpath", "type": "Callable"}, {"lineNumber": 40, "col_offset": 72, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "joinpath", "type": "Callable"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "loc", "type": "Any"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 41, "col_offset": 86, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "field", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "field", "type": "Any"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "columns", "type": "numpy.ndarray"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 41, "col_offset": 61, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "field", "type": "Any"}, {"lineNumber": 55, "col_offset": 81, "nodeName": "loc", "type": "Any"}, {"lineNumber": 55, "col_offset": 81, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 97, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 100, "nodeName": "columns", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 86, "nodeName": "field", "type": "Any"}]