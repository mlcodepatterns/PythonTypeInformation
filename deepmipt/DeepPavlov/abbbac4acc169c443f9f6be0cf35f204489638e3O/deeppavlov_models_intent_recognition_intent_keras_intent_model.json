[{"lineNumber": 18, "col_offset": 0, "nodeName": "config", "type": "Any"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "allow_growth", "type": "bool"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "visible_device_list", "type": "str"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "KerasModel", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "texts2vec", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "train_on_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "infer", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "cnn_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "dcnn_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "ConfigProto", "type": "Any"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "gpu_options", "type": "Any"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "gpu_options", "type": "Any"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "set_session", "type": "Any"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "config", "type": "Any"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "config", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "Session", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "confident_threshold", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "metrics_values", "type": "List[float]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "sen", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "sentences", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "embeddings_batch", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "embeddings_batch", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "onehot_labels", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "updates", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "val_loss", "type": "float"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "n_train_samples", "type": "int"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "valid_iter_all", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "valid_x", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "valid_y", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "fname", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "inp", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "f", "type": "file"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "classes", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "add_metrics", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "add_metrics_values", "type": "List[float]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "add_metrics", "type": "None"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "tok", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "embeddings", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "add_items", "type": "Callable[[Any], None]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "texts2vec", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "labels2onehot", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "onehot_labels", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "valid_i", "type": "int"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "valid_iter_all", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "add_items", "type": "Callable[[Any], None]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "texts2vec", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "labels2onehot", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "add_items", "type": "Callable[[Any], None]"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "batch", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "texts2vec", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "predict_on_batch", "type": "Any"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "features", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 71, "nodeName": "fname", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 233, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 250, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 251, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 253, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 255, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 288, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 290, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 292, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 293, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 295, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 297, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "classes", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "IOError", "type": "Type[IOError]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "load", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "init_model_from_scratch", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "split", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "el", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "embeddings", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "batch", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "classes", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "classes", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "n_train_samples", "type": "int"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "batch_generator", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "step", "type": "int"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 171, "col_offset": 41, "nodeName": "batch_gen", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "updates", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "fname", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "save_weights", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "save_items", "type": "Callable[[Any], None]"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "fname", "type": "Any"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "opt_file", "type": "file"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 46, "nodeName": "inp", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 242, "col_offset": 42, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "inp", "type": "Any"}, {"lineNumber": 258, "col_offset": 42, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "GlobalMaxPooling1D", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "inp", "type": "Any"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "add_metrics", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "opt", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "EmbeddingsDict", "type": "Type[deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict]"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "opt", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "IOError", "type": "Type[IOError]"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "metrics_file", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 71, "nodeName": "metrics_file", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "sen", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "el", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "pads", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "train_on_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "batch", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "fname", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "opt", "type": "Any"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "opt_file", "type": "file"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 243, "col_offset": 23, "nodeName": "GlobalMaxPooling1D", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 63, "nodeName": "opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "opt", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "opt", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "opt", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "opt", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "opt", "type": "Any"}, {"lineNumber": 89, "col_offset": 65, "nodeName": "opt", "type": "Any"}, {"lineNumber": 90, "col_offset": 69, "nodeName": "opt", "type": "Any"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "opt", "type": "Any"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "opt", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "opt", "type": "Any"}, {"lineNumber": 94, "col_offset": 68, "nodeName": "opt", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "el", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "get", "type": "Callable"}, {"lineNumber": 109, "col_offset": 66, "nodeName": "tok", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "opt", "type": "Any"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "log_metrics", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "log_metrics", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "val_loss", "type": "float"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "fname", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "fname", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "json", "type": "module"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 255, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 44, "nodeName": "split", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 274, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "tok2emb", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 169, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "step", "type": "int"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 178, "col_offset": 45, "nodeName": "updates", "type": "int"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 70, "nodeName": "valid_x", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 81, "nodeName": "valid_y", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "l2", "type": "Any"}, {"lineNumber": 250, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 49, "nodeName": "l2", "type": "Any"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "f", "type": "file"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "embedding_dict", "type": "deeppavlov.models.embedders.fasttext_embedder.EmbeddingsDict"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 30, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 184, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "opt", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "params", "type": "Any"}, {"lineNumber": 237, "col_offset": 92, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 272, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 279, "col_offset": 66, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 93, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "opt", "type": "Any"}, {"lineNumber": 112, "col_offset": 63, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 67, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 42, "nodeName": "opt", "type": "Any"}, {"lineNumber": 192, "col_offset": 42, "nodeName": "self", "type": "Any"}]