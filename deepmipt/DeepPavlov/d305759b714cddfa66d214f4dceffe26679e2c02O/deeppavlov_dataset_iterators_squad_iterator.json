[{"lineNumber": 23, "col_offset": 20, "nodeName": "DataLearningIterator", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "article", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "dt", "type": "str"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "par", "type": "Any"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "_extract_cqas", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "article", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "context", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "qa", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "SquadIterator", "type": "Any"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 72, "nodeName": "dt", "type": "str"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "Any", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "par", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "par", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "q", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "answer", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "qa", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "qa", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 42, "col_offset": 75, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "cqas", "type": "List[Tuple[Tuple[Any, Any], Tuple[List[Any], List[Any]]]]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "answer", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "answer", "type": "Any"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "context", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "q", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "ans_text", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 62, "nodeName": "ans_start", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 81, "nodeName": "List", "type": "Any"}, {"lineNumber": 42, "col_offset": 92, "nodeName": "List", "type": "Any"}, {"lineNumber": 42, "col_offset": 86, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 97, "nodeName": "int", "type": "Type[int]"}]