[{"lineNumber": 41, "col_offset": 23, "nodeName": "KerasModel", "type": "Type[deeppavlov.core.models.keras_model.KerasModel]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "FasttextEmbedder", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "NLTKTokenizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "fasttext_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "dim", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "confident_threshold", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "param", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "param", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "sen", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "sentences", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "embeddings_batch", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "embeddings_batch", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "onehot_labels", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "updates", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "val_loss", "type": "float"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "n_train_samples", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "valid_iter_all", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "valid_x", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "valid_y", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 366, "col_offset": 17, "nodeName": "inp", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "Type", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "sort", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "add_metrics", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "add_metrics", "type": "None"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "fasttext_model", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "fasttext_model", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "current_fasttext_md5", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "metrics_file", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "load", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "embeddings", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "infer", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "texts2vec", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "texts", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "labels2onehot", "type": "Callable[[Any, Any], numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "features", "type": "Any"}, {"lineNumber": 183, "col_offset": 61, "nodeName": "onehot_labels", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "infer", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "onehot_labels", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "valid_i", "type": "int"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "valid_iter_all", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "texts2vec", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "labels2onehot", "type": "Callable[[Any, Any], numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "preds", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 340, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 341, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 343, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 345, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 346, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 347, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 364, "col_offset": 14, "nodeName": "Input", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 377, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 378, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 380, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 381, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 383, "col_offset": 54, "nodeName": "output", "type": "Any"}, {"lineNumber": 385, "col_offset": 70, "nodeName": "output", "type": "Any"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 387, "col_offset": 43, "nodeName": "output", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "classes", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "md5_hashsum", "type": "Callable[[Any], str]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "changeable_params", "type": "Dict[str, Union[int, bool, float, str, List[str]]]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "param", "type": "str"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "opt", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "opt", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "params", "type": "Dict[str, Optional[Union[module, Any]]]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "changeable_params", "type": "Dict[str, Union[int, bool, float, str, List[str]]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "param", "type": "str"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "current_fasttext_md5", "type": "str"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "current_fasttext_md5", "type": "str"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "el", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "infer", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "embeddings", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "embeddings", "type": "Union[List[Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "embeddings", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 54, "nodeName": "classes", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "texts2vec", "type": "Any"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "texts", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "labels2onehot", "type": "Callable[[Any, Any], numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "labels", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 201, "col_offset": 54, "nodeName": "features", "type": "Any"}, {"lineNumber": 201, "col_offset": 64, "nodeName": "onehot_labels", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "texts2vec", "type": "Any"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "texts", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "features", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "classes", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 235, "col_offset": 62, "nodeName": "n_train_samples", "type": "int"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "preds", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "isgeneratorfunction", "type": "Callable[[object], bool]"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "preds", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "proba2labels", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 311, "col_offset": 32, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "inp", "type": "Any"}, {"lineNumber": 331, "col_offset": 44, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 333, "col_offset": 44, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "output_i", "type": "Any"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 342, "col_offset": 17, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "inp", "type": "Any"}, {"lineNumber": 348, "col_offset": 42, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 362, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 372, "col_offset": 44, "nodeName": "output", "type": "Any"}, {"lineNumber": 373, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "GlobalMaxPooling1D", "type": "Any"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 382, "col_offset": 17, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "inp", "type": "Any"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "act_output", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "changeable_params", "type": "Dict[str, Union[int, bool, float, str, List[str]]]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "opt", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "el", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "el", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "fasttext_model", "type": "Any"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "join", "type": "Callable"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "pads", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "embeddings_batch", "type": "List[numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 182, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "classes", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "valid_x", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "valid_y", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "valid_sample", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "batch_generator", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "step", "type": "int"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 241, "col_offset": 45, "nodeName": "batch_gen", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "updates", "type": "int"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "infer_on_batch", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "inspect", "type": "module"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "step", "type": "int"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "preds", "type": "List[Any]"}, {"lineNumber": 302, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "preds", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 311, "col_offset": 59, "nodeName": "confident_threshold", "type": "Any"}, {"lineNumber": 311, "col_offset": 93, "nodeName": "classes", "type": "Any"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "GlobalMaxPooling1D", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 43, "nodeName": "map", "type": "Callable"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "keys", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "fasttext_model", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "param", "type": "str"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "param", "type": "str"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "param", "type": "str"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "param", "type": "str"}, {"lineNumber": 114, "col_offset": 74, "nodeName": "keys", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "param", "type": "str"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "param", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "train_on_batch", "type": "Any"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "batch", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 269, "col_offset": 47, "nodeName": "epochs_done", "type": "int"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "proba2labels", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "infer_on_batch", "type": "Any"}, {"lineNumber": 303, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "preds", "type": "Any"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 311, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 93, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 323, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 340, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 345, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 52, "nodeName": "split", "type": "Any"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 364, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 380, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 385, "col_offset": 42, "nodeName": "l2", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 74, "nodeName": "opt", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "sen", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 239, "col_offset": 63, "nodeName": "opt", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "log_metrics", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "test_on_batch", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "log_metrics", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 53, "nodeName": "val_loss", "type": "float"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "sys", "type": "module"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "preds", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 65, "nodeName": "confident_threshold", "type": "Any"}, {"lineNumber": 295, "col_offset": 99, "nodeName": "classes", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "preds", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "infer_on_batch", "type": "Any"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "batch", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 329, "col_offset": 49, "nodeName": "l2", "type": "Any"}, {"lineNumber": 340, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 369, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 369, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 371, "col_offset": 47, "nodeName": "l2", "type": "Any"}, {"lineNumber": 380, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 385, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 114, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 47, "nodeName": "step", "type": "int"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "metrics_values", "type": "Any"}, {"lineNumber": 248, "col_offset": 44, "nodeName": "updates", "type": "int"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "model", "type": "Any"}, {"lineNumber": 254, "col_offset": 74, "nodeName": "valid_x", "type": "Any"}, {"lineNumber": 254, "col_offset": 85, "nodeName": "valid_y", "type": "numpy.ndarray"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "metrics_names", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "valid_metrics_values", "type": "Any"}, {"lineNumber": 295, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 295, "col_offset": 99, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 65, "nodeName": "params", "type": "Any"}, {"lineNumber": 327, "col_offset": 92, "nodeName": "i", "type": "int"}, {"lineNumber": 329, "col_offset": 52, "nodeName": "params", "type": "Any"}, {"lineNumber": 362, "col_offset": 52, "nodeName": "opt", "type": "Any"}, {"lineNumber": 369, "col_offset": 66, "nodeName": "params", "type": "Any"}, {"lineNumber": 369, "col_offset": 93, "nodeName": "i", "type": "int"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "params", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "opt", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 67, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "val_increase", "type": "int"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "opt", "type": "Any"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "opt", "type": "Any"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "self", "type": "Any"}]