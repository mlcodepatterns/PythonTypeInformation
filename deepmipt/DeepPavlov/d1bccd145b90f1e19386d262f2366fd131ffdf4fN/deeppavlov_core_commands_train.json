[{"lineNumber": 41, "col_offset": 0, "nodeName": "_fit", "type": "Callable[..., deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "fit_chainer", "type": "Callable[[Dict[Any, Any], Any], deeppavlov.core.common.chainer.Chainer]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "train_model_from_config", "type": "Callable[[str], None]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "log", "type": "Any"}, {"lineNumber": 41, "col_offset": 79, "nodeName": "Estimator", "type": "Type[deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 48, "col_offset": 65, "nodeName": "Chainer", "type": "Type[deeppavlov.core.common.chainer.Chainer]"}, {"lineNumber": 182, "col_offset": 69, "nodeName": "NNModel", "type": "Type[deeppavlov.core.models.nn_model.NNModel]"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "get_logger", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "model", "type": "deeppavlov.core.models.estimator.Estimator"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "chainer_config", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "chainer", "type": "deeppavlov.core.common.chainer.Chainer"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "chainer", "type": "deeppavlov.core.common.chainer.Chainer"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "reader_config", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "reader", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "data_path", "type": "pathlib.Path"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "iterator_config", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "val_y_true", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "val_y_predicted", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "report", "type": "Dict[str, Union[str, collections.OrderedDict[str, Any], int]]"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "epochs", "type": "int"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "examples", "type": "int"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "saved", "type": "bool"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "patience", "type": "int"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "log_on", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "start_time", "type": "float"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "break_flag", "type": "bool"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "Estimator", "type": "Type[deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "BasicDatasetIterator", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "y", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "y", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "save", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "BasicDatasetIterator", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "Chainer", "type": "Type[deeppavlov.core.common.chainer.Chainer]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "chainer_config", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "component", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "read_json", "type": "Callable[[Union[str, pathlib.Path]], Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "config_path", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "set_deeppavlov_root", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "ds_type", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "expand_path", "type": "Callable[[Union[str, pathlib.Path]], pathlib.Path]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "read", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "data_path", "type": "pathlib.Path"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "from_params", "type": "Callable[..., deeppavlov.core.models.component.Component]"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "iterator_config", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "model", "type": "deeppavlov.core.common.chainer.Chainer"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "model_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "model", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "start_time", "type": "float"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "batch_generator", "type": "Any"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 166, "col_offset": 58, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "val_y_true", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "val_y_predicted", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "NNModel", "type": "Type[deeppavlov.core.models.nn_model.NNModel]"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "BasicDatasetIterator", "type": "Any"}, {"lineNumber": 181, "col_offset": 81, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "default_train_config", "type": "Dict[Union[str, Any], Union[bool, int, str, Any]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "best", "type": "float"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "saved", "type": "bool"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "model", "type": "deeppavlov.core.models.estimator.Estimator"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "model", "type": "deeppavlov.core.models.estimator.Estimator"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "chainer_config", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "chainer_config", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 67, "nodeName": "get", "type": "Callable"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "from_params", "type": "Callable[..., deeppavlov.core.models.component.Component]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "preprocessed", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "c_out", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "in_y", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "main", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "ds_type", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "reader", "type": "Dict[str, str]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "iterator", "type": "Dict[str, str]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "get_model", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "get", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "reader", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "fit_chainer", "type": "Callable[[Dict[Any, Any], Any], deeppavlov.core.common.chainer.Chainer]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "vocab_param_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "vocab_config", "type": "Any"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "items", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "v", "type": "deeppavlov.core.models.estimator.Estimator"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "from_params", "type": "Callable[..., deeppavlov.core.models.component.Component]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "model_config", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "model", "type": "Union[deeppavlov.core.common.chainer.Chainer, deeppavlov.core.models.component.Component]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_train_batches", "type": "Callable[[deeppavlov.core.models.nn_model.NNModel, Any, Dict[Any, Any], List[Tuple[str, Callable[..., Any]]]], deeppavlov.core.models.nn_model.NNModel]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "model", "type": "Union[deeppavlov.core.common.chainer.Chainer, deeppavlov.core.models.component.Component]"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 54, "nodeName": "metrics_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "build_model_from_config", "type": "Any"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "metrics_functions", "type": "List[Tuple[str, Callable[..., Any]]]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "val_y_true", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "best", "type": "float"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "time", "type": "module"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "break_flag", "type": "bool"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "save", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 67, "nodeName": "chainer_config", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "chainer", "type": "deeppavlov.core.common.chainer.Chainer"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "preprocessed", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "preprocessed", "type": "Iterator[Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "append", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "c_in", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "c_out", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "component", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "in_y", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "main", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "reader", "type": "Dict[str, str]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "iterator", "type": "Dict[str, str]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "reader_config", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "reader_config", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "k", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "from_params", "type": "Callable[..., deeppavlov.core.models.component.Component]"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "vocab_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "_fit", "type": "Callable[..., deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "v", "type": "deeppavlov.core.models.estimator.Estimator"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "vocabs", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "config", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "warning", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "get_metrics_by_names", "type": "Callable[[List[Any]], Any]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "model", "type": "Union[deeppavlov.core.common.chainer.Chainer, deeppavlov.core.models.component.Component]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_fit", "type": "Callable[..., deeppavlov.core.models.estimator.Estimator]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "model", "type": "Union[deeppavlov.core.common.chainer.Chainer, deeppavlov.core.models.component.Component]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "model", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "val_y_true", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "val_y_predicted", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 58, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "Union", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "best", "type": "float"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "ConfigError", "type": "Type[deeppavlov.core.common.errors.ConfigError]"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 56, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "batch_generator", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "log_on", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "examples", "type": "int"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "report", "type": "Dict[str, Dict[str, Union[str, Dict[str, Any], int]]]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "metrics", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 291, "col_offset": 39, "nodeName": "patience", "type": "int"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "report", "type": "Dict[str, Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]]"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "epochs", "type": "int"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "info", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "preprocessed", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "component", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "preprocessed", "type": "Union[List[Any], Iterator[Any]]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "component", "type": "deeppavlov.core.models.component.Component"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "chainer", "type": "deeppavlov.core.common.chainer.Chainer"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "ds_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "reader_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "vocab_param_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "model", "type": "Union[deeppavlov.core.common.chainer.Chainer, deeppavlov.core.models.component.Component]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "Chainer", "type": "Type[deeppavlov.core.common.chainer.Chainer]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "warning", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "_test_model", "type": "Callable[..., Dict[str, Union[int, collections.OrderedDict[Any, Any], str]]]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "metrics_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 143, "col_offset": 63, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "report", "type": "Dict[str, Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "_test_model", "type": "Callable[..., Dict[str, Union[int, collections.OrderedDict[Any, Any], str]]]"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "metrics_functions", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 151, "col_offset": 62, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "report", "type": "Dict[str, Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "datetime", "type": "module"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "score", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "best", "type": "float"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 41, "nodeName": "y_predicted", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "train_on_batch", "type": "Callable[[List[Any], List[Any]], Any]"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "report", "type": "Dict[str, Dict[str, Union[str, Dict[str, Any], int]]]"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "break_flag", "type": "bool"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "epochs", "type": "int"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "examples", "type": "int"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "report", "type": "Dict[str, Union[str, Dict[str, Any], int]]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "_test_model", "type": "Callable[..., Dict[str, Union[int, collections.OrderedDict[Any, Any], str]]]"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "metrics_functions", "type": "List[Tuple[str, Callable[..., Any]]]"}, {"lineNumber": 274, "col_offset": 63, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 275, "col_offset": 74, "nodeName": "start_time", "type": "float"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "metrics", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "improved", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "score", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "best", "type": "float"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "patience", "type": "int"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "best", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "score", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "saved", "type": "bool"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "patience", "type": "int"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "report", "type": "Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "report", "type": "Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "patience", "type": "int"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "iter_all", "type": "Any"}, {"lineNumber": 57, "col_offset": 74, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "component_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "preprocessed", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "json", "type": "module"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "json", "type": "module"}, {"lineNumber": 176, "col_offset": 53, "nodeName": "round", "type": "Callable"}, {"lineNumber": 160, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 64, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 160, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "epochs", "type": "int"}, {"lineNumber": 240, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "examples", "type": "int"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "report", "type": "Dict[str, Union[str, Dict[str, Any], int]]"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 58, "nodeName": "epochs", "type": "int"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "s", "type": "str"}, {"lineNumber": 260, "col_offset": 79, "nodeName": "metrics_functions", "type": "List[Tuple[str, Callable[..., Any]]]"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "report", "type": "Dict[str, Dict[str, Union[str, Dict[str, Any], int]]]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "epochs", "type": "int"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "info", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "info", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "save", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "info", "type": "Any"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "report", "type": "Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "report", "type": "Dict[str, Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]]"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "info", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 54, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "s", "type": "str"}, {"lineNumber": 237, "col_offset": 83, "nodeName": "metrics_functions", "type": "List[Tuple[str, Callable[..., Any]]]"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "metrics", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 246, "col_offset": 37, "nodeName": "report", "type": "Dict[str, Dict[str, Union[str, Dict[str, Any], int]]]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 67, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 47, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 71, "nodeName": "s", "type": "str"}, {"lineNumber": 260, "col_offset": 74, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 273, "col_offset": 67, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 282, "col_offset": 56, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 282, "col_offset": 64, "nodeName": "score", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "model", "type": "deeppavlov.core.models.nn_model.NNModel"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 289, "col_offset": 70, "nodeName": "m_name", "type": "Any"}, {"lineNumber": 289, "col_offset": 78, "nodeName": "best", "type": "float"}, {"lineNumber": 296, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 176, "col_offset": 73, "nodeName": "start_time", "type": "float"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 229, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 236, "col_offset": 67, "nodeName": "train_config", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "train_y_true", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 51, "nodeName": "train_y_predicted", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 75, "nodeName": "s", "type": "str"}, {"lineNumber": 237, "col_offset": 78, "nodeName": "f", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "timedelta", "type": "Type[datetime.timedelta]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "datetime", "type": "module"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "report", "type": "Dict[str, Union[int, collections.OrderedDict[Any, Any], str, Any]]"}, {"lineNumber": 176, "col_offset": 59, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "datetime", "type": "module"}, {"lineNumber": 266, "col_offset": 65, "nodeName": "round", "type": "Callable"}, {"lineNumber": 176, "col_offset": 59, "nodeName": "time", "type": "module"}, {"lineNumber": 243, "col_offset": 69, "nodeName": "round", "type": "Callable"}, {"lineNumber": 266, "col_offset": 85, "nodeName": "start_time", "type": "float"}, {"lineNumber": 243, "col_offset": 89, "nodeName": "start_time", "type": "float"}, {"lineNumber": 266, "col_offset": 71, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 243, "col_offset": 75, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 266, "col_offset": 71, "nodeName": "time", "type": "module"}, {"lineNumber": 243, "col_offset": 75, "nodeName": "time", "type": "module"}]