[{"lineNumber": 16, "col_offset": 27, "nodeName": "Component", "type": "Type[deeppavlov.core.models.component.Component]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "LRScheduledTFModel", "type": "Type[deeppavlov.core.models.tf_model.LRScheduledTFModel]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "embedder", "type": "deeppavlov.models.embedders.abstract_embedder.Embedder"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "embedder", "type": "deeppavlov.models.embedders.abstract_embedder.Embedder"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "sentence_token_embs_1", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sentence_token_embs_2", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "dropout_keep_prob", "type": "float"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "dropout_keep_prob", "type": "float"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "return_probas", "type": "bool"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "allow_growth", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "question_ph", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "rel_emb_ph", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "r_mask_2", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "r_len_2", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "r_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "r_len", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "y_ph", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "one_hot_labels", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "keep_prob_ph", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "q_mask_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "q_len_2", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "q_mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "q_len", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "question_dr", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "b_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "questions_embs", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "rels_embs", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "feed_dict", "type": "Dict[Any, Union[numpy.ndarray, Any]]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "train", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "feed_dict", "type": "Dict[Any, Union[numpy.ndarray, Any]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "feed_dict", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "return_probas", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "List", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "feed_dict", "type": "Any"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "Embedder", "type": "Type[deeppavlov.models.embedders.abstract_embedder.Embedder]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "sentence_tokens_1", "type": "List[List[str]]"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "embedder", "type": "Any"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "sentence_tokens_2", "type": "List[List[str]]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "sentence_token_embs_1", "type": "Any"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "sentence_token_embs_2", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "ConfigProto", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "gpu_options", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "check_gpu_existence", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "GRU", "type": "Type[deeppavlov.models.squad.utils.CudnnGRU]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "CudnnGRU", "type": "Type[deeppavlov.models.squad.utils.CudnnGRU]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "GRU", "type": "Type[deeppavlov.models.squad.utils.CudnnCompatibleGRU]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "CudnnCompatibleGRU", "type": "Type[deeppavlov.models.squad.utils.CudnnCompatibleGRU]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "cast", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "rel_emb_ph", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "bool", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "cast", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "r_len_2", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "bool", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "divide_no_nan", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "int32", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "y_ph", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "placeholder_with_default", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "cast", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "question_ph", "type": "Any"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "bool", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "cast", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "q_len_2", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "bool", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "variational_dropout", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "question_ph", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "rnn", "type": "Union[deeppavlov.models.squad.utils.CudnnGRU, deeppavlov.models.squad.utils.CudnnCompatibleGRU]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "q", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "rel_emb_exp", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "dot_products", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "s_mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "att_weights", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "s_r", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "loss_tensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "Session", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "load", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "questions_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "rels_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "question_ph", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "rel_emb_ph", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "questions_embs", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 72, "nodeName": "rels_embs", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "dropout_keep_prob", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "fill_feed_dict", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "questions_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "rels_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "fill_feed_dict", "type": "Any"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "questions_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 56, "nodeName": "rels_embs", "type": "List[numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 67, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "loss_value", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "run", "type": "Any"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "feed_dict", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "loss_value", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 28, "col_offset": 78, "nodeName": "List", "type": "Any"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, float]]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "cast", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "r_mask_2", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "cast", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "r_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "math", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "rel_emb_ph", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "cast", "type": "Any"}, {"lineNumber": 78, "col_offset": 79, "nodeName": "float32", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 81, "col_offset": 80, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "cast", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "q_mask_2", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "int32", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "cast", "type": "Any"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "q_mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 70, "nodeName": "keep_prob_ph", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "question_ph", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "GRU", "type": "Union[Type[deeppavlov.models.squad.utils.CudnnGRU], Type[deeppavlov.models.squad.utils.CudnnCompatibleGRU]]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "rnn", "type": "Union[deeppavlov.models.squad.utils.CudnnGRU, deeppavlov.models.squad.utils.CudnnCompatibleGRU]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "question_dr", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "rel_emb", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "softmax_mask", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "dot_products", "type": "Any"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "q_mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "reduce_sum", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "dense", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "logits", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "sigmoid_cross_entropy_with_logits", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "loss_tensor", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "get_train_op", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "loss", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "sess", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 115, "col_offset": 74, "nodeName": "List", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Union[numpy.ndarray, Any]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Union[numpy.ndarray, Any]]"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Union[numpy.ndarray, Any]]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 129, "col_offset": 68, "nodeName": "List", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "feed_dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "run", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "feed_dict", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "sess", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "loss", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "get_learning_rate", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "get_momentum", "type": "Any"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "List", "type": "Any"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 78, "col_offset": 63, "nodeName": "r_len", "type": "Any"}, {"lineNumber": 78, "col_offset": 79, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 80, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "b_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 100, "nodeName": "keep_prob_ph", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "q_len", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 98, "col_offset": 53, "nodeName": "q", "type": "Any"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "rel_emb_exp", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "s_mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "att_weights", "type": "Any"}, {"lineNumber": 101, "col_offset": 62, "nodeName": "q", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "layers", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "s_r", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "rel_emb", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 73, "nodeName": "one_hot_labels", "type": "Any"}, {"lineNumber": 106, "col_offset": 101, "nodeName": "logits", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 79, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "y_ph", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "keep_prob_ph", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "keep_prob_ph", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 73, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "sess", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 28, "col_offset": 83, "nodeName": "List", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 93, "col_offset": 100, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 101, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 88, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Union", "type": "Any"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "Union", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 60, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 66, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 66, "nodeName": "np", "type": "module"}]