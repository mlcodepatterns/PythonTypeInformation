[{"lineNumber": 30, "col_offset": 20, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "classes", "type": "None"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "field", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "prep_method_name", "type": "str"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "prep_method_name", "type": "str"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "prep_method_name", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "data_to_div", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "data_size", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "data_to_div", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "fields_to_merge", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "data_copy", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "data_copy", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "turn", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "fields_to_merge", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "field_to_split", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "chunk", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "reply", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "merged_field", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "split_fields", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "train_test_split", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "data_to_div", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "merged_field", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "copy", "type": "module"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "chunk", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "turn", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "reply", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "intent", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_merge_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "_split_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "PREPROCESSORS", "type": "Dict[str, Callable[[List[Any]], List[Any]]]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "field_to_split", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "split_fields", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "split_fields", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "merged_field", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "data_type", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "data_copy", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "reply", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "slot", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "reply", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 73, "nodeName": "fields_to_merge", "type": "Any"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "merged_field", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "fields_to_merge", "type": "Any"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "merged_field", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 75, "nodeName": "field_to_split", "type": "Any"}, {"lineNumber": 82, "col_offset": 75, "nodeName": "split_fields", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "field_to_split", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "split_fields", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "prep_method_name", "type": "str"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "field_to_split", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "intent", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "new_data", "type": "Dict[str, List[Tuple[Any, List[Any]]]]"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "reply", "type": "Any"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "data_to_div", "type": "Any"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "prep_method", "type": "Any"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "chunk", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "field", "type": "str"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 85, "col_offset": 58, "nodeName": "s", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "s", "type": "Any"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "split_proportions", "type": "Any"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "data_size", "type": "int"}, {"lineNumber": 122, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "slot", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "append", "type": "Callable"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "intent", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "intent", "type": "Any"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "split_proportions", "type": "Any"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "sample", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "curr_intents", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 74, "nodeName": "slot", "type": "Any"}, {"lineNumber": 58, "col_offset": 74, "nodeName": "slot", "type": "Any"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "intent", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "intent", "type": "Any"}]