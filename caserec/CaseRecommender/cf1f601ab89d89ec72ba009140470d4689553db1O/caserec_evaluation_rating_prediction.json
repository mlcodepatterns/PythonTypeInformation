[{"lineNumber": 14, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "simple_evaluation", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "evaluation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "folds_evaluation", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "folds_evaluation_item_cold_start", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "simple_evaluation_cold_start", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "simple_evaluation_item_cold_start", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "rmse", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "mae", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "user", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "rmse", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mae", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "fold", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "fold", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "rmse", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "mae", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "user", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "train", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "new_items", "type": "Set[Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "rmse", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "mae", "type": "int"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "user", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "rmse", "type": "float"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "mae", "type": "float"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "mae", "type": "Union[int, float]"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "rmse", "type": "float"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "mae", "type": "float"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "mae", "type": "Union[int, float]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 77, "col_offset": 102, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "train_file", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 91, "col_offset": 102, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "rmse", "type": "float"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "mae", "type": "float"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "rmse", "type": "Union[int, float]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "return_information", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "train", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "rmse", "type": "float"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "mae", "type": "float"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "rmse", "type": "Union[int, float]"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "rmse", "type": "float"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "mae", "type": "float"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "name_prediction", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "name_test", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "mae", "type": "Union[int, float]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "simple_evaluation", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 73, "col_offset": 59, "nodeName": "test", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "std", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "mean", "type": "Any"}, {"lineNumber": 77, "col_offset": 73, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 77, "col_offset": 84, "nodeName": "std", "type": "Any"}, {"lineNumber": 77, "col_offset": 91, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "name_prediction", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "name_test", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "rmse", "type": "Union[int, float]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "simple_evaluation_item_cold_start", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 87, "col_offset": 75, "nodeName": "test", "type": "Any"}, {"lineNumber": 87, "col_offset": 81, "nodeName": "train_file", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "std", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "mean", "type": "Any"}, {"lineNumber": 91, "col_offset": 73, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 91, "col_offset": 84, "nodeName": "std", "type": "Any"}, {"lineNumber": 91, "col_offset": 91, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "user", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "list_user", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "min_feedback", "type": "Any"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "new_items", "type": "Set[Any]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "file_result", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "file_test", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "user", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "rmse", "type": "float"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "mae", "type": "float"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "math", "type": "module"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "mae", "type": "Union[int, float]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "user", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "item", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "rui_predict", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "pow", "type": "Callable[[SupportsFloat, SupportsFloat], float]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "math", "type": "module"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "mae", "type": "Union[int, float]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 84, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 87, "col_offset": 106, "nodeName": "min_feedback", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "list_rmse", "type": "List[Union[int, float]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "list_mae", "type": "List[Union[int, float]]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 84, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "file_result", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "file_test", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "math", "type": "module"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "file_result", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "file_test", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "ReadFile", "type": "Type[caserec.utils.read_file.ReadFile]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "file_train", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "user", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "new_items", "type": "Set[Any]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "math", "type": "module"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "mae", "type": "Union[float, int]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "pow", "type": "Callable[[SupportsFloat, SupportsFloat], float]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "p", "type": "Any"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "math", "type": "module"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "rui_predict", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "rui_predict", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "rmse", "type": "Union[float, int]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 61, "col_offset": 49, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "folds_dir", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "folds_dir", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "folds_dir", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "folds_dir", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "folds_dir", "type": "Any"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "user", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "rmse", "type": "float"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "mae", "type": "float"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "rmse", "type": "Union[int, float]"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "space_type", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "new_items", "type": "Set[Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "rmse", "type": "float"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "mae", "type": "float"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "rmse", "type": "Union[int, float]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "count_comp", "type": "int"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "math", "type": "module"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 33, "col_offset": 52, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "math", "type": "module"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "item", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "fold", "type": "int"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "fold", "type": "int"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "fold", "type": "int"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "fold", "type": "int"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "fold", "type": "int"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "pow", "type": "Callable[[SupportsFloat, SupportsFloat], float]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "self", "type": "RatingPredictionEvaluation"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "train", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 136, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "pow", "type": "Callable[[SupportsFloat, SupportsFloat], float]"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "item", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "test_set", "type": "Any"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "user", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "math", "type": "module"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 106, "col_offset": 56, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "math", "type": "module"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "math", "type": "module"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 138, "col_offset": 60, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "math", "type": "module"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "rui_predict", "type": "float"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "rui_test", "type": "float"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 60, "nodeName": "user", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 54, "nodeName": "user", "type": "Any"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "item", "type": "Any"}, {"lineNumber": 105, "col_offset": 64, "nodeName": "item", "type": "Any"}, {"lineNumber": 136, "col_offset": 74, "nodeName": "item", "type": "Any"}, {"lineNumber": 137, "col_offset": 68, "nodeName": "item", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 64, "nodeName": "user", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "user", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "predict", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 68, "nodeName": "user", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "user", "type": "Any"}]