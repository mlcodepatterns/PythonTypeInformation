[{"lineNumber": 11, "col_offset": 10, "nodeName": "Agent", "type": "Type[agents.agent.Agent]"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "monitor_path", "type": "str"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "monitor_path", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "state_shape", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "states", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "actions_taken", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "softq_target", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "value_target", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "softq_loss", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "value_target", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "value_loss", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "summaries", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "model_summary_op", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "replay_buffer", "type": "memory.memory.Memory"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "n_updates", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ema", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "target_update", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "action_batch", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "next_value_batch", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "softq_targets", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "summary", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "n_updates", "type": "int"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "max_action", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "high", "type": "Any"}, {"lineNumber": 12, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "usercfg", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "float32", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "bool", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "action_output", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "action_logprob", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "actor_vars", "type": "Any"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "build_actor_network", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "softq_vars", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "build_softq_network", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "value_output", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "value_vars", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "build_value_network", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "target_value_output", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "value_target_update", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "build_target_value_network", "type": "Callable[[List[Any]], Any]"}, {"lineNumber": 47, "col_offset": 93, "nodeName": "value_vars", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "action_logprob", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "softq_loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "value_loss", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "actor_loss", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "softq_train_op", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "value_train_op", "type": "Any"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "actor_train_op", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "value_vars", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "merge", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "summaries", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "Memory", "type": "Type[memory.memory.Memory]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "FileWriter", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "log_std", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "normal_dist", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "actor_vars", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "actions", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "logprob", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "actor_vars", "type": "Any"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "ExponentialMovingAverage", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "apply", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "value_vars", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "xw_plus_b", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "target_update", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "concat", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "softq_vars", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "softq_vars", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "value_vars", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "value_vars", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "target_value_output", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "action_output", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "get_batch", "type": "Callable[[int], Dict[Any, Any]]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "resize", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "target_value", "type": "Callable[[numpy.ndarray], Any]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 174, "col_offset": 88, "nodeName": "float32", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "softq_loss", "type": "Any"}, {"lineNumber": 176, "col_offset": 55, "nodeName": "train_op", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 177, "col_offset": 67, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "Summary", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "add_summary", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "summary", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "n_updates", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "episode", "type": "int"}, {"lineNumber": 13, "col_offset": 36, "nodeName": "usercfg", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "state_shape", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "tf", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "SAC"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "self", "type": "SAC"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "self", "type": "SAC"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "self", "type": "SAC"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "self", "type": "SAC"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "self", "type": "SAC"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "self", "type": "SAC"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "self", "type": "SAC"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "self", "type": "SAC"}, {"lineNumber": 47, "col_offset": 93, "nodeName": "self", "type": "SAC"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "self", "type": "SAC"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "self", "type": "SAC"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "value_output", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "action_logprob", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "self", "type": "SAC"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "self", "type": "SAC"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "self", "type": "SAC"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "actor_vars", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "softq_vars", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "self", "type": "SAC"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "summary", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "summary", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "join", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "monitor_path", "type": "str"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "get_default_graph", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "mean", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "actions_taken", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 99, "col_offset": 77, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "train", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "ema", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "average", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "value_vars", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "xw_plus_b", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "xw_plus_b", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "states", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "actions", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 122, "col_offset": 77, "nodeName": "name", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "get_collection", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "TRAINABLE_VARIABLES", "type": "Any"}, {"lineNumber": 133, "col_offset": 77, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "self", "type": "SAC"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "self", "type": "SAC"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "self", "type": "SAC"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "run", "type": "Any"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "action_output", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "replay_buffer", "type": "memory.memory.Memory"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 80, "nodeName": "n_actions", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "self", "type": "SAC"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 88, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "self", "type": "SAC"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "self", "type": "SAC"}, {"lineNumber": 176, "col_offset": 55, "nodeName": "self", "type": "SAC"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "summary_writer", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "self", "type": "SAC"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "value_target_update", "type": "Any"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "model_summary_op", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "env", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "init_op", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "episode_reward", "type": "int"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "episode_length", "type": "int"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "SAC", "type": "Type[SAC]"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "self", "type": "SAC"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "env", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "self", "type": "SAC"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "self", "type": "SAC"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "self", "type": "SAC"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "softq_target", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "self", "type": "SAC"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "value_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 82, "nodeName": "value_target", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "value_output", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "AdamOptimizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "self", "type": "SAC"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "self", "type": "SAC"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "summaries", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "histogram", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 88, "col_offset": 103, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "self", "type": "SAC"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 91, "col_offset": 93, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "self", "type": "SAC"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 92, "col_offset": 99, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "exp", "type": "Any"}, {"lineNumber": 94, "col_offset": 63, "nodeName": "log_std", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "normal_dist", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "normal_dist", "type": "Any"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "self", "type": "SAC"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "tf", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "ema", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "target_net", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "SAC"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "self", "type": "SAC"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "linear", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "GraphKeys", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "actions_taken", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "actions", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "self", "type": "SAC"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "self", "type": "SAC"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "self", "type": "SAC"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 80, "nodeName": "self", "type": "SAC"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "resize", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "softq_targets", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "softq_target", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "actions_taken", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "softq_targets", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "action_batch", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "summary", "type": "Any"}, {"lineNumber": 185, "col_offset": 64, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 185, "col_offset": 70, "nodeName": "critic_loss", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "summary", "type": "Any"}, {"lineNumber": 186, "col_offset": 73, "nodeName": "mean", "type": "Any"}, {"lineNumber": 186, "col_offset": 81, "nodeName": "predicted_q", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "summary", "type": "Any"}, {"lineNumber": 187, "col_offset": 72, "nodeName": "std", "type": "Any"}, {"lineNumber": 187, "col_offset": 79, "nodeName": "predicted_q", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "SAC"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "self", "type": "SAC"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "self", "type": "SAC"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "self", "type": "SAC"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "sess", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "self", "type": "SAC"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "reset", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "episode_length", "type": "int"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "episode_reward", "type": "Any"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "reward", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "done", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "tags", "type": "Any"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "self", "type": "SAC"}, {"lineNumber": 51, "col_offset": 82, "nodeName": "self", "type": "SAC"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "self", "type": "SAC"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "action_logprob", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "softq_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "self", "type": "SAC"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "train", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "train", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "train", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "summary", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "SAC"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "self", "type": "SAC"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 94, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 84, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 90, "nodeName": "w_bound", "type": "float"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 77, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 122, "col_offset": 77, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 77, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "get_default_session", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "self", "type": "SAC"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "next_value_batch", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "self", "type": "SAC"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "action", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "state", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "reward", "type": "Any"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "done", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "_", "type": "Any"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "step", "type": "Any"}, {"lineNumber": 204, "col_offset": 63, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "add", "type": "Callable[[numpy.ndarray, numpy.ndarray, Union[float, int], numpy.ndarray, Optional[bool]], None]"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "state", "type": "Any"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 58, "nodeName": "reward", "type": "Any"}, {"lineNumber": 207, "col_offset": 66, "nodeName": "new_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 77, "nodeName": "done", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "n_entries", "type": "int"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "summary", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "spec", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "self", "type": "SAC"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "self", "type": "SAC"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 99, "col_offset": 77, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "self", "type": "SAC"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "self", "type": "SAC"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "self", "type": "SAC"}, {"lineNumber": 122, "col_offset": 77, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "self", "type": "SAC"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "self", "type": "SAC"}, {"lineNumber": 133, "col_offset": 77, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "state", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "SAC"}, {"lineNumber": 174, "col_offset": 50, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "self", "type": "SAC"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "self", "type": "SAC"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "self", "type": "SAC"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "env", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "replay_buffer", "type": "memory.memory.Memory"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "replay_buffer", "type": "memory.memory.Memory"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "Summary", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "add", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "add_summary", "type": "Any"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "summary", "type": "Any"}, {"lineNumber": 218, "col_offset": 65, "nodeName": "episode", "type": "int"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "flush", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 174, "col_offset": 50, "nodeName": "self", "type": "SAC"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "self", "type": "SAC"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "self", "type": "SAC"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "self", "type": "SAC"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "self", "type": "SAC"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "train", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "summary_writer", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "summary_writer", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "self", "type": "SAC"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "self", "type": "SAC"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "summary", "type": "Any"}, {"lineNumber": 215, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 215, "col_offset": 61, "nodeName": "episode_length", "type": "int"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "summary", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 217, "col_offset": 61, "nodeName": "episode_reward", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "self", "type": "SAC"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "self", "type": "SAC"}]