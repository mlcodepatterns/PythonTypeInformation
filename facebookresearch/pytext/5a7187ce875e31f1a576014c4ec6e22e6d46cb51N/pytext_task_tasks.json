[{"lineNumber": 58, "col_offset": 39, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "DocumentRegressionTask", "type": "Type[DocumentRegressionTask]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "DocumentRegressionTask", "type": "Type[DocumentRegressionTask]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "Config", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "EnsembleModel", "type": "Type[pytext.models.ensembles.ensemble.EnsembleModel]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "EnsembleTrainer", "type": "Type[pytext.trainers.ensemble_trainer.EnsembleTrainer]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "Config", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "train", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "Config", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "DocRegressionModel", "type": "Type[pytext.models.doc_model.DocRegressionModel]"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "Config", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "Config", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "WordTaggingModel", "type": "Type[pytext.models.word_model.WordTaggingModel]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "IntentSlotModel", "type": "Type[pytext.models.joint_model.IntentSlotModel]"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "Config", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "LMLSTM", "type": "Type[pytext.models.language_models.lmlstm.LMLSTM]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "Config", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "Config", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "MaskedLanguageModel", "type": "Type[pytext.models.masked_lm.MaskedLanguageModel]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "Config", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "BasePairwiseModel", "type": "Type[pytext.models.pair_classification_model.BasePairwiseModel]"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "Config", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "RoBERTaWordTaggingModel", "type": "Type[pytext.models.roberta.RoBERTaWordTaggingModel]"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "Config", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "NERMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.NERMetricReporter]"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "Config", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "NERMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.NERMetricReporter]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "SeqNNModel", "type": "Type[pytext.models.seq_models.seqnn.SeqNNModel]"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "Config", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "Union", "type": "Any"}, {"lineNumber": 214, "col_offset": 66, "nodeName": "Config", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "SquadMetricReporter", "type": "Type[pytext.metric_reporters.squad_metric_reporter.SquadMetricReporter]"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "Config", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "Config", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "CompositionalMetricReporter", "type": "Type[pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter]"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "model", "type": "pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "metric_reporter", "type": "pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "trainer", "type": "pytext.trainers.hogwild_trainer.HogwildTrainer"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "report_train_metrics", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "QueryDocPairwiseRankingModel", "type": "Type[pytext.models.query_document_pairwise_ranking_model.QueryDocPairwiseRankingModel]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "PairwiseRankingMetricReporter", "type": "Type[pytext.metric_reporters.pairwise_ranking_metric_reporter.PairwiseRankingMetricReporter]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "EnsembleTrainer", "type": "Type[pytext.trainers.ensemble_trainer.EnsembleTrainer]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "models", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "cls", "type": "Type[EnsembleTask]"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "DocModel", "type": "Type[pytext.models.doc_model.DocModel]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "n", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "DocRegressionModel", "type": "Type[pytext.models.doc_model.DocRegressionModel]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "RegressionMetricReporter", "type": "Type[pytext.metric_reporters.regression_metric_reporter.RegressionMetricReporter]"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "WordTaggingModel", "type": "Type[pytext.models.word_model.WordTaggingModel]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "SequenceTaggingMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.SequenceTaggingMetricReporter]"}, {"lineNumber": 151, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "SequenceTaggingMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.SequenceTaggingMetricReporter]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "IntentSlotModel", "type": "Type[pytext.models.joint_model.IntentSlotModel]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "IntentSlotMetricReporter", "type": "Type[pytext.metric_reporters.intent_slot_detection_metric_reporter.IntentSlotMetricReporter]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "LMLSTM", "type": "Type[pytext.models.language_models.lmlstm.LMLSTM]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "LanguageModelMetricReporter", "type": "Type[pytext.metric_reporters.language_model_metric_reporter.LanguageModelMetricReporter]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "PackedLMData", "type": "Type[pytext.data.packed_lm_data.PackedLMData]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "MaskedLanguageModel", "type": "Type[pytext.models.masked_lm.MaskedLanguageModel]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "MaskedLMMetricReporter", "type": "Type[pytext.metric_reporters.language_model_metric_reporter.MaskedLMMetricReporter]"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "PairwiseModel", "type": "Type[pytext.models.pair_classification_model.PairwiseModel]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "RoBERTaWordTaggingModel", "type": "Type[pytext.models.roberta.RoBERTaWordTaggingModel]"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "NERMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.NERMetricReporter]"}, {"lineNumber": 196, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "labels_pad_idx", "type": "Any"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "SeqNNModel", "type": "Type[pytext.models.seq_models.seqnn.SeqNNModel]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 214, "col_offset": 66, "nodeName": "DrQAModel", "type": "Type[pytext.models.qna.dr_qa.DrQAModel]"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "SquadMetricReporter", "type": "Type[pytext.metric_reporters.squad_metric_reporter.SquadMetricReporter]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "CompositionalMetricReporter", "type": "Type[pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter]"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "train_batch_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "eval_batch_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "test_batch_size", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "real_trainers", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "Config", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "BertModelInput", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "Config", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "trainer", "type": "pytext.trainers.hogwild_trainer.HogwildTrainer"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "trainer", "type": "pytext.trainers.trainer.TaskTrainer"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "BaggingDocEnsembleModel", "type": "Type[pytext.models.ensembles.bagging_doc_ensemble.BaggingDocEnsembleModel]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 75, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 196, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 196, "col_offset": 75, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "ConsoleChannel", "type": "Type[pytext.metric_reporters.channel.ConsoleChannel]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "labels_vocab", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "BertSquadQAModel", "type": "Type[pytext.models.qna.bert_squad_qa.BertSquadQAModel]"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "DrQAModel", "type": "Type[pytext.models.qna.dr_qa.DrQAModel]"}, {"lineNumber": 235, "col_offset": 13, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 104, "col_offset": 66, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "Config", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "Config", "type": "Any"}, {"lineNumber": 104, "col_offset": 66, "nodeName": "score", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "DocModel", "type": "Type[pytext.models.doc_model.DocModel]"}]