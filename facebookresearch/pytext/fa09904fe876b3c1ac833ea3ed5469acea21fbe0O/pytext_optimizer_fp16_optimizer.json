[{"lineNumber": 451, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "FP16OptimizerDeprecated", "type": "Type[FP16OptimizerDeprecated]"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 42, "col_offset": 53, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 443, "col_offset": 26, "nodeName": "optimizer", "type": "Union[FP16OptimizerDeprecated, PureFP16Optimizer]"}, {"lineNumber": 452, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 488, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 516, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 580, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 639, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "pytext.optimizer.optimizers.Optimizer"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerApex]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 167, "col_offset": 51, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_opt_level", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 289, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 338, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 338, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 352, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 414, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 440, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 440, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 440, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 440, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 448, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 448, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 457, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 490, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 490, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 502, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 515, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 535, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 545, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 588, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 588, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 588, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 588, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 623, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 623, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 635, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 636, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 639, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 640, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 658, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 69, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "amp", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "_deactivate", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 289, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 337, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 379, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 397, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 415, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 448, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 517, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 535, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 536, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 540, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 545, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 559, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 560, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 582, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 585, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 586, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 607, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 609, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 623, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 624, "col_offset": 61, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 625, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 637, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 639, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 641, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 641, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 642, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 643, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 655, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "e", "type": "AttributeError"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "amp", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "DELAY_UNSCALE", "type": "bool"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 292, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 384, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 517, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 539, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 540, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 613, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 625, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 641, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 654, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 659, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "precision", "type": "module"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "amp", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "_amp_state", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 290, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 292, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 294, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 327, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 384, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 390, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 390, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 391, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 401, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 536, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 539, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 540, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 542, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 585, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 613, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 625, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 642, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "amp", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 294, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 324, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 390, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 399, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 613, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 661, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 332, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 548, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "p", "type": "Any"}]