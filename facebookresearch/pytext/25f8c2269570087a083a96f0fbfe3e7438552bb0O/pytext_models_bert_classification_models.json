[{"lineNumber": 38, "col_offset": 19, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "BasePairwiseModel", "type": "Type[pytext.models.pair_classification_model.BasePairwiseModel]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "SUPPORT_FP16_OPTIMIZER", "type": "bool"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "BertModelInput", "type": "Type[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "model_inputs", "type": "Tuple[Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "model_inputs", "type": "Union[Tuple[Any, ...], Tuple[Any]]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "output_encoded_layers", "type": "Any"}, {"lineNumber": 73, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "output_layer", "type": "Union[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer, pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer, pytext.models.output_layers.doc_classification_output_layer.MultiLabelOutputLayer]"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "module_list", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "stage", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "stage", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "module_list", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "BasePairwiseModel", "type": "Type[pytext.models.pair_classification_model.BasePairwiseModel]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "ModelInputBase", "type": "Type[pytext.models.model.ModelInputBase]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "shared_encoder", "type": "bool"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "encoders", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "shared_encoder", "type": "bool"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "nn", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "encodings", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "encode_relations", "type": "bool"}, {"lineNumber": 207, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "Config", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "dense", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "BertModelInput", "type": "Type[Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "model_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "representation", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "dim", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "create_loss", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "BinaryCrossEntropyLoss", "type": "Type[pytext.loss.loss.BinaryCrossEntropyLoss]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "output_layer_cls", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "BinaryClassificationOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "output_layer_cls", "type": "Union[Type[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer], Type[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer], Type[pytext.models.output_layers.doc_classification_output_layer.MultiLabelOutputLayer]]"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "loss", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "cls", "type": "Type[NewBertModel]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "output_layer", "type": "Union[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer, pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer, pytext.models.output_layers.doc_classification_output_layer.MultiLabelOutputLayer]"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "__class__", "type": "Type[NewBertModel]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "Config", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[pytext.models.decoders.decoder_base.DecoderBase, pytext.models.output_layers.output_layer_base.OutputLayerBase, Optional[bool]], None]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "encode_relations", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "__class__", "type": "Type[BertPairwiseModel]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "_create_encoder", "type": "Callable[[Any, Dict[str, pytext.data.tensorizers.Tensorizer]], Any]"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "config", "type": "Any"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "_create_decoder", "type": "Callable[[Any, Any, Any, Dict[str, pytext.data.tensorizers.Tensorizer]], Any]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 191, "col_offset": 68, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "cls", "type": "Type[BertPairwiseModel]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 195, "col_offset": 48, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "encode_relations", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "encodings", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "decoder", "type": "pytext.models.decoders.decoder_base.DecoderBase"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_save_modules", "type": "Callable[[Any, str, str], None]"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "encoders", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "base_path", "type": "str"}, {"lineNumber": 214, "col_offset": 53, "nodeName": "suffix", "type": "str"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "NtokensTensorizer", "type": "Type[pytext.data.tensorizers.NtokensTensorizer]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "HuggingFaceBertSentenceEncoder", "type": "Type[pytext.models.representations.huggingface_bert_sentence_encoder.HuggingFaceBertSentenceEncoder]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "ClassificationOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "loss", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "MultiLabelSoftMarginLoss", "type": "Type[pytext.loss.loss.MultiLabelSoftMarginLoss]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "output_layer_cls", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.MultiLabelOutputLayer]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "MultiLabelOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.MultiLabelOutputLayer]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "output_layer_cls", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "MulticlassOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer]"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "stage", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "NtokensTensorizer", "type": "Type[pytext.data.tensorizers.NtokensTensorizer]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "HuggingFaceBertSentenceEncoder", "type": "Type[pytext.models.representations.huggingface_bert_sentence_encoder.HuggingFaceBertSentenceEncoder]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "Config", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 189, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "cls", "type": "Type[BertPairwiseModel]"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "cls", "type": "Type[BertPairwiseModel]"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 191, "col_offset": 57, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 195, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "_encode_relations", "type": "Callable[[Any, List[Any]], List[Any]]"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "encodings", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 57, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "decoder", "type": "pytext.models.decoders.decoder_base.DecoderBase"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "Config", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "encoder_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "encoder_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 89, "col_offset": 74, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 78, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "input_tuple1", "type": "Tuple[Any, ...]"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 208, "col_offset": 67, "nodeName": "input_tuple2", "type": "Tuple[Any, ...]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "cat", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "encodings", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "FloatListTensorizer", "type": "Type[pytext.data.tensorizers.FloatListTensorizer]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "self", "type": "NewBertModel"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 189, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "self", "type": "BertPairwiseModel"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 176, "col_offset": 27, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}]