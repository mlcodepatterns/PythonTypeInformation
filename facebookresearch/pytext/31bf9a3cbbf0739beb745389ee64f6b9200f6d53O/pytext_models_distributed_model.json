[{"lineNumber": 8, "col_offset": 23, "nodeName": "DistributedDataParallel", "type": "Any"}, {"lineNumber": 8, "col_offset": 23, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 8, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "accumulate_grads", "type": "bool"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "accumulate_grads", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "enable", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "accumulate_grads", "type": "Union[bool, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "mode", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_set_module_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_set_module_stage", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "stage", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "__getattr__", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "stage", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "stage", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "wrapped_module", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "module", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "forward", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "DistributedModel"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}]