[{"lineNumber": 664, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 668, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 860, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "Fairseq_MemoryEfficientFP16OptimizerMixin", "type": "Any"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 313, "col_offset": 27, "nodeName": "Fairseq_FP16OptimizerMixin", "type": "Any"}, {"lineNumber": 313, "col_offset": 55, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 511, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 685, "col_offset": 24, "nodeName": "FP16OptimizerDeprecated", "type": "Type[FP16OptimizerDeprecated]"}, {"lineNumber": 777, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "optimizer", "type": "Union[FP16OptimizerDeprecated, PureFP16Optimizer]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 669, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 866, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "args", "type": "Dict[str, bool]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 367, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "param_groups", "type": "List[nothing]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 455, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 456, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 529, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 618, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 619, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 621, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "optimizer", "type": "Union[FP16OptimizerDeprecated, PureFP16Optimizer]"}, {"lineNumber": 665, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 665, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 701, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 729, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 748, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 773, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 774, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 793, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 795, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 852, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 857, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "pytext.optimizer.optimizers.Optimizer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 174, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerApex]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 239, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16OptimizerFairseq"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16OptimizerFairseq"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 285, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "cls", "type": "Type[MemoryEfficientFP16OptimizerFairseq]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "max_norm", "type": "Union[float, Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 350, "col_offset": 27, "nodeName": "build_fp32_params", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 359, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 361, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "add_param_group", "type": "Any"}, {"lineNumber": 373, "col_offset": 44, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 385, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 385, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerFairseq]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 406, "col_offset": 38, "nodeName": "max_norm", "type": "Union[float, Any]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 469, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 469, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 501, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 551, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 551, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 551, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 551, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 565, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 591, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 609, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 619, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 621, "col_offset": 37, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 622, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 626, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 627, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 629, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 638, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 653, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 653, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 653, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 653, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 665, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 670, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 703, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 703, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 703, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 703, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 728, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 743, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 748, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 748, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 758, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 770, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 771, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 773, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 774, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 801, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 801, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 801, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 801, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 820, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 820, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 822, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 824, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 836, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 836, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 836, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 848, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 849, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 853, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 857, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 871, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 19, "col_offset": 69, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "amp", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 204, "col_offset": 56, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "old_forward", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "_deactivate", "type": "Any"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 262, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 271, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 22, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 350, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 351, "col_offset": 38, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 384, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 392, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 396, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 397, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 399, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 463, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 466, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 474, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 508, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 531, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 533, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 550, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 552, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 557, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 592, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 610, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 619, "col_offset": 35, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 620, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 622, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 628, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 635, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 661, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 665, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 671, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 702, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 704, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 730, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 744, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 748, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 749, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 753, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 758, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 772, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 773, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 774, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 797, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 798, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 799, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 802, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 820, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 822, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 836, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 838, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 850, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 854, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 854, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 854, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 855, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 856, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 857, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 870, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "amp", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "DELAY_UNSCALE", "type": "bool"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 284, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 349, "col_offset": 42, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 349, "col_offset": 56, "nodeName": "values", "type": "Callable"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 379, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 384, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 396, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 397, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 474, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 477, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 478, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 478, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 503, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 503, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 505, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 507, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 508, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 533, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 534, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 535, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 547, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 549, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 579, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 593, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 604, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 605, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 622, "col_offset": 45, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 632, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 730, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 737, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 738, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 744, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 749, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 750, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 752, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 753, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 755, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 760, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 761, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 826, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 829, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 838, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 850, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 854, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 855, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 872, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "precision", "type": "module"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "amp", "type": "Any"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "_amp_state", "type": "Any"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 284, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 349, "col_offset": 42, "nodeName": "args", "type": "Dict[str, bool]"}, {"lineNumber": 349, "col_offset": 56, "nodeName": "args", "type": "Dict[str, bool]"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 371, "col_offset": 55, "nodeName": "current_device", "type": "Any"}, {"lineNumber": 384, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 476, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 503, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 503, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 505, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 507, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 507, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 536, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 536, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 536, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 538, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 540, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 547, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 597, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 602, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 603, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 603, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 604, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 605, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 611, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 736, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 737, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 749, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 751, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 752, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 753, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 755, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 759, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 761, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 798, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 799, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 825, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 826, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 829, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 837, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 838, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 855, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "amp", "type": "Any"}, {"lineNumber": 371, "col_offset": 55, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 474, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 477, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 507, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 537, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 542, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 549, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 560, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 603, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 605, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 733, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 737, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 761, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 826, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 829, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 874, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 371, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 474, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 537, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 539, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 540, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 540, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 545, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 761, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 538, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 538, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 538, "col_offset": 35, "nodeName": "p", "type": "Any"}]