[{"lineNumber": 299, "col_offset": 0, "nodeName": "load_slots", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 0, "nodeName": "load_float_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 336, "col_offset": 0, "nodeName": "load_json_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 0, "nodeName": "load_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 0, "nodeName": "load_int", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "Schema", "type": "Type[Dict[str, Type[Any]]]"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "generator_property", "type": "Type[GeneratorMethodProperty]"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "GeneratorMethodProperty", "type": "Type[GeneratorMethodProperty]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "Component", "type": "Type[pytext.config.component.Component]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "DataSource", "type": "Type[DataSource]"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "ShardedDataSource", "type": "Type[ShardedDataSource]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "DataSource", "type": "Type[DataSource]"}, {"lineNumber": 304, "col_offset": 0, "nodeName": "Gazetteer", "type": "Type[List[Dict[str, Dict[str, float]]]]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "JSONString", "type": "Any"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "__COMPONENT_TYPE__", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "DATA_SOURCE", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "DATA_SOURCE_TYPES", "type": "Dict[Any, Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "List", "type": "Any"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "TypeVar", "type": "type"}, {"lineNumber": 305, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "bytes", "type": "Type[bytes]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "processed", "type": "str"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "processed", "type": "str"}, {"lineNumber": 338, "col_offset": 4, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 345, "col_offset": 11, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_file", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "generator", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "generator", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "data_source", "type": "DataSource"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "data_source", "type": "DataSource"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "rank", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "rank", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "eval", "type": "GeneratorIterator"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "eval", "type": "GeneratorIterator"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "test", "type": "GeneratorIterator"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "test", "type": "GeneratorIterator"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "Component", "type": "Type[pytext.config.component.Component]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "column_mapping", "type": "Dict[str, str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "column_mapping", "type": "Dict[str, str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "example", "type": "RawExample"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "example", "type": "RawExample"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "source", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "decorator", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "__mro__", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 269, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 278, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "parse_slot_string", "type": "Callable[[str], List[pytext.utils.data.Slot]]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 322, "col_offset": 65, "nodeName": "s", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "processed", "type": "str"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "JSONDecodeError", "type": "Type[json.decoder.JSONDecodeError]"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "Type", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "SafeFileWrapper"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "open", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "_file", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "_file", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "attr", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "generator", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "GeneratorMethodProperty"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "GeneratorIterator", "type": "Type[GeneratorIterator]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "generator", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "obj", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "Schema", "type": "Type[Dict[str, Type[Any]]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "DataSource"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "DataSource", "type": "Type[DataSource]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Dict[str, Type[Any]]], Any]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "RowShardedDataSource"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "RowShardedDataSource"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "RowShardedDataSource"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "RowShardedDataSource"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "data_source", "type": "DataSource"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "RowShardedDataSource"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "data_source", "type": "DataSource"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "shard", "type": "Callable[[Any, Any, Any], Generator[Any, Any, None]]"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "rank", "type": "Any"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "Schema", "type": "Type[Dict[str, Type[Any]]]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Dict[str, Type[Any]]], Any]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "column_mapping", "type": "Dict[str, str]"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "RawExample", "type": "Type[RawExample]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "items", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "example", "type": "Optional[RawExample]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "DATA_SOURCE_TYPES", "type": "Dict[Any, Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "_convert_raw_source", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "_convert_raw_source", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "_convert_raw_source", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "List", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 319, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "s", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "List", "type": "Any"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "processed", "type": "str"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "decoder", "type": "module"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "e", "type": "json.decoder.JSONDecodeError"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 332, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "f", "type": "Any"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 338, "col_offset": 13, "nodeName": "json", "type": "module"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_file", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "self", "type": "SafeFileWrapper"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "self", "type": "SafeFileWrapper"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "self", "type": "GeneratorMethodProperty"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "data_source", "type": "DataSource"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "train", "type": "Any"}, {"lineNumber": 168, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 199, "col_offset": 55, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "row", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "example", "type": "RawExample"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "_read_example", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "row", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "example", "type": "Optional[RawExample]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "example", "type": "Optional[RawExample]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "cls", "type": "Type[RootDataSource]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "cls", "type": "Type[RootDataSource]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "DATA_SOURCE_TYPES", "type": "Dict[Any, Union[Callable[[Any], Any], Any]]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "schema_type", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "converter", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "raw_train_data_generator", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "raw_test_data_generator", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 40, "nodeName": "raw_eval_data_generator", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "json", "type": "module"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "json", "type": "module"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "SafeFileWrapper"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "self", "type": "GeneratorIterator"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "column_mapping", "type": "Dict[str, str]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "example", "type": "RawExample"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "cls", "type": "Type[RootDataSource]"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "type", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 38, "nodeName": "cls", "type": "Any"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "DATA_SOURCE_TYPES", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "converter", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 290, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 312, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 312, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 312, "col_offset": 70, "nodeName": "s", "type": "Any"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 319, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 319, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 319, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 319, "col_offset": 65, "nodeName": "s", "type": "Any"}, {"lineNumber": 332, "col_offset": 71, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 248, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 248, "col_offset": 50, "nodeName": "schema_type", "type": "Any"}, {"lineNumber": 251, "col_offset": 68, "nodeName": "schema_type", "type": "Any"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 312, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 329, "col_offset": 64, "nodeName": "processed", "type": "str"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 343, "col_offset": 46, "nodeName": "parsed", "type": "Any"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "self", "type": "RootDataSource"}, {"lineNumber": 208, "col_offset": 61, "nodeName": "name", "type": "Union[Any, str]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "row", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "self", "type": "RootDataSource"}]