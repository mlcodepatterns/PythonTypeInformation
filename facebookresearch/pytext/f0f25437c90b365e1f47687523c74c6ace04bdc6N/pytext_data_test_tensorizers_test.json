[{"lineNumber": 19, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tensors", "type": "Generator[Tuple[Any, int], Any, None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTensorizer"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "s3", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "tensors", "type": "List[Tuple[List[Any], int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.CharacterTokenTensorizer"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "batch", "type": "List[Dict[str, str]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "expected_lens", "type": "List[List[int]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "initialize_tensorizers", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "tensors", "type": "Generator[Tuple[Any, int], Any, None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "tensors", "type": "Generator[Tuple[Any, int], Any, None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "ByteTensorizer", "type": "Type[pytext.data.tensorizers.ByteTensorizer]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 70, "nodeName": "tensors", "type": "List[Tuple[List[Any], int]]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "CharacterTokenTensorizer", "type": "Type[pytext.data.tensorizers.CharacterTokenTensorizer]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "tensorize", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "chars", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "expected", "type": "List[List[List[int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "expected_lens", "type": "List[List[int]]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "next", "type": "Callable"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "next", "type": "Callable"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "ByteTensorizer", "type": "Type[pytext.data.tensorizers.ByteTensorizer]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, int]]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "s1", "type": "str"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "s2", "type": "str"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "s3", "type": "str"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], int]]"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "s1", "type": "str"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "s2", "type": "str"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.CharacterTokenTensorizer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "next", "type": "Callable"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTensorizer"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "batch", "type": "List[Dict[str, str]]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "chars", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "chars", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "s1", "type": "str"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "s2", "type": "str"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "s3", "type": "str"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "c", "type": "str"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "c", "type": "str"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "word", "type": "str"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "pad_to", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.CharacterTokenTensorizer"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "word", "type": "str"}]