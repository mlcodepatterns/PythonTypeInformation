[{"lineNumber": 17, "col_offset": 32, "nodeName": "OutputLayerBase", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "OutputLayerBase", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "FieldMeta", "type": "Type[pytext.fields.field.FieldMeta]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "metadata", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "cls", "type": "Type[ClassificationOutputLayer]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "itos", "type": "Any"}, {"lineNumber": 44, "col_offset": 81, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "loss_fn", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "BinaryCrossEntropyLoss", "type": "Type[pytext.loss.loss.BinaryCrossEntropyLoss]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "scores", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "scores", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "scores", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "Net", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "Net", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "loss_fn", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "BinaryCrossEntropyLoss", "type": "Type[pytext.loss.loss.BinaryCrossEntropyLoss]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "gen_additional_blobs", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 89, "col_offset": 53, "nodeName": "output_name", "type": "str"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "BlobReference", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "CrossEntropyLoss", "type": "Type[pytext.loss.loss.CrossEntropyLoss]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "FloatTensor", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "create_loss", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "self", "type": "ClassificationOutputLayer"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "logsigmoid", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "logit", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "logit", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "core", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "core", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "core", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "self", "type": "ClassificationOutputLayer"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "Sigmoid", "type": "Any"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "output_name", "type": "str"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "Softmax", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "output_name", "type": "str"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "OutputLayerUtils", "type": "Any"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "self", "type": "ClassificationOutputLayer"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "metadata", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 65, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "F", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "dim", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "model_out", "type": "Any"}]