[{"lineNumber": 10, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "embedding_list", "type": "pytext.models.embeddings.embedding_list.EmbeddingList"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[str, Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "param_names", "type": "Set[str]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "expected_param_names", "type": "Set[Any]"}, {"lineNumber": 12, "col_offset": 25, "nodeName": "WordEmbedding", "type": "Type[pytext.models.embeddings.word_embedding.WordEmbedding]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "CharacterEmbedding", "type": "Type[pytext.models.embeddings.char_embedding.CharacterEmbedding]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "EmbeddingList", "type": "Type[pytext.models.embeddings.embedding_list.EmbeddingList]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "get_param_groups_for_optimizer", "type": "Callable[[], List[Dict[str, Any]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "param_names", "type": "Set[str]"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "expected_param_names", "type": "Set[Any]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "word_embedding", "type": "pytext.models.embeddings.word_embedding.WordEmbedding"}, {"lineNumber": 23, "col_offset": 56, "nodeName": "char_embedding", "type": "pytext.models.embeddings.char_embedding.CharacterEmbedding"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "embedding_list", "type": "pytext.models.embeddings.embedding_list.EmbeddingList"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "EmbeddingListTest"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "param_groups", "type": "List[Dict[str, Any]]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "EmbeddingListTest"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "_", "type": "Any"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "param_groups", "type": "List[Dict[str, Any]]"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "embedding_list", "type": "pytext.models.embeddings.embedding_list.EmbeddingList"}]