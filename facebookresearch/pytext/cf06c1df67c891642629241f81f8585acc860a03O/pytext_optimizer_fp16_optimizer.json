[{"lineNumber": 259, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "optimizer", "type": "Union[FP16Optimizer, PureFP16Optimizer]"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 452, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 146, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 146, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 248, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 248, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 298, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 298, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 365, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 396, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 396, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 396, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 396, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 443, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 444, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 452, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 466, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 187, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 266, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 397, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 431, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 432, "col_offset": 61, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 445, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 449, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 450, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 451, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 452, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 463, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 465, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 100, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 325, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 339, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 449, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 462, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 100, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 198, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 347, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 350, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 464, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 140, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "p", "type": "Any"}]