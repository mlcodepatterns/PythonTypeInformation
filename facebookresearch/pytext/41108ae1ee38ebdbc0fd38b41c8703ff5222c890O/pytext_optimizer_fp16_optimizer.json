[{"lineNumber": 552, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 556, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 748, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "Fairseq_FP16OptimizerMixin", "type": "Any"}, {"lineNumber": 209, "col_offset": 55, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 573, "col_offset": 24, "nodeName": "FP16OptimizerDeprecated", "type": "Type[FP16OptimizerDeprecated]"}, {"lineNumber": 665, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 754, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "param_groups", "type": "List[nothing]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 509, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 544, "col_offset": 26, "nodeName": "optimizer", "type": "Union[FP16OptimizerDeprecated, PureFP16Optimizer]"}, {"lineNumber": 553, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 589, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 636, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 681, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 683, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 740, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "pytext.optimizer.optimizers.Optimizer"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerApex]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "_opt_level", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "build_fp32_params", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "add_param_group", "type": "Any"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 276, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerFairseq]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 294, "col_offset": 38, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 389, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 439, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 439, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 439, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 439, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 453, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 497, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 509, "col_offset": 37, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 510, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 514, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 515, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 541, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 541, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 541, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 541, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 549, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 549, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 558, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 591, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 591, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 591, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 591, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 603, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 616, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 616, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 631, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 636, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 636, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 646, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 658, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 659, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 689, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 689, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 689, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 689, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 708, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 708, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 710, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 712, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 724, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 724, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 736, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 737, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 740, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 759, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 69, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "amp", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "_deactivate", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 283, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 390, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 391, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 419, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 421, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 445, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 480, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 498, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 507, "col_offset": 35, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 510, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 516, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 549, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 553, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 559, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 590, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 592, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 616, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 632, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 636, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 637, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 646, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 647, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 660, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 661, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 683, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 686, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 687, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 708, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 710, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 724, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 725, "col_offset": 61, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 726, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 738, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 740, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 742, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 742, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 743, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 744, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 756, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 758, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "e", "type": "AttributeError"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "amp", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 186, "col_offset": 53, "nodeName": "DELAY_UNSCALE", "type": "bool"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 275, "col_offset": 44, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 275, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 285, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 365, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 393, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 395, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 435, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 437, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 485, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 491, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 492, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 499, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 510, "col_offset": 45, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 618, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 632, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 637, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 640, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 643, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 649, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 686, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 726, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 742, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 743, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 755, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 757, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 53, "nodeName": "precision", "type": "module"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "amp", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "_amp_state", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 275, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 275, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 391, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 393, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 395, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 424, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 424, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 424, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 428, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 482, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 485, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 487, "col_offset": 19, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 491, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 491, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 492, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 500, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 502, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 619, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 632, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 637, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 639, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 640, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 641, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 643, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 649, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 649, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 686, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 713, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 716, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 726, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 743, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 758, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "amp", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 395, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 425, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 427, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 430, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 447, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 482, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 491, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 500, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 621, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 649, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 714, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 717, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 427, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 428, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 433, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 433, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 639, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 649, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 433, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 433, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 433, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "p", "type": "Any"}]