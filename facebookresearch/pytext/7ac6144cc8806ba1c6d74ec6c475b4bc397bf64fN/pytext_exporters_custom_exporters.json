[{"lineNumber": 17, "col_offset": 0, "nodeName": "save_caffe2_pb_net", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "get_exporter", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "ModelExporter", "type": "Type[pytext.exporters.exporter.ModelExporter]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "ModelExporter", "type": "Type[pytext.exporters.exporter.ModelExporter]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "PREDICTOR", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "INIT_PREDICT", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "ModelExporter", "type": "Type[pytext.exporters.exporter.ModelExporter]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "InitPredictNetExporter", "type": "Type[InitPredictNetExporter]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "exporter", "type": "Optional[Union[Type[InitPredictNetExporter], Type[pytext.exporters.exporter.ModelExporter]]]"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "exporter", "type": "Optional[Union[Type[pytext.exporters.exporter.ModelExporter], Type[InitPredictNetExporter]]]"}, {"lineNumber": 18, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "final_output_names", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "export_dir", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "net_outputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "ExporterType", "type": "Type[pytext.config.module_config.ExporterType]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "ExporterType", "type": "Type[pytext.config.module_config.ExporterType]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "exporter", "type": "Optional[Union[Type[pytext.exporters.exporter.ModelExporter], Type[InitPredictNetExporter]]]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "path", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "_get_exportable_metadata", "type": "Callable[[Any, Callable[..., Any], pytext.config.field_config.FeatureConfig, Dict[str, pytext.fields.field.FieldMeta]], Tuple[List[str], List[Any], Dict[Any, Any]]]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "feature_config", "type": "pytext.config.field_config.FeatureConfig"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "feature_meta", "type": "Dict[str, pytext.fields.field.FieldMeta]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_add_feature_lengths", "type": "Callable[[Any, List[str], List[Any]], None]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "input_names_rep", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "dummy_model_input_rep", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_get_exportable_metadata", "type": "Callable[[Any, Callable[..., Any], pytext.config.field_config.FeatureConfig, Dict[str, pytext.fields.field.FieldMeta]], Tuple[List[str], List[Any], Dict[Any, Any]]]"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "feature_config", "type": "pytext.config.field_config.FeatureConfig"}, {"lineNumber": 54, "col_offset": 72, "nodeName": "feature_meta", "type": "Dict[str, pytext.fields.field.FieldMeta]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "feature_itos_map_dense", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "feature_itos_map_rep", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "add_feats_numericalize_ops", "type": "Callable[[Any, Any, Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "vocab_map", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "input_names", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "export_to_caffe2", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "final_output_names", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "path", "type": "str"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "init_net_path", "type": "str"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "predict_net_path", "type": "str"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "get_export_paths", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "export_path", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "pytorch_to_caffe2", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "dummy_model_input", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "export_path", "type": "str"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "export_onnx_path", "type": "str"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "prepend_operators", "type": "Callable[[Any, Any, List[str]], Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "Net", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "Net", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "create_context", "type": "Callable[[Any], None]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "postprocess_output", "type": "Callable[[Any, Any, Any, List[str], Any], Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 122, "col_offset": 65, "nodeName": "model", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "Proto", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "Proto", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "save_caffe2_pb_net", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "init_net_path", "type": "str"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "save_caffe2_pb_net", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "predict_net_path", "type": "str"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "EXPORTER_MAP", "type": "Dict[Any, Union[Type[pytext.exporters.exporter.ModelExporter], Type[InitPredictNetExporter]]]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 29, "col_offset": 58, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "cls", "type": "Type[DenseFeatureExporter]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "cls", "type": "Type[DenseFeatureExporter]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "cls", "type": "Type[DenseFeatureExporter]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "feature_itos_map_rep", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "input_names_rep", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "input_names_dense", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "List", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "mobile_onnx", "type": "module"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "dummy_model_input", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 83, "col_offset": 58, "nodeName": "output_names", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "res", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "export_dir", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "export_dir", "type": "str"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "mobile_onnx", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "core", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "core", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "mobile_onnx", "type": "module"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "AddExternalOutput", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "init_net", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "FloatVectorConfig", "type": "Type[pytext.config.field_config.FloatVectorConfig]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "dummy_model_input_rep", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "dummy_model_input_dense", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "self", "type": "InitPredictNetExporter"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "init_net_path", "type": "str"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "predict_net_path", "type": "str"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 29, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "FieldMeta", "type": "Type[pytext.fields.field.FieldMeta]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "FloatVectorConfig", "type": "Type[pytext.config.field_config.FloatVectorConfig]"}]