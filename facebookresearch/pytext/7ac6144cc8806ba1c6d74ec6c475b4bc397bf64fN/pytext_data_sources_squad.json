[{"lineNumber": 19, "col_offset": 0, "nodeName": "_shift_answers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "_split_document", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "process_squad_json", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "process_squad_tsv", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "process_squad_tsv_for_kd", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "DataSource", "type": "Type[pytext.data.sources.data_source.DataSource]"}, {"lineNumber": 344, "col_offset": 27, "nodeName": "SquadDataSource", "type": "Type[SquadDataSource]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "answer_starts", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "orig_starts", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "pieces", "type": "List[Dict[str, Union[str, List[Any], Any]]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "min_overlap", "type": "int"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "pieces", "type": "List[Dict[str, Union[str, List[Any], Any]]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "id", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "article", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "field_names", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "answer_starts", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "floor", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "infile", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "dump", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "dump", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "TSV", "type": "Type[pytext.data.sources.tsv.TSV]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "tsv_file", "type": "pytext.data.sources.data_source.SafeFileWrapper"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "tsv", "type": "pytext.data.sources.tsv.TSV"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "parts", "type": "Any"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "parts", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 172, "col_offset": 10, "nodeName": "TSV", "type": "Type[pytext.data.sources.tsv.TSV]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "tsv_file", "type": "pytext.data.sources.data_source.SafeFileWrapper"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "id", "type": "int"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "tsv", "type": "pytext.data.sources.tsv.TSV"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "parts", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "DataSource", "type": "Type[pytext.data.sources.data_source.DataSource]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "train_filename", "type": "Optional[str]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "test_filename", "type": "Optional[str]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "eval_filename", "type": "Optional[str]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 287, "col_offset": 48, "nodeName": "DEFAULT_SCHEMA", "type": "Dict[str, Union[Type[str], Type[List[int]], Type[List[str]], Type[int]]]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "DEFAULT_SCHEMA", "type": "Dict[str, Union[Type[str], Type[List[int]], Type[List[str]], Type[int]]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "train_filename", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "train_filename", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "test_filename", "type": "Any"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "test_filename", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 317, "col_offset": 27, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "quoted", "type": "Any"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "quoted", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 42, "col_offset": 18, "nodeName": "math", "type": "module"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "n_pieces", "type": "int"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "exists", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "fname", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "infile", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "article", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "question", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "get_absolute_path", "type": "Callable[[str], str]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "field_names", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "quoted", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "question", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "answers", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "answers", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "_split_document", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "id", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "question", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "answers", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "get_absolute_path", "type": "Callable[[str], str]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "field_names", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "_split_document", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "id", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "question", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "answers", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "process_squad_json", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "List", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "cls", "type": "Type[SquadDataSource]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Dict[str, Type[Any]]], None]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "schema", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "process_squad", "type": "Callable[..., Any]"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "process_file", "type": "Any"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "train_filename", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "process_file", "type": "Any"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "test_filename", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "process_file", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "JSONString", "type": "Any"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "JSONString", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "JSONString", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "process_squad", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "start", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "piece_start", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "start", "type": "Any"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "piece_end", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "n_pieces", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "answer_starts", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "piece_has_answer", "type": "bool"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "_shift_answers", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 58, "col_offset": 76, "nodeName": "start", "type": "Any"}, {"lineNumber": 58, "col_offset": 83, "nodeName": "end", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "question", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "id", "type": "int"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "f", "type": "str"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "field_names", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "json", "type": "module"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "piece_dict", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "row", "type": "collections.OrderedDict[str, str]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "f", "type": "str"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "field_names", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "parts", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "piece_dict", "type": "Any"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "split", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "fname", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "process_squad_tsv_for_kd", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "train_filename", "type": "Any"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "test_filename", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "eval_filename", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "fname", "type": "Any"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "delimiter", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "quoted", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 361, "col_offset": 28, "nodeName": "List", "type": "Any"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 367, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "fname", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "answer_starts", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "start", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "piece_start", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "overlap", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "pieces", "type": "List[Dict[str, Union[str, List[Any], Any]]]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "question", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "answers", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "answer_starts", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "fname", "type": "Any"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "question", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "_split_document", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "id", "type": "int"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "doc", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "question", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "answer_starts", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "has_answer", "type": "bool"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "min_overlap", "type": "Any"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "f", "type": "str"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "f", "type": "str"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "json", "type": "module"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "piece_dict", "type": "Any"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "fname", "type": "Any"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "fname", "type": "Any"}, {"lineNumber": 249, "col_offset": 34, "nodeName": "ignore_impossible", "type": "bool"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "max_character_length", "type": "int"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "min_overlap", "type": "float"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "quoted", "type": "bool"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "self", "type": "SquadDataSource"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 363, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "self", "type": "SquadDataSourceForKD"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "self", "type": "SquadDataSourceForKD"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "self", "type": "SquadDataSourceForKD"}, {"lineNumber": 375, "col_offset": 22, "nodeName": "self", "type": "SquadDataSourceForKD"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "self", "type": "SquadDataSourceForKD"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "max", "type": "Callable"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "min_overlap", "type": "int"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "overlap", "type": "int"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "doc", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "question", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "question", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "answer", "type": "Any"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "answer", "type": "Any"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "answers", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "answer", "type": "Any"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "answers", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "piece_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "max_character_length", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "overlap", "type": "int"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "start", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "end", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "piece_has_answer", "type": "bool"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "question", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "answer", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "doc", "type": "Any"}]