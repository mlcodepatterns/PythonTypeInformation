[{"lineNumber": 19, "col_offset": 19, "nodeName": "Module", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "Module", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "doc_model", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "MAX", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "max_kernel", "type": "int"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "pooling_type", "type": "pytext.config.module_config.PoolingType"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "pooling_type", "type": "pytext.config.module_config.PoolingType"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "out_dim", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "embedded_tokens", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "unk_token_idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "token_emb", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "MAX", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "denses", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "word_embedding_output", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "MAX", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "head", "type": "pytext.contrib.pytext_lib.models.classification_heads.ClassificationHead"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 171, "col_offset": 58, "nodeName": "List", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "build_vocab", "type": "Callable[[Any], pytext.data.utils.Vocabulary]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "word_embedding_file", "type": "str"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "WordEmbedding", "type": "Type[WordEmbedding]"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "model_name", "type": "str"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "build_model", "type": "Callable[[str, str, int, Sequence[int], bool, bool, int, Sequence[int], int, int, Sequence[int]], Any]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "build_model", "type": "Callable[[str, str, int, Sequence[int], bool, bool, int, Sequence[int], int, int, Sequence[int]], Any]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "PoolingType", "type": "Type[pytext.config.module_config.PoolingType]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "kernel_sizes", "type": "Optional[Sequence[int]]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "dropout", "type": "float"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "PretrainedEmbedding", "type": "Type[pytext.utils.embeddings.PretrainedEmbedding]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "pretrained_embeddings_path", "type": "str"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "initialize_embeddings_weights", "type": "Callable[[Dict[str, int], str, int, pytext.config.field_config.EmbedInitStrategy], Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "unk_token", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "RANDOM", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "idx", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "get_unk_index", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "unk_token_idx", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "mlp_layer_dims", "type": "Optional[Sequence[int]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "mlp_layer_dims", "type": "List[nothing]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "WordEmbedding"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "mlp_layer_dims", "type": "Optional[Union[Sequence[int], List[nothing]]]"}, {"lineNumber": 98, "col_offset": 68, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "mlp", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "token_emb", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "self", "type": "WordEmbedding"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "PoolingType", "type": "Type[pytext.config.module_config.PoolingType]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "DocNNEncoder", "type": "Type[DocNNEncoder]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "MLPDecoder", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "encoder", "type": "DocNNEncoder"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "word_embedding_output", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "denses", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "PoolingType", "type": "Type[pytext.config.module_config.PoolingType]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "DocModel", "type": "Type[DocModel]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "ClassificationHead", "type": "Type[pytext.contrib.pytext_lib.models.classification_heads.ClassificationHead]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "doc_model", "type": "DocModel"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "head", "type": "pytext.contrib.pytext_lib.models.classification_heads.ClassificationHead"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "logits", "type": "Any"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "doc_model", "type": "DocModel"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "get_loss", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "logits", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "targets", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "word_embedding_file", "type": "str"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "mlp_layer_dims", "type": "Sequence[int]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "lowercase_tokens", "type": "bool"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "skip_header", "type": "bool"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "DocModelForBinaryDocClassification", "type": "Type[DocModelForBinaryDocClassification]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "DocModelForBinaryDocClassification", "type": "Type[DocModelForBinaryDocClassification]"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 237, "col_offset": 28, "nodeName": "word_embedding_file", "type": "str"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "mlp_layer_dims", "type": "Sequence[int]"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "lowercase_tokens", "type": "bool"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "skip_header", "type": "bool"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "kernel_sizes", "type": "Sequence[int]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "dropout", "type": "int"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "dense_dim", "type": "int"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "decoder_hidden_dims", "type": "Sequence[int]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "word_embedding_file", "type": "str"}, {"lineNumber": 267, "col_offset": 22, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "mlp_layer_dims", "type": "Sequence[int]"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "lowercase_tokens", "type": "bool"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "skip_header", "type": "bool"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 272, "col_offset": 21, "nodeName": "kernel_sizes", "type": "Sequence[int]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "dropout", "type": "int"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "dense_dim", "type": "int"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "decoder_hidden_dims", "type": "Sequence[int]"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "kernel_sizes", "type": "Optional[Sequence[int]]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "conv", "type": "Any"}, {"lineNumber": 43, "col_offset": 62, "nodeName": "convs", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "cat", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "x", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "lowercase_tokens", "type": "bool"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "skip_header", "type": "bool"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "pretrained_embedding", "type": "pytext.utils.embeddings.PretrainedEmbedding"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "EmbedInitStrategy", "type": "Type[pytext.config.field_config.EmbedInitStrategy]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "embeddings_weight", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "mlp_layer_dims", "type": "Optional[Union[Sequence[int], List[nothing]]]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "self", "type": "WordEmbedding"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "WordEmbedding"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "kernel_sizes", "type": "Optional[Sequence[int]]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "pooling_type", "type": "pytext.config.module_config.PoolingType"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "decoder_hidden_dims", "type": "Optional[Sequence[int]]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "kernel_sizes", "type": "Optional[Sequence[int]]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "pooling_type", "type": "pytext.config.module_config.PoolingType"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "dense_dim", "type": "int"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "decoder_hidden_dims", "type": "Optional[Sequence[int]]"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "self", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "self", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 171, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "self", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "head", "type": "pytext.contrib.pytext_lib.models.classification_heads.ClassificationHead"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "kernel_sizes", "type": "Sequence[int]"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "dropout", "type": "int"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "dense_dim", "type": "int"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "decoder_hidden_dims", "type": "Sequence[int]"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "DocModelForBinaryDocClassification", "type": "Type[DocModelForBinaryDocClassification]"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "DocModelForBinaryDocClassification", "type": "Type[DocModelForBinaryDocClassification]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "embed_dim", "type": "int"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "kernel_num", "type": "int"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "k", "type": "int"}, {"lineNumber": 31, "col_offset": 69, "nodeName": "kernel_sizes", "type": "Optional[Sequence[int]]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "max", "type": "Any"}, {"lineNumber": 43, "col_offset": 62, "nodeName": "self", "type": "DocNNEncoder"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "get_pad_index", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "get_output_dim", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "out_dim", "type": "int"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "dense_dim", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "DocModelForBinaryDocClassification"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "model_name", "type": "str"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "k", "type": "int"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "relu", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "word_embedding", "type": "WordEmbedding"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "encoder", "type": "DocNNEncoder"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "F", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "conv", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "unk_token_idx", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "m", "type": "int"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "n", "type": "int"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 95, "col_offset": 72, "nodeName": "mlp_layer_dims", "type": "Optional[Union[Sequence[int], List[nothing]]]"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "WordEmbedding"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "mlp_layer_dims", "type": "Optional[Union[Sequence[int], List[nothing]]]"}]