[{"lineNumber": 49, "col_offset": 0, "nodeName": "_set_fp16", "type": "Callable[[bool], None]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "prepare_task_metadata", "type": "Callable[[pytext.config.pytext_config.PyTextConfig], pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "export_saved_model_to_torchscript", "type": "Callable[[str, str], None]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "batch_predict", "type": "Callable[[str, List[Dict[str, Any]]], Any]"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 77, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 98, "col_offset": 5, "nodeName": "Task", "type": "Type[pytext.task.task.Task]"}, {"lineNumber": 158, "col_offset": 5, "nodeName": "Any", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "CUDA_ENABLED", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "world_size", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "task", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "meta", "type": "None"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "CUDA_ENABLED", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "set_fp16", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "prepare_task", "type": "Callable[..., pytext.task.task.Task]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "device_id", "type": "int"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "rank", "type": "int"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "world_size", "type": "int"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 79, "col_offset": 77, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "trained_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "best_metric", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "rank", "type": "int"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "world_size", "type": "int"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "rank", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "report", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "trained_model", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "best_metric", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "_set_cuda", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "device_id", "type": "int"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "world_size", "type": "int"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "_set_fp16", "type": "Callable[[bool], None]"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "random_seed", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "task", "type": "Tuple[Any, Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "Task", "type": "Type[pytext.task.task.Task]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "save", "type": "Callable[[pytext.config.pytext_config.PyTextConfig, pytext.models.model.Model, pytext.data.data_handler.CommonMetadata], None]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "model", "type": "pytext.models.model.Model"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "meta", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "export", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "model", "type": "pytext.models.model.Model"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "export_caffe2_path", "type": "str"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "export_onnx_path", "type": "str"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 136, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "load", "type": "Callable[[str], Tuple[Any, Any]]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "saved_model_path", "type": "str"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "exporter", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "TaskType", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "ExporterConfigType", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "export_caffe2_path", "type": "str"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "load", "type": "Callable[[str], Tuple[Any, Any]]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "saved_model_path", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "torchscript_export", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "path", "type": "str"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "TestConfig", "type": "Type[pytext.config.pytext_config.TestConfig]"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "test_model_from_snapshot_path", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "test_path", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "_set_cuda", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 176, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "load", "type": "Callable[[str], Tuple[Any, Any]]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "snapshot_path", "type": "str"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "channel", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "channels", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "test_out_path", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "test_out_path", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 202, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "load", "type": "Callable[[str], Tuple[Any, Any]]"}, {"lineNumber": 202, "col_offset": 30, "nodeName": "model_file", "type": "str"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "CUDA_ENABLED", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "device_id", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "world_size", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "CUDA_ENABLED", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "precision", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "use_fp16", "type": "bool"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "task", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "save_and_export", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "timing", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "world_size", "type": "int"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "use_fp16", "type": "bool"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "set_random_seeds", "type": "Callable[[Any], None]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "random_seed", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "isfile", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "load", "type": "Callable[[str], Tuple[Any, Any]]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "task", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "add_channel", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "save_snapshot_path", "type": "str"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "metadata_to_save", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "create_exporter", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "output_onnx_path", "type": "str"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "add_channel", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "output_path", "type": "str"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "test_path", "type": "Optional[str]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "task", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "device_id", "type": "int"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "_FP16_ENABLED", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "world_size", "type": "int"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "data_handler", "type": "pytext.data.data_handler.DataHandler"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "ExporterConfigType", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "task", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "channel", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "file_path", "type": "str"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "precision", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 121, "col_offset": 64, "nodeName": "List", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "task", "type": "pytext.task.task.Task"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "channel", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 69, "nodeName": "Channel", "type": "Type[pytext.metric_reporters.channel.Channel]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "get_type_hints", "type": "Callable[..., Optional[Dict[str, Any]]]"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "TaskType", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "Channel", "type": "Type[pytext.metric_reporters.channel.Channel]"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "Any", "type": "Any"}]