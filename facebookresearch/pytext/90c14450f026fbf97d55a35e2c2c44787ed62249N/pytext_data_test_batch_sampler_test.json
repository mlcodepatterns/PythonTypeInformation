[{"lineNumber": 14, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "iteratorA", "type": "List[str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "iteratorB", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "iteratorC", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "iteratorD", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "eval_iterator", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "iteratorA", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "iteratorB", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "iteratorA", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "iteratorB", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "iteratorC", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "iteratorD", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 32, "col_offset": 65, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 41, "col_offset": 51, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "eval_iterator", "type": "Any"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "RandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.RandomizedBatchSampler]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "RandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.RandomizedBatchSampler]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "AlternatingRandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.AlternatingRandomizedBatchSampler]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "AlternatingRandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.AlternatingRandomizedBatchSampler]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "_truncate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "prob_iterator", "type": "Generator[Any, Any, None]"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "fixed_order", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "expected_items", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "expected_items", "type": "Union[Any, List[Any]]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 32, "col_offset": 65, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "alternating_iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "alternating_iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "expected_items", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "RoundRobinBatchSampler", "type": "Type[pytext.data.batch_sampler.RoundRobinBatchSampler]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "RoundRobinBatchSampler", "type": "Type[pytext.data.batch_sampler.RoundRobinBatchSampler]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "EvalBatchSampler", "type": "Type[pytext.data.batch_sampler.EvalBatchSampler]"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 54, "col_offset": 61, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "alternating_iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, Any]]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "alternating_iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "sampler", "type": "pytext.data.batch_sampler.AlternatingRandomizedBatchSampler"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "sampler", "type": "pytext.data.batch_sampler.AlternatingRandomizedBatchSampler"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "item", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 54, "col_offset": 61, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "sampler", "type": "pytext.data.batch_sampler.AlternatingRandomizedBatchSampler"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "sampler", "type": "pytext.data.batch_sampler.AlternatingRandomizedBatchSampler"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "BatchSamplerTest"}]