[{"lineNumber": 11, "col_offset": 29, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "columns", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "question_column", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "doc_column", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "_lookup_tokens", "type": "Callable[[str], Tuple[Any, Any, Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "_lookup_tokens", "type": "Callable[[str], Tuple[Any, Any, Any]]"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 70, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 80, "col_offset": 77, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 86, "col_offset": 67, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "row", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "row", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "offset", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "offset", "type": "int"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 80, "col_offset": 82, "nodeName": "batch", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 65, "nodeName": "doc_column", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "question_column", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "idx", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 49, "col_offset": 68, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "raw_start_idx", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "raw_end_idx", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "answer", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "BOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "self", "type": "SquadForBERTTensorizer"}]