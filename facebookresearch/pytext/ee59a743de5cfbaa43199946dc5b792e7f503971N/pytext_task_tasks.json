[{"lineNumber": 64, "col_offset": 39, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "Task_Deprecated", "type": "Type[pytext.task.task.Task_Deprecated]"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "DocumentRegressionTask", "type": "Type[DocumentRegressionTask]"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "Task_Deprecated", "type": "Type[pytext.task.task.Task_Deprecated]"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "Task_Deprecated", "type": "Type[pytext.task.task.Task_Deprecated]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "labels", "type": "pytext.config.field_config.DocLabelConfig"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "TargetConfig", "type": "Type[pytext.config.field_config.DocLabelConfig]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "exporter", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "itos", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "DocumentClassificationTask", "type": "Type[DocumentClassificationTask]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "DocumentRegressionTask", "type": "Type[DocumentRegressionTask]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "Config", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "Task_Deprecated", "type": "Type[pytext.task.task.Task_Deprecated]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "labels", "type": "Optional[pytext.config.field_config.WordLabelConfig]"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "EnsembleModel", "type": "Type[pytext.models.ensembles.ensemble.EnsembleModel]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "EnsembleTrainer", "type": "Type[pytext.trainers.ensemble_trainer.EnsembleTrainer]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "Config", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "train_single_model", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "DocModel_Deprecated", "type": "Type[pytext.models.doc_model.DocModel_Deprecated]"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "Config", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "Trainer", "type": "Type[pytext.trainers.trainer.Trainer]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "Config", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "ModelInputConfig", "type": "Type[pytext.config.doc_classification.ModelInputConfig]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "DocClassification", "type": "module"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "TargetConfig", "type": "Type[pytext.config.field_config.DocLabelConfig]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "scores", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "Config", "type": "Any"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "score", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "scores", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "DocRegressionModel", "type": "Type[pytext.models.doc_model.DocRegressionModel]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "Config", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "Config", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "WordTaggingModel", "type": "Type[pytext.models.word_model.WordTaggingModel]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "IntentSlotModel", "type": "Type[pytext.models.joint_model.IntentSlotModel]"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "Config", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "LMLSTM", "type": "Type[pytext.models.language_models.lmlstm.LMLSTM]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "Config", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "Config", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "MaskedLanguageModel", "type": "Type[pytext.models.masked_lm.MaskedLanguageModel]"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "Config", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "BasePairwiseModel", "type": "Type[pytext.models.pair_classification_model.BasePairwiseModel]"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "Config", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "SeqNNModel", "type": "Type[pytext.models.seq_models.seqnn.SeqNNModel]"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "Config", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "Union", "type": "Any"}, {"lineNumber": 233, "col_offset": 66, "nodeName": "Config", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "SquadMetricReporter", "type": "Type[pytext.metric_reporters.squad_metric_reporter.SquadMetricReporter]"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "Config", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "RNNGParser_Deprecated", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser_Deprecated]"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "Config", "type": "Any"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "HogwildTrainer_Deprecated", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer_Deprecated]"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "Config", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "Config", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "CompositionalMetricReporter", "type": "Type[pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter]"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "model", "type": "pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "metric_reporter", "type": "pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "trainer", "type": "pytext.trainers.hogwild_trainer.HogwildTrainer"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "report_train_metrics", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "QueryDocPairwiseRankingModel", "type": "Type[pytext.models.query_document_pairwise_ranking_model.QueryDocPairwiseRankingModel]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "PairwiseRankingMetricReporter", "type": "Type[pytext.metric_reporters.pairwise_ranking_metric_reporter.PairwiseRankingMetricReporter]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "EnsembleTrainer", "type": "Type[pytext.trainers.ensemble_trainer.EnsembleTrainer]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "trainer", "type": "pytext.trainers.trainer.TaskTrainer"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "models", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "cls", "type": "Type[EnsembleTask]"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "DocModel_Deprecated", "type": "Type[pytext.models.doc_model.DocModel_Deprecated]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "Trainer", "type": "Type[pytext.trainers.trainer.Trainer]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "DocClassification", "type": "module"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "DocClassification", "type": "module"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "DocClassificationDataHandler", "type": "Type[pytext.data.doc_classification_data_handler.DocClassificationDataHandler]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "Config", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "target_meta", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "n", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "DocModel", "type": "Type[pytext.models.doc_model.DocModel]"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "n", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "DocRegressionModel", "type": "Type[pytext.models.doc_model.DocRegressionModel]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "RegressionMetricReporter", "type": "Type[pytext.metric_reporters.regression_metric_reporter.RegressionMetricReporter]"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "WordTaggingModel", "type": "Type[pytext.models.word_model.WordTaggingModel]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "SequenceTaggingMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.SequenceTaggingMetricReporter]"}, {"lineNumber": 184, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "SequenceTaggingMetricReporter", "type": "Type[pytext.metric_reporters.word_tagging_metric_reporter.SequenceTaggingMetricReporter]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 192, "col_offset": 40, "nodeName": "IntentSlotModel", "type": "Type[pytext.models.joint_model.IntentSlotModel]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "IntentSlotMetricReporter", "type": "Type[pytext.metric_reporters.intent_slot_detection_metric_reporter.IntentSlotMetricReporter]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "LMLSTM", "type": "Type[pytext.models.language_models.lmlstm.LMLSTM]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "LanguageModelMetricReporter", "type": "Type[pytext.metric_reporters.language_model_metric_reporter.LanguageModelMetricReporter]"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "PackedLMData", "type": "Type[pytext.data.packed_lm_data.PackedLMData]"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "MaskedLanguageModel", "type": "Type[pytext.models.masked_lm.MaskedLanguageModel]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "MaskedLMMetricReporter", "type": "Type[pytext.metric_reporters.language_model_metric_reporter.MaskedLMMetricReporter]"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "PairwiseModel", "type": "Type[pytext.models.pair_classification_model.PairwiseModel]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "SeqNNModel", "type": "Type[pytext.models.seq_models.seqnn.SeqNNModel]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "ClassificationMetricReporter", "type": "Type[pytext.metric_reporters.classification_metric_reporter.ClassificationMetricReporter]"}, {"lineNumber": 233, "col_offset": 66, "nodeName": "DrQAModel", "type": "Type[pytext.models.qna.dr_qa.DrQAModel]"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "SquadMetricReporter", "type": "Type[pytext.metric_reporters.squad_metric_reporter.SquadMetricReporter]"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "RNNGParser_Deprecated", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser_Deprecated]"}, {"lineNumber": 240, "col_offset": 52, "nodeName": "HogwildTrainer_Deprecated", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer_Deprecated]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "WordLabelConfig", "type": "Type[pytext.config.field_config.WordLabelConfig]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "CompositionalMetricReporter", "type": "Type[pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter]"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "RNNGParser", "type": "Type[pytext.models.semantic_parsers.rnng.rnng_parser.RNNGParser]"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "HogwildTrainer", "type": "Type[pytext.trainers.hogwild_trainer.HogwildTrainer]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "CompositionalMetricReporter", "type": "Type[pytext.metric_reporters.compositional_metric_reporter.CompositionalMetricReporter]"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "train_batch_size", "type": "Any"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "eval_batch_size", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "test_batch_size", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "model_id", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "Config", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "DenseFeatureExporter", "type": "Type[pytext.exporters.custom_exporters.DenseFeatureExporter]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "score_with_name", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "BertModelInput", "type": "Any"}, {"lineNumber": 233, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "Config", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "trainer", "type": "pytext.trainers.hogwild_trainer.HogwildTrainer"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "EnsembleTask"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "BaggingDocEnsembleModel", "type": "Type[pytext.models.ensembles.bagging_doc_ensemble.BaggingDocEnsembleModel]"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 118, "col_offset": 52, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 184, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 184, "col_offset": 75, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 233, "col_offset": 21, "nodeName": "BertSquadQAModel", "type": "Type[pytext.models.qna.bert_squad_qa.BertSquadQAModel]"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "DrQAModel", "type": "Type[pytext.models.qna.dr_qa.DrQAModel]"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 118, "col_offset": 66, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 66, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "Config", "type": "Any"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "Config", "type": "Any"}, {"lineNumber": 118, "col_offset": 66, "nodeName": "score", "type": "Any"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 137, "col_offset": 66, "nodeName": "score", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "DocModel", "type": "Type[pytext.models.doc_model.DocModel]"}]