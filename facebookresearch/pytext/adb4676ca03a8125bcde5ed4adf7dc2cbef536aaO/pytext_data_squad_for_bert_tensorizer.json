[{"lineNumber": 16, "col_offset": 29, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "SquadForBERTTensorizer", "type": "Type[SquadForBERTTensorizer]"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.bert_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "columns", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "add_bos_token", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.bert_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "add_bos_token", "type": "bool"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "question_column", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "doc_column", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "_lookup_tokens", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "_lookup_tokens", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 70, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 86, "col_offset": 77, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 92, "col_offset": 67, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 107, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "build_fairseq_vocab", "type": "Callable[..., pytext.data.utils.Vocabulary]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "cls", "type": "Type[SquadForRoBERTaTensorizer]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "_lookup_tokens", "type": "Callable[[pytext.data.bert_tensorizer.RoBERTaTensorizer, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 143, "col_offset": 54, "nodeName": "text", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "row", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "row", "type": "Any"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 56, "col_offset": 55, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "offset", "type": "int"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "offset", "type": "int"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 86, "col_offset": 82, "nodeName": "batch", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 107, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.bert_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 54, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 136, "col_offset": 73, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.bert_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 50, "col_offset": 65, "nodeName": "doc_column", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "question_column", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "raw_start_idx", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "raw_end_idx", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "answer", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "pad_token", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "unk_token", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "BOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "get_bos_index", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "self", "type": "SquadForBERTTensorizer"}]