[{"lineNumber": 26, "col_offset": 23, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "Config", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 75, "col_offset": 69, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "Config", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "cls", "type": "Type[BertSquadQAModel]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 75, "col_offset": 69, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "stage", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "positions", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "answer_start_indices", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "answer_end_indices", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "label", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "cls_embed", "type": "Any"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "has_ans_logits", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "HuggingFaceBertSentenceEncoder", "type": "Type[pytext.models.representations.huggingface_bert_sentence_encoder.HuggingFaceBertSentenceEncoder]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 65, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "module_list", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "cls_embed", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "SquadForBERTTensorizer", "type": "Type[pytext.data.squad_for_bert_tensorizer.SquadForBERTTensorizer]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "vocab", "type": "Any"}]