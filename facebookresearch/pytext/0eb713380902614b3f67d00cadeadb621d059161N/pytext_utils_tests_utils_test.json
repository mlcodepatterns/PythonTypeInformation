[{"lineNumber": 30, "col_offset": 0, "nodeName": "get_test_sample", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "tests_module", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "RAW_TEST_PATH", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_merge_token_labels_to_slot", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_align_slot_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_align_slot_labels_with_none_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_unkify", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_get_shard_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_time_meter", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_set_random_seeds", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_recursive_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_round_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_chunk_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "import_tests_module", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "tests_module", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "map_token_unkified", "type": "Dict[str, str]"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "expected", "type": "List[Tuple[int, Tuple[int, int]]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "expected", "type": "List[Tuple[int, Tuple[int, int]]]"}, {"lineNumber": 94, "col_offset": 36, "nodeName": "expected", "type": "List[Tuple[int, Tuple[int, int]]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "tps", "type": "pytext.utils.meter.TimeMeter"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "arr", "type": "List[List[List[int]]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "arr_str", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "arr", "type": "List[List[List[float]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "arr_rounded", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "tmp_work_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "RAW_TEST_PATH", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get_test_sample", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "token", "type": "str"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "expected_unkified", "type": "str"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "items", "type": "Callable"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "dataset_size", "type": "int"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "world_size", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "rank", "type": "int"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "expected_range", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "shard_range", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "dataset_size", "type": "int"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "world_size", "type": "int"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "rank", "type": "int"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "expected_range", "type": "Tuple[int, int]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "shard_range", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "TimeMeter", "type": "Type[pytext.utils.meter.TimeMeter]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "set_random_seeds", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "round_seq", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "arr", "type": "List[List[List[float]]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "file_path", "type": "str"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "output_paths", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "json", "type": "module"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "align_slot_labels", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "align_slot_labels", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "map_token_unkified", "type": "Dict[str, str]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "expected_unkified", "type": "str"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "get_shard_range", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "dataset_size", "type": "int"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "rank", "type": "int"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "world_size", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "shard_range", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "expected_range", "type": "Tuple[int, int]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "get_shard_range", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "dataset_size", "type": "int"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "rank", "type": "int"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "world_size", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "shard_range", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "expected_range", "type": "Tuple[int, int]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "tps", "type": "pytext.utils.meter.TimeMeter"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "avg", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "randint", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "recursive_map", "type": "Callable[[Any, Any], Generator[Any, Any, None]]"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "arr", "type": "List[List[List[int]]]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "tmp_work_dir", "type": "str"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "fout", "type": "file"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "chunk_file", "type": "Callable[[Any, Any, Any], List[str]]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "file_path", "type": "str"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "tmp_work_dir", "type": "str"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "tmp_work_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "merge_token_labels_to_slot", "type": "Any"}, {"lineNumber": 41, "col_offset": 76, "nodeName": "i", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "merge_token_labels_to_slot", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "unkify", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "token", "type": "str"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "tps", "type": "pytext.utils.meter.TimeMeter"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "tps", "type": "pytext.utils.meter.TimeMeter"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "random", "type": "module"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "file_path", "type": "str"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "output_paths", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "UtilTest"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "readlines", "type": "Callable[..., List[str]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "i", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "arr_str", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "fout", "type": "file"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "strip_bio_prefix", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "l", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "l", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "arr_rounded", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "eq", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "output_paths", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "output_paths", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "output_paths", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "randint", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 54, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 74, "nodeName": "long", "type": "Any"}, {"lineNumber": 113, "col_offset": 74, "nodeName": "torch", "type": "Any"}]