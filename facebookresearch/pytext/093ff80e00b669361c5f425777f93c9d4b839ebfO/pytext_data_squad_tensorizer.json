[{"lineNumber": 21, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 215, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "max_ques_seq_len", "type": "int"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "max_doc_seq_len", "type": "int"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "vocab", "type": "None"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "token_id", "type": "int"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "token_id_list", "type": "List[int]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "Config", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "WordPieceTokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.WordPieceTokenizer]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "cls", "type": "Type[SquadTensorizer]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "WordPieceTokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.WordPieceTokenizer]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "from_scratch", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "vocab_builder", "type": "Union[Any, pytext.data.utils.VocabBuilder]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "pad_index", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "unk_index", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "vocab_builder", "type": "Union[Any, pytext.data.utils.VocabBuilder]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "from_scratch", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "vocab_builder", "type": "Union[Any, pytext.data.utils.VocabBuilder]"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "from_scratch", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "source_is_doc", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "_lookup_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "_lookup_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "token_idx", "type": "int"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "token_idx", "type": "int"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "answer_start_token_indices", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "answer_end_token_indices", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "answer_start_token_indices", "type": "List[int]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "answer_end_token_indices", "type": "List[int]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "byte", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "byte", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 45, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 43, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "BOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "MASK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "vocab", "type": "Optional[pytext.data.utils.Vocabulary]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "max_doc_seq_len", "type": "int"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "vocab", "type": "Optional[pytext.data.utils.Vocabulary]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "max_ques_seq_len", "type": "int"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "vocab", "type": "Optional[pytext.data.utils.Vocabulary]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "vocab_builder", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "vocab_builder", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "vocab_builder", "type": "Union[Any, pytext.data.utils.VocabBuilder]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "vocab_builder", "type": "Union[Any, pytext.data.utils.VocabBuilder]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "ques_initializer", "type": "Generator[None, Any, None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "doc_initializer", "type": "Generator[None, Any, None]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "_lookup_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "text", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 136, "col_offset": 64, "nodeName": "row", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "orig_start_idx", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "orig_end_idx", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "start_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "end_idx_map", "type": "Dict[Any, int]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_only_pad", "type": "Callable[[List[int]], bool]"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "answer_start_token_indices", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "_only_pad", "type": "Callable[[List[int]], bool]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "answer_end_token_indices", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "batch", "type": "Any"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 197, "col_offset": 59, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "doc_seq_len", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "ques_seq_len", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "token_id", "type": "int"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "token", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "replacements", "type": "Dict[str, pytext.data.utils.SpecialToken]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "VocabBuilder", "type": "Type[pytext.data.utils.VocabBuilder]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "send", "type": "Callable"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "send", "type": "Callable"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "ques_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "doc_tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 136, "col_offset": 68, "nodeName": "ques_column", "type": "str"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "answer", "type": "Any"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "answer_start_token_indices", "type": "List[int]"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "answer_end_token_indices", "type": "List[int]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "ques_initializer", "type": "Generator[None, Any, None]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "doc_initializer", "type": "Generator[None, Any, None]"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 136, "col_offset": 68, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "token", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 162, "col_offset": 52, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 162, "col_offset": 52, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 195, "col_offset": 36, "nodeName": "self", "type": "SquadTensorizer"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "tokenizer", "type": "Any"}]