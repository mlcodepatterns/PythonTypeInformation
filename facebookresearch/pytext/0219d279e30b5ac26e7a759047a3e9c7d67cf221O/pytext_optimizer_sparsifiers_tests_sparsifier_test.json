[{"lineNumber": 12, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "true_padded_param", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "param", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "padded_param", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "nnz", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "nnz", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "param", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "pre_mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "nnz", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 21, "col_offset": 56, "nodeName": "config", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "_get_blockwise_sparsifier", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "true_padded_param", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "_padding_into_full_blocks", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 70, "nodeName": "param", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "_get_blockwise_sparsifier", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 62, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 39, "col_offset": 72, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "to", "type": "Any"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "_compute_param_mask", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "param", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "_get_blockwise_sparsifier", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "to", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_compute_param_mask", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "param", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "_get_blockwise_sparsifier", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 89, "col_offset": 72, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "view", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "ceil", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "pre_mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "_compute_param_mask", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "param", "type": "Any"}, {"lineNumber": 107, "col_offset": 63, "nodeName": "pre_mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "BlockwiseMagnitudeSparsifier", "type": "Type[pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "block_size", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "sparsity", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "columnwise_blocking", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "BlockwiseMagnitudeSparsifier", "type": "Type[pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier]"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "param", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "math", "type": "module"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "nnz", "type": "int"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "param", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "param", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "math", "type": "module"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "nnz", "type": "int"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "param", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "param", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "math", "type": "module"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "nnz", "type": "int"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "to", "type": "Any"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "blockwise_sparsifier", "type": "pytext.optimizer.sparsifiers.blockwise_sparsifier.BlockwiseMagnitudeSparsifier"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestSparsifier"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "sum", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "sum", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "sum", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "sparsity", "type": "float"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "nnz_blocks", "type": "int"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "param", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "size", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "true_padded_param", "type": "Any"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "padded_param", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "abs_vals", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "block_l1_norms", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "abs", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "param", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "true_mask", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "j", "type": "int"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "j", "type": "int"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "j", "type": "int"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "j", "type": "int"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "j", "type": "int"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 75, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "j", "type": "int"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "j", "type": "int"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "j", "type": "int"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "block_sz", "type": "int"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "block_sz", "type": "int"}]