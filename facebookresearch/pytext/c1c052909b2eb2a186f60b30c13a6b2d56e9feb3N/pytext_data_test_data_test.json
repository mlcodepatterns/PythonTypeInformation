[{"lineNumber": 17, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "nested_lists", "type": "List[List[int]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "padded_lists", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "expected_lists", "type": "List[List[int]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_FP16_ENABLED", "type": "bool"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "padded_lists", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "expected_lists", "type": "List[List[int]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "_FP16_ENABLED", "type": "bool"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "batcher", "type": "pytext.data.data.PoolingBatcher"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "a_vals", "type": "Set[nothing]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "batches", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "batches", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "first_raw_batch", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "next", "type": "Callable"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "next", "type": "Callable"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "batches1", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "batches2", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "batches1", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "nested_lists", "type": "List[List[int]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "padded_lists", "type": "Any"}, {"lineNumber": 156, "col_offset": 39, "nodeName": "expected_lists", "type": "List[List[int]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "pad", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "nested_lists", "type": "List[List[int]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "padded_lists", "type": "Any"}, {"lineNumber": 161, "col_offset": 39, "nodeName": "expected_lists", "type": "List[List[int]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "PoolingBatcher", "type": "Type[pytext.data.data.PoolingBatcher]"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "a", "type": "nothing"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "a_vals", "type": "Set[nothing]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "a", "type": "nothing"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "_", "type": "nothing"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "a", "type": "nothing"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 52, "col_offset": 62, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "batches2", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "batchify", "type": "Callable[..., Generator[pytext.data.data.BatchData, Any, None]]"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "raw_data", "type": "List[pytext.data.sources.data_source.RawExample]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "numberized", "type": "Dict[str, List[Any]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "numberized", "type": "Dict[str, List[Any]]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "batchify", "type": "Callable[..., Generator[pytext.data.data.BatchData, Any, None]]"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "a", "type": "nothing"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 52, "col_offset": 66, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "first_raw_batch", "type": "Any"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "numberized_cache", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "data1", "type": "pytext.data.data.Data"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "data1", "type": "pytext.data.data.Data"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "raw_data", "type": "List[pytext.data.sources.data_source.RawExample]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "batcher", "type": "pytext.data.data.PoolingBatcher"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 188, "col_offset": 61, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 191, "col_offset": 71, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 191, "col_offset": 76, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 32, "nodeName": "a", "type": "nothing"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "a", "type": "nothing"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 118, "col_offset": 44, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 191, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 59, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 115, "col_offset": 45, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 185, "col_offset": 65, "nodeName": "numberized", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 56, "nodeName": "i", "type": "int"}]