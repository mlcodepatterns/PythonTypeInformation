[{"lineNumber": 14, "col_offset": 14, "nodeName": "HypothesisTestCase", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "hu", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "total_manual_loss", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "padded_targets", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "max_num_words", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "low_score", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "b_s", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "e_s", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "b_id", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "e_id", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "curr_state", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "input_states", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "input_state", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "input_states", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "total_score", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "unary_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "binary_scores", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "scripted_crf_model", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "max_num_words", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "batched_emissions", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "batched_seq_lens", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "crf_batch_decode", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "CRF", "type": "Type[pytext.models.crf.CRF]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "max", "type": "Callable"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "target_tokens", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "total_manual_loss", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "manual_loss", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 81, "col_offset": 73, "nodeName": "float32", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "float32", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "prev", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "curr_input", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "curr_state", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "curr_state", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "total_score", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "CRF", "type": "Type[pytext.models.crf.CRF]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "script", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "max", "type": "Callable"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "decode", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "batched_emissions", "type": "Any"}, {"lineNumber": 144, "col_offset": 63, "nodeName": "batched_seq_lens", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "decode", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "batched_emissions", "type": "Any"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "batched_seq_lens", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "WORD_LABEL_PAD_IDX", "type": "int"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "DEFAULT_LABEL_PAD_IDX", "type": "int"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "randint", "type": "Any"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "_compute_loss_manual", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "manual_loss", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "total_manual_loss", "type": "Union[Any, int]"}, {"lineNumber": 81, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "b_s", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "e_s", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "int32", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "b_id", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "labels", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "e_id", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "curr_state", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "input_state", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "binary_scores", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "unary_scores", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "WORD_LABEL_PAD_IDX", "type": "int"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "DEFAULT_LABEL_PAD_IDX", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "jit", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "rand", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "decode", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "decode", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "float", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "scripted_crf_model", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "crf_batch_decode", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "scriped_crf_batch_decode", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "Padding", "type": "Type[pytext.common.constants.Padding]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "Padding", "type": "Type[pytext.common.constants.Padding]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "padded_targets", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "target_tokens", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "float", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "item", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "low_score", "type": "int"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "transitions", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "Padding", "type": "Type[pytext.common.constants.Padding]"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "Padding", "type": "Type[pytext.common.constants.Padding]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "padded_inputs", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "scripted_crf_model", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 140, "col_offset": 43, "nodeName": "crf_decode", "type": "Any"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "scripted_crf_decode", "type": "Any"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 68, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "target_tokens", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "target_tokens", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "item", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "padded_targets", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "batched_crf_loss", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "prev", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "curr_input", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "transitions", "type": "Any"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 50, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "get_transitions", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "crf_loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "long", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 101, "col_offset": 62, "nodeName": "labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 75, "nodeName": "labels", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "input_emission", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 72, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "crf_model", "type": "pytext.models.crf.CRF"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "low_score", "type": "int"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "low_score", "type": "int"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 72, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "max_num_words", "type": "Any"}, {"lineNumber": 41, "col_offset": 65, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "max_num_words", "type": "Any"}, {"lineNumber": 48, "col_offset": 63, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "low_score", "type": "int"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "low_score", "type": "int"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "max_num_words", "type": "Any"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "seq_len", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "torch", "type": "Any"}]