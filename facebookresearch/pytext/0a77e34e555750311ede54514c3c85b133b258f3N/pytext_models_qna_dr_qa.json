[{"lineNumber": 27, "col_offset": 0, "nodeName": "GLOVE_840B_300D", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "Config", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "Config", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "Config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "dropout", "type": "float"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "dropout", "type": "float"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "ques_aligned_doc_attn", "type": "pytext.models.representations.attention.SequenceAlignedAttention"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "ques_self_attn", "type": "pytext.models.representations.attention.DotProductSelfAttention"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "embedding_module", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "embedding_module", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ques_self_attn", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "ques_self_attn", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "ques_aligned_doc_attn", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "ques_aligned_doc_attn", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "start_attn", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "start_attn", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "end_attn", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "end_attn", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "doc_rep_pool", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "doc_rep_pool", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 140, "col_offset": 28, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "doc_embedded", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "ques_embedded", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ques_aligned_doc_embedded", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "doc_embedded", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ques_seq_vec", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ques_attn_weights", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ques_vec", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ques_vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 179, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "squad_input", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "WordEmbedding", "type": "Type[pytext.models.embeddings.word_embedding.WordEmbedding]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "StackedBidirectionalRNN", "type": "Type[pytext.models.representations.stacked_bidirectional_rnn.StackedBidirectionalRNN]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "StackedBidirectionalRNN", "type": "Type[pytext.models.representations.stacked_bidirectional_rnn.StackedBidirectionalRNN]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "Config", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "create_embedding", "type": "Callable[[Any, Dict[str, pytext.data.tensorizers.Tensorizer]], Any]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "SequenceAlignedAttention", "type": "Type[pytext.models.representations.attention.SequenceAlignedAttention]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "DotProductSelfAttention", "type": "Type[pytext.models.representations.attention.DotProductSelfAttention]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "MultiplicativeAttention", "type": "Type[pytext.models.representations.attention.MultiplicativeAttention]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "MultiplicativeAttention", "type": "Type[pytext.models.representations.attention.MultiplicativeAttention]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "SelfAttention", "type": "Type[pytext.models.representations.pooling.SelfAttention]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "cls", "type": "Type[DrQAModel]"}, {"lineNumber": 103, "col_offset": 44, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "embedding", "type": "pytext.config.field_config.WordFeatConfig"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ques_tensorizer", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "doc_tensorizer", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "ques_self_attn", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "ques_aligned_doc_attn", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "start_attn", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "end_attn", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "doc_seq_len", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 164, "col_offset": 64, "nodeName": "ques_seq_len", "type": "Any"}, {"lineNumber": 164, "col_offset": 78, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "_", "type": "Any"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 167, "col_offset": 61, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "ques_aligned_doc_attn", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "doc_embedded", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "ques_embedded", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 188, "col_offset": 57, "nodeName": "ques_embedded", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "cat", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "doc_embedded", "type": "Any"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "ques_embedded", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "ques_self_attn", "type": "Any"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "ques_seq_vec", "type": "Any"}, {"lineNumber": 194, "col_offset": 62, "nodeName": "ques_mask", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "ques_vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "start_attn", "type": "Any"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 52, "nodeName": "ques_vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 62, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "end_attn", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "ques_vec", "type": "Any"}, {"lineNumber": 204, "col_offset": 58, "nodeName": "doc_mask", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "doc_vec", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 216, "col_offset": 41, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "SquadTensorizer", "type": "Type[pytext.data.squad_tensorizer.SquadTensorizer]"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "Config", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "GLOVE_840B_300D", "type": "str"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "cls", "type": "Type[DrQAModel]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 65, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "ques_rnn", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "ques_self_attn", "type": "pytext.models.representations.attention.DotProductSelfAttention"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "ques_aligned_doc_attn", "type": "pytext.models.representations.attention.SequenceAlignedAttention"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "start_attn", "type": "pytext.models.representations.attention.MultiplicativeAttention"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "end_attn", "type": "pytext.models.representations.attention.MultiplicativeAttention"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "doc_rep_pool", "type": "pytext.models.representations.pooling.SelfAttention"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "has_ans_decoder", "type": "pytext.models.decoders.mlp_decoder.MLPDecoder"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 103, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "model_config", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "squad_tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "doc_attn_weights", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "doc_embedded", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "ques_aligned_doc_embedded", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "size", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "doc_rep_pool", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "doc_seq_vec", "type": "Any"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "doc_seq_len", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "relu", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "SquadTensorizer", "type": "Type[pytext.data.squad_tensorizer.SquadTensorizer]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "SelfAttention", "type": "Type[pytext.models.representations.pooling.SelfAttention]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "dropout", "type": "float"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "doc_rnn", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "dropout", "type": "float"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 182, "col_offset": 37, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 195, "col_offset": 54, "nodeName": "ques_seq_vec", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "ques_tokens", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "F", "type": "Any"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 212, "col_offset": 60, "nodeName": "doc_vec", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 75, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "self", "type": "DrQAModel"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "ques_attn_weights", "type": "Any"}]