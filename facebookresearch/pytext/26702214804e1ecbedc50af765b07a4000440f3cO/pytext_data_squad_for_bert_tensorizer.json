[{"lineNumber": 21, "col_offset": 29, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "SquadForBERTTensorizer", "type": "Type[SquadForBERTTensorizer]"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "SquadForBERTTensorizer", "type": "Type[SquadForBERTTensorizer]"}, {"lineNumber": 254, "col_offset": 56, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "start_idx_map", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "end_idx_map", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "SquadForBERTTensorizer", "type": "Type[SquadForBERTTensorizer]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "start_logits_column", "type": "str"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "end_logits_column", "type": "str"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "has_answer_logits_column", "type": "str"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "pad_mask_column", "type": "str"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "segment_labels_column", "type": "str"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "start_logits_column", "type": "str"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "end_logits_column", "type": "str"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "has_answer_logits_column", "type": "str"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "pad_mask_column", "type": "str"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "segment_labels_column", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "start_logits_column", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "start_logits_column", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "end_logits_column", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "end_logits_column", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "has_answer_logits_column", "type": "Any"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "has_answer_logits_column", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "pad_mask_column", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "pad_mask_column", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "segment_labels_column", "type": "Any"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "segment_labels_column", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "mismatches", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "numberized_row_tuple", "type": "Tuple[List[nothing], List[nothing], int, List[int], Any, Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "tup", "type": "Union[Tuple[Any, ...], Tuple[Union[List[nothing], int, List[int], Any], ...]]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "wrap_special_tokens", "type": "bool"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "lookup_tokens", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "answer_start_indices", "type": "Union[List[Union[Any, int]], List[int]]"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "answer_end_indices", "type": "Union[List[int], List[Union[int, Any]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "question_column", "type": "str"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "_lookup_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "_lookup_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "_calculate_answer_indices", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "offset", "type": "int"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "answer_start_indices", "type": "List[int]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "answer_end_indices", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "positions", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 133, "col_offset": 63, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 134, "col_offset": 59, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "positions", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "from_config", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "numberize", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "row", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "numberized_row_tuple", "type": "Tuple[List[nothing], List[nothing], int, List[int], Any, Any]"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "tensorize", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "tensor_tuple", "type": "Tuple[Any, Any, Any, Any, Any, Any]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "pad_start", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "logits", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 266, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "cls", "type": "Type[SquadForRoBERTaTensorizer]"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 313, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "lookup_tokens", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "ScriptRoBERTaTensorizerWithIndices", "type": "Type[pytext.torchscript.tensorizer.roberta.ScriptRoBERTaTensorizerWithIndices]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "start_idx_map", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "offset", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "end_idx_map", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "tokenized_idx", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "offset", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "answer_start_indices", "type": "List[Union[Any, int]]"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "answer_end_indices", "type": "List[Union[int, Any]]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "SPAN_PAD_IDX", "type": "int"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "row", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "row", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "doc_tokens", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "batch", "type": "Any"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "get_pad_index", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "get_pad_index", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 63, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 134, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "start_logits_column", "type": "str"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "end_logits_column", "type": "str"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "has_answer_logits_column", "type": "str"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "pad_mask_column", "type": "str"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "segment_labels_column", "type": "str"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "mismatches", "type": "int"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "batch", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "positions", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "index", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "pad_start", "type": "int"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "pad_start", "type": "Union[Any, int]"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 266, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "RESOURCE_MAP", "type": "Dict[str, str]"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "build_fairseq_vocab", "type": "Callable[..., pytext.data.utils.Vocabulary]"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "start_idx", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "end_idx", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "raw_start_idx", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "raw_end_idx", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "raw_idx", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "answer", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "doc_column", "type": "str"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "question_column", "type": "str"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "get_bos_index", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 100, "col_offset": 68, "nodeName": "seq_lens", "type": "Tuple[int, int]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "segment_labels", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 186, "col_offset": 67, "nodeName": "total", "type": "int"}, {"lineNumber": 187, "col_offset": 70, "nodeName": "mismatches", "type": "int"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "_get_token_logits", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "_get_token_logits", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "get_pad_index", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "logits", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "roberta", "type": "module"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 321, "col_offset": 48, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "torchscriptify", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "get_pad_index", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 67, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 187, "col_offset": 70, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 194, "col_offset": 47, "nodeName": "row", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "has_answer_logits_column", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "tup", "type": "Union[Tuple[Any, ...], Tuple[Union[List[nothing], int, List[int], Any], ...]]"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "tup", "type": "Union[Tuple[Any, ...], Tuple[Union[List[nothing], int, List[int], Any], ...]]"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "float", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "float", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "float", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "resources", "type": "module"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "PAD", "type": "pytext.common.constants.Token"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "BOS", "type": "pytext.common.constants.Token"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "EOS", "type": "pytext.common.constants.Token"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "UNK", "type": "pytext.common.constants.Token"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "MASK", "type": "pytext.common.constants.Token"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 321, "col_offset": 48, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "answer_starts_column", "type": "str"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "answers_column", "type": "str"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "start_logits_column", "type": "Any"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "pad_mask_column", "type": "Any"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "end_logits_column", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "pad_mask_column", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "self", "type": "SquadForRoBERTaTensorizer"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "self", "type": "SquadForBERTTensorizer"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "self", "type": "SquadForBERTTensorizerForKD"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 242, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "tup", "type": "Union[Tuple[Any, ...], Tuple[Union[List[nothing], int, List[int], Any], ...]]"}, {"lineNumber": 207, "col_offset": 69, "nodeName": "tup", "type": "Union[Tuple[Any, ...], Tuple[Union[List[nothing], int, List[int], Any], ...]]"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "has_answer_logits", "type": "Any"}]