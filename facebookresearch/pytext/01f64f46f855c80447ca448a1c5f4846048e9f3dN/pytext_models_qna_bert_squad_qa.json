[{"lineNumber": 28, "col_offset": 23, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "Config", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "Config", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "cls", "type": "Type[BertSquadQAModel]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "pos_decoder", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "stage", "type": "pytext.common.constants.Stage"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "__class__", "type": "Type[BertSquadQAModel]"}, {"lineNumber": 97, "col_offset": 63, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "positions", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "_", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "cls_embed", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "ignore_impossible", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 150, "col_offset": 70, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "HuggingFaceBertSentenceEncoder", "type": "Type[pytext.models.representations.huggingface_bert_sentence_encoder.HuggingFaceBertSentenceEncoder]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "SquadOutputLayer", "type": "Type[pytext.models.output_layers.squad_output_layer.SquadOutputLayer]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 65, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 78, "col_offset": 71, "nodeName": "is_kd", "type": "bool"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "module_list", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 106, "col_offset": 59, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 107, "col_offset": 53, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "answer_start_idx", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "answer_end_idx", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "has_answer", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "has_answer_logits", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "has_ans_decoder", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "cls_embed", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "pos_logits", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "start_logits", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "end_logits", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "SquadForBERTTensorizer", "type": "Type[pytext.data.squad_for_bert_tensorizer.SquadForBERTTensorizer]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "has_answer_labels", "type": "List[str]"}, {"lineNumber": 74, "col_offset": 65, "nodeName": "config", "type": "Any"}, {"lineNumber": 78, "col_offset": 71, "nodeName": "config", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "self", "type": "BertSquadQAModel"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "vocab", "type": "Any"}]