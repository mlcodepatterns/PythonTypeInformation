[{"lineNumber": 53, "col_offset": 0, "nodeName": "init_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "TransformerSentenceEncoderBase", "type": "Type[pytext.models.representations.transformer_sentence_encoder_base.TransformerSentenceEncoderBase]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 238, "col_offset": 14, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "RoBERTa", "type": "Type[RoBERTa]"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 368, "col_offset": 74, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "module", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "TransformerSentenceEncoderBase", "type": "Type[pytext.models.representations.transformer_sentence_encoder_base.TransformerSentenceEncoderBase]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "sentence_rep", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "Config", "type": "Type[pytext.config.module_config.ModuleConfig]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "num_attention_heads", "type": "int"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "is_finetuned", "type": "bool"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "DEFAULT_MAX_SEQUENCE_LENGTH", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "use_linformer_encoder", "type": "bool"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "linformer_compressed_ratio", "type": "int"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "export_encoder", "type": "bool"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "variable_size_embedding", "type": "bool"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "use_selfie_encoder", "type": "bool"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "use_linformer_encoder", "type": "bool"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "use_selfie_encoder", "type": "bool"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "use_selfie_encoder", "type": "bool"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "model_path", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "export_encoder", "type": "bool"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "export_encoder", "type": "bool"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "variable_size_embedding", "type": "bool"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "variable_size_embedding", "type": "bool"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "projection", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "output_encoded_layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 239, "col_offset": 17, "nodeName": "NewBertModel", "type": "Type[pytext.models.bert_classification_models.NewBertModel]"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "InputConfig", "type": "Type[Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "export_encoder", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "export_encoder", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "RoBERTa", "type": "Type[RoBERTa]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "use_selfie", "type": "bool"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "output_encoded_layers", "type": "Any"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "NewBertRegressionModel", "type": "Type[pytext.models.bert_regression_model.NewBertRegressionModel]"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "RegressionModelInput", "type": "Type[Any]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 323, "col_offset": 37, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "WordTaggingInputConfig", "type": "Type[Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "Config", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "label_vocab", "type": "Any"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "labels_vocab", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 350, "col_offset": 61, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "module_list", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "stage", "type": "Any"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "stage", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "model_inputs", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "representation", "type": "Any"}, {"lineNumber": 368, "col_offset": 74, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "bias", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "full_representation", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "sentence_rep", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "Module", "type": "Type[pytext.models.module.Module]"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "pretrained_encoder", "type": "pytext.config.module_config.ModuleConfig"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoderJit"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "pretrained_encoder", "type": "pytext.config.module_config.ModuleConfig"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoderJit"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "size", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "__class__", "type": "Type[RoBERTaEncoderJit]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 131, "col_offset": 62, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "model_path", "type": "str"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "init_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "__class__", "type": "Type[RoBERTaEncoder]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "transformer", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "use_selfie_encoder", "type": "bool"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "input_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "pooling", "type": "pytext.models.representations.transformer_sentence_encoder_base.PoolingMethod"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "CLS_TOKEN", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "pooling", "type": "pytext.models.representations.transformer_sentence_encoder_base.PoolingMethod"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "NO_POOL", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "dense", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "InputConfig", "type": "Type[Any]"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "torchscriptify", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 292, "col_offset": 28, "nodeName": "representation", "type": "Any"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "RegressionModelInput", "type": "Type[Any]"}, {"lineNumber": 302, "col_offset": 17, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 302, "col_offset": 45, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "torchscriptify", "type": "Any"}, {"lineNumber": 310, "col_offset": 15, "nodeName": "ScriptPyTextModule", "type": "Type[pytext.torchscript.module.ScriptPyTextModule]"}, {"lineNumber": 328, "col_offset": 41, "nodeName": "WordTaggingInputConfig", "type": "Type[Any]"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "RoBERTaEncoderBase", "type": "Type[RoBERTaEncoderBase]"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "WordTaggingOutputLayer", "type": "Type[pytext.models.output_layers.word_tagging_output_layer.WordTaggingOutputLayer]"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "Config", "type": "Any"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "cls", "type": "Type[RoBERTaWordTaggingModel]"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 350, "col_offset": 61, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "log_class_usage", "type": "Callable[[Any], None]"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "__class__", "type": "Type[RoBERTaWordTaggingModel]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 360, "col_offset": 26, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "positions", "type": "Any"}, {"lineNumber": 360, "col_offset": 53, "nodeName": "_", "type": "Any"}, {"lineNumber": 360, "col_offset": 57, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 361, "col_offset": 58, "nodeName": "positions", "type": "Any"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "model_inputs", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "_", "type": "Any"}, {"lineNumber": 365, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "representation", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "module", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "encoder", "type": "Union[pytext.models.representations.transformer.sentence_encoder.SentenceEncoder, pytext.models.representations.transformer.sentence_encoder.PostEncoder]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "encoder", "type": "Union[pytext.models.representations.transformer.sentence_encoder.SentenceEncoder, pytext.models.representations.transformer.sentence_encoder.PostEncoder]"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "full_representation", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "PUBLIC", "type": "str"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "load_path", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "RESOURCE_MAP", "type": "Dict[str, str]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "pretrained_encoder", "type": "pytext.config.module_config.ModuleConfig"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "output_encoded_layers", "type": "bool"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "output_encoded_layers", "type": "bool"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "model_path", "type": "str"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "RESOURCE_MAP", "type": "Dict[str, str]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "use_selfie_encoder", "type": "bool"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "PostEncoder", "type": "Type[pytext.models.representations.transformer.sentence_encoder.PostEncoder]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 189, "col_offset": 62, "nodeName": "f", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "is_finetuned", "type": "bool"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "encoder", "type": "Union[pytext.models.representations.transformer.sentence_encoder.SentenceEncoder, pytext.models.representations.transformer.sentence_encoder.PostEncoder]"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "_encoder", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "input_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "PoolingMethod", "type": "Type[pytext.models.representations.transformer_sentence_encoder_base.PoolingMethod]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "_pool_encoded_layers", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "encoded_layers", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "output_dropout", "type": "Any"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "encoded_layers", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "PoolingMethod", "type": "Type[pytext.models.representations.transformer_sentence_encoder_base.PoolingMethod]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "Config", "type": "Any"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "RoBERTaEncoderJit", "type": "Type[RoBERTaEncoderJit]"}, {"lineNumber": 249, "col_offset": 11, "nodeName": "self", "type": "RoBERTa"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "trace", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "trace", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "self", "type": "RoBERTa"}, {"lineNumber": 252, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "self", "type": "RoBERTa"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "ScriptPyTextEmbeddingModuleIndex", "type": "Type[pytext.torchscript.module.ScriptPyTextEmbeddingModuleIndex]"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "traced_model", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "self", "type": "SELFIE"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "self", "type": "SELFIE"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "Config", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "NumericLabelTensorizer", "type": "Type[pytext.data.tensorizers.NumericLabelTensorizer]"}, {"lineNumber": 299, "col_offset": 52, "nodeName": "Config", "type": "Any"}, {"lineNumber": 302, "col_offset": 45, "nodeName": "RoBERTaEncoderJit", "type": "Type[RoBERTaEncoderJit]"}, {"lineNumber": 311, "col_offset": 18, "nodeName": "traced_model", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "RoBERTaEncoderJit", "type": "Type[RoBERTaEncoderJit]"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "WordTaggingOutputLayer", "type": "Type[pytext.models.output_layers.word_tagging_output_layer.WordTaggingOutputLayer]"}, {"lineNumber": 334, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 335, "col_offset": 22, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "config", "type": "Any"}, {"lineNumber": 347, "col_offset": 65, "nodeName": "label_vocab", "type": "Any"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "stage", "type": "Any"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 374, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "roberta", "type": "module"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "pretrained_encoder", "type": "pytext.config.module_config.ModuleConfig"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "roberta", "type": "module"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "token_embedding", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "self", "type": "RoBERTaEncoderJit"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "roberta", "type": "module"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "linformer_compressed_ratio", "type": "int"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "open", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "model_path", "type": "str"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "load", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "load_roberta_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "roberta_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 47, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "Config", "type": "Any"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "jit", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "self", "type": "RoBERTa"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "jit", "type": "Any"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "ScriptPyTextModuleWithDense", "type": "Type[pytext.torchscript.module.ScriptPyTextModuleWithDense]"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "ScriptPyTextModule", "type": "Type[pytext.torchscript.module.ScriptPyTextModule]"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 289, "col_offset": 42, "nodeName": "encoder_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "encoder_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 299, "col_offset": 52, "nodeName": "NumericLabelTensorizer", "type": "Type[pytext.data.tensorizers.NumericLabelTensorizer]"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "torchscript_predictions", "type": "Any"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "RoBERTaTokenLevelTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTokenLevelTensorizer]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 345, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 345, "col_offset": 75, "nodeName": "label_vocab", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "encoder_inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "module", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "resources", "type": "module"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "resources", "type": "module"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "resources", "type": "module"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "SELFIETransformer", "type": "Type[pytext.models.representations.transformer.transformer.SELFIETransformer]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "encoder", "type": "Union[pytext.models.representations.transformer.sentence_encoder.SentenceEncoder, pytext.models.representations.transformer.sentence_encoder.PostEncoder]"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "roberta_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "projection", "type": "Any"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "FloatListTensorizer", "type": "Type[pytext.data.tensorizers.FloatListTensorizer]"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "traced_model", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "normalizer", "type": "Any"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "traced_model", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "script_tensorizer", "type": "Any"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "self", "type": "SELFIE"}, {"lineNumber": 289, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "self", "type": "SELFIE"}, {"lineNumber": 291, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 334, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 334, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "self", "type": "RoBERTaWordTaggingModel"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "padding_idx", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "layers", "type": "List[pytext.models.representations.transformer.transformer.TransformerLayer]"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "self", "type": "RoBERTaEncoder"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "torchscript_predictions", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "torchscript_predictions", "type": "Any"}, {"lineNumber": 285, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "self", "type": "RoBERTaRegression"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "self", "type": "RoBERTaEncoderJit"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "config", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "default_restore_location", "type": "Any"}, {"lineNumber": 191, "col_offset": 74, "nodeName": "s", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 268, "col_offset": 33, "nodeName": "self", "type": "RoBERTa"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "self", "type": "RoBERTa"}]