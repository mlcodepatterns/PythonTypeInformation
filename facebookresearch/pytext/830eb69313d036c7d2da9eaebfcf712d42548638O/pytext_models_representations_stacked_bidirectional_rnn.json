[{"lineNumber": 11, "col_offset": 14, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "RNN_TYPE_DICT", "type": "Dict[Any, Any]"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "Module", "type": "Type[pytext.models.module.Module]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "RNN", "type": "str"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "LSTM", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "GRU", "type": "str"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 17, "col_offset": 74, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "Config", "type": "Type[pytext.config.module_config.ModuleConfig]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "RnnType", "type": "Type[RnnType]"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "RnnType", "type": "Type[RnnType]"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "RnnType", "type": "Type[RnnType]"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "nn", "type": "Any"}, {"lineNumber": 17, "col_offset": 74, "nodeName": "nn", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "Module", "type": "Type[pytext.models.module.Module]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "rnn_type", "type": "RnnType"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "RnnType", "type": "Type[RnnType]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "concat_layers", "type": "bool"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "concat_layers", "type": "bool"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "concat_layers", "type": "bool"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "padding_value", "type": "float"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "padding_value", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "rnns", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "rnn_module", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "tokens_sorted", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "RnnType", "type": "Type[RnnType]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "get", "type": "Callable"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "rnn_type", "type": "RnnType"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "rnn_module", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "input_size", "type": "int"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "sort", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "seq_lengths", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "idx_of_sorted", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tokens_sorted", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "seq_lengths_sorted", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "packed_tokens", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "rnn_input", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "concat_layers", "type": "bool"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "idx_of_original", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "sort", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "idx_of_sorted", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "idx_of_original", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "output_seq_len", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "size", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "output_seq_len", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "RNN_TYPE_DICT", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "input_size", "type": "int"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "PackedSequence", "type": "Any"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "batch_sizes", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 66, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "tokens_mask", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "cat", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "rnns", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "rnn_module", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "input_size", "type": "int"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "utils", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "rnn_input", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "padding", "type": "Any"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "config", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "utils", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "rnn_input", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "rnn_input", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "padding_value", "type": "float"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "long", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "rnns", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "utils", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "output_seq_len", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "self", "type": "StackedBidirectionalRNN"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "eq", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "tokens_mask", "type": "Any"}]