[{"lineNumber": 13, "col_offset": 38, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_tree_to_metric_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "TEXT_EXAMPLES", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "annotation_string", "type": "str"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "expected_frame", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "frame", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "Annotation", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "annotation_string", "type": "str"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "tree_to_metric_node", "type": "Any"}, {"lineNumber": 58, "col_offset": 68, "nodeName": "tree", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "frame", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "expected_frame", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "Node", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "Node", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "Node", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "CompositionalMetricReporter", "type": "Any"}, {"lineNumber": 58, "col_offset": 68, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestCompositionalMetricReporter"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "Span", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "Span", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "Span", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "Node", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "Node", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "Node", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "Node", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "Node", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "Node", "type": "Any"}, {"lineNumber": 23, "col_offset": 55, "nodeName": "Span", "type": "Any"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "Span", "type": "Any"}, {"lineNumber": 25, "col_offset": 55, "nodeName": "Span", "type": "Any"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "Span", "type": "Any"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "Span", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "Span", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "Node", "type": "Any"}, {"lineNumber": 49, "col_offset": 64, "nodeName": "Span", "type": "Any"}]