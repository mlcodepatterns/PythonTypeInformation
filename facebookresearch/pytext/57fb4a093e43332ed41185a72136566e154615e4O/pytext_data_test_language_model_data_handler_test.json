[{"lineNumber": 16, "col_offset": 0, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "LanguageModelDataHandler", "type": "Type[pytext.data.language_model_data_handler.LanguageModelDataHandler]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "train_iter", "type": "pytext.data.data_handler.BatchIterator"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "batches", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "batches_1", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "batches_2", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "CONTEXT_INDEX", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "b", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "batches_2", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "test_batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "TEXT_FIELD", "type": "str"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "LanguageModelDataHandler", "type": "Type[pytext.data.language_model_data_handler.LanguageModelDataHandler]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "_init_data_handler", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "features", "type": "Dict[str, pytext.fields.field.FieldMeta]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "pad_token_idx", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "unk_token_idx", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "init_token_idx", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "eos_token_idx", "type": "int"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "get_train_iter_from_path", "type": "Callable[..., pytext.data.data_handler.BatchIterator]"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 49, "col_offset": 70, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "t", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "batches", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "_init_data_handler", "type": "Callable[[], Any]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "get_train_iter_from_path", "type": "Callable[..., pytext.data.data_handler.BatchIterator]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "get_train_iter_from_path", "type": "Callable[..., pytext.data.data_handler.BatchIterator]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "train_iter_1", "type": "pytext.data.data_handler.BatchIterator"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "train_iter_2", "type": "pytext.data.data_handler.BatchIterator"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "IGNORE_LOSS", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "batches_2", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "init_metadata_from_path", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "FILE_NAME", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "DatasetFieldName", "type": "Type[pytext.common.constants.DatasetFieldName]"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "TextFeatureField", "type": "Type[pytext.fields.field.TextFeatureField]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "TEXT_FIELD", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "text_feat_meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "t", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "train_iter", "type": "pytext.data.data_handler.BatchIterator"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "batches", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "batches_1", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "batches_2", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "IGNORE_LOSS", "type": "str"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "BatchContext", "type": "Type[pytext.common.constants.BatchContext]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "LanguageModelDataHandlerTest"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "test_batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "LanguageModelDataHandler", "type": "Type[pytext.data.language_model_data_handler.LanguageModelDataHandler]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "WordLabelConfig", "type": "Type[pytext.config.field_config.WordLabelConfig]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "EOS_TOKEN", "type": "str"}, {"lineNumber": 29, "col_offset": 58, "nodeName": "INIT_TOKEN", "type": "str"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "create_featurizer", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "data_handler", "type": "pytext.data.language_model_data_handler.LanguageModelDataHandler"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "DatasetFieldName", "type": "Type[pytext.common.constants.DatasetFieldName]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "batch", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "BatchContext", "type": "Type[pytext.common.constants.BatchContext]"}, {"lineNumber": 101, "col_offset": 51, "nodeName": "b", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 103, "col_offset": 47, "nodeName": "batches_1", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "CONTEXT_INDEX", "type": "int"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "IGNORE_LOSS", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "LanguageModelDataHandler", "type": "Type[pytext.data.language_model_data_handler.LanguageModelDataHandler]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "create_featurizer", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 29, "col_offset": 58, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "CONTEXT_INDEX", "type": "int"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "batches_1", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "BatchContext", "type": "Type[pytext.common.constants.BatchContext]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 116, "col_offset": 68, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}]