[{"lineNumber": 30, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "_iter", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "group", "type": "Dict[str, List[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "optim", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "x1", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "x2", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "x3", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "y2", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "y3", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "data_set", "type": "List[List[Any]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "w1", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "w1_data", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "w1_copy", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ww1_data", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ww1", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "fake_w1_data", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "w2", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "w2_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "w2_copy", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "ww2_data", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "ww2", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "fake_w2_data", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "parameters_copy", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "fake_parameters", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "fake_optimizer", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "pparameters", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "ooptimizer", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "_t", "type": "int"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_t", "type": "int"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "cpu_sum_base", "type": "List[float]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "cpu_sum_exp", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "group", "type": "Dict[str, List[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "param_groups", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "initialize", "type": "Callable[..., Tuple[Any, Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]]]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_generate_inner_optim", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_generate_inner_optim", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_pseudo_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "zero_grad", "type": "Callable[[], None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_is_all_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_generate_inner_optim", "type": "Callable[[], Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_pseudo_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_is_grad_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_generate_inner_optim", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_pseudo_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_is_weight_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_generate_inner_optim", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_pseudo_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], None]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_pseudo_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "zero_grad", "type": "Callable[[], None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_pseudo_backward", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], None]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_is_grad_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_pseudo_step_pair", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_is_all_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_is_all_half", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_is_weight_equal", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "D_in", "type": "int"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "H", "type": "int"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "D_out", "type": "int"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "w1_data", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "ww1_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "w2_data", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "ww2_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "w1", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "w2", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "w1_copy", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "w2_copy", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "parameters", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "parameters_copy", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "fake_w1_data", "type": "Any"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "fake_w2_data", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "fake_parameters", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "initialize", "type": "Callable[..., Tuple[Any, Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "fake_optimizer", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "ww1", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "ww2", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "pparameters", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 171, "col_offset": 44, "nodeName": "initialize", "type": "Callable[..., Tuple[Any, Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "fake_model", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "ooptimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "pair", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "data_set", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "pair", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "data_set", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "_test_logic_prepare", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "cpu_sum_base_init", "type": "float"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "_test_logic_baseline", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "cpu_sum_base_final", "type": "float"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "cpu_sum_exp_init", "type": "float"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "_test_logic_experiment", "type": "Callable[[], Any]"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "cpu_sum_exp_final", "type": "float"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "cpu_sum_base", "type": "List[float]"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "cpu_sum_exp", "type": "List[float]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "i", "type": "float"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "j", "type": "float"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "cpu_sum_base", "type": "List[float]"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "cpu_sum_exp", "type": "List[float]"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 39, "nodeName": "master_param_groups", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "model_param_groups", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "u", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "grad", "type": "None"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "a", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[str, List[Any]]]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "optim", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "fp16_optimizer", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "D_in", "type": "int"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "D_in", "type": "int"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "D_in", "type": "int"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "D_out", "type": "int"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "D_out", "type": "int"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "N", "type": "int"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "D_out", "type": "int"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "x1", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "y1", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "x2", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "y2", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "x3", "type": "Any"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "y3", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "D_in", "type": "int"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "H", "type": "int"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "w1", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "w1", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "w1", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "H", "type": "int"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "D_out", "type": "int"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "w2", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "copy", "type": "module"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "w2", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "copy", "type": "module"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "w2", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "optim", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "fp16_optimizer", "type": "module"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "optim", "type": "Any"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "learning_rate", "type": "float"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 171, "col_offset": 44, "nodeName": "fp16_optimizer", "type": "module"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "check_overflow", "type": "Any"}, {"lineNumber": 198, "col_offset": 60, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "lloss", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "lloss", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 32, "nodeName": "cpu_sum_base_init", "type": "float"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "cpu_sum_base_final", "type": "float"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "ffp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 242, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "cpu_sum_exp_init", "type": "float"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "ffp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 247, "col_offset": 31, "nodeName": "cpu_sum_exp_final", "type": "float"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "i", "type": "float"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "j", "type": "float"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "float16", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 34, "nodeName": "model_param_groups", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "master_param_groups", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "data", "type": "nothing"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "data", "type": "nothing"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 34, "nodeName": "model_param_groups", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "master_param_groups", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 275, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "data", "type": "nothing"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "data", "type": "nothing"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "grad", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "v", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "u", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "float", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 294, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "loss_scaler", "type": "pytext.optimizer.fp16_optimizer.DynamicLossScaler"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "loss_scaler", "type": "pytext.optimizer.fp16_optimizer.DynamicLossScaler"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "loss_scaler", "type": "pytext.optimizer.fp16_optimizer.DynamicLossScaler"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "mm", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "scale", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "loss", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 198, "col_offset": 60, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "update_scale", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "ffp16_optim", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "mm", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "lloss", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "ffp16_optim", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "sum", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "cpu_sum_base", "type": "List[float]"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "sum", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "cpu_sum_base", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "sum", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "cpu_sum_exp", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "sum", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "cpu_sum_exp", "type": "List[float]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 259, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "u", "type": "nothing"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "v", "type": "nothing"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 276, "col_offset": 32, "nodeName": "m", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "y", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "rand_in", "type": "int"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "fp16_optim", "type": "Union[pytext.optimizer.fp16_optimizer.FP16Optimizer, pytext.optimizer.fp16_optimizer.PureFP16Optimizer]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 180, "col_offset": 67, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "data_set", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "master", "type": "nothing"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "master", "type": "nothing"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "master", "type": "nothing"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "model", "type": "nothing"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "fake_fp16_optim", "type": "Any"}, {"lineNumber": 198, "col_offset": 60, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "fake_fp16_optim", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "div_", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "scale", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "_generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "data", "type": "nothing"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 217, "col_offset": 68, "nodeName": "pparameters", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "data_set", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "scale_loss", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "lloss", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "ffp16_optim", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "backward", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 266, "col_offset": 28, "nodeName": "u", "type": "nothing"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "v", "type": "nothing"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 180, "col_offset": 67, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "fake_fp16_optim", "type": "Any"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "master", "type": "nothing"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "loss_scaler", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "data", "type": "nothing"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "master", "type": "nothing"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "fake_fp16_optim", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 217, "col_offset": 68, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "pow", "type": "Any"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "fp16_optimizer", "type": "module"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "float", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "float", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "float", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "float", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "float", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "pow", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "fake_fp16_optim", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "model", "type": "nothing"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 277, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 277, "col_offset": 48, "nodeName": "y", "type": "Any"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "v", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "mm", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "mm", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "yy_pred", "type": "Any"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "pparameters", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "pair", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "pair", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "self", "type": "TestFp16Optimizer"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "pair", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "pair", "type": "Any"}, {"lineNumber": 217, "col_offset": 31, "nodeName": "self", "type": "TestFp16Optimizer"}]