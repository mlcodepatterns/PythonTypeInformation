[{"lineNumber": 34, "col_offset": 26, "nodeName": "Model", "type": "Type[pytext.models.model.Model]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "Model", "type": "Type[pytext.models.model.Model]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "DocModel", "type": "Type[DocModel]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Model", "type": "Type[pytext.models.model.Model]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "embedding", "type": "pytext.config.field_config.WordFeatConfig"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "Config", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "input_vocab", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "output_layer", "type": "Union[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer, pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "DocModel", "type": "Type[DocModel]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "RegressionModelInput", "type": "Type[Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "Config", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "output_layer", "type": "pytext.models.output_layers.doc_regression_output_layer.RegressionOutputLayer"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "ModelInput", "type": "Type[Any]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "WordEmbedding", "type": "Type[pytext.models.embeddings.word_embedding.WordEmbedding]"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "Config", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "ModelExporter", "type": "Type[pytext.exporters.exporter.ModelExporter]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "export_to_caffe2", "type": "Callable[..., List[str]]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "path", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "torchscript_predictions", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "jit", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "Model", "type": "Type[Any]"}, {"lineNumber": 140, "col_offset": 38, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "embedding", "type": "pytext.config.field_config.WordFeatConfig"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 148, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 148, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "create_embedding", "type": "Callable[[Any, Dict[str, pytext.data.tensorizers.Tensorizer]], Any]"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "create_decoder", "type": "Callable[[Any, int, int], Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "create_loss", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "MulticlassOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "output_layer_cls", "type": "Union[Type[pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer], Type[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer]]"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "loss", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "cls", "type": "Type[DocModel]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "representation", "type": "Any"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "output_layer", "type": "Union[pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer, pytext.models.output_layers.doc_classification_output_layer.MulticlassOutputLayer]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "Config", "type": "Any"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "RegressionModelInput", "type": "Type[Any]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "RegressionOutputLayer", "type": "Type[pytext.models.output_layers.doc_regression_output_layer.RegressionOutputLayer]"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "Config", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "create_embedding", "type": "Callable[[Any, Dict[str, pytext.data.tensorizers.Tensorizer]], Any]"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "config", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "representation", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "create_module", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 196, "col_offset": 57, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "cls", "type": "Type[DocRegressionModel]"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "representation", "type": "Any"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "output_layer", "type": "pytext.models.output_layers.doc_regression_output_layer.RegressionOutputLayer"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "BiLSTMDocAttention", "type": "Type[pytext.models.representations.bilstm_doc_attention.BiLSTMDocAttention]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "ClassificationOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "Model", "type": "Type[pytext.models.model.Model]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "WordEmbedding", "type": "Type[pytext.models.embeddings.word_embedding.WordEmbedding]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "BiLSTMDocAttention", "type": "Type[pytext.models.representations.bilstm_doc_attention.BiLSTMDocAttention]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "MLPDecoder", "type": "Type[pytext.models.decoders.mlp_decoder.MLPDecoder]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "ClassificationOutputLayer", "type": "Type[pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "get_export_input_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "arrange_model_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "vocab_to_export", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "get_export_output_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "exporter", "type": "pytext.exporters.exporter.ModelExporter"}, {"lineNumber": 106, "col_offset": 70, "nodeName": "export_onnx_path", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "output_layer", "type": "pytext.models.output_layers.output_layer_base.OutputLayerBase"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "traced_model", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "pad_idx", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "pad_to_length", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "init_from_saved_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "representation_dim", "type": "int"}, {"lineNumber": 150, "col_offset": 63, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "cls", "type": "Type[DocModel]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "cls", "type": "Type[DocModel]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "representation", "type": "Any"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 59, "nodeName": "labels", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "loss", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "BinaryCrossEntropyLoss", "type": "Type[pytext.loss.loss.BinaryCrossEntropyLoss]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "DocModel", "type": "Type[DocModel]"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "Config", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "NumericLabelTensorizer", "type": "Type[pytext.data.tensorizers.NumericLabelTensorizer]"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "Config", "type": "Any"}, {"lineNumber": 185, "col_offset": 53, "nodeName": "RegressionOutputLayer", "type": "Type[pytext.models.output_layers.doc_regression_output_layer.RegressionOutputLayer]"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "cls", "type": "Type[DocRegressionModel]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "RegressionOutputLayer", "type": "Type[pytext.models.output_layers.doc_regression_output_layer.RegressionOutputLayer]"}, {"lineNumber": 196, "col_offset": 57, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "ModelExporter", "type": "Type[pytext.exporters.exporter.ModelExporter]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "self", "type": "DocModel"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "Vocabulary", "type": "Type[pytext.utils.torch.Vocabulary]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "input_vocab", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "Attribute", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "lookup_indices_2d", "type": "Any"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "tokens", "type": "List[List[str]]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "annotate", "type": "Any"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "list_max", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "_", "type": "int"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "logits", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 181, "col_offset": 45, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "NumericLabelTensorizer", "type": "Type[pytext.data.tensorizers.NumericLabelTensorizer]"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "representation", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "jit", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "idx", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "jit", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "word_ids", "type": "Any"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 73, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 69, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 188, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 188, "col_offset": 64, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "idx", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "input_vocab", "type": "Any"}, {"lineNumber": 119, "col_offset": 61, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "pad_to_length", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "append", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "pad_idx", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "input_vocab", "type": "Any"}, {"lineNumber": 116, "col_offset": 77, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}]