[{"lineNumber": 25, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tensors", "type": "Generator[Tuple[Any, int, List[Tuple[Any, Any]]], Any, None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTensorizer"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "s3", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "tensors", "type": "List[Tuple[List[Any], int]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "batch", "type": "List[Dict[str, str]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "expected_token_lens", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected_byte_lens", "type": "List[List[int]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.FloatListTensorizer"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "a_row", "type": "Dict[str, str]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "SessionTSVDataSource", "type": "Type[pytext.data.sources.tsv.SessionTSVDataSource]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "initialize_tensorizers", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "initialize_tensorizers", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "lens", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "tensorize", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "initialize_tensorizers", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.SessionTSVDataSource"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "lens", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "tensorize", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "initialize_tensorizers", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "token_ranges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "next", "type": "Callable"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "tensors", "type": "Generator[Tuple[Any, int, List[Tuple[Any, Any]]], Any, None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 62, "nodeName": "token_ranges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "token_ranges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "next", "type": "Callable"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "tensors", "type": "Generator[Tuple[Any, int, List[Tuple[Any, Any]]], Any, None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "token_ranges", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "ByteTensorizer", "type": "Type[pytext.data.tensorizers.ByteTensorizer]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 70, "nodeName": "tensors", "type": "List[Tuple[List[Any], int]]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "ByteTokenTensorizer", "type": "Type[pytext.data.tensorizers.ByteTokenTensorizer]"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "tensorize", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "token_lens", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "byte_lens", "type": "Any"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "expected", "type": "List[List[List[int]]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "expected_token_lens", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "expected_byte_lens", "type": "List[List[int]]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, None]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, None]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "next", "type": "Callable"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "next", "type": "Callable"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "GazetteerTensorizer", "type": "Type[pytext.data.tensorizers.GazetteerTensorizer]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "GazetteerTensorizer", "type": "Type[pytext.data.tensorizers.GazetteerTensorizer]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "initialize", "type": "Callable[[], Generator[None, Any, Any]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "row", "type": "Any"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "tensorize", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "SeqTokenTensorizer", "type": "Type[pytext.data.tensorizers.SeqTokenTensorizer]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "SeqTokenTensorizer", "type": "Type[pytext.data.tensorizers.SeqTokenTensorizer]"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "initialize", "type": "Callable[..., Generator[None, Any, None]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "send", "type": "Callable"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 370, "col_offset": 21, "nodeName": "FloatListTensorizer", "type": "Type[pytext.data.tensorizers.FloatListTensorizer]"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "numberize", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "a_row", "type": "Dict[str, str]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 37, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "LabelListTensorizer", "type": "Type[pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "LabelListTensorizer", "type": "Type[pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "data", "type": "pytext.data.sources.tsv.SessionTSVDataSource"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "LabelListTensorizer", "type": "Type[pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "data", "type": "pytext.data.sources.tsv.SessionTSVDataSource"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, int]]"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "row", "type": "Any"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "row", "type": "Any"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "LabelListTensorizer", "type": "Type[pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "data", "type": "pytext.data.sources.tsv.SessionTSVDataSource"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "ByteTensorizer", "type": "Type[pytext.data.tensorizers.ByteTensorizer]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, int, List[Tuple[Any, Any]]]]"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "s1", "type": "str"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "s2", "type": "str"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "s3", "type": "str"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 58, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], int]]"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "s1", "type": "str"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "s2", "type": "str"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTokenTensorizer"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "size", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "next", "type": "Callable"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "tensors", "type": "Generator[Any, Any, None]"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 297, "col_offset": 54, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 319, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "lens", "type": "int"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], int]]"}, {"lineNumber": 324, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "lens", "type": "int"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 326, "col_offset": 65, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "send", "type": "Callable"}, {"lineNumber": 349, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 357, "col_offset": 17, "nodeName": "lens", "type": "int"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], int]]"}, {"lineNumber": 357, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 32, "nodeName": "lens", "type": "int"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "numberize", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 40, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 381, "col_offset": 49, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 381, "col_offset": 56, "nodeName": "rows", "type": "List[Dict[str, str]]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.FloatListTensorizer"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "data", "type": "pytext.data.sources.tsv.SessionTSVDataSource"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "tensors", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, int]]"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "row", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.TokenTensorizer"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTensorizer"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "expected", "type": "List[List[int]]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 61, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 60, "nodeName": "ords", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "numberize", "type": "Callable[[Any], Tuple[Any, int, Any]]"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "row", "type": "Dict[str, str]"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "batch", "type": "List[Dict[str, str]]"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "token_lens", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "byte_lens", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "token_lens", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "byte_lens", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.LabelTensorizer"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 227, "col_offset": 41, "nodeName": "Gazetteer", "type": "Type[List[Dict[str, Dict[str, float]]]]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "send", "type": "Callable"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "Gazetteer", "type": "Type[List[Dict[str, Dict[str, float]]]]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 256, "col_offset": 32, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 30, "nodeName": "lens", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 263, "col_offset": 58, "nodeName": "row", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 65, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 72, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 50, "nodeName": "lens", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "lens", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 270, "col_offset": 58, "nodeName": "row", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 53, "nodeName": "idx", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 65, "nodeName": "weights", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 53, "nodeName": "lens", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "numberize", "type": "Callable[[Any], Tuple[List[Any], List[Any], List[Any]]]"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "row", "type": "Any"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "row", "type": "Any"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "train", "type": "pytext.data.sources.data_source.GeneratorIterator"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "init", "type": "Generator[None, Any, None]"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.SeqTokenTensorizer"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.FloatListTensorizer"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 33, "col_offset": 69, "nodeName": "List", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 54, "col_offset": 67, "nodeName": "self", "type": "ListTensorizersTest"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "detach", "type": "Any"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "detach", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "detach", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.ByteTensorizer, pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "s1", "type": "str"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "s2", "type": "str"}, {"lineNumber": 146, "col_offset": 63, "nodeName": "s3", "type": "str"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "bytes", "type": "List[int]"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "pad_to", "type": "int"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.ByteTokenTensorizer"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "init", "type": "Generator[None, Any, Any]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "TensorizersTest"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.GazetteerTensorizer"}, {"lineNumber": 276, "col_offset": 49, "nodeName": "data", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 293, "col_offset": 56, "nodeName": "utt_weights", "type": "Any"}, {"lineNumber": 297, "col_offset": 54, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 343, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "lens", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.LabelListTensorizer]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "word", "type": "str"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "word", "type": "str"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "feats", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "round", "type": "Callable"}, {"lineNumber": 293, "col_offset": 24, "nodeName": "w", "type": "Any"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "w", "type": "Any"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "utt_weights", "type": "Any"}, {"lineNumber": 293, "col_offset": 71, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 297, "col_offset": 54, "nodeName": "lens", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 343, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 293, "col_offset": 71, "nodeName": "weights", "type": "Any"}]