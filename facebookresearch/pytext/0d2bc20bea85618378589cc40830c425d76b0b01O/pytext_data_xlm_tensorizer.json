[{"lineNumber": 23, "col_offset": 30, "nodeName": "BERTTensorizerBaseScriptImpl", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizerBaseScriptImpl]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "BERTTensorizerBase", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizerBase]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "__TENSORIZER_SCRIPT_IMPL__", "type": "Type[XLMTensorizerScriptImpl]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "XLMTensorizerScriptImpl", "type": "Type[XLMTensorizerScriptImpl]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "language_vocab", "type": "pytext.torchscript.vocab.ScriptVocabulary"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "default_language", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tokens", "type": "List[int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "segment_labels", "type": "List[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "row_size", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "languages", "type": "Optional[List[List[str]]]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "languages", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "tokens_2d", "type": "List[List[int]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "segment_labels_2d", "type": "List[List[int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "seq_lens_1d", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "positions_2d", "type": "List[List[int]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "BERTTensorizerBase", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizerBase]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "min_count", "type": "int"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "language_column", "type": "str"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "LANG2ID_15", "type": "Dict[str, int]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "language_column", "type": "str"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "language_column", "type": "str"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "language_column", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "bos_token", "type": "str"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "default_language", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "schema", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "column_schema", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "has_language_in_data", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "schema", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "languages", "type": "List[Union[int, Any]]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[pytext.data.tokenizers.tokenizer.Tokenizer, pytext.data.utils.Vocabulary, int], None]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "ScriptVocabulary", "type": "Type[pytext.torchscript.vocab.ScriptVocabulary]"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "language_vocab", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "Attribute", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "default_language", "type": "str"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "max_seq_len", "type": "Optional[int]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "vocab_lookup", "type": "pytext.torchscript.tensorizer.tensorizer.VocabLookup"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "tokens", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "single_sentence_tokens", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "per_sentence_tokens", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "lookup_ids", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "tokens", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "tokens", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "segment_labels", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "ScriptBatchInput", "type": "Type[pytext.torchscript.utils.ScriptBatchInput]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "batch_size", "type": "Callable[[pytext.torchscript.utils.ScriptBatchInput], int]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "row_size", "type": "Callable[[pytext.torchscript.utils.ScriptBatchInput], int]"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "languages", "type": "Optional[List[List[str]]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "languages", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "tensorize", "type": "Callable[[List[List[int]], List[List[int]], List[int], List[List[int]]], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "tokens_2d", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "segment_labels_2d", "type": "List[List[int]]"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "seq_lens_1d", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 73, "nodeName": "positions_2d", "type": "List[List[int]]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "Config", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "cls", "type": "Type[XLMTensorizer]"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "schema", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "__TENSORIZER_SCRIPT_IMPL__", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "numberize", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "per_sentence_tokens", "type": "List[List[pytext.data.tokenizers.tokenizer.Token]]"}, {"lineNumber": 231, "col_offset": 33, "nodeName": "per_sentence_languages", "type": "List[int]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "jit", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 37, "col_offset": 63, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "eos_idx", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "eos_idx", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "max_seq_len", "type": "Optional[int]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "per_sentence_tokens", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "_wrap_numberized_tokens", "type": "Callable[[List[int], int], List[int]]"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "lookup_ids", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 66, "nodeName": "idx", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "lookup_ids", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 85, "col_offset": 63, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "batch_size", "type": "Callable[[pytext.torchscript.utils.ScriptBatchInput], int]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "tokenize", "type": "Callable[[Optional[List[str]], Optional[List[List[str]]]], List[List[Tuple[str, int, int]]]]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "row_size", "type": "int"}, {"lineNumber": 103, "col_offset": 70, "nodeName": "numberize", "type": "Callable[[List[List[Tuple[str, int, int]]], List[int]], Tuple[List[int], List[int], int, List[int]]]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "tokens", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "language_ids", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 141, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "build_fairseq_vocab", "type": "Callable[..., pytext.data.utils.Vocabulary]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "language_column", "type": "str"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 180, "col_offset": 75, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "languages", "type": "List[Union[int, Any]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "languages", "type": "List[Union[int, Any]]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "default_language", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "lang", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "default_language", "type": "str"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[[str], List[pytext.data.tokenizers.tokenizer.Token]]"}, {"lineNumber": 225, "col_offset": 53, "nodeName": "column", "type": "str"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 81, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "tensorizer_script_impl", "type": "Any"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "vocab", "type": "pytext.torchscript.vocab.ScriptVocabulary"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "vocab", "type": "pytext.torchscript.vocab.ScriptVocabulary"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "List", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "_lookup_tokens", "type": "Callable[..., Tuple[List[int], List[int], List[int]]]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "single_sentence_tokens", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "tokens", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "segment_labels", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "List", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "get_texts_by_index", "type": "Callable[[Optional[List[List[str]]], int], Optional[List[str]]]"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "texts", "type": "Any"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "idx", "type": "int"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "get_tokens_by_index", "type": "Callable[[Optional[List[List[List[str]]]], int], Optional[List[List[str]]]]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "idx", "type": "int"}, {"lineNumber": 103, "col_offset": 70, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "tokens_2d", "type": "List[List[int]]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "numberized", "type": "Tuple[List[int], List[int], int, List[int]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "segment_labels_2d", "type": "List[List[int]]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "numberized", "type": "Tuple[List[int], List[int], int, List[int]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "seq_lens_1d", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "numberized", "type": "Tuple[List[int], List[int], int, List[int]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "positions_2d", "type": "List[List[int]]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "numberized", "type": "Tuple[List[int], List[int], int, List[int]]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 142, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "MaskedLMDictionary", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "min_count", "type": "int"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "language_column", "type": "Any"}, {"lineNumber": 195, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "max", "type": "Callable"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "col", "type": "str"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 216, "col_offset": 53, "nodeName": "lang", "type": "Any"}, {"lineNumber": 216, "col_offset": 77, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "lang", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 221, "col_offset": 36, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "get_lang_id", "type": "Callable[[Dict[Any, Any], str], int]"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "language_column", "type": "str"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 63, "col_offset": 52, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "lookup_ids", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "row_size", "type": "int"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 94, "col_offset": 40, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "inputs", "type": "pytext.torchscript.utils.ScriptBatchInput"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "unk_idx", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "MASK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "column", "type": "str"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 227, "col_offset": 56, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "per_sentence_languages", "type": "List[int]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "default_language", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "language_vocab", "type": "pytext.torchscript.vocab.ScriptVocabulary"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "idx", "type": "int"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "language_vocab", "type": "pytext.torchscript.vocab.ScriptVocabulary"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "languages", "type": "Optional[Union[List[List[str]], List[List[Any]]]]"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "XLMTensorizerScriptImpl"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "idx", "type": "int"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}]