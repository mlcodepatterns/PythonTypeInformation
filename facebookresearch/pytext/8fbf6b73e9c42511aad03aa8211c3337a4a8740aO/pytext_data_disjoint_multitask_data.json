[{"lineNumber": 10, "col_offset": 28, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Component", "type": "Type[pytext.config.component.Component]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "data_dict", "type": "Dict[str, pytext.data.data.Data]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "data_dict", "type": "Dict[str, pytext.data.data.Data]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "BaseBatchSampler", "type": "Type[pytext.data.batch_sampler.BaseBatchSampler]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "Config", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "DisjointMultitaskData"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "all_batches", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "EvalBatchSampler", "type": "Type[pytext.data.batch_sampler.EvalBatchSampler]"}, {"lineNumber": 30, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "BATCH_SAMPLER", "type": "Any"}, {"lineNumber": 33, "col_offset": 71, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "EvalBatchSampler", "type": "Type[pytext.data.batch_sampler.EvalBatchSampler]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "EvalBatchSampler", "type": "Type[pytext.data.batch_sampler.EvalBatchSampler]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 33, "col_offset": 71, "nodeName": "config", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "samplers", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TASK_NAME", "type": "str"}, {"lineNumber": 30, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "data_dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "stage", "type": "pytext.common.constants.Stage"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "BatchContext", "type": "Type[pytext.common.constants.BatchContext]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "Any"}]