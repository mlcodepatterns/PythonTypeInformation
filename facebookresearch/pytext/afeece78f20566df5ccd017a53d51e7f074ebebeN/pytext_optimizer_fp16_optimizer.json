[{"lineNumber": 255, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "optimizer", "type": "Union[PureFP16Optimizer, FP16Optimizer]"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 159, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 244, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 244, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 289, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 289, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 360, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 364, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "data", "type": "nothing"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 252, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 323, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 357, "col_offset": 35, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 360, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 367, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 209, "col_offset": 45, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "data", "type": "nothing"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "state_param", "type": "nothing"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 340, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 360, "col_offset": 45, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 118, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "float", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 153, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "p", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "p", "type": "Any"}]