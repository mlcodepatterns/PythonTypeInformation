[{"lineNumber": 557, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 561, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 753, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "Fairseq_FP16OptimizerMixin", "type": "Any"}, {"lineNumber": 210, "col_offset": 55, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 404, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "FP16OptimizerDeprecated", "type": "Type[FP16OptimizerDeprecated]"}, {"lineNumber": 670, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 759, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "param_groups", "type": "List[nothing]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 513, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 516, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 549, "col_offset": 26, "nodeName": "optimizer", "type": "Union[FP16OptimizerDeprecated, PureFP16Optimizer]"}, {"lineNumber": 558, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 594, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 595, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 622, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 666, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 686, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 688, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 695, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 745, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "pytext.optimizer.optimizers.Optimizer"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 164, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerApex]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "_opt_level", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "build_fp32_params", "type": "Any"}, {"lineNumber": 245, "col_offset": 50, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "add_param_group", "type": "Any"}, {"lineNumber": 266, "col_offset": 44, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerFairseq]"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "max_norm", "type": "Union[Any, float]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 444, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 444, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 444, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 458, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 484, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 502, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 513, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 519, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 520, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 522, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 531, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 546, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 546, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 546, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 546, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 554, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 554, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 563, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 595, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 596, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 596, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 596, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 596, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 608, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 608, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 621, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 621, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 636, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 641, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 641, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 651, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 651, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 663, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 666, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 689, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 694, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 694, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 694, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 694, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 695, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 713, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 729, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 729, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 729, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 741, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 742, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 69, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "amp", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "_deactivate", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 249, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 292, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 424, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 426, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 445, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 450, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 485, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 503, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 512, "col_offset": 35, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 513, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 521, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 554, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 558, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 564, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 595, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 608, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 621, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 623, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 637, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 638, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 641, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 651, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 665, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 666, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 667, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 690, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 691, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 692, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 695, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 715, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 729, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 730, "col_offset": 61, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 731, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 743, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 747, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 748, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 749, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 750, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 761, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 763, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 766, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 767, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "e", "type": "AttributeError"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "amp", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 187, "col_offset": 53, "nodeName": "DELAY_UNSCALE", "type": "bool"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 371, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 396, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 398, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 400, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 426, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 428, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 440, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 442, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 472, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 497, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 498, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 504, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 507, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 515, "col_offset": 45, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 608, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 623, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 631, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 637, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 643, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 648, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 653, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 654, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 690, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 691, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 716, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 731, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 731, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 747, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 748, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 760, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 765, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 767, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 53, "nodeName": "precision", "type": "module"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "amp", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "_amp_state", "type": "Any"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 369, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 396, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 398, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 400, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 429, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 429, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 433, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 496, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 497, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 498, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 504, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 507, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 625, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 637, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 645, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 648, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 652, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 654, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 654, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 691, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 731, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 748, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 749, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 763, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 767, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "amp", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 370, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 430, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 430, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 435, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 442, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 496, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 626, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 645, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 648, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 654, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 719, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 722, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 762, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 767, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 430, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 433, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 438, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 644, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 654, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "p", "type": "Any"}]