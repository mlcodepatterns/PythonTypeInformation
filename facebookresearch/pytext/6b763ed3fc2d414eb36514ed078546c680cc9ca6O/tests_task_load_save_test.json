[{"lineNumber": 23, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "test", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "state_dict_1", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "state_dict_2", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "params_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "params_2", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "optimizer_restored", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "scheduler_restored", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "p1", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "p2", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "snapshot_file", "type": "IO[bytes]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 73, "nodeName": "msg", "type": "None"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "msg", "type": "None"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertOptimizerEqual", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "optimizer_restored", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "start_time", "type": "Any"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "start_time", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "epoch", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "rank", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "rank", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "stage", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "stage", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "epochs_since_last_improvement", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "epochs_since_last_improvement", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "scheduler_restored", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "config_restored", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertModulesEqual", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "model_restored", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "checkpoint_file", "type": "IO[bytes]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "id", "type": "str"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "saved_path", "type": "str"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "checkpoint_file", "type": "IO[bytes]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "id", "type": "str"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "saved_path", "type": "str"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "new_rank", "type": "int"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "new_world_size", "type": "int"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 28, "col_offset": 63, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "message", "type": "None"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "task", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "save", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "task2", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "config2", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "training_state_none", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "config2", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertModulesEqual", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "training_state_none", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "optim_1", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "optim_2", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "state_dict_1", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "state_dict_2", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "params_1", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "params_2", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 52, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model_restored", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "task", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "create_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 61, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "TrainingState", "type": "Type[pytext.trainers.training_state.TrainingState]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "save", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 139, "col_offset": 76, "nodeName": "id", "type": "str"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "config_restored", "type": "Any"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 143, "col_offset": 70, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 75, "nodeName": "saved_path", "type": "str"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertCheckpointEqual", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "config_restored", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "task", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "create_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 61, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "TrainingState", "type": "Type[pytext.trainers.training_state.TrainingState]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "save", "type": "Callable[..., str]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 191, "col_offset": 76, "nodeName": "id", "type": "str"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "config_restored", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 195, "col_offset": 70, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "saved_path", "type": "str"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "assertCheckpointEqual", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "config_restored", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "training_state_restored", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "rank", "type": "Any"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "new_rank", "type": "int"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 72, "nodeName": "new_world_size", "type": "int"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "mod1", "type": "Any"}, {"lineNumber": 28, "col_offset": 63, "nodeName": "mod2", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "equal", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "p2", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "LATEST_VERSION", "type": "int"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "snapshot_file", "type": "IO[bytes]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "task2", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "Adam", "type": "Type[pytext.optimizer.optimizers.Adam]"}, {"lineNumber": 64, "col_offset": 67, "nodeName": "Adam", "type": "Type[pytext.optimizer.optimizers.Adam]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "LATEST_VERSION", "type": "int"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "LATEST_VERSION", "type": "int"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "Config", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "new_rank", "type": "int"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "new_world_size", "type": "int"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TaskLoadSaveTest"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "p1", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "snapshot_file", "type": "IO[bytes]"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "task2", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "optim_1", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "optim_2", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "model_restored", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "checkpoint_file", "type": "IO[bytes]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "Adam", "type": "Type[pytext.optimizer.optimizers.Adam]"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "Scheduler", "type": "Type[pytext.optimizer.scheduler.Scheduler]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "task", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "checkpoint_file", "type": "IO[bytes]"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "Adam", "type": "Type[pytext.optimizer.optimizers.Adam]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "Scheduler", "type": "Type[pytext.optimizer.scheduler.Scheduler]"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "task", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "DocumentClassificationTask", "type": "Type[pytext.task.tasks.DocumentClassificationTask]"}, {"lineNumber": 51, "col_offset": 55, "nodeName": "task", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "optim_1", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "optim_1", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 99, "col_offset": 66, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "DocumentClassificationTask", "type": "Type[pytext.task.tasks.DocumentClassificationTask]"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "DocumentClassificationTask", "type": "Type[pytext.task.tasks.DocumentClassificationTask]"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "task_restored", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "task2", "type": "Any"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "inputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "Config", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "Config", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "Config", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "Config", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "BlockShardedTSVDataSource", "type": "Type[pytext.data.sources.tsv.BlockShardedTSVDataSource]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "eval_data", "type": "Any"}]