[{"lineNumber": 12, "col_offset": 23, "nodeName": "RootDataSource", "type": "Type[pytext.data.sources.data_source.RootDataSource]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "PandasDataSource", "type": "Type[PandasDataSource]"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "SessionDataSource", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "RootDataSource", "type": "Type[pytext.data.sources.data_source.RootDataSource]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "cls", "type": "Type[PandasDataSource]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "raw_generator", "type": "Callable[[Optional[Any]], Any]"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "raw_generator", "type": "Callable[[Optional[Any]], Any]"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "raw_generator", "type": "Callable[[Optional[Any]], Any]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "schema", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_validate_schema", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "column_mapping", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "row", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "iterrows", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "self", "type": "PandasDataSource"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "id_col", "type": "str"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "schema", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "train_df", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "test_df", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "eval_df", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "column_mapping", "type": "Dict[str, str]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "id_col", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "SessionPandasDataSource"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "row", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "Type", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}]