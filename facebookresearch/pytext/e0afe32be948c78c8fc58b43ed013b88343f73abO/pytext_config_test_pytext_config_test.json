[{"lineNumber": 19, "col_offset": 13, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Model2", "type": "Type[Model2]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "Model2Sub1", "type": "Type[Model2Sub1]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "Component", "type": "Type[pytext.config.component.Component]"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "Component", "type": "Type[pytext.config.component.Component]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "foo", "type": "int"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "m2s1", "type": "int"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "bar", "type": "int"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "__COMPONENT_TYPE__", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "Config", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "Model2Sub1Sub1", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "__COMPONENT_TYPE__", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "foo", "type": "Tuple[Tuple[int, int], ...]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "bar", "type": "Tuple[int, str]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "Union", "type": "Any"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "Union", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "obj", "type": "Model2Sub1Sub1"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "SubclassDefaultOrdering", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "serialized", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "again", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "List", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "Model2Sub1Sub1", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "m2s1", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "PyTextConfig", "type": "Type[PyTextConfig]"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "bar", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "Config", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "bar", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "m2s1s1", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "m2s1", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "config_to_json", "type": "Callable[[Any, Any], Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "config", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 154, "col_offset": 52, "nodeName": "serialized", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "m2s1s1", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "bar", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "m2s1s1", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "MissingValueError", "type": "Type[pytext.config.serialize.MissingValueError]"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 63, "nodeName": "Model2", "type": "Type[Model2]"}, {"lineNumber": 182, "col_offset": 71, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "ConfigParseError", "type": "Type[pytext.config.serialize.ConfigParseError]"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 62, "nodeName": "Model2", "type": "Type[Model2]"}, {"lineNumber": 190, "col_offset": 70, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "UnionTypeError", "type": "Type[pytext.config.serialize.UnionTypeError]"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 60, "nodeName": "PyTextConfig", "type": "Type[PyTextConfig]"}, {"lineNumber": 209, "col_offset": 74, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "ConfigParseError", "type": "Type[pytext.config.serialize.ConfigParseError]"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 62, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 217, "col_offset": 70, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "ConfigParseError", "type": "Type[pytext.config.serialize.ConfigParseError]"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 48, "nodeName": "TupleTestConfig", "type": "Type[TupleTestConfig]"}, {"lineNumber": 242, "col_offset": 65, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "ConfigParseError", "type": "Type[pytext.config.serialize.ConfigParseError]"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 48, "nodeName": "TupleTestConfig", "type": "Type[TupleTestConfig]"}, {"lineNumber": 252, "col_offset": 65, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "TupleTestConfig", "type": "Type[TupleTestConfig]"}, {"lineNumber": 261, "col_offset": 51, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 17, "nodeName": "config_from_json", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "TupleTestConfig", "type": "Type[TupleTestConfig]"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "config_json", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "Model1", "type": "Type[Model1]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "Model2", "type": "Type[Model2]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "Task1", "type": "Type[Task1]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "Task2", "type": "Type[Task2]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "Config", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "__annotations__", "type": "Dict[str, Union[Type[str], Type[int]]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "__annotations__", "type": "Dict[str, Union[Type[str], Type[int]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "_field_defaults", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "_field_defaults", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "obj", "type": "Model2Sub1Sub1"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ConfigBaseTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "task", "type": "Any"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "Task1", "type": "Type[Task1]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "Model2", "type": "Type[Model2]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "RegisteredModel", "type": "Type[RegisteredModel]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "JointModel", "type": "Type[JointModel]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "JointModel", "type": "Type[JointModel]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "JointModel", "type": "Type[JointModel]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "again", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "JointModel", "type": "Type[JointModel]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "models", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "PytextConfigTest"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 236, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TupleConfigTest"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "RegisteredModel", "type": "Type[RegisteredModel]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "Model2Sub1Sub1", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "Model2Sub1Sub1", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Model2Sub1", "type": "Type[Model2Sub1]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "Model2Sub1Sub1", "type": "Type[Model2Sub1Sub1]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "items", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "config", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "task", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "models", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "models", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "models", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "foo", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "obj", "type": "Model2Sub1Sub1"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "config", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "again", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "again", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}]