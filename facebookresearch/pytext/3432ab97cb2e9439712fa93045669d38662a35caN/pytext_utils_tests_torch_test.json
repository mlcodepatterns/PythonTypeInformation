[{"lineNumber": 12, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "max_char_length", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "expected_seq_lens", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[pytext.utils.torch.Vocabulary]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "jit", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "LookupWord", "type": "Type[Any]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "jit", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "LookupIndex", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[pytext.utils.torch.Vocabulary]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "from_vocab_file", "type": "Callable[[Any, io.IOBase], pytext.utils.torch.BPE]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "BPE_VOCAB_FILE", "type": "io.StringIO"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "make_byte_inputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "max_char_length", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "expected_bytes", "type": "List[List[List[int]]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "expected_seq_lens", "type": "List[int]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "lookup_indices_2d", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "lookup_indices_2d", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "BPE", "type": "Type[pytext.utils.torch.BPE]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "idx", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "word", "type": "str"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "utf8_chars", "type": "Any"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "word", "type": "str"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "s1", "type": "str"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "s2", "type": "str"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "word", "type": "str"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "pad_to", "type": "int"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "word", "type": "str"}, {"lineNumber": 112, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 61, "nodeName": "word", "type": "str"}]