[{"lineNumber": 9, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "iteratorA", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "iteratorB", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "eval_iterator", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "iteratorA", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 52, "nodeName": "iteratorB", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 18, "col_offset": 65, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 20, "col_offset": 51, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "round_robin_iterator", "type": "Any"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "eval_iterator", "type": "Any"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "RandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.RandomizedBatchSampler]"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "RandomizedBatchSampler", "type": "Type[pytext.data.batch_sampler.RandomizedBatchSampler]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "batchify", "type": "Callable[[Dict[str, Iterator[Any]]], Generator[Tuple[Any, Any], Any, None]]"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "iter_dict", "type": "Dict[str, List[str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_check_iterator", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "prob_iterator", "type": "Any"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "expected_items", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "fixed_order", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "expected_items", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "expected_items", "type": "Union[List[Any], Any]"}, {"lineNumber": 13, "col_offset": 31, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 13, "col_offset": 52, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 18, "col_offset": 65, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "sampler", "type": "pytext.data.batch_sampler.RandomizedBatchSampler"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "actual_items", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "expected_items", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "BatchSamplerTest"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "RoundRobinBatchSampler", "type": "Type[pytext.data.batch_sampler.RoundRobinBatchSampler]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "RoundRobinBatchSampler", "type": "Type[pytext.data.batch_sampler.RoundRobinBatchSampler]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "EvalBatchSampler", "type": "Type[pytext.data.batch_sampler.EvalBatchSampler]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "item", "type": "Any"}]