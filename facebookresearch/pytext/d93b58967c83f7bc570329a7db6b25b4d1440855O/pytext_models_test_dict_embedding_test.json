[{"lineNumber": 10, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "lens", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "DictEmbedding", "type": "Type[pytext.models.embeddings.dict_embedding.DictEmbedding]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "embedding_module", "type": "pytext.models.embeddings.dict_embedding.DictEmbedding"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "idx", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "weights", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "lens", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "num_embeddings", "type": "int"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "MEAN", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "DictEmbeddingTest"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "DictEmbeddingTest"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "DictEmbeddingTest"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DictEmbeddingTest"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "PoolingType", "type": "Type[pytext.config.module_config.PoolingType]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "weight", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "weight", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "embedding_module", "type": "pytext.models.embeddings.dict_embedding.DictEmbedding"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "embedding_module", "type": "pytext.models.embeddings.dict_embedding.DictEmbedding"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "UNK_INDEX", "type": "int"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "UNK_INDEX", "type": "int"}, {"lineNumber": 27, "col_offset": 53, "nodeName": "PAD_INDEX", "type": "int"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "PAD_INDEX", "type": "int"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "sum", "type": "Any"}, {"lineNumber": 30, "col_offset": 70, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "output", "type": "Any"}]