[{"lineNumber": 15, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "batcher", "type": "pytext.data.data.PoolingBatcher"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "a_vals", "type": "Set[nothing]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "TSVDataSource", "type": "Type[pytext.data.sources.tsv.TSVDataSource]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "_", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "batches", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "batches", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "data1", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "data2", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "first_raw_batch", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "next", "type": "Callable"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "next", "type": "Callable"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "batches", "type": "listiterator[Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assert_sorted", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "data_source", "type": "pytext.data.sources.tsv.TSVDataSource"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "batches1", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "batches2", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "batches1", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "PoolingBatcher", "type": "Type[pytext.data.data.PoolingBatcher]"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "a", "type": "nothing"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "a_vals", "type": "Set[nothing]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "a", "type": "nothing"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "_", "type": "nothing"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "a", "type": "nothing"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "SafeFileWrapper", "type": "Type[pytext.data.sources.data_source.SafeFileWrapper]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "batch", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 50, "col_offset": 62, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "batch", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "batches", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "TokenTensorizer", "type": "Type[pytext.data.tensorizers.TokenTensorizer]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "batch1", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "batch2", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "batches2", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "batchify", "type": "Callable[..., Generator[pytext.data.data.BatchData, Any, None]]"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "raw_data", "type": "List[pytext.data.sources.data_source.RawExample]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "numberized", "type": "Dict[str, List[Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "numberized", "type": "Dict[str, List[Any]]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "batchify", "type": "Callable[..., Generator[pytext.data.data.BatchData, Any, None]]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 174, "col_offset": 56, "nodeName": "a", "type": "nothing"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 50, "col_offset": 66, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "first_raw_batch", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "second_raw_batch", "type": "Any"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "ROW_INDEX", "type": "str"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "numberized_cache", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "data1", "type": "pytext.data.data.Data"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "data1", "type": "pytext.data.data.Data"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "raw_data", "type": "List[pytext.data.sources.data_source.RawExample]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "batcher", "type": "pytext.data.data.PoolingBatcher"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 174, "col_offset": 61, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 177, "col_offset": 71, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 177, "col_offset": 76, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "a", "type": "nothing"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "a", "type": "nothing"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "batch", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, Union[pytext.data.tensorizers.LabelTensorizer, pytext.data.tensorizers.TokenTensorizer]]"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 124, "col_offset": 45, "nodeName": "RawExampleFieldName", "type": "Type[pytext.common.constants.RawExampleFieldName]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 177, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 59, "nodeName": "raw_batch", "type": "nothing"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "batch", "type": "nothing"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "BatcherTest"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "first_batch", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "DataTest"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "second_batch", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "batches", "type": "List[pytext.data.data.BatchData]"}, {"lineNumber": 171, "col_offset": 65, "nodeName": "numberized", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 171, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 56, "nodeName": "i", "type": "int"}]