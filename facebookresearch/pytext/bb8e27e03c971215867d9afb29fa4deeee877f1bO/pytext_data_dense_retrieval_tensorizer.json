[{"lineNumber": 16, "col_offset": 45, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "BERTContextTensorizerForDenseRetrieval", "type": "Type[BERTContextTensorizerForDenseRetrieval]"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 140, "col_offset": 47, "nodeName": "LabelTensorizer", "type": "Type[pytext.data.tensorizers.LabelTensorizer]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "positive_ctx", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "positive_ctx_tokens", "type": "List[pytext.data.tokenizers.tokenizer.Token]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "negative_ctxs", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "negative_ctxs", "type": "Any"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "all_ctx_tokens_2d", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "all_ctx_segment_labels_2d", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "all_ctx_seq_lens_1d", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "all_ctx_positions_2d", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "batch", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "new_batch", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "tokenize", "type": "Callable[[str], List[pytext.data.tokenizers.tokenizer.Token]]"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "positive_ctx", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "numberize", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "negative_ctx_token_ids", "type": "List[nothing]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "negative_ctx_segment_labels", "type": "List[nothing]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "negative_ctx_seq_len", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "negative_ctx_positions", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "positive_ctx_token_ids", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "positive_ctx_segment_labels", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "positive_ctx_seq_len", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "positive_ctx_positions", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "negative_ctx_token_ids", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "negative_ctx_segment_labels", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "negative_ctx_seq_len", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "negative_ctx_positions", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tensorize_wrapper", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "all_ctx_tokens_2d", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "all_ctx_segment_labels_2d", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "all_ctx_seq_lens_1d", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "all_ctx_positions_2d", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "cls", "type": "Type[RoBERTaContextTensorizerForDenseRetrieval]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "RoBERTaContextTensorizerForDenseRetrieval"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "pos_ctx_idx", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "tensorize", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "new_batch", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "tensorizer_script_impl", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "positive_ctx_tokens", "type": "List[pytext.data.tokenizers.tokenizer.Token]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "tokenize", "type": "Callable[[str], List[pytext.data.tokenizers.tokenizer.Token]]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "numberize", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "negative_ctx_tokens", "type": "List[pytext.data.tokenizers.tokenizer.Token]"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "positive_ctx_token_ids", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "negative_ctx_token_ids", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "positive_ctx_segment_labels", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "negative_ctx_segment_labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "positive_ctx_seq_len", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "negative_ctx_seq_len", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "positive_ctx_positions", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "negative_ctx_positions", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tensorizer_script_impl", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "build_fairseq_vocab", "type": "Callable[..., pytext.data.utils.Vocabulary]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "RoBERTaTensorizer", "type": "Type[pytext.data.roberta_tensorizer.RoBERTaTensorizer]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "vocab", "type": "Optional[pytext.data.utils.Vocabulary]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "tokenizer", "type": "Optional[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "pos_ctx_idx", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "self", "type": "BERTContextTensorizerForDenseRetrieval"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "BERTContextTensorizerForDenseRetrieval"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "negative_ctxs", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "tensorizer_script_impl", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "all_ctx_tokens_2d", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "all_ctx_tokens_2d", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "all_ctx_segment_labels_2d", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "all_ctx_segment_labels_2d", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "all_ctx_seq_lens_1d", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "all_ctx_seq_lens_1d", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "all_ctx_positions_2d", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "all_ctx_positions_2d", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "self", "type": "BERTContextTensorizerForDenseRetrieval"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "new_batch", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "self", "type": "BERTContextTensorizerForDenseRetrieval"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "self", "type": "BERTContextTensorizerForDenseRetrieval"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "PAD", "type": "pytext.common.constants.Token"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "BOS", "type": "pytext.common.constants.Token"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "EOS", "type": "pytext.common.constants.Token"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "UNK", "type": "pytext.common.constants.Token"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "MASK", "type": "pytext.common.constants.Token"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "SpecialTokens", "type": "Type[pytext.common.constants.SpecialTokens]"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "new_batch", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "batch", "type": "Any"}, {"lineNumber": 148, "col_offset": 65, "nodeName": "i", "type": "int"}]