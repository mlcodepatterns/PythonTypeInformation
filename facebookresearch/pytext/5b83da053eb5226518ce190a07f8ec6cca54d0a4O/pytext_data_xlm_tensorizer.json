[{"lineNumber": 44, "col_offset": 20, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "vocab_list", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "replacements", "type": "Dict[str, pytext.data.utils.SpecialToken]"}, {"lineNumber": 21, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "vocab_list", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "symbols", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "replacements", "type": "Dict[str, pytext.data.utils.SpecialToken]"}, {"lineNumber": 35, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 248, "col_offset": 9, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "read_vocab", "type": "Callable[[Any], pytext.data.xlm_dictionary.Dictionary]"}, {"lineNumber": 22, "col_offset": 42, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "min_count", "type": "int"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "counts", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 29, "col_offset": 55, "nodeName": "BOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "vocab_list", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "replacements", "type": "Dict[str, pytext.data.utils.SpecialToken]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "load", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "MASK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "vocab_list", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "replacements", "type": "Dict[str, pytext.data.utils.SpecialToken]"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "BERTTensorizer", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizer]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "is_fairseq", "type": "bool"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pretraining", "type": "bool"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "max_seq_len", "type": "Optional[int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "min_count", "type": "int"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "language_columns", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "LANG2ID_15", "type": "Dict[str, int]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "reset_positions", "type": "bool"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "columns", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "is_fairseq", "type": "bool"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "pretraining", "type": "bool"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "max_seq_len", "type": "Optional[int]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "min_count", "type": "int"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "language_columns", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "reset_positions", "type": "bool"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "is_fairseq", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "is_fairseq", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "special_token", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "reset_positions", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "reset_positions", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "use_language_embeddings", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "has_language_in_data", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "has_language_in_data", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "schema", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "column_schema", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "has_language_in_data", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "schema", "type": "Any"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "use_language_embeddings", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "sentences", "type": "List[List[int]]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "columns", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "columns", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "column", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "seq_lens", "type": "List[int]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "lang_ids", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "lang_ids", "type": "List[nothing]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "padded_tokens", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "padded_lang_ids", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "is_fairseq", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "is_fairseq", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "XLMDictionary", "type": "Type[pytext.data.xlm_dictionary.Dictionary]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "max_vocab", "type": "Callable[[Any], None]"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "min_count", "type": "Callable[[Any], None]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "min_count", "type": "int"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "id2word", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "w", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "List", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "MaskedLMDictionary", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "min_count", "type": "int"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "Config", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 66, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "cls", "type": "Type[XLMTensorizer]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "_build_vocab", "type": "Callable[[str, int, int], pytext.data.utils.Vocabulary]"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "vocab_file", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "max_vocab", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "min_count", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "idx", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "schema", "type": "Any"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "sentence", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "lang_id", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "lang_id", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "pretraining", "type": "Any"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "reset_positions", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "positions", "type": "Generator[range, Any, None]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "positions", "type": "List[nothing]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "length", "type": "int"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "lang_ids", "type": "List[nothing]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "positions", "type": "Union[List[int], List[nothing]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "row", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "lang_ids", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "positions", "type": "Any"}, {"lineNumber": 230, "col_offset": 48, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "lang_ids", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "positions", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "positions", "type": "None"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "padded_tokens", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "padded_lang_ids", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "positions", "type": "Any"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 247, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "Vocabulary", "type": "Type[pytext.data.utils.Vocabulary]"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "vocab_list", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "counts", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "w", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "id2word", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "vocab_list", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "count", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 66, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "is_fairseq", "type": "bool"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "pretraining", "type": "bool"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "min_count", "type": "int"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "language_columns", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "reset_positions", "type": "bool"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "special_token", "type": "Any"}, {"lineNumber": 149, "col_offset": 67, "nodeName": "List", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "lang", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "columns", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "language_columns", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "sentence", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "sentence", "type": "List[int]"}, {"lineNumber": 205, "col_offset": 50, "nodeName": "sentences", "type": "List[List[int]]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "get_lang_id", "type": "Callable[[Dict[Any, Any], str], int]"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "column", "type": "Union[str, Any]"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "column", "type": "Union[Any, str]"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "language_columns", "type": "Union[List[str], Any]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 171, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 230, "col_offset": 53, "nodeName": "batch", "type": "Any"}, {"lineNumber": 231, "col_offset": 50, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "positions", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "pad_and_tensorize", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 30, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "read_fairseq_vocab", "type": "Callable[..., Tuple[List[Any], List[Any], Dict[Any, Any]]]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "min_count", "type": "int"}, {"lineNumber": 258, "col_offset": 47, "nodeName": "read_vocab", "type": "Callable[[str, int, int], Tuple[List[Any], List[Any], Dict[Any, Any]]]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 259, "col_offset": 28, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "min_count", "type": "int"}, {"lineNumber": 261, "col_offset": 59, "nodeName": "replacements", "type": "Dict[Any, Any]"}, {"lineNumber": 27, "col_offset": 56, "nodeName": "dictionary", "type": "pytext.data.xlm_dictionary.Dictionary"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "columns", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "columns", "type": "Any"}, {"lineNumber": 104, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "column", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "column", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "language_columns", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "col", "type": "str"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 164, "col_offset": 53, "nodeName": "lang", "type": "Any"}, {"lineNumber": 164, "col_offset": 77, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "lang", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "lang2id", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "columns", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "columns", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "sentences", "type": "List[List[int]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "_numberize_and_wrap", "type": "Callable[[str, int], List[List[int]]]"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "sentences", "type": "List[List[int]]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "columns", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 214, "col_offset": 53, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 214, "col_offset": 68, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 78, "nodeName": "seq_lens", "type": "List[int]"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "itertools", "type": "module"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "lang_ids", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "index", "type": "int"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 222, "col_offset": 55, "nodeName": "seq_lens", "type": "List[int]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 231, "col_offset": 50, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "padded_tokens", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "length", "type": "int"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "itertools", "type": "module"}, {"lineNumber": 223, "col_offset": 46, "nodeName": "positions", "type": "Generator[range, Any, None]"}, {"lineNumber": 231, "col_offset": 50, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "get_pad_index", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "columns", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "column", "type": "Any"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 200, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 71, "nodeName": "columns", "type": "Any"}]