[{"lineNumber": 11, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "padding_idx", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "positions", "type": "None"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "input_tuple", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "long", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "long", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "long", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "sentence_encoder", "type": "pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder"}, {"lineNumber": 44, "col_offset": 58, "nodeName": "input_tuple", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pad_mask", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "segment_labels", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "positions", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "sentence_encoder", "type": "pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder"}, {"lineNumber": 77, "col_offset": 58, "nodeName": "input_tuple", "type": "Tuple[Any, Any, Any, Any, Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "TransformerSentenceEncoder", "type": "Type[pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "padding_idx", "type": "int"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "TransformerSentenceEncoder", "type": "Type[pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "padding_idx", "type": "int"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "randint", "type": "Any"}, {"lineNumber": 24, "col_offset": 37, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "TransformerSentenceEncoder", "type": "Type[pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "TransformerSentenceEncoder", "type": "Type[pytext.models.representations.transformer_sentence_encoder.TransformerSentenceEncoder]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "num_encoder_layers", "type": "int"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 22, "col_offset": 53, "nodeName": "num_tokens", "type": "int"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "pooled_outputs", "type": "Any"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 22, "col_offset": 53, "nodeName": "self", "type": "TransformerSentenceEncoderTest"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "encoded_layers", "type": "Any"}]