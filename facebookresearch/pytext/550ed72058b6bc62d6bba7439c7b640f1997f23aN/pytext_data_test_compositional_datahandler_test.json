[{"lineNumber": 12, "col_offset": 35, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "unittest", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "gen_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "word_feat", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "action_idx_feature", "type": "Any"}, {"lineNumber": 117, "col_offset": 66, "nodeName": "actions_expected", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "action_idx_label", "type": "Any"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "actions_expected", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "init_metadata_from_raw_data", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "eval_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, int]]], Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, Union[str, Dict[str, int]]]], str]], str, Dict[str, int]]]]]]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "get_train_iter_from_raw_data", "type": "Callable[..., pytext.data.data_handler.BatchIterator]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "init_metadata_from_raw_data", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "eval_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, int]]], Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, Union[str, Dict[str, int]]]], str]], str, Dict[str, int]]]]]]]]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "get_test_iter_from_raw_data", "type": "Callable[[List[Dict[str, Any]], int], pytext.data.data_handler.BatchIterator]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "eval_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "init_metadata_from_raw_data", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "eval_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, int]]], Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, Union[str, Dict[str, int]]]], str]], str, Dict[str, int]]]]]]]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "init_metadata_from_raw_data", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "train_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "eval_data", "type": "List[Dict[str, Union[str, List[Dict[str, Union[str, Dict[str, int]]]]]]]"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, int]]], Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, Union[str, Dict[str, int]]]], str]], str, Dict[str, int]]]]]]]]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "WORD_LABEL", "type": "str"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "DICT_FEAT", "type": "str"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "SEQLOGICAL", "type": "str"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "WORD_LABEL", "type": "str"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "DICT_FEAT", "type": "str"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "SEQLOGICAL", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "WORD_LABEL", "type": "str"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "DICT_FEAT", "type": "str"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "SEQLOGICAL", "type": "str"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "input", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "custom_dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "custom_dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "examples", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "examples", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "examples", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "CompositionalDataHandler", "type": "Type[pytext.data.compositional_data_handler.CompositionalDataHandler]"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "from_config", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "input", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "target", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 195, "col_offset": 64, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 219, "col_offset": 65, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "features", "type": "Dict[str, pytext.fields.field.Field]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "self", "type": "CompositionalDataHandlerTest"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "custom_dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "custom_dh", "type": "pytext.data.compositional_data_handler.CompositionalDataHandler"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "self", "type": "CompositionalDataHandlerTest"}]