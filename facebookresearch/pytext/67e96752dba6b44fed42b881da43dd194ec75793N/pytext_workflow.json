[{"lineNumber": 62, "col_offset": 0, "nodeName": "_set_fp16", "type": "Callable[[bool, int], None]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "prepare_task_metadata", "type": "Callable[[pytext.config.pytext_config.PyTextConfig], pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "_get_data_source", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 350, "col_offset": 0, "nodeName": "dict_zip", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 0, "nodeName": "batch_predict", "type": "Callable[[str, List[Dict[str, Any]]], Any]"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 100, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 223, "col_offset": 5, "nodeName": "Any", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "CUDA_ENABLED", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "world_size", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "training_state", "type": "None"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "auto_resume_from_snapshot", "type": "bool"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 121, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "meta", "type": "None"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "tensorizers", "type": "None"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "export_caffe2_path", "type": "Any"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "export_torchscript_path", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 250, "col_offset": 7, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "dict_keys", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "cuda", "type": "module"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "cuda", "type": "module"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "device_id", "type": "int"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "set_fp16", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "rank", "type": "int"}, {"lineNumber": 70, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "PyTextConfig", "type": "Type[pytext.config.pytext_config.PyTextConfig]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "prepare_task", "type": "Callable[..., Tuple[pytext.task.task.Task_Deprecated, pytext.trainers.training_state.TrainingState]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "device_id", "type": "int"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "rank", "type": "int"}, {"lineNumber": 102, "col_offset": 48, "nodeName": "world_size", "type": "int"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 102, "col_offset": 77, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "trained_model", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "best_metric", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "rank", "type": "int"}, {"lineNumber": 104, "col_offset": 58, "nodeName": "world_size", "type": "int"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "rank", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "report", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "trained_model", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "best_metric", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "CommonMetadata", "type": "Type[pytext.data.data_handler.CommonMetadata]"}, {"lineNumber": 122, "col_offset": 7, "nodeName": "rank", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "_set_cuda", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "device_id", "type": "int"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "world_size", "type": "int"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "_set_fp16", "type": "Callable[[bool, int], None]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "use_fp16", "type": "bool"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "rank", "type": "int"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "use_elastic", "type": "Any"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "random_seed", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "latest_snapshot_path", "type": "str"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "use_config_from_snapshot", "type": "bool"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "task", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "save", "type": "Callable[..., str]"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "model", "type": "pytext.models.model.Model"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "meta", "type": "Any"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 190, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 199, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "_training_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 47, "nodeName": "saved_model_path", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "TaskType", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "ExporterConfigType", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "export", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "export_caffe2_path", "type": "str"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 213, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 215, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "_training_state", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "saved_model_path", "type": "str"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "torchscript_export", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "path", "type": "str"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "quantize", "type": "bool"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "TestConfig", "type": "Type[pytext.config.pytext_config.TestConfig]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "test_model_from_snapshot_path", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "field_names", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "_set_cuda", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "_training_state", "type": "Any"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 47, "nodeName": "snapshot_path", "type": "str"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "channel", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "channels", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "test_out_path", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 259, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "test_results", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "test_out_path", "type": "Any"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 272, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "test_key", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 281, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "NewDisjointMultitask", "type": "Type[pytext.task.disjoint_multitask.NewDisjointMultitask]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "data_source", "type": "None"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "_set_cuda", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 14, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 312, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "_traing_state", "type": "Any"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "snapshot_path", "type": "str"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 316, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "sort_key", "type": "None"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "batches", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "value_only", "type": "Any"}, {"lineNumber": 359, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 360, "col_offset": 10, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "_training_state", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 360, "col_offset": 47, "nodeName": "model_file", "type": "str"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "cuda", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "precision", "type": "module"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "use_fp16", "type": "bool"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "world_size", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dist_init", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "rank", "type": "int"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "world_size", "type": "int"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "device_id", "type": "int"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "task", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "save_and_export", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "timing", "type": "module"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "task", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "task", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "initialize_coordinator", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "world_size", "type": "int"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_set_distributed", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "rank", "type": "int"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "world_size", "type": "int"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "dist_init_url", "type": "str"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "device_id", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "gpu_streams_for_distributed_training", "type": "int"}, {"lineNumber": 137, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "set_random_seeds", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "random_seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "use_deterministic_cudnn", "type": "bool"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "get_latest_checkpoint_path", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "latest_snapshot_path", "type": "str"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "isfile", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "rank", "type": "int"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "rank", "type": "int"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "add_channel", "type": "Any"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "Task_Deprecated", "type": "Type[pytext.task.task.Task_Deprecated]"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "TrainingState", "type": "Type[pytext.trainers.training_state.TrainingState]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "save_snapshot_path", "type": "str"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "metadata_to_save", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "tensorizers", "type": "None"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "export", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "model", "type": "pytext.models.model.Model"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "export_caffe2_path", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "metric_channels", "type": "Optional[List[pytext.metric_reporters.channel.Channel]]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "export_onnx_path", "type": "str"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "torchscript_export", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "model", "type": "pytext.models.model.Model"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "export_torchscript_path", "type": "Any"}, {"lineNumber": 192, "col_offset": 56, "nodeName": "torchscript_quantize", "type": "Any"}, {"lineNumber": 200, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "task", "type": "Any"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "exporter", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "create_exporter", "type": "Callable[..., Any]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "task", "type": "Any"}, {"lineNumber": 209, "col_offset": 65, "nodeName": "output_onnx_path", "type": "str"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "task", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "task", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "test_config", "type": "pytext.config.pytext_config.TestConfig"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "add_channel", "type": "Any"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "mc", "type": "pytext.metric_reporters.channel.Channel"}, {"lineNumber": 251, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "output_path", "type": "str"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 259, "col_offset": 25, "nodeName": "NewTask", "type": "Type[pytext.task.new_task.NewTask]"}, {"lineNumber": 259, "col_offset": 34, "nodeName": "NewDisjointMultitask", "type": "Type[pytext.task.disjoint_multitask.NewDisjointMultitask]"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "_get_data_source", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "test_path", "type": "Optional[str]"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 261, "col_offset": 47, "nodeName": "field_names", "type": "Optional[List[str]]"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "task", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "test_path", "type": "Optional[str]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "source", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "source", "type": "Any"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 318, "col_offset": 22, "nodeName": "_get_data_source", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "test_path", "type": "Optional[str]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "field_names", "type": "Optional[List[str]]"}, {"lineNumber": 319, "col_offset": 60, "nodeName": "task", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "Batcher", "type": "Type[pytext.data.data.Batcher]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "batches", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "fout", "type": "Any"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "batches", "type": "Any"}, {"lineNumber": 355, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 359, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "task", "type": "Any"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "cuda", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "set_device", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "device_id", "type": "int"}, {"lineNumber": 51, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "use_cuda_if_available", "type": "bool"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "device_id", "type": "int"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "world_size", "type": "int"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "distributed", "type": "module"}, {"lineNumber": 74, "col_offset": 68, "nodeName": "gpu_streams", "type": "int"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "save_snapshot_path", "type": "str"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "load_snapshot_path", "type": "str"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "training_state", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "rank", "type": "int"}, {"lineNumber": 161, "col_offset": 66, "nodeName": "world_size", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "data_handler", "type": "pytext.data.data_handler.DataHandler"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 192, "col_offset": 56, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "task", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "ExporterConfigType", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "task", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "channel", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "file_path", "type": "str"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "test_out_path", "type": "str"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "data_handler", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 288, "col_offset": 19, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "test_filename", "type": "Any"}, {"lineNumber": 289, "col_offset": 42, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "field_names", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "field_names", "type": "Any"}, {"lineNumber": 294, "col_offset": 40, "nodeName": "field_names", "type": "Any"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "DATA_SOURCE", "type": "Any"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "schema", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "snapshot_path", "type": "str"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "task", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 323, "col_offset": 36, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 323, "col_offset": 60, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "output_path", "type": "Optional[str]"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "model_outputs", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "dicts", "type": "Tuple[Any, ...]"}, {"lineNumber": 355, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 355, "col_offset": 48, "nodeName": "dict_keys", "type": "Any"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "cuda", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "cuda", "type": "module"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "task", "type": "pytext.task.task.Task_Deprecated"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "channel", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "task", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "data_dict_config", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "next", "type": "Callable"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 286, "col_offset": 51, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 286, "col_offset": 59, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "test_path", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "task", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 323, "col_offset": 18, "nodeName": "task", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "dump_raw_input", "type": "bool"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "arrange_model_inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 63, "nodeName": "tensor_dict", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "model_outputs", "type": "Any"}, {"lineNumber": 334, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "model_outputs_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "row", "type": "Tuple[Any, Any]"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "d", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "d", "type": "Any"}, {"lineNumber": 355, "col_offset": 32, "nodeName": "dicts", "type": "Tuple[Any, ...]"}, {"lineNumber": 359, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "precision", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "Channel", "type": "Type[pytext.metric_reporters.channel.Channel]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "get_type_hints", "type": "Callable[..., Optional[Dict[str, Any]]]"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "TaskType", "type": "Any"}, {"lineNumber": 221, "col_offset": 35, "nodeName": "Channel", "type": "Type[pytext.metric_reporters.channel.Channel]"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "train_config", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "test_key", "type": "Any"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "source_config", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "dict_zip", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "task", "type": "Any"}, {"lineNumber": 333, "col_offset": 44, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 335, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "dump_row", "type": "str"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "model_outputs", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "model_outputs_list", "type": "Any"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "row", "type": "Tuple[Any, Any]"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "dicts", "type": "Tuple[Any, ...]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "task", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "raw_batch", "type": "Any"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "task", "type": "Any"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "raw_input_tuple", "type": "Union[Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 336, "col_offset": 54, "nodeName": "model_outputs_tuple", "type": "Tuple[Any, ...]"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "write", "type": "Any"}, {"lineNumber": 339, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 341, "col_offset": 53, "nodeName": "model_outputs_list", "type": "Any"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "dump_row", "type": "str"}, {"lineNumber": 345, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 359, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 359, "col_offset": 60, "nodeName": "Any", "type": "Any"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "data_dict_config", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 335, "col_offset": 48, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 335, "col_offset": 63, "nodeName": "m", "type": "Any"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "model_outputs", "type": "Any"}, {"lineNumber": 338, "col_offset": 24, "nodeName": "fout", "type": "Any"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "model_outputs", "type": "Any"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "raw_input_tuple", "type": "Union[Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 342, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "write", "type": "Any"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "data_config", "type": "Any"}, {"lineNumber": 314, "col_offset": 32, "nodeName": "task", "type": "Any"}, {"lineNumber": 335, "col_offset": 48, "nodeName": "m", "type": "Any"}, {"lineNumber": 337, "col_offset": 45, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 337, "col_offset": 56, "nodeName": "r", "type": "Any"}, {"lineNumber": 337, "col_offset": 63, "nodeName": "r", "type": "Any"}, {"lineNumber": 337, "col_offset": 68, "nodeName": "row", "type": "Tuple[Any, Any]"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "dump_row", "type": "str"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "fout", "type": "Any"}, {"lineNumber": 337, "col_offset": 45, "nodeName": "json", "type": "module"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 342, "col_offset": 56, "nodeName": "r", "type": "Any"}, {"lineNumber": 342, "col_offset": 63, "nodeName": "r", "type": "Any"}, {"lineNumber": 342, "col_offset": 68, "nodeName": "row", "type": "Tuple[Any, Any]"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "dump_row", "type": "str"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "json", "type": "module"}]