[{"lineNumber": 24, "col_offset": 5, "nodeName": "Schema", "type": "Type[Dict[str, Type[Any]]]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "TaskBase", "type": "Any"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "_NewTask", "type": "Type[_NewTask]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "tensorizers", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 5, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "ConfigBase", "type": "Type[pytext.config.pytext_config.ConfigBase]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "values", "type": "Callable"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "column_schema", "type": "List[nothing]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "type", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "Config", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "extra_schema", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "init_tensorizers", "type": "bool"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "init_tensorizers", "type": "bool"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "init_from_saved_state", "type": "bool"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "trainer", "type": "Optional[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "examples", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "metric_channels", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "CUDA_ENABLED", "type": "bool"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "quantize", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "trace", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "_NewTask", "type": "Type[_NewTask]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "Config", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "name", "type": "nothing"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "type", "type": "nothing"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "name", "type": "nothing"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "type", "type": "nothing"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "tensorizer", "type": "pytext.data.tensorizers.Tensorizer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add_to_schema", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "Union", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "_asdict", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "tensorizer_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "Config", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "TaskTrainer", "type": "Type[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "Config", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tensorizers", "type": "Union[Dict[str, pytext.data.tensorizers.Tensorizer], Any]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "_init_tensorizers", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "rank", "type": "Any"}, {"lineNumber": 107, "col_offset": 77, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "_init_model", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "tensorizers", "type": "Union[Dict[str, pytext.data.tensorizers.Tensorizer], Any]"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "create_metric_reporter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "tensorizers", "type": "Union[Dict[str, pytext.data.tensorizers.Tensorizer], Any]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "create_trainer", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "cls", "type": "Type[_NewTask]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "METRIC_REPORTER", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "column", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "Any", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "create_schema", "type": "Callable[..., Dict[str, Type[Any]]]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "tensorizers", "type": "Union[Any, Dict[str, pytext.data.tensorizers.Tensorizer]]"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "extra_schema", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "DATA_HANDLER", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "schema", "type": "Dict[str, Type[Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "tensorizers", "type": "Union[Any, Dict[str, pytext.data.tensorizers.Tensorizer]]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "tensorizers", "type": "Union[Any, Dict[str, pytext.data.tensorizers.Tensorizer]]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "model_config", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "model_config", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "cuda", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "NewTask"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "NewTask"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "NewTask"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "metric_reporter", "type": "Optional[pytext.metric_reporters.metric_reporter.MetricReporter]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "NewTask"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "trainer", "type": "Optional[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "TrainingState", "type": "Type[pytext.trainers.training_state.TrainingState]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "eval", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "numberized_rows", "type": "Generator[pytext.data.data.RowData, Any, None]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "batches", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "model_inputs", "type": "None"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "model_context", "type": "None"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "pre_export", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "next", "type": "Callable"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "mc", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "metric_channels", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "caffe2_export", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "batch", "type": "Any"}, {"lineNumber": 260, "col_offset": 42, "nodeName": "export_path", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "cuda", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "pre_export", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "prepare_for_onnx_export_", "type": "Any"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "next", "type": "Callable"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "arrange_model_inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 44, "nodeName": "batch", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "trace", "type": "Any"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "trace", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "apply", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "export_path", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "add_to_schema", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "name", "type": "nothing"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "type", "type": "nothing"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "extra_schema", "type": "Optional[Dict[str, Type[Any]]]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "tensorizer_config", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "Data", "type": "Type[pytext.data.data.Data]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "TaskTrainer", "type": "Type[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "cls", "type": "Type[_NewTask]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "cls", "type": "Type[_NewTask]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "cls", "type": "Type[_NewTask]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "tensorizers", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "column", "type": "Any"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "extra_columns", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "create_tensorizers", "type": "Callable[[Union[Any, Dict[str, Any]]], Dict[str, pytext.data.tensorizers.Tensorizer]]"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "rank", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "init_tensorizers", "type": "bool"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 158, "col_offset": 59, "nodeName": "tensorizers", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 180, "col_offset": 50, "nodeName": "create_metric_reporter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 181, "col_offset": 41, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "TaskTrainer", "type": "Type[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "train_from_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "training_state", "type": "pytext.trainers.training_state.TrainingState"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "config", "type": "pytext.config.pytext_config.PyTextConfig"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "batches", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "numberize_rows", "type": "Callable[[Any], Generator[pytext.data.data.RowData, Any, None]]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "batchify", "type": "Callable[..., Generator[pytext.data.data.BatchData, Any, None]]"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "numberized_rows", "type": "Generator[pytext.data.data.RowData, Any, None]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "inputs", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "next", "type": "Callable"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "arrange_model_inputs", "type": "Callable[[Any], None]"}, {"lineNumber": 235, "col_offset": 59, "nodeName": "inputs", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "arrange_model_context", "type": "Callable[[Any], None]"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "inputs", "type": "Dict[Any, Any]"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "get_pred", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 260, "col_offset": 72, "nodeName": "export_onnx_path", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "quantize", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "jit", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "torchscriptify", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 285, "col_offset": 64, "nodeName": "trace", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "export_path", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "type", "type": "nothing"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Any", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "type", "type": "nothing"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "name", "type": "nothing"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "ModelInput", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "metric_reporter", "type": "Any"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "TaskTrainer", "type": "Type[pytext.trainers.trainer.TaskTrainer]"}, {"lineNumber": 180, "col_offset": 50, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 232, "col_offset": 56, "nodeName": "row", "type": "Any"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "batcher", "type": "pytext.data.data.Batcher"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "pad_and_tensorize_batches", "type": "Callable[[Any, Any], Generator[Tuple[Any, Dict[Any, Any]], Any, None]]"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "tensorizers", "type": "Dict[str, pytext.data.tensorizers.Tensorizer]"}, {"lineNumber": 234, "col_offset": 78, "nodeName": "batches", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "model", "type": "pytext.models.model.BaseModel"}, {"lineNumber": 238, "col_offset": 51, "nodeName": "model_context", "type": "None"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 240, "col_offset": 64, "nodeName": "scores", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "export", "type": "Any"}, {"lineNumber": 257, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "batches", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "trace", "type": "Any"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "Config", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "cls", "type": "Type[_NewTask]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "config", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "NewTask"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "model_inputs", "type": "None"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "mc", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "arrange_model_inputs", "type": "Any"}, {"lineNumber": 257, "col_offset": 60, "nodeName": "batch", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "data", "type": "pytext.data.data.Data"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "Stage", "type": "Type[pytext.common.constants.Stage]"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "_has_method", "type": "Any"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "_pack", "type": "Any"}, {"lineNumber": 288, "col_offset": 50, "nodeName": "export_path", "type": "Any"}, {"lineNumber": 23, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 73, "nodeName": "Type", "type": "Any"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "name", "type": "nothing"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "name", "type": "nothing"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "type", "type": "nothing"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "BaseModel", "type": "Type[pytext.models.model.BaseModel]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 234, "col_offset": 55, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "self", "type": "_NewTask"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "_c", "type": "Any"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "schema", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 51, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "Config", "type": "Any"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "name", "type": "nothing"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "Tensorizer", "type": "Type[pytext.data.tensorizers.Tensorizer]"}]