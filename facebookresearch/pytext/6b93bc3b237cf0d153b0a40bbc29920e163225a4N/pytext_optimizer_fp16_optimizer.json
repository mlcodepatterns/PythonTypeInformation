[{"lineNumber": 659, "col_offset": 0, "nodeName": "master_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 663, "col_offset": 0, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 855, "col_offset": 0, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "Fairseq_MemoryEfficientFP16OptimizerMixin", "type": "Any"}, {"lineNumber": 222, "col_offset": 47, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 312, "col_offset": 27, "nodeName": "Fairseq_FP16OptimizerMixin", "type": "Any"}, {"lineNumber": 312, "col_offset": 55, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 448, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 680, "col_offset": 24, "nodeName": "FP16OptimizerDeprecated", "type": "Type[FP16OptimizerDeprecated]"}, {"lineNumber": 772, "col_offset": 29, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "__EXPANSIBLE__", "type": "bool"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 664, "col_offset": 17, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 861, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 861, "col_offset": 13, "nodeName": "params", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "wrapped_optimizer", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 272, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "FP16Optimizer", "type": "Type[FP16Optimizer]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "scale_window", "type": "Optional[int]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "threshold_loss_scale", "type": "Optional[float]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "param_groups", "type": "List[nothing]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 450, "col_offset": 21, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 451, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 452, "col_offset": 28, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "_iter", "type": "int"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 614, "col_offset": 35, "nodeName": "scale", "type": "Any"}, {"lineNumber": 615, "col_offset": 33, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 616, "col_offset": 37, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 618, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 651, "col_offset": 26, "nodeName": "optimizer", "type": "Union[PureFP16Optimizer, FP16OptimizerDeprecated]"}, {"lineNumber": 660, "col_offset": 11, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 665, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 724, "col_offset": 11, "nodeName": "support", "type": "Any"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 753, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 788, "col_offset": 31, "nodeName": "init_optimizer", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "support", "type": "Any"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "is_overflow", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 847, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "FP16_ENABLED", "type": "bool"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "pytext.optimizer.optimizers.Optimizer"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerApex]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "min_loss_scale", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "closure", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16OptimizerFairseq"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "MemoryEfficientFP16OptimizerFairseq"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 280, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "cls", "type": "Type[MemoryEfficientFP16OptimizerFairseq]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 305, "col_offset": 38, "nodeName": "max_norm", "type": "Union[Any, float]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 344, "col_offset": 25, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "build_fp32_params", "type": "Any"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "fp16_params", "type": "Any"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 356, "col_offset": 22, "nodeName": "Fairseq_DynamicLossScaler", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 366, "col_offset": 38, "nodeName": "fp32_params", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "add_param_group", "type": "Any"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "fp32_param_group", "type": "Any"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "Config", "type": "Any"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "half", "type": "Any"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "create_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 380, "col_offset": 42, "nodeName": "fp32_config", "type": "Any"}, {"lineNumber": 380, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "cls", "type": "Type[FP16OptimizerFairseq]"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "max_norm", "type": "float"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 401, "col_offset": 38, "nodeName": "max_norm", "type": "Union[float, Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "float", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "precision", "type": "module"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 458, "col_offset": 30, "nodeName": "scale", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "scale", "type": "Any"}, {"lineNumber": 464, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 481, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 33, "nodeName": "params", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "_iter", "type": "int"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 546, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 546, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 546, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 546, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 552, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 552, "col_offset": 33, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "_grads_from_model_to_master", "type": "Callable[[], Any]"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 586, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "grads_update_needed", "type": "bool"}, {"lineNumber": 604, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "weights_update_needed", "type": "bool"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 614, "col_offset": 35, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 615, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 616, "col_offset": 37, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "state_dict", "type": "Dict[str, Union[Any, bool, List[Dict[Union[str, Any], Union[List[Any], Any]]]]]"}, {"lineNumber": 617, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 621, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 624, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "finalize", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "state_dict", "type": "Callable[[], Any]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "load_state_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 633, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 648, "col_offset": 13, "nodeName": "PureFP16Optimizer", "type": "Type[PureFP16Optimizer]"}, {"lineNumber": 648, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 648, "col_offset": 42, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 648, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 648, "col_offset": 68, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "half", "type": "Any"}, {"lineNumber": 656, "col_offset": 10, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 665, "col_offset": 17, "nodeName": "group", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 698, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 698, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 698, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 698, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "upscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 710, "col_offset": 40, "nodeName": "loss", "type": "Any"}, {"lineNumber": 723, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 738, "col_offset": 11, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "is_scaled", "type": "bool"}, {"lineNumber": 743, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 753, "col_offset": 17, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 753, "col_offset": 33, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 765, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 766, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 791, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 796, "col_offset": 27, "nodeName": "DynamicLossScaler", "type": "Type[DynamicLossScaler]"}, {"lineNumber": 796, "col_offset": 45, "nodeName": "init_scale", "type": "Any"}, {"lineNumber": 796, "col_offset": 57, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 796, "col_offset": 71, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 815, "col_offset": 26, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 817, "col_offset": 40, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 819, "col_offset": 15, "nodeName": "support", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "update_scale", "type": "Callable[[], Any]"}, {"lineNumber": 831, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 831, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 831, "col_offset": 34, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 843, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 844, "col_offset": 39, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 847, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 862, "col_offset": 17, "nodeName": "float", "type": "Any"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 864, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 866, "col_offset": 14, "nodeName": "p", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "half", "type": "Any"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "grad", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 69, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "precision", "type": "module"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "_APEX_DISABLED", "type": "bool"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "amp", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "opt_level", "type": "str"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Optional[int]"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "min_loss_scale", "type": "Optional[float]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "scale_loss", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 203, "col_offset": 56, "nodeName": "max_norm", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "forward", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "old_forward", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "_deactivate", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 261, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 283, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 298, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 351, "col_offset": 56, "nodeName": "num_accumulated_batches", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "init_loss_scale", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "scale_tolerance", "type": "Any"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 366, "col_offset": 38, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[pytext.optimizer.optimizers.Optimizer]"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "fp16_params", "type": "List[Any]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "init_loss_scale", "type": "int"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "scale_tolerance", "type": "float"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "threshold_loss_scale", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "min_loss_scale", "type": "float"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "num_accumulated_batches", "type": "int"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 458, "col_offset": 30, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "grad", "type": "Any"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 33, "nodeName": "grad", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "max", "type": "Callable"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 528, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 545, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 552, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "_weights_from_master_to_model", "type": "Callable[[], Any]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 587, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 605, "col_offset": 45, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 614, "col_offset": 35, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 615, "col_offset": 33, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 617, "col_offset": 45, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 623, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 630, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 656, "col_offset": 10, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 660, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 666, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 697, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "check_overflow", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "_fp16_to_fp32", "type": "Callable[[], Any]"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "is_overflow", "type": "Union[bool, Any]"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "_fp32_to_fp16", "type": "Callable[[], Any]"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "unscale_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 739, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 743, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 744, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 744, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 745, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 746, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "is_overflow", "type": "bool"}, {"lineNumber": 753, "col_offset": 33, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 754, "col_offset": 21, "nodeName": "half", "type": "Any"}, {"lineNumber": 755, "col_offset": 15, "nodeName": "grad", "type": "Any"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 767, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 769, "col_offset": 21, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 790, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 792, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 792, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 793, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 794, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 797, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 815, "col_offset": 26, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 817, "col_offset": 40, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 831, "col_offset": 34, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 832, "col_offset": 61, "nodeName": "convert_generator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 833, "col_offset": 33, "nodeName": "scale", "type": "Any"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 845, "col_offset": 45, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 847, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 849, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 849, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 850, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 851, "col_offset": 37, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 852, "col_offset": 21, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 862, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 863, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 864, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 864, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "div_", "type": "Any"}, {"lineNumber": 865, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 868, "col_offset": 11, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "half", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "e", "type": "AttributeError"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "self", "type": "FP16Optimizer"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "amp", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "DELAY_UNSCALE", "type": "bool"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "scaled_loss", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "master_params", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "fp32_optimizer", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "handle", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 283, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "DISTRIBUTED_WORLD_SIZE", "type": "int"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerFairseq"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 379, "col_offset": 44, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 379, "col_offset": 61, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 390, "col_offset": 25, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "fp16_config", "type": "Any"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 472, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 473, "col_offset": 30, "nodeName": "cpu_sum", "type": "float"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 482, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 498, "col_offset": 29, "nodeName": "scale", "type": "Any"}, {"lineNumber": 498, "col_offset": 42, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 500, "col_offset": 75, "nodeName": "scale", "type": "Any"}, {"lineNumber": 502, "col_offset": 55, "nodeName": "scale_window", "type": "Any"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 530, "col_offset": 20, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 542, "col_offset": 43, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 544, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Union[str, Any], Union[List[Any], Any]]]"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 560, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 574, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 589, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 592, "col_offset": 49, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 597, "col_offset": 19, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 599, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 599, "col_offset": 40, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 600, "col_offset": 41, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 32, "nodeName": "param_groups", "type": "Union[List[Dict[Union[str, Any], Union[List[Any], Any]]], Any]"}, {"lineNumber": 607, "col_offset": 16, "nodeName": "generate_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "copy_", "type": "nothing"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "data", "type": "nothing"}, {"lineNumber": 617, "col_offset": 45, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 725, "col_offset": 44, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 728, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 735, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 739, "col_offset": 43, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 744, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 745, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 746, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 746, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "check_overflow_", "type": "Callable[[Any], Any]"}, {"lineNumber": 747, "col_offset": 49, "nodeName": "grad", "type": "Any"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "unscale", "type": "Callable[[Any], Any]"}, {"lineNumber": 750, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 754, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 755, "col_offset": 15, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "half", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 792, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 793, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 818, "col_offset": 15, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 820, "col_offset": 16, "nodeName": "_unscale", "type": "Callable[[], Any]"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "_preprocess_step", "type": "Callable[[], Any]"}, {"lineNumber": 824, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 833, "col_offset": 16, "nodeName": "group", "type": "Dict[Any, Any]"}, {"lineNumber": 833, "col_offset": 33, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 849, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 850, "col_offset": 16, "nodeName": "fp16_group", "type": "Dict[Any, Any]"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "param_groups", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 862, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 864, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 864, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 867, "col_offset": 17, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 53, "nodeName": "precision", "type": "module"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "amp", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "self", "type": "FP16OptimizerApex"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "_amp_state", "type": "Any"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 283, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "cuda", "type": "module"}, {"lineNumber": 379, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 379, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 498, "col_offset": 29, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 498, "col_offset": 42, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 500, "col_offset": 75, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 502, "col_offset": 14, "nodeName": "_iter", "type": "int"}, {"lineNumber": 502, "col_offset": 27, "nodeName": "_last_overflow_iter", "type": "int"}, {"lineNumber": 502, "col_offset": 55, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 531, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 531, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 531, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "fp16_group", "type": "Dict[Union[str, Any], Union[List[Any], Any]]"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 592, "col_offset": 49, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 597, "col_offset": 19, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "empty_like", "type": "Any"}, {"lineNumber": 598, "col_offset": 57, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 599, "col_offset": 16, "nodeName": "grad", "type": "nothing"}, {"lineNumber": 599, "col_offset": 40, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 600, "col_offset": 41, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 606, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "data", "type": "nothing"}, {"lineNumber": 609, "col_offset": 39, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 726, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 727, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 728, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 731, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 739, "col_offset": 12, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 744, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 746, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 746, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 747, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 748, "col_offset": 19, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "loss_scaler", "type": "DynamicLossScaler"}, {"lineNumber": 750, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 754, "col_offset": 21, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 793, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 820, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 823, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 824, "col_offset": 16, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 833, "col_offset": 33, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 850, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 864, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 865, "col_offset": 12, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "grad", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "amp", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 472, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 502, "col_offset": 14, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 502, "col_offset": 27, "nodeName": "self", "type": "DynamicLossScaler"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 532, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 537, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 544, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 554, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 589, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 599, "col_offset": 16, "nodeName": "master_param", "type": "nothing"}, {"lineNumber": 600, "col_offset": 16, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "model_param", "type": "nothing"}, {"lineNumber": 728, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 746, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "self", "type": "PureFP16Optimizer"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "grad", "type": "Any"}, {"lineNumber": 821, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 824, "col_offset": 16, "nodeName": "self", "type": "GeneratorFP16Optimizer"}, {"lineNumber": 864, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 869, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "fp16_param", "type": "List[Any]"}, {"lineNumber": 534, "col_offset": 24, "nodeName": "master_p", "type": "Any"}, {"lineNumber": 535, "col_offset": 24, "nodeName": "group", "type": "Any"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "j", "type": "int"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 540, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 746, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 756, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "clone", "type": "Any"}, {"lineNumber": 537, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "inner_optimizer", "type": "Any"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "detach", "type": "Any"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "self", "type": "FP16OptimizerDeprecated"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "p", "type": "Any"}]