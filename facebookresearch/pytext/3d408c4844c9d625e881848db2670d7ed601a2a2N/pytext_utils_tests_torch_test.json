[{"lineNumber": 13, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "io", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "word", "type": "str"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "words", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "original_bpe", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "s1", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "s2", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "max_char_length", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "expected_seq_lens", "type": "List[int]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[pytext.utils.torch.Vocabulary]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "jit", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "LookupWord", "type": "Type[Any]"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "jit", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "LookupIndex", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[pytext.utils.torch.Vocabulary]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "from_vocab_file", "type": "Callable[[Any, io.IOBase], pytext.utils.torch.BPE]"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "BPE_VOCAB_FILE", "type": "io.StringIO"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "seek", "type": "Callable[..., int]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "from_vocab_file", "type": "Callable[[Any, io.IOBase], pytext.utils.torch.BPE]"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "BPE_VOCAB_FILE", "type": "io.StringIO"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "tokenized", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "make_byte_inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "max_char_length", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "expected_bytes", "type": "List[List[List[int]]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "expected_seq_lens", "type": "List[int]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "lookup_word", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "lookup_idx", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "lookup_indices_2d", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "lookup_indices_2d", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "lookup_indices_1d", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "lookup_words_1d_cycle_heuristic", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "BPE_VOCAB_FILE", "type": "io.StringIO"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "BPE", "type": "Type[pytext.utils.torch.BPE]"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "BPE_VOCAB_FILE", "type": "io.StringIO"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "BPE", "type": "Type[pytext.utils.torch.BPE]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "pickle", "type": "module"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "original_bpe", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "bpe", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "idx", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "vocab", "type": "pytext.utils.torch.Vocabulary"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "BPETest"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "word", "type": "str"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "utf8_chars", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "word", "type": "str"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "pickle", "type": "module"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "s1", "type": "str"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "s2", "type": "str"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "bytes", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "seq_lens", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "word", "type": "str"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "VocabTest"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "pad_to", "type": "int"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "word", "type": "str"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 61, "nodeName": "word", "type": "str"}]