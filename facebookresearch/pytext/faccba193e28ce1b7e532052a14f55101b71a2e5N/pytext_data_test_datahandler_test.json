[{"lineNumber": 16, "col_offset": 0, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "import_tests_module", "type": "Callable[..., module]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "col", "type": "str"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "columns", "type": "Dict[str, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "col", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "columns", "type": "Dict[str, int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "feat_name", "type": "str"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "WORD_FEAT", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "train_text", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "eval_text", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "test_text", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "pretrained_embedding_file", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "test_cases", "type": "Tuple[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "WORD_LABEL", "type": "str"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "DICT_FEAT", "type": "str"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "read_from_file", "type": "Callable[[str, Union[Dict[str, int], List[str]]], List[Dict[str, Any]]]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "read_from_file", "type": "Callable[[str, Union[Dict[str, int], List[str]]], List[Dict[str, Any]]]"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "columns", "type": "Dict[str, int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "ModelInput", "type": "Type[pytext.config.doc_classification.ModelInput]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "test_file", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "DataHandler", "type": "Type[pytext.data.data_handler.DataHandler]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "DataHandler", "type": "Type[pytext.data.data_handler.DataHandler]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "tests_module", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "create_featurizer", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "from_config", "type": "Callable"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "gen_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "gen_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "gen_dataset", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "init_feature_metadata", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 148, "col_offset": 70, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "features", "type": "Dict[str, pytext.fields.field.FieldMeta]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "col", "type": "str"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 73, "nodeName": "col", "type": "str"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 33, "col_offset": 66, "nodeName": "WORD_LABEL", "type": "str"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "DICT_FEAT", "type": "str"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "col", "type": "str"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 73, "nodeName": "col", "type": "str"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "DOC_LABEL", "type": "str"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "UTTERANCE", "type": "str"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "UNK_TOKEN", "type": "str"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "PAD_TOKEN", "type": "str"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "union", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "WordFeatConfig", "type": "Type[pytext.config.field_config.WordFeatConfig]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "UNK_TOKEN", "type": "str"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "PAD_TOKEN", "type": "str"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "FeatureConfig", "type": "Type[pytext.config.field_config.FeatureConfig]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "DocClassificationDataHandler", "type": "Type[pytext.data.doc_classification_data_handler.DocClassificationDataHandler]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "Config", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "ModelInputConfig", "type": "Type[pytext.config.doc_classification.ModelInputConfig]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "TargetConfig", "type": "Type[pytext.config.field_config.DocLabelConfig]"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "featurizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "data_handler", "type": "pytext.data.doc_classification_data_handler.DocClassificationDataHandler"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "data_handler", "type": "pytext.data.doc_classification_data_handler.DocClassificationDataHandler"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "data_handler", "type": "pytext.data.doc_classification_data_handler.DocClassificationDataHandler"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "data_handler", "type": "pytext.data.doc_classification_data_handler.DocClassificationDataHandler"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "metadata", "type": "pytext.data.data_handler.CommonMetadata"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "feat_name", "type": "str"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "pretrained_embeds_weight", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 33, "col_offset": 66, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "DFColumn", "type": "Type[pytext.common.constants.DFColumn]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "pretrained_embedding_file", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "pretrained_tokens", "type": "Set[str]"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "UNK_TOKEN", "type": "str"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "PAD_TOKEN", "type": "str"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "pretrained_tokens", "type": "Set[str]"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "pretrained_embedding_file", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "SimpleFeaturizer", "type": "Type[pytext.data.featurizer.simple_featurizer.SimpleFeaturizer]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "DocClassificationDataHandler", "type": "Type[pytext.data.doc_classification_data_handler.DocClassificationDataHandler]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "train_text", "type": "str"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "eval_text", "type": "str"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "test_text", "type": "str"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "data_handler", "type": "pytext.data.doc_classification_data_handler.DocClassificationDataHandler"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "self", "type": "DataHandlerTest"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "VocabMeta", "type": "Type[pytext.common.constants.VocabMeta]"}, {"lineNumber": 131, "col_offset": 67, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "case", "type": "Union[Dict[str, Union[int, Set[str], pytext.config.field_config.WordFeatConfig]], Dict[str, Union[int, Set[Any], pytext.config.field_config.WordFeatConfig]]]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "stoi", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "pretrained_embeds_weight", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "meta", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "meta", "type": "pytext.fields.field.FieldMeta"}]