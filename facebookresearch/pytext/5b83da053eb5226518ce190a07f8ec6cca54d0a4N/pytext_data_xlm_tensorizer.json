[{"lineNumber": 16, "col_offset": 20, "nodeName": "BERTTensorizerBase", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizerBase]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "BERTTensorizerBase", "type": "Type[pytext.data.bert_tensorizer.BERTTensorizerBase]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "Config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "min_count", "type": "int"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "language_column", "type": "str"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "LANG2ID_15", "type": "Dict[str, int]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "columns", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "language_column", "type": "str"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "language_column", "type": "str"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "language_column", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "bos_token", "type": "str"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "schema", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "column_schema", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "has_language_in_data", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "schema", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "List", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "sentences", "type": "List[nothing]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "language_column", "type": "str"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "language_column", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "seq_lens", "type": "List[int]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "lang_ids", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "Config", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "create_component", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "TOKENIZER", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "build_fairseq_vocab", "type": "Callable[..., pytext.data.utils.Vocabulary]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "cls", "type": "Type[XLMTensorizer]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "schema", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "lookup_tokens", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "index", "type": "int"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "tokens", "type": "List[nothing]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "segment_labels", "type": "List[nothing]"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "positions", "type": "List[int]"}, {"lineNumber": 24, "col_offset": 38, "nodeName": "Tokenizer", "type": "Type[pytext.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "ComponentType", "type": "Type[pytext.config.component.ComponentType]"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "MaskedLMDictionary", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "max_vocab", "type": "int"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "min_count", "type": "int"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "columns", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "language_column", "type": "str"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "use_language_embeddings", "type": "bool"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "has_language_in_data", "type": "bool"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 79, "col_offset": 75, "nodeName": "max_seq_len", "type": "int"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "lang", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "tokenizer", "type": "pytext.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "eos_token", "type": "str"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "column", "type": "str"}, {"lineNumber": 128, "col_offset": 71, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "sentence", "type": "str"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "sentence", "type": "str"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "sentences", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "index", "type": "int"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "UNK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "PAD", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "EOS", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "MASK", "type": "pytext.data.utils.SpecialToken"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "language_column", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "col", "type": "str"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "lang", "type": "Any"}, {"lineNumber": 101, "col_offset": 77, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "lang", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "lang2id", "type": "Dict[str, int]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "vocab", "type": "pytext.data.utils.Vocabulary"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "_lookup_tokens", "type": "Callable[[str, int], List[str]]"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 128, "col_offset": 71, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "get_lang_id", "type": "Callable[[Dict[Any, Any], str], int]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "language_column", "type": "str"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "lang_id", "type": "int"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "lang_ids", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 78, "nodeName": "seq_lens", "type": "List[int]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "itertools", "type": "module"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "sentences", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "itertools", "type": "module"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "lang_ids", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "seq_len", "type": "int"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "row", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "XLMTensorizer"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "column", "type": "str"}]