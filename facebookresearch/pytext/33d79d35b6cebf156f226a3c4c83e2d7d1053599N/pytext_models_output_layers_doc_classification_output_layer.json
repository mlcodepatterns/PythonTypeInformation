[{"lineNumber": 25, "col_offset": 32, "nodeName": "OutputLayerBase", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "ScriptModule", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "ClassificationOutputLayer", "type": "Type[ClassificationOutputLayer]"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "ClassificationOutputLayer", "type": "Type[ClassificationOutputLayer]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "Config", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "jit", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "OutputLayerBase", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "classes", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "score_function", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "score_function", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "example_scores", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "Config", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "FieldMeta", "type": "Type[pytext.fields.field.FieldMeta]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "metadata", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "metadata", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "itos", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "create_loss", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "loss", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "MulticlassOutputLayer", "type": "Type[MulticlassOutputLayer]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "cls", "type": "Union[Type[BinaryClassificationOutputLayer], Type[MulticlassOutputLayer]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 61, "col_offset": 74, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ClassificationScores"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "Attribute", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "classes", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ClassificationScores"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "score_function", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "logits", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "annotate", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "chunk", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "example_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "example_response", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "logsigmoid", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "logit", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "scores", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "ClassificationScores", "type": "Type[ClassificationScores]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "logsigmoid", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "Net", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "Net", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "Sigmoid", "type": "Any"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "output_name", "type": "str"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "gen_additional_blobs", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "output_name", "type": "str"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "BlobReference", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "logit", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "preds", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "scores", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "ClassificationScores", "type": "Type[ClassificationScores]"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "Net", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "Net", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "Softmax", "type": "Any"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "output_name", "type": "str"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "gen_additional_blobs", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "probability_out", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 154, "col_offset": 53, "nodeName": "output_name", "type": "str"}, {"lineNumber": 154, "col_offset": 66, "nodeName": "target_names", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "BlobReference", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "CrossEntropyLoss", "type": "Type[pytext.loss.loss.CrossEntropyLoss]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "FloatTensor", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "loss", "type": "Any"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "BinaryCrossEntropyLoss", "type": "Type[pytext.loss.loss.BinaryCrossEntropyLoss]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "create_loss", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "loss", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "jit", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "jit", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "scores", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "annotate", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "example_response", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "self", "type": "BinaryClassificationOutputLayer"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "F", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "core", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "core", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "core", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "OutputLayerUtils", "type": "Any"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "self", "type": "BinaryClassificationOutputLayer"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "logit", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "self", "type": "MulticlassOutputLayer"}, {"lineNumber": 141, "col_offset": 55, "nodeName": "F", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "core", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "core", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "core", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "predict_net", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "OutputLayerUtils", "type": "Any"}, {"lineNumber": 154, "col_offset": 66, "nodeName": "self", "type": "MulticlassOutputLayer"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "metadata", "type": "pytext.fields.field.FieldMeta"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "label_weights", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "example_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "jit", "type": "Any"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "classes", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "example_response", "type": "Any"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "item", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "dim", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "classes", "type": "Any"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "example_scores", "type": "Any"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "model_out", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 67, "nodeName": "i", "type": "int"}]