[{"lineNumber": 22, "col_offset": 16, "nodeName": "BaseModel", "type": "Type[mmf.models.base_model.BaseModel]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_global_config", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_datasets", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "image_feature_dim", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "text_processor", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "module_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "embedding_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "type", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "embedding", "type": "mmf.modules.embeddings.TextEmbedding"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "embeddings_out_dim", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "text_out_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "model_data_dir", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "model_data_dir", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "feat_encoder", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "feat_encoder_config", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "feat_model", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "feature_embedding", "type": "mmf.modules.embeddings.TwoBranchEmbedding"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "embedding_attr1", "type": "str"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "embedding_attr1", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "multi_modal_combine_layer", "type": "mmf.modules.layers.BranchCombineLayer"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "num_choices", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "inter_model", "type": "None"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "combine_layer", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "image_text_multi_modal_combine_layer", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "params", "type": "List[Dict[str, Any]]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "params", "type": "List[Dict[str, Any]]"}, {"lineNumber": 137, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "mapping", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "mapping", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "texts", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "text_embedding_model", "type": "Any"}, {"lineNumber": 185, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "batch_size_t", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "feature_embedding", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "layer", "type": "str"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "model_output", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "model_output", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_build_word_embedding", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_init_text_embeddings", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_init_feature_encoders", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "_init_feature_embeddings", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_init_combine_layer", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_init_classifier", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_init_extras", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "text_processor", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "get_embedding", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "attr", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "module_config", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_update_text_embedding_args", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "TextEmbedding", "type": "Type[mmf.modules.embeddings.TextEmbedding]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "embedding_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "embedding", "type": "mmf.modules.embeddings.TextEmbedding"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "embeddings_out_dim", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "embedding", "type": "mmf.modules.embeddings.TextEmbedding"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "feat_encoder", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "model_data_dir", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "model_data_dir", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "in_dim", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "build_image_encoder", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "feat_encoder_config", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "out_dim", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "feat_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "text_embeddings_out_dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "text_embeddings_out_dim", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "TwoBranchEmbedding", "type": "Type[mmf.modules.embeddings.TwoBranchEmbedding]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "feature_embedding", "type": "mmf.modules.embeddings.TwoBranchEmbedding"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "embedding_attr1", "type": "str"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "embedding_attr1", "type": "str"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "BranchCombineLayer", "type": "Type[mmf.modules.layers.BranchCombineLayer]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "multi_modal_combine_layer", "type": "mmf.modules.layers.BranchCombineLayer"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "params", "type": "Dict[nothing, nothing]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "ClassifierLayer", "type": "Type[mmf.modules.layers.ClassifierLayer]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "DictConfig", "type": "Type[Type[Any]]"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "image_text_multi_modal_combine_layer", "type": "Any"}, {"lineNumber": 184, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "embedding_attr", "type": "str"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "text_embedding_model", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "PreExtractedEmbedding", "type": "Type[mmf.modules.embeddings.PreExtractedEmbedding]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 214, "col_offset": 70, "nodeName": "batch_size_t", "type": "Optional[int]"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "image_feature_0", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "feature_encoder", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "feature_sga", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "feature_cbn", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "feature_embedding", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "feature_sga", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "feature_cbn", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "v1", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "v2", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "q", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 251, "col_offset": 36, "nodeName": "v1", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "v2", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "q", "type": "Any"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "eq", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 258, "col_offset": 47, "nodeName": "text", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "process_text_embedding", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "feature_sga", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "feature_cbn", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "process_feature_embedding", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "combine_embeddings", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "_get_classifier_input_dim", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "_datasets", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "attr", "type": "str"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "module_config", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "copy", "type": "module"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "open_dict", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "feat_encoder_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "feat_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "attr", "type": "str"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "embedding_kwargs", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "attr", "type": "str"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "attr", "type": "str"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "attr", "type": "str"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "attr", "type": "str"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "combined_embedding_dim", "type": "int"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "num_choices", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "params", "type": "Union[Dict[nothing, nothing], Any]"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 196, "col_offset": 35, "nodeName": "text_embedding_model", "type": "Any"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "question_id", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 198, "col_offset": 55, "nodeName": "text_embedding_model", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "texts", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "batch_size_t", "type": "Optional[int]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "get_batch_size", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 30, "nodeName": "feature_encoder", "type": "Any"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "feature", "type": "Any"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "attr", "type": "str"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "layer", "type": "str"}, {"lineNumber": 253, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 47, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 56, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 32, "nodeName": "feature_sga", "type": "Any"}, {"lineNumber": 268, "col_offset": 45, "nodeName": "feature_cbn", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "calculate_logits", "type": "Any"}, {"lineNumber": 271, "col_offset": 56, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 256, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "_global_config", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "_datasets", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "attr", "type": "str"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "attr", "type": "str"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "omegaconf", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "feat_encoder_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "feat_encoder_config", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "attr", "type": "str"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "_get_embeddings_attr", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "attr1", "type": "str"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "_get_embeddings_attr", "type": "Any"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "attr2", "type": "str"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "attr2", "type": "str"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "_datasets", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "lr", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "encoder_lr_multiply", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "filter_grads", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 196, "col_offset": 56, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "attr", "type": "str"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "sample_list", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 58, "nodeName": "text_embedding_vec", "type": "Any"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "attr", "type": "str"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "attr1", "type": "str"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "training", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 137, "col_offset": 72, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 77, "nodeName": "Any", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "Any", "type": "Any"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "embedding_attr", "type": "str"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 45, "nodeName": "Any", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "sga", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "sga_pool", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "cbn", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "config", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "combine_layer", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "image_feature_encoders", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "image_feature_embeddings_list", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "image_feature_embeddings_list", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "image_feature_embeddings_list", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "self", "type": "Any"}]