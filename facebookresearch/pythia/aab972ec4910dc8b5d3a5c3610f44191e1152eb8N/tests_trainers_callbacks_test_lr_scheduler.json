[{"lineNumber": 14, "col_offset": 19, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__len__", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_on_update_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "utils", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "model", "type": "SimpleModule"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "val_dataset", "type": "NumbersDataset"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "NumbersDataset"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "create", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "config", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "SimpleModule", "type": "Type[SimpleModule]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "NumbersDataset", "type": "Type[NumbersDataset]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "LRSchedulerCallback", "type": "Type[mmf.trainers.callbacks.lr_scheduler.LRSchedulerCallback]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "unregister", "type": "Callable[[Any, Any], Optional[Dict[Any, Any]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "on_update_end", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "on_update_end", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "Tanh", "type": "Any"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "Tanh", "type": "Any"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "base", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "NumbersDataset"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "idx", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "self", "type": "NumbersDataset"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "argparse", "type": "module"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "OmegaConf", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "lr_scheduler_callback", "type": "mmf.trainers.callbacks.lr_scheduler.LRSchedulerCallback"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "lr_scheduler_callback", "type": "mmf.trainers.callbacks.lr_scheduler.LRSchedulerCallback"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "nn", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "nn", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "loss", "type": "Any"}, {"lineNumber": 29, "col_offset": 51, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "target", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "model", "type": "SimpleModule"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "self", "type": "SimpleModule"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "trainer", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "self", "type": "TestLogisticsCallback"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "self", "type": "TestLogisticsCallback"}]