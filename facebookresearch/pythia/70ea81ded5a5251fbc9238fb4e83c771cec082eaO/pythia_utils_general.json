[{"lineNumber": 9, "col_offset": 0, "nodeName": "lr_lambda_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "clip_gradients", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "ckpt_name_from_core_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "foldername_from_config_override", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "get_optimizer_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "dict_to_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "get_overlap_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "updir", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "cfg_override", "type": "None"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "overlap", "type": "float"}, {"lineNumber": 130, "col_offset": 2, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "_", "type": "int"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "config_override", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "temp", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "temp", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "alpha", "type": "float"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "bisect", "type": "Callable[..., int]"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 18, "col_offset": 59, "nodeName": "idx", "type": "int"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "safe_dump", "type": "Callable"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 114, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 119, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "overlap", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 12, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 29, "col_offset": 44, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "question_embedding", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "question_embedding_module", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "yaml", "type": "module"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "item", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "alpha", "type": "float"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "norm", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "val", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "overlap", "type": "int"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "norm", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "question_embedding", "type": "Any"}]