[{"lineNumber": 8, "col_offset": 0, "nodeName": "lr_lambda_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "clip_gradients", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "ckpt_name_from_core_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "foldername_from_config_override", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "get_optimizer_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "dict_to_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "nested_dict_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "cfg_override", "type": "None"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 47, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "config_override", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 11, "col_offset": 72, "nodeName": "alpha", "type": "float"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "bisect", "type": "Callable[..., int]"}, {"lineNumber": 13, "col_offset": 61, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 14, "col_offset": 59, "nodeName": "idx", "type": "int"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "safe_dump", "type": "Callable"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "module", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 74, "col_offset": 59, "nodeName": "config", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "Mapping", "type": "Type[Mapping[Any, Any]]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "v", "type": "Any"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 10, "col_offset": 22, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 10, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "question_embedding", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "question_embedding_module", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "config", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "yaml", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "split", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "item", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "count", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "collections", "type": "module"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "nested_dict_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 70, "nodeName": "v", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 11, "col_offset": 63, "nodeName": "alpha", "type": "float"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "norm", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 34, "col_offset": 61, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "replace", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "val", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "get", "type": "Any"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "k", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 10, "col_offset": 38, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 34, "col_offset": 54, "nodeName": "norm", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "folder_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "question_embedding", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "find", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "key", "type": "Any"}]