[{"lineNumber": 9, "col_offset": 28, "nodeName": "MMFDataset", "type": "Any"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "MMFDataset", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "init_processors", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "_use_features", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "plot", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "processed", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "_use_images", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "image_processor", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "plot", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "processed", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 12, "col_offset": 44, "nodeName": "imdb_file_index", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "annotation_db", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "plot", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "plot", "type": "Any"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "text_processor", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "_use_features", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "answer_processor", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "processed", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "processed", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "imdb_file_index", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "init_processors", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "image_db", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "annotation_db", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "plot", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "plot", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "text_processor", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "_use_images", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "answer_processor", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "processed", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "processed", "type": "Any"}, {"lineNumber": 12, "col_offset": 62, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 12, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "idx", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "plot", "type": "Any"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 24, "col_offset": 58, "nodeName": "plot", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "features_db", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "features", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 48, "col_offset": 62, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 48, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "idx", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "plot", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "plot", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "processed_sentence", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "idx", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "transformer_bbox_processor", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "current_sample", "type": "Any"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "sample_info", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "self", "type": "MMIMDbFeaturesDataset"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "features", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "image_db", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "self", "type": "MMIMDbImageDataset"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "idx", "type": "Any"}]