[{"lineNumber": 15, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "captioning_config", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "coco", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "type", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "load_yaml", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "processors", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 28, "col_offset": 59, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 28, "col_offset": 75, "nodeName": "vocab_path", "type": "str"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "CaptionProcessor", "type": "Any"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 30, "col_offset": 52, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "CaptionBleu4Metric", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "Sample", "type": "Type[pythia.common.sample.Sample]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "Sample", "type": "Type[pythia.common.sample.Sample]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 71, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "Sample", "type": "Type[pythia.common.sample.Sample]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 92, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 95, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "Sample", "type": "Type[pythia.common.sample.Sample]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 113, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "MicroF1", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "MacroF1", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "BinaryF1", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "MultiLabelMicroF1", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "MultiLabelMacroF1", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "_test_multilabel_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "MacroROC_AUC", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "MicroROC_AUC", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "MicroAP", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "MacroAP", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "path", "type": "str"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "captioning_config", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 59, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "float", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "long", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "long", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 28, "col_offset": 59, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "expected", "type": "pythia.common.sample.Sample"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 92, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "sample", "type": "pythia.common.sample.Sample"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "metric", "type": "Any"}]