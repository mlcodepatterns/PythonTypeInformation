[{"lineNumber": 20, "col_offset": 14, "nodeName": "Pythia", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "pretrained_bert", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "text_embeddings_out_dim", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "torchscript", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "feature_embeddings_list", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "feature_embeddings_out_dim", "type": "int"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "image_intra_attention", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "param_optimizer", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "no_decay", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "optimizer_grouped_parameters", "type": "List[Union[Dict[str, Union[float, List[Any]]], Dict[str, Any]]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "feature_attentions", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "extra", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "feature_idx", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "feature_encoders", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "feature_embedding_total", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "masked_lm_labels", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "masked_lm_labels", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "is_random_next", "type": "None"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "combine_embeddings", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tie_weights", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "config", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "from_pretrained", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "bert_model_name", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "bert_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "MultiheadAttention", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "ProjectionEmbedding", "type": "Type[mmf.modules.embeddings.ProjectionEmbedding]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "num_feature_feat", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "feature_attn_model_list", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "feature_attn_model_params", "type": "Any"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "feature_attn_model_list", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "feature_embeddings", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "feature_embeddings_out_dim", "type": "Union[int, Any]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "extra", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "extra", "type": "List[nothing]"}, {"lineNumber": 202, "col_offset": 70, "nodeName": "batch_size_t", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "get_fields", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "extra", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "feature_idx", "type": "int"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "feature", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "feature", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "feature_info", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "encoders_attr", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "feature_encoder", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "list_attr", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "feature_embedding_models", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "image_intra_attention", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "feature_embedding_model", "type": "Any"}, {"lineNumber": 264, "col_offset": 43, "nodeName": "feature_embedding_models", "type": "Any"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "feature_embedding_total", "type": "Any"}, {"lineNumber": 274, "col_offset": 40, "nodeName": "feature_attentions", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 279, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "transform_to_batch_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 48, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "transform_to_batch_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "transform_to_batch_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 49, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 307, "col_offset": 27, "nodeName": "transform_to_batch_sequence", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "masked_lm_labels", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "to", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "word_embedding", "type": "Any"}, {"lineNumber": 322, "col_offset": 45, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 322, "col_offset": 56, "nodeName": "input_type_ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "process_text_embedding", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "process_feature_embedding", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 328, "col_offset": 34, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "inter_model", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "image_embedding_total", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "image_embedding_total", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 348, "col_offset": 36, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 354, "col_offset": 36, "nodeName": "prediction_scores", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "BertConfig", "type": "Any"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "config", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "from_pretrained", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "bert_model_name", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "bert", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "bert", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "apply", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "init_weights", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "BertPooler", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "BertEmbeddings", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "BertPreTrainingHeads", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "hidden_dropout_prob", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "first_module", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "first_module", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "second_module", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_tie_or_clone_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "image_feature_projection", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "MultiheadAttention", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "feature_embedding", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "feature_embeddings_out_dim", "type": "int"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 43, "nodeName": "feature_embeddings", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "attr", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "feature_embeddings_list", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "param_optimizer", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "param_optimizer", "type": "List[Any]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "text_embedding", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "key_padding_mask", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "batch_size_t", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "get_batch_size", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "feature", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "feature", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "feature", "type": "Any"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "attr", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "feature_encoders", "type": "Any"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 52, "nodeName": "feature_encoders", "type": "Any"}, {"lineNumber": 226, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 75, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "feature_info", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "attr", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "feature_encoder", "type": "Any"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "feature", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "attr", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "image_feature_projection", "type": "Any"}, {"lineNumber": 251, "col_offset": 60, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "inp", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 273, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "module", "type": "Any"}, {"lineNumber": 284, "col_offset": 32, "nodeName": "BertLayerNorm", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "module", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "bias", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "input_ids", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 319, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "attention_mask", "type": "Any"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 36, "nodeName": "inter_model", "type": "Any"}, {"lineNumber": 332, "col_offset": 53, "nodeName": "image_embedding_total", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "combine_embeddings", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 351, "col_offset": 56, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "masked_lm_labels", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "loss_fct", "type": "Any"}, {"lineNumber": 370, "col_offset": 70, "nodeName": "masked_lm_loss", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "index_to_gather", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "reshaped_logits", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "reshaped_logits", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "BertForPreTraining", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "bert_model", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "bert_model", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "pooler", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "BertPredictionHeadTransform", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "hidden_dropout_prob", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "clone", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 63, "nodeName": "attr", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "MultiheadAttention", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "feature_embedding", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "feature_attn_model_params", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "feature_embeddings_list", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "lr", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "attr", "type": "Any"}, {"lineNumber": 214, "col_offset": 60, "nodeName": "feature_idx", "type": "int"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "batch_size_t", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "features", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 233, "col_offset": 70, "nodeName": "attr", "type": "Any"}, {"lineNumber": 233, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "feature_dim", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 44, "nodeName": "encoders_attr", "type": "Any"}, {"lineNumber": 243, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "list_attr", "type": "Any"}, {"lineNumber": 250, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "image_feature_intra_attention", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 265, "col_offset": 62, "nodeName": "encoded_feature", "type": "Any"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "feature_embedding_model", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 283, "col_offset": 53, "nodeName": "initializer_range", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "module", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 332, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "image_embedding_total", "type": "Any"}, {"lineNumber": 341, "col_offset": 59, "nodeName": "text_embedding_total", "type": "Any"}, {"lineNumber": 350, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "loss_fct", "type": "Any"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "is_random_next", "type": "None"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "gather", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 397, "col_offset": 41, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 398, "col_offset": 37, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 399, "col_offset": 59, "nodeName": "answer_space_size", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "logits", "type": "Any"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "BertPredictionHeadTransform", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "config", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "hidden_dropout_prob", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "weight", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "cls", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "image_feature_attentions", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "attr", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "feature_attn_model_params", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 70, "nodeName": "n", "type": "Any"}, {"lineNumber": 147, "col_offset": 74, "nodeName": "n", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "param_optimizer", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "param_optimizer", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "image_feature_encoders_params", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "batch_size_t", "type": "Any"}, {"lineNumber": 256, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "key_padding_mask", "type": "Any"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "attn_mask", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "inp", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "key_padding_mask", "type": "Any"}, {"lineNumber": 267, "col_offset": 71, "nodeName": "attn_mask", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "feature_embeddings", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "feature_attentions", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 283, "col_offset": 53, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 319, "col_offset": 49, "nodeName": "next", "type": "Callable"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "view", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "view", "type": "Any"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 366, "col_offset": 46, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "training_head_type", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 407, "col_offset": 41, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "pooled_output", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Union[Any, Dict[str, Any]]]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "BertPredictionHeadTransform", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "second_module", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "n", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "attention", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 283, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "loss_key", "type": "str"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 394, "col_offset": 52, "nodeName": "size", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "bert_config", "type": "Any"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 319, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "index_to_gather", "type": "Any"}, {"lineNumber": 394, "col_offset": 52, "nodeName": "joint_embedding", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "logits", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "nd", "type": "str"}, {"lineNumber": 160, "col_offset": 63, "nodeName": "n", "type": "Any"}, {"lineNumber": 160, "col_offset": 69, "nodeName": "nd", "type": "str"}, {"lineNumber": 160, "col_offset": 75, "nodeName": "no_decay", "type": "List[str]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "prediction_scores", "type": "Any"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "masked_lm_labels", "type": "Any"}, {"lineNumber": 154, "col_offset": 61, "nodeName": "nd", "type": "str"}, {"lineNumber": 154, "col_offset": 67, "nodeName": "n", "type": "Any"}, {"lineNumber": 154, "col_offset": 73, "nodeName": "nd", "type": "str"}, {"lineNumber": 154, "col_offset": 79, "nodeName": "no_decay", "type": "List[str]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "index_to_gather", "type": "Any"}]