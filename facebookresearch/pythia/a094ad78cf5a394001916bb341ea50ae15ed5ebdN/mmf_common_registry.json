[{"lineNumber": 63, "col_offset": 4, "nodeName": "register_trainer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "register_builder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "register_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "register_loss", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "register_fusion", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "register_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "register_processor", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "register_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "register_scheduler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "register_transformer_backend", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "register_transformer_head", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "register_test_reporter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "register_decoder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "register_encoder", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "register_datamodule", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "register_iteration_strategy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "register", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "get_trainer_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "get_builder_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "get_model_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "get_processor_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 467, "col_offset": 4, "nodeName": "get_metric_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "get_loss_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "get_optimizer_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "get_scheduler_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 4, "nodeName": "get_decoder_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "get_encoder_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "get_iteration_strategy_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "get_transformer_backend_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "get_transformer_head_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "get_test_rerporter_class", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 543, "col_offset": 4, "nodeName": "unregister", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 0, "nodeName": "registry", "type": "Registry"}, {"lineNumber": 558, "col_offset": 11, "nodeName": "Registry", "type": "Type[Registry]"}, {"lineNumber": 564, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 390, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "wrap", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "path", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "current", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "part", "type": "Any"}, {"lineNumber": 449, "col_offset": 28, "nodeName": "obj", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "original_name", "type": "Any"}, {"lineNumber": 524, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "value", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "subname", "type": "Any"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "value", "type": "Union[Dict[Any, Union[Dict[Any, Any], Any]], Any]"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "setup_imports", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "trainer_cls", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "trainer_cls", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "builder_cls", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "builder_cls", "type": "Any"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "func", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "func", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 200, "col_offset": 55, "nodeName": "func", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 228, "col_offset": 54, "nodeName": "func", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "func", "type": "Any"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 265, "col_offset": 58, "nodeName": "func", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "func", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 281, "col_offset": 68, "nodeName": "func", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 289, "col_offset": 65, "nodeName": "func", "type": "Any"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "func", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "decoder_cls", "type": "Any"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "decoder_cls", "type": "Any"}, {"lineNumber": 357, "col_offset": 56, "nodeName": "encoder_cls", "type": "Any"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "encoder_cls", "type": "Any"}, {"lineNumber": 387, "col_offset": 56, "nodeName": "datamodule_cls", "type": "Any"}, {"lineNumber": 388, "col_offset": 19, "nodeName": "datamodule_cls", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "iteration_strategy_cls", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "iteration_strategy_cls", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 442, "col_offset": 18, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "path", "type": "Any"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "current", "type": "Dict[Any, Any]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "current", "type": "Union[Dict[Any, Union[Dict[Any, Any], Any]], Dict[Any, Any]]"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 453, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 457, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 461, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 465, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 469, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 473, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 477, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 481, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 485, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 489, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 493, "col_offset": 66, "nodeName": "name", "type": "Any"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 497, "col_offset": 67, "nodeName": "name", "type": "Any"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 501, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 505, "col_offset": 56, "nodeName": "name", "type": "Any"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "split", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 555, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "builder_cls", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "BaseDatasetBuilder", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "BaseMetric", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "Module", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "Module", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 254, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "func", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "BaseProcessor", "type": "Any"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "decoder_cls", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "TextDecoder", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "encoder_cls", "type": "Any"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "Encoder", "type": "Any"}, {"lineNumber": 384, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "datamodule_cls", "type": "Any"}, {"lineNumber": 385, "col_offset": 32, "nodeName": "LightningDataModule", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "iteration_strategy_cls", "type": "Any"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "IterationStrategy", "type": "Any"}, {"lineNumber": 441, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 442, "col_offset": 18, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 445, "col_offset": 15, "nodeName": "part", "type": "Any"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "current", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 447, "col_offset": 22, "nodeName": "current", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "get", "type": "Callable"}, {"lineNumber": 528, "col_offset": 30, "nodeName": "subname", "type": "Any"}, {"lineNumber": 528, "col_offset": 39, "nodeName": "default", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "default", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 257, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 265, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 281, "col_offset": 60, "nodeName": "name", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 289, "col_offset": 57, "nodeName": "name", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 297, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 385, "col_offset": 32, "nodeName": "pl", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 387, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "current", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 447, "col_offset": 30, "nodeName": "part", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "path", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "value", "type": "Dict[Any, Union[Dict[Any, Any], Any]]"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, Union[Dict[Any, Any], Dict[Any, Union[Dict[Any, Any], Any]]]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "part", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 485, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 493, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 501, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 533, "col_offset": 24, "nodeName": "cls", "type": "Type[Registry]"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "cls", "type": "Type[Registry]"}]