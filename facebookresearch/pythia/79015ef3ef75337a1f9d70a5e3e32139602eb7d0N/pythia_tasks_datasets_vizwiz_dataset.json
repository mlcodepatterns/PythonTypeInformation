[{"lineNumber": 11, "col_offset": 20, "nodeName": "VQA2Dataset", "type": "Type[pythia.tasks.datasets.vqa2.dataset.VQA2Dataset]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "SPELL_CHECKER_INITIAL_CAPACITY", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "MAX_EDIT_DISTANCE_DICTIONARY", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "SPELL_CHECKER_PREFIX_LENGTH", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "SPELL_CHECKER_TERM_INDEX", "type": "int"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "SPELL_CHECKER_COUNT_INDEX", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "sentence_split_regex", "type": "Pattern[str]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "use_spell_checker", "type": "bool"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "use_ocr", "type": "Union[bool, Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "copy_included", "type": "Union[bool, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "use_ocr", "type": "Union[bool, Any]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "iminfo", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "parser", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "predictions", "type": "List[Dict[str, Any]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "predictions", "type": "List[Dict[str, Any]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "imdb_file", "type": "Any"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "image_feat_directories", "type": "Any"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "use_ocr", "type": "bool"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "use_ocr", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "copy_type", "type": "bool"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "copy_type", "type": "Union[Any, bool]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "copy_included", "type": "bool"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "copy_included", "type": "Union[Any, bool]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "context_seq_shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "context_type", "type": "Any"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "max_valid_answer_length", "type": "int"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "copy_type", "type": "Union[bool, Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "use_soft_copy", "type": "bool"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "file_path", "type": "Union[Any, bool]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "use_spell_checker", "type": "bool"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "__getitem__", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "idx", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "first_element_idx", "type": "int"}, {"lineNumber": 97, "col_offset": 39, "nodeName": "idx", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "imdb", "type": "pythia.core.tasks.datasets.image_dataset.ImageDataset"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "image", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "context_seq", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "attention_supervision_org", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "final_tokens", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "final_tokens", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "context_seq", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "copy_type", "type": "Union[bool, Any]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "imdb", "type": "pythia.core.tasks.datasets.image_dataset.ImageDataset"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "load_answer", "type": "bool"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "all_answers", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "scores", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "answer_scores", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "answer_scores", "type": "Any"}, {"lineNumber": 166, "col_offset": 62, "nodeName": "scores", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "answer_scores_expanded", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "image_id", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "answer_id", "type": "Any"}, {"lineNumber": 21, "col_offset": 55, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "re", "type": "module"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "config", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "context_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_init_spell_checker", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "data_params", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "file_path", "type": "Union[bool, Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "SymSpell", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "SPELL_CHECKER_INITIAL_CAPACITY", "type": "int"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "MAX_EDIT_DISTANCE_DICTIONARY", "type": "int"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "SPELL_CHECKER_PREFIX_LENGTH", "type": "int"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "load_dictionary", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "vocab_path", "type": "Union[Any, bool]"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "SPELL_CHECKER_TERM_INDEX", "type": "int"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "SPELL_CHECKER_COUNT_INDEX", "type": "int"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "idx", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "context_seq_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "context_type", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "image", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "token_idxs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "_update_based_on_copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "idx", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "attention_supervision_org", "type": "Any"}, {"lineNumber": 135, "col_offset": 50, "nodeName": "attention_supervision", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "idx", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "iminfo", "type": "Any"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "iminfo", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "token", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "token", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "answer_count", "type": "Any"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 163, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "answer_scores_expanded", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 176, "col_offset": 60, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "answers", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "batch", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "answers", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "answer_id", "type": "Any"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "answer_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "answer", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "answer", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "VizWizDataset", "type": "Type[VizWizDataset]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "context_vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "isabs", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "file_path", "type": "Union[bool, Any]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "data_root_dir", "type": "Any"}, {"lineNumber": 80, "col_offset": 54, "nodeName": "file_path", "type": "Union[bool, Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "vocab_path", "type": "Union[Any, bool]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "spell_checker", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "VizWizDataset", "type": "Type[VizWizDataset]"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "image", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "w", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "final_tokens", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "context_seq", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "float", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "attention_supervision_org", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "all_answers", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 40, "nodeName": "sample", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "word_tokenize", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "token", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "count", "type": "Any"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "token", "type": "Any"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "answer_count", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "min", "type": "Callable"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "answer_scores", "type": "Any"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "context_max_len", "type": "Any"}, {"lineNumber": 163, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "answer_space_size", "type": "int"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "idx", "type": "int"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "idx2word", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "answer_id", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "predictions", "type": "List[Dict[str, Any]]"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "answer", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "get_dim", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "vocab_path", "type": "Union[Any, bool]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "context_len", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "all_answers", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "all_answers", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "idx", "type": "int"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "UNK_idx", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "answer_id", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "answer_dict", "type": "pythia.tasks.datasets.vqa2.utils.VocabDict"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "context_vocab", "type": "Any"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "answer_count", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "answer_dict", "type": "pythia.tasks.datasets.vqa2.utils.VocabDict"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "idx", "type": "int"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "self", "type": "VizWizDataset"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "split", "type": "Any"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "image_id", "type": "Any"}]