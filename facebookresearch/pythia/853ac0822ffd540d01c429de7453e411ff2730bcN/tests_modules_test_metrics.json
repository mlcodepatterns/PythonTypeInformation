[{"lineNumber": 13, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_caption_bleu4", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "_test_multilabel_metric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "_test_recall_at_k_metric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "_test_retrieval_recall_at_k_metric", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_micro_f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_macro_f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_binary_f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_multilabel_micro_f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_multilabel_macro_f1", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_macro_roc_auc", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "test_micro_roc_auc", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_binary_ap", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "test_recall_at_precision_k", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_micro_ap", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_macro_ap", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_recall_at_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_recall_at_5", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_recall_at_10", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_retrieval_recall_at_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_retrieval_recall_at_5", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_retrieval_recall_at_10", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "captioning_config", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "coco", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "type", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vocab_file", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "first_dimension", "type": "int"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "second_dimension", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "load_yaml", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "dataset_config", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "processors", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 26, "col_offset": 75, "nodeName": "vocab_path", "type": "str"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "CaptionProcessor", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 28, "col_offset": 52, "nodeName": "caption_processor", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "CaptionBleu4Metric", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 72, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 90, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 111, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "ones", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "first_dimension", "type": "int"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "second_dimension", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "first_dimension", "type": "int"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "second_dimension", "type": "int"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "first_dimension", "type": "int"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 136, "col_offset": 68, "nodeName": "value", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "rand", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "rand", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 146, "col_offset": 75, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "MicroF1", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "MacroF1", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "BinaryF1", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "MultiLabelMicroF1", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "MultiLabelMacroF1", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_test_multilabel_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "MacroROC_AUC", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "MicroROC_AUC", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "BinaryAP", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "RecallAtPrecisionK", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "RecallAtPrecisionK", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "RecallAtPrecisionK", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "MicroAP", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "MacroAP", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "_test_binary_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "metric", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_test_multiclass_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "RecallAt1", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "_test_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 206, "col_offset": 38, "nodeName": "metric", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "RecallAt5", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "_test_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "metric", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "RecallAt10", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_test_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "metric", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "RecallAt1_ret", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_test_retrieval_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "metric", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "RecallAt5_ret", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "_test_retrieval_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "metric", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "RecallAt10_ret", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "_test_retrieval_recall_at_k_metric", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "metric", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "path", "type": "str"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "captioning_config", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "__file__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "path", "type": "module"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "metrics", "type": "module"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "answers", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "float", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "long", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "long", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "second_dimension", "type": "int"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "j", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "metrics", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestModuleMetrics"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "caption_processor_config", "type": "Any"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "sample", "type": "Any"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 40, "col_offset": 49, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "calculate", "type": "Any"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "targets", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "j", "type": "int"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "j", "type": "int"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "metric", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "caption_bleu4", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "metric", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "second_dimension", "type": "int"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 134, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 131, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "predicted", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "i", "type": "int"}]