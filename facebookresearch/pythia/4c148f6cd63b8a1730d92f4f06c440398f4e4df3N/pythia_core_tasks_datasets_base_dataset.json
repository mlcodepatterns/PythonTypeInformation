[{"lineNumber": 11, "col_offset": 18, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "use_cuda", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "text_vocab", "type": "Optional[Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "context_vocab", "type": "Optional[Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "writer", "type": "Optional[Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "should_log", "type": "Union[Dict[Any, Any], bool]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "loss_fn", "type": "pythia.core.losses.Loss"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "last_loss", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "last_loss", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "use_cuda", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "use_cuda", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "image_feature_variables", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "image_dim_variable", "type": "None"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "image_feat_key", "type": "str"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "should_print", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "scalars", "type": "Dict[str, int]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "Meter", "type": "Type[pythia.core.meter.Meter]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "Loss", "type": "Type[pythia.core.losses.Loss]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "meter", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "loss_fn", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "batch", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "image_dims", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "use_cuda", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "tmp_image_variable", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "use_cuda", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "image_dim_variable", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "image_feature_variables", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "data", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "obs", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "should_log", "type": "Union[Dict[Any, Any], bool]"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "last_loss", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "get_dataset_type", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "meter_type", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "value", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "value", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "scalars", "type": "Dict[str, int]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "split", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "type", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "type", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "image_dims", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "image_dim_variable", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "image_feat_key", "type": "str"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "tmp_image_variable", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "tmp_image_variable", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "get_log_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "loss", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "extra_info", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "meter_types", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "meter_types", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "meter_values", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "scalars", "type": "Dict[str, int]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "writer", "type": "Optional[Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "BaseDataset", "type": "Type[BaseDataset]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "get", "type": "Callable[[Any, Any], Optional[Dict[Any, Dict[Any, Any]]]]"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "obs", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "type", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "input_text_seqs", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "input_image_features", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "batch", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "image_feature_variables", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "extra_info", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "writer", "type": "Optional[Dict[Any, Dict[Any, Any]]]"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "meter", "type": "pythia.core.meter.Meter"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "meter_type", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "Registry", "type": "Type[pythia.core.registry.Registry]"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "input_contexts", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "image_dim_variable", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "tmp_image_variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "image_feat_key", "type": "str"}, {"lineNumber": 109, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "i", "type": "int"}]