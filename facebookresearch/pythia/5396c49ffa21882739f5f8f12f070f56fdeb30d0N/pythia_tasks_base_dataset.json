[{"lineNumber": 14, "col_offset": 18, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "_name", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "_dataset_type", "type": "Any"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_global_config", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_device", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "use_cuda", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tp", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "training_parameters", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "should_log", "type": "bool"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "loss_fn", "type": "pythia.common.losses.Loss"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "loss_fn", "type": "pythia.common.losses.Loss"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "last_loss", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "should_print", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "loss", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "get", "type": "Callable"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "_global_config", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "should_not_log", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "Meter", "type": "Type[pythia.common.meter.Meter]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "_name", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "_dataset_type", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "Loss", "type": "Type[pythia.common.losses.Loss]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "to", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "_device", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_calculate_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "_calculate_loss", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "meter", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "loss_fn", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "data_root_dir", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "processor_key", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "processor_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "items", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "reg_key", "type": "str"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "reg_check", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "get_item", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "idx", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "batch", "type": "pythia.common.sample.SampleList"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "to", "type": "Union[Any, Callable[..., Any]]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "_device", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "should_log", "type": "bool"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "last_loss", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "get_dataset_type", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "meter_type", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "value", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "value", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "_device", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "tp", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "split", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "loss_fn", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "loss", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "processors", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "_name", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "processor_key", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "reg_key", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "reg_check", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "processor_object", "type": "pythia.tasks.processors.Processor"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "SampleList", "type": "Type[pythia.common.sample.SampleList]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "SampleList", "type": "Type[pythia.common.sample.SampleList]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "batch", "type": "Union[Any, pythia.common.sample.SampleList]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "get_log_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "extra_info", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "log_string", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "meter_types", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "meter_types", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "meter_values", "type": "List[int]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "scalars", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "get", "type": "Callable"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "BaseDataset", "type": "Type[BaseDataset]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "task_metrics", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "Processor", "type": "Type[pythia.tasks.processors.Processor]"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "processor_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "processor_key", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "processor_object", "type": "pythia.tasks.processors.Processor"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "reg_key", "type": "str"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "processor_object", "type": "pythia.tasks.processors.Processor"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "processor_key", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "reg_check", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "extra_info", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "writer", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "meter", "type": "pythia.common.meter.Meter"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "meter_type", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "extra_params", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "registry", "type": "pythia.common.registry.Registry"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "_name", "type": "Any"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "loss_name", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "self", "type": "BaseDataset"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "self", "type": "BaseDataset"}]