[{"lineNumber": 13, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "conv_net", "type": "pythia.modules.layers.ConvNet"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "flatten", "type": "pythia.modules.layers.Flatten"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "size_list", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "unflatten", "type": "pythia.modules.layers.UnFlatten"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "clf", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "ConvNet", "type": "Type[pythia.modules.layers.ConvNet]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "conv_net", "type": "pythia.modules.layers.ConvNet"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "Flatten", "type": "Type[pythia.modules.layers.Flatten]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "UnFlatten", "type": "Type[pythia.modules.layers.UnFlatten]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "Size", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "actual_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "ClassifierLayer", "type": "Type[pythia.modules.layers.ClassifierLayer]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "inp", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "ClassifierLayer", "type": "Type[pythia.modules.layers.ClassifierLayer]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "inp", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "ClassifierLayer", "type": "Type[pythia.modules.layers.ClassifierLayer]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "clf", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "inp", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "layers", "type": "module"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "size_list", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "Size", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "Size", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestModuleLayers"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "Size", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "flatten", "type": "pythia.modules.layers.Flatten"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "flatten", "type": "pythia.modules.layers.Flatten"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "size_list", "type": "List[int]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "mul", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "flatten", "type": "pythia.modules.layers.Flatten"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "unflatten", "type": "pythia.modules.layers.UnFlatten"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "unflatten", "type": "pythia.modules.layers.UnFlatten"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "functools", "type": "module"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "operator", "type": "module"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "size_list", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "children", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "layers", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "module", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "clf", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "module", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "module", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "clf", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 25, "col_offset": 39, "nodeName": "output", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "mlp", "type": "pythia.modules.layers.ClassifierLayer"}]