[{"lineNumber": 9, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_sample_working", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_pin_memory", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_to_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_to_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "initial", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "update_dict", "type": "Dict[str, Union[int, Dict[str, int]]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pin_list", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "non_pin_list", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "all_pinned", "type": "bool"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "pin", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "pin_list", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "any_pinned", "type": "bool"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "pin", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "non_pin_list", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "sample_dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "keys_to_assert", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "keys_to_assert", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "modified", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "modified", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "modified", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "double_modified", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "custom_batch", "type": "List[Dict[str, int]]"}, {"lineNumber": 11, "col_offset": 18, "nodeName": "Sample", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "initial", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "initial", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "y", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "update_dict", "type": "Dict[str, Union[int, Dict[str, int]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "a", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "build_random_sample_list", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pin_memory", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "y", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "all_pinned", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "all_pinned", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "any_pinned", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "any_pinned", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "build_random_sample_list", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "current", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "sample_dict", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "build_random_sample_list", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "modified", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "custom_batch", "type": "List[Dict[str, int]]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "initial", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestSample"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "z", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "all_pinned", "type": "bool"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "any_pinned", "type": "bool"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestSampleList"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "sample_dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSampleList"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "sample_dict", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "sub_keys", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "sub_key", "type": "str"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "sub_keys", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSampleList"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestSampleList"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "sample_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "test_utils", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "device", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "device", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "double_modified", "type": "Any"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "modified", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "to_device", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "custom_batch", "type": "List[Dict[str, int]]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "initial", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "sample_list", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "is_pinned", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "current", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "modified", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "modified", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "device", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "TestFunctions"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "get_device", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "device", "type": "Any"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "modified", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "pin", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "pin", "type": "Any"}, {"lineNumber": 48, "col_offset": 70, "nodeName": "is_pinned", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "all_keys", "type": "bool"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "current", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "current", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "modified", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "modified", "type": "Any"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 70, "nodeName": "pin", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "sub_key", "type": "str"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "current", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "sub_key", "type": "str"}]