[{"lineNumber": 14, "col_offset": 26, "nodeName": "MMFDatasetBuilder", "type": "Type[mmf.datasets.mmf_dataset_builder.MMFDatasetBuilder]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "HatefulMemesImageDataset", "type": "Type[mmf.datasets.builders.hateful_memes.dataset.HatefulMemesImageDataset]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "dataset_class", "type": "Type[mmf.datasets.builders.hateful_memes.dataset.HatefulMemesImageDataset]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "HatefulMemesImageDataset", "type": "Type[mmf.datasets.builders.hateful_memes.dataset.HatefulMemesImageDataset]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "use_features", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "dataset", "type": "Optional[mmf.datasets.concat_dataset.MMFConcatDataset]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dataset", "type": "Optional[mmf.datasets.concat_dataset.MMFConcatDataset]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "dataset_class", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "dataset_class", "type": "Type[mmf.datasets.builders.hateful_memes.dataset.HatefulMemesFeaturesDataset]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "HatefulMemesFeaturesDataset", "type": "Type[mmf.datasets.builders.hateful_memes.dataset.HatefulMemesFeaturesDataset]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "load", "type": "Callable[..., Optional[mmf.datasets.concat_dataset.MMFConcatDataset]]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "dataset_type", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 22, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 35, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "dataset_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "text_processor", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "Any"}]