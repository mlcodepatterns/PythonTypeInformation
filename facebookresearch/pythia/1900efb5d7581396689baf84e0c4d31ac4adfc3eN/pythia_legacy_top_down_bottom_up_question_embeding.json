[{"lineNumber": 19, "col_offset": 0, "nodeName": "build_question_encoding_module", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "Module", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "Module", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "method", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "text_out_dim", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "num_vocab", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "embedding_dim", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "batch_first", "type": "bool"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "embeded_txt", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "text_out_dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "embed_txt", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "lstm_drop", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "lstm_reshape", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "qatt_conv1", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "qatt_relu", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "qatt_conv2", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "qtt_softmax", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "qtt_feature", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "qtt_feature_concat", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "qtt_feature_concat", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "QuestionEmbeding", "type": "Type[QuestionEmbeding]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "num_vocab", "type": "Any"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "method", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 48, "col_offset": 37, "nodeName": "input_text", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "gru", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "embeded_txt", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "out", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "num_vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "embedding_init", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "input_text", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "lstm_out", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "embed_txt", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "lstm_out", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "permute", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "lstm_reshape", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "relu", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "qatt_conv1", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "qatt_relu", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "qatt_conv2", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "qtt_softmax", "type": "Any"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "lstm_drop", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "par", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "AttQuestionEmbedding", "type": "Type[AttQuestionEmbedding]"}, {"lineNumber": 23, "col_offset": 36, "nodeName": "num_vocab", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "isabs", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "embedding_file", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "load", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "embedding_file", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "input_text", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "lstm_drop", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "qtt_feature", "type": "Any"}, {"lineNumber": 23, "col_offset": 49, "nodeName": "par", "type": "Any"}, {"lineNumber": 25, "col_offset": 73, "nodeName": "method", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "QuestionEmbeding", "type": "Type[QuestionEmbeding]"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "AttQuestionEmbedding", "type": "Type[AttQuestionEmbedding]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "self", "type": "AttQuestionEmbedding"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "data_root_dir", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "embedding_init", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "QuestionEmbeding"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "AttQuestionEmbedding"}]