[{"lineNumber": 15, "col_offset": 0, "nodeName": "Adamax_par", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "lr", "type": "float"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "weight_decay", "type": "int"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "eps", "type": "float"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "OPTIMIZER", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "LOSS", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "finetune_faster_rcnn_fpn_fc7", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "weights_file", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "bias_file", "type": "str"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "default_feature", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "LSTM_hidden_size", "type": "int"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "LSTM_layer", "type": "int"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "dropout", "type": "int"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "conv1_out", "type": "int"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "conv2_out", "type": "int"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "padding", "type": "int"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "embedding_init_file", "type": "str"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "QUESTION_MODEL", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "non_linear_elmt_multiply", "type": "Any"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "dropout", "type": "int"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "order", "type": "int"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "hidden_sizes", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "dropout", "type": "float"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "pool_size", "type": "int"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "MODAL_COMBINE", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "linear_transform", "type": "Any"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "out_dim", "type": "int"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "conv_transform", "type": "Any"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "out_dim", "type": "int"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "hidden_dim", "type": "int"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "logit_classifier", "type": "Any"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "txt_hidden_dim", "type": "int"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "img_hidden_dim", "type": "int"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "weight_norm_classifier", "type": "Any"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "hidden_dim", "type": "int"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "dropout", "type": "float"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "linear_classifier", "type": "Any"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "adamax_opt", "type": "Any"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "lr", "type": "float"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "weight_decay", "type": "int"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "eps", "type": "float"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "Adamax_par", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "Adamax_par", "type": "Any"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "Adamax_par", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "Adamax_par", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "finetune_faster_rcnn_fpn_fc7", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "finetune_faster_rcnn_fpn_fc7", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 40, "col_offset": 36, "nodeName": "finetune_faster_rcnn_fpn_fc7", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "default_feature", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "att_que_embed", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "non_linear_elmt_multiply", "type": "Any"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "non_linear_elmt_multiply", "type": "Any"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "non_linear_elmt_multiply", "type": "Any"}, {"lineNumber": 79, "col_offset": 78, "nodeName": "MFH", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "linear_transform", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "conv_transform", "type": "Any"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "conv_transform", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "logit_classifier", "type": "Any"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "logit_classifier", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "weight_norm_classifier", "type": "Any"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "weight_norm_classifier", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "adamax_opt", "type": "Any"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "adamax_opt", "type": "Any"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "adamax_opt", "type": "Any"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "linear_transform", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "conv_transform", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "logit_classifier", "type": "Any"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "adamax_opt", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "weight_norm_classifier", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "linear_classifier", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "IMMUTABLE", "type": "str"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "AttrDict", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "MODAL_COMBINE", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "MODAL_COMBINE", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "QUESTION_MODEL", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "IMAGE_FEATURE_MODEL", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "IMAGE_FEATURE_MODEL", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "par", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "MODEL_TYPE_PAR_DICT", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "MODEL_TYPE_PAR_DICT", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "updated_pair_type", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "method", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "method", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "updated_pair_type", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "par", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "method", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "MODEL_TYPE_PAR_DICT", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "IMMUTABLE", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "ModelParPair", "type": "Type[ModelParPair]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "self", "type": "ModelParPair"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "method", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "ModelParPair", "type": "Type[ModelParPair]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "self", "type": "ModelParPair"}]