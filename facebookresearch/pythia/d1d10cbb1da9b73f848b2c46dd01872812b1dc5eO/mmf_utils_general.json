[{"lineNumber": 15, "col_offset": 0, "nodeName": "lr_lambda_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "clip_gradients", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "ckpt_name_from_core_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "foldername_from_config_override", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "get_mmf_root", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "get_absolute_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "get_optimizer_parameters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 0, "nodeName": "dict_to_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "get_overlap_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 0, "nodeName": "updir", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "print_cuda_usage", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "get_current_tensors", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "get_batch_size", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "print_model_parameters", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 0, "nodeName": "get_sizes_list", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 0, "nodeName": "get_chunks", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "seed", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "ckpt_name", "type": "str"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "ckpt_name", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "cfg_override", "type": "None"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 133, "col_offset": 7, "nodeName": "has_custom", "type": "bool"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "overlap", "type": "float"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "d", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "total_params", "type": "Any"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "trained_params", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "begin", "type": "int"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "training", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "training", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "training", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "seed", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ckpt_name", "type": "str"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "config_override", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mmf_root", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "mmf_root", "type": "str"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "paths", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "possible_paths", "type": "List[Union[Any, str]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "user_dir", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "user_dir", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "path", "type": "Union[Any, str]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "possible_paths", "type": "List[Union[Any, str]]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "paths", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "is_parallel", "type": "bool"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 148, "col_offset": 7, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "val", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "temp", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "target", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "temp", "type": "Any"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "n", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "get_objects", "type": "Callable[[], List[Any]]"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "get_global_config", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "get_world_size", "type": "Callable[[], Any]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 230, "col_offset": 25, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "return_only", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "total_params", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "trained_params", "type": "Any"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "chunks", "type": "Any"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "chunks", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "dim", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "n_miss", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "j", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "begin", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "s", "type": "Any"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "use_warmup", "type": "Any"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "warmup_iterations", "type": "Any"}, {"lineNumber": 18, "col_offset": 60, "nodeName": "alpha", "type": "float"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "bisect", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "lr_steps", "type": "Any"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "pow", "type": "Callable"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "lr_ratio", "type": "Any"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "idx", "type": "int"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "norm", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "cfg_override", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "register", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "mmf_root", "type": "str"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "isabs", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "paths", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "paths", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "paths", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "get_mmf_env", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "get_mmf_root", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "paths", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "DataParallel", "type": "Any"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "DistributedDataParallel", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "get_optimizer_parameters", "type": "Any"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "config", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 182, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "target", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "overlap", "type": "int"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "ret_val", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "gc", "type": "module"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 225, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 57, "nodeName": "dim", "type": "Any"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 7, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "n_miss", "type": "Any"}, {"lineNumber": 259, "col_offset": 34, "nodeName": "dim", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "narrow", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "begin", "type": "int"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "training", "type": "Any"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "training", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "warmup_iterations", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "warmup_factor", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "training", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "training", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "clip_grad_norm_", "type": "Any"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "writer", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "question_embedding", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "question_embedding_module", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "norm", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "args", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "cfg_override", "type": "Optional[Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "__file__", "type": "str"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "mmf_root", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "registry", "type": "mmf.common.registry.Registry"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "possible_paths", "type": "List[Union[Any, str]]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "paths", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "possible_paths", "type": "List[Union[Any, str]]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "mmf_root", "type": "Any"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "paths", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "exists", "type": "Callable[[str], bool]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "path", "type": "Union[Any, str]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "abc", "type": "module"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 136, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "parallel", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "module", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "item", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "target", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "memory_allocated", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "max_memory_allocated", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "memory_cached", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "max_memory_cached", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 227, "col_offset": 50, "nodeName": "world_size", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "numel", "type": "Any"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "numel", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 238, "col_offset": 66, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "writer", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "total_params", "type": "Any"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "trained_params", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "chunks", "type": "Any"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "sizes_list", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "training", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 18, "col_offset": 51, "nodeName": "alpha", "type": "float"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 33, "col_offset": 56, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "module", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "clip_grad_norm", "type": "Any"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "max_grad_l2_norm", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "writer", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "possible_paths", "type": "List[Union[Any, str]]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "user_dir", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "paths", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "PathManager", "type": "Type[mmf.utils.file_io.PathManager]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "path", "type": "Union[Any, str]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "collections", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "get_absolute_path", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "path", "type": "Any"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "path", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "paths", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "overlap", "type": "int"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "obj", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "p", "type": "Any"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 238, "col_offset": 66, "nodeName": "p", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 33, "col_offset": 49, "nodeName": "norm", "type": "Any"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "utils", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "add_scalars", "type": "Any"}, {"lineNumber": 41, "col_offset": 65, "nodeName": "i_iter", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "clip_norm_mode", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "folder_name", "type": "str"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "find", "type": "Union[Any, Callable[..., int]]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "path", "type": "Union[Any, str]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 210, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "obj", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "question_embedding", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "writer", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "norm", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "path", "type": "Union[Any, str]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "obj", "type": "Any"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "obj", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "os", "type": "module"}]