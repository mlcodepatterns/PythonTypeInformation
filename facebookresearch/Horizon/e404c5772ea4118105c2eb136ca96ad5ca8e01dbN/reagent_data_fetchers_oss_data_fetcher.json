[{"lineNumber": 53, "col_offset": 0, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, int, float], Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "hash_mdp_id_and_subsample", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "make_get_step_udf", "type": "Callable[[Optional[int]], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "make_where_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "make_existence_bitvector_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "misc_column_preprocessing", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 356, "col_offset": 0, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "infer_states_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 377, "col_offset": 0, "nodeName": "infer_action_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 386, "col_offset": 0, "nodeName": "infer_metrics_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 394, "col_offset": 0, "nodeName": "rand_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 404, "col_offset": 0, "nodeName": "upload_as_parquet", "type": "Callable[[Any], reagent.core.types.Dataset]"}, {"lineNumber": 476, "col_offset": 0, "nodeName": "collate_and_preprocess", "type": "Callable[[reagent.preprocessing.batch_preprocessor.BatchPreprocessor, bool], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "UPLOAD_PARQUET_TMP_SUFFIX_LEN", "type": "int"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "MAX_UPLOAD_PARQUET_TRIES", "type": "int"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "Dataset", "type": "Type[reagent.core.types.Dataset]"}, {"lineNumber": 435, "col_offset": 5, "nodeName": "Dataset", "type": "Type[reagent.core.types.Dataset]"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "DataFetcher", "type": "Type[reagent.data_fetchers.data_fetcher.DataFetcher]"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "expr", "type": "str"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 105, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "default", "type": "List[int]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "next_long_arr_udf", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 334, "col_offset": 7, "nodeName": "discrete_action", "type": "bool"}, {"lineNumber": 347, "col_offset": 7, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 361, "col_offset": 7, "nodeName": "is_col_arr_map", "type": "Any"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "next_states_is_col_arr_map", "type": "bool"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "action_keys", "type": "Any"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "next_action_is_col_arr_map", "type": "bool"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "is_col_arr_map", "type": "bool"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "r", "type": "random.SystemRandom"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "letters", "type": "str"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "ascii_lowercase", "type": "str"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "success", "type": "bool"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 421, "col_offset": 4, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 455, "col_offset": 7, "nodeName": "discrete_action", "type": "bool"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "collate_fn", "type": "Callable[[List[Dict[Any, Any]]], Any]"}, {"lineNumber": 521, "col_offset": 9, "nodeName": "EvaluationDataPage", "type": "Type[reagent.evaluation.evaluation_data_page.EvaluationDataPage]"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "withColumnRenamed", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "expr", "type": "str"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "StructType", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "possible_keys", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "udf", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "sparse2dense", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "col_name", "type": "str"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "col_name", "type": "str"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "get_step", "type": "Callable[[List[Any]], Any]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "get_next", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "find", "type": "Callable[[str], Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "encode", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 232, "col_offset": 54, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 233, "col_offset": 42, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "make_where_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 253, "col_offset": 31, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "make_not_terminal_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 266, "col_offset": 45, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 270, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "make_existence_bitvector_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 271, "col_offset": 59, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 293, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "make_not_terminal_udf", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 306, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 307, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 307, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 312, "col_offset": 64, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "select", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "select", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "collect", "type": "Any"}, {"lineNumber": 369, "col_offset": 17, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 391, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "SystemRandom", "type": "Type[random.SystemRandom]"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "string", "type": "module"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 408, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 410, "col_offset": 19, "nodeName": "MAX_UPLOAD_PARQUET_TRIES", "type": "int"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "suffix", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "rand_name", "type": "str"}, {"lineNumber": 416, "col_offset": 11, "nodeName": "success", "type": "bool"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "saveAsTable", "type": "Any"}, {"lineNumber": 420, "col_offset": 65, "nodeName": "rand_name", "type": "str"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "get_table_url", "type": "Callable[[str], str]"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "rand_name", "type": "str"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 11, "nodeName": "OssDataset", "type": "Type[reagent.core.types.OssDataset]"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 440, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 441, "col_offset": 9, "nodeName": "set_reward_col_as_reward", "type": "Callable[..., Any]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "hash_mdp_id_and_subsample", "type": "Callable[..., Any]"}, {"lineNumber": 447, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 448, "col_offset": 9, "nodeName": "misc_column_preprocessing", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 449, "col_offset": 9, "nodeName": "state_and_metrics_sparse2dense", "type": "Callable[[Any, List[int], List[str], Optional[int]], Any]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 9, "nodeName": "select_relevant_columns", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "upload_as_parquet", "type": "Callable[[Any], reagent.core.types.Dataset]"}, {"lineNumber": 473, "col_offset": 29, "nodeName": "df", "type": "Any"}, {"lineNumber": 476, "col_offset": 47, "nodeName": "BatchPreprocessor", "type": "Type[reagent.preprocessing.batch_preprocessor.BatchPreprocessor]"}, {"lineNumber": 476, "col_offset": 75, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 505, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "spark", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "calc_cpe_in_training", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "device", "type": "str"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "eval_data", "type": "None"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 69, "col_offset": 67, "nodeName": "gamma", "type": "float"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "crc32", "type": "Any"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "filter", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "col_name", "type": "str"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "col", "type": "Any"}, {"lineNumber": 142, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 192, "col_offset": 37, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 204, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 208, "col_offset": 36, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "col", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "List", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 228, "col_offset": 46, "nodeName": "MapType", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 254, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 255, "col_offset": 47, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 256, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "udf", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "get_not_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 267, "col_offset": 39, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 270, "col_offset": 51, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 275, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "MapType", "type": "Any"}, {"lineNumber": 293, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 293, "col_offset": 38, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "udf", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "get_not_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "discrete_action", "type": "bool"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "select_col_list", "type": "List[Any]"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "select", "type": "Any"}, {"lineNumber": 363, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "explode", "type": "Any"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 372, "col_offset": 50, "nodeName": "next_states_is_col_arr_map", "type": "bool"}, {"lineNumber": 377, "col_offset": 40, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 379, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "next_action_is_col_arr_map", "type": "bool"}, {"lineNumber": 386, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "rand_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "success", "type": "bool"}, {"lineNumber": 417, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 440, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 443, "col_offset": 33, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 447, "col_offset": 52, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 448, "col_offset": 51, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "actions", "type": "Optional[List[str]]"}, {"lineNumber": 458, "col_offset": 13, "nodeName": "discrete_action_preprocessing", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "infer_action_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 460, "col_offset": 37, "nodeName": "df", "type": "Any"}, {"lineNumber": 460, "col_offset": 41, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 461, "col_offset": 13, "nodeName": "parametric_action_preprocessing", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "discrete_action", "type": "bool"}, {"lineNumber": 471, "col_offset": 33, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "decimal_friendly_collate", "type": "Any"}, {"lineNumber": 483, "col_offset": 41, "nodeName": "batch_list", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 484, "col_offset": 29, "nodeName": "batch_preprocessor", "type": "reagent.preprocessing.batch_preprocessor.BatchPreprocessor"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "batch", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "query_data", "type": "Callable[..., reagent.core.types.Dataset]"}, {"lineNumber": 497, "col_offset": 15, "nodeName": "query_data", "type": "Callable[..., reagent.core.types.Dataset]"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "identify_normalization_parameters", "type": "Callable[..., Dict[int, reagent.parameters.NormalizationParameters]]"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "table_spec", "type": "reagent.core.types.TableSpec"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "column_name", "type": "str"}, {"lineNumber": 507, "col_offset": 37, "nodeName": "preprocessing_options", "type": "reagent.core.types.PreprocessingOptions"}, {"lineNumber": 507, "col_offset": 60, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 510, "col_offset": 43, "nodeName": "OssDataset", "type": "Type[reagent.core.types.OssDataset]"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "count", "type": "Any"}, {"lineNumber": 516, "col_offset": 17, "nodeName": "RLTrainer", "type": "Type[reagent.training.rl_trainer_pytorch.RLTrainer]"}, {"lineNumber": 517, "col_offset": 22, "nodeName": "Dataset", "type": "Type[reagent.core.types.Dataset]"}, {"lineNumber": 518, "col_offset": 28, "nodeName": "BatchPreprocessor", "type": "Type[reagent.preprocessing.batch_preprocessor.BatchPreprocessor]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 520, "col_offset": 24, "nodeName": "ReaderOptions", "type": "Type[reagent.core.types.ReaderOptions]"}, {"lineNumber": 523, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 523, "col_offset": 22, "nodeName": "trainer", "type": "reagent.training.rl_trainer_pytorch.RLTrainer"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "trainer", "type": "reagent.training.rl_trainer_pytorch.RLTrainer"}, {"lineNumber": 530, "col_offset": 27, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 536, "col_offset": 13, "nodeName": "reader", "type": "Any"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 537, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 547, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "compute_values", "type": "Any"}, {"lineNumber": 548, "col_offset": 45, "nodeName": "gamma", "type": "float"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "validate", "type": "Any"}, {"lineNumber": 554, "col_offset": 17, "nodeName": "Dataset", "type": "Type[reagent.core.types.Dataset]"}, {"lineNumber": 555, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 558, "col_offset": 24, "nodeName": "ReaderOptions", "type": "Type[reagent.core.types.ReaderOptions]"}, {"lineNumber": 561, "col_offset": 22, "nodeName": "make_batch_reader", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "parquet_url", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "data_reader", "type": "Any"}, {"lineNumber": 576, "col_offset": 30, "nodeName": "ReaderOptions", "type": "Type[reagent.core.types.ReaderOptions]"}, {"lineNumber": 576, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "custom_reward_expression", "type": "str"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "drop", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, int, float], Any]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "col_name", "type": "str"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "min", "type": "Callable"}, {"lineNumber": 155, "col_offset": 59, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "item", "type": "str"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 185, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "default", "type": "List[int]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "target", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "make_get_step_udf", "type": "Callable[[Optional[int]], Any]"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 217, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 228, "col_offset": 54, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 228, "col_offset": 66, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 238, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 258, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 270, "col_offset": 61, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "next_long_arr_udf", "type": "Any"}, {"lineNumber": 292, "col_offset": 54, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 292, "col_offset": 66, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 321, "col_offset": 44, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 323, "col_offset": 49, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 330, "col_offset": 28, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "cast", "type": "Any"}, {"lineNumber": 362, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "alias", "type": "Any"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "map_keys", "type": "Any"}, {"lineNumber": 363, "col_offset": 36, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "flatMap", "type": "Any"}, {"lineNumber": 367, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 374, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "next_state_keys", "type": "Any"}, {"lineNumber": 377, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "action_keys", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "next_action_keys", "type": "Any"}, {"lineNumber": 386, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 391, "col_offset": 66, "nodeName": "is_col_arr_map", "type": "bool"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 401, "col_offset": 28, "nodeName": "letters", "type": "str"}, {"lineNumber": 401, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 411, "col_offset": 36, "nodeName": "UPLOAD_PARQUET_TMP_SUFFIX_LEN", "type": "int"}, {"lineNumber": 412, "col_offset": 35, "nodeName": "suffix", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "tableExists", "type": "Any"}, {"lineNumber": 413, "col_offset": 52, "nodeName": "rand_name", "type": "str"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "format", "type": "Any"}, {"lineNumber": 422, "col_offset": 36, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 440, "col_offset": 37, "nodeName": "table", "type": "str"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "infer_states_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 451, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "infer_metrics_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 452, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 452, "col_offset": 40, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 458, "col_offset": 55, "nodeName": "actions", "type": "Optional[List[str]]"}, {"lineNumber": 458, "col_offset": 76, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 482, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 504, "col_offset": 14, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 505, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "NormalizationParameters", "type": "Type[reagent.parameters.NormalizationParameters]"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "SACTrainer", "type": "Type[reagent.training.sac_trainer.SACTrainer]"}, {"lineNumber": 523, "col_offset": 44, "nodeName": "TD3Trainer", "type": "Type[reagent.training.td3_trainer.TD3Trainer]"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "make_batch_reader", "type": "Any"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "parquet_url", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "tensor_batch", "type": "Any"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "tdp", "type": "reagent.core.types.PreprocessedTrainingBatch"}, {"lineNumber": 547, "col_offset": 20, "nodeName": "eval_data", "type": "None"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 548, "col_offset": 45, "nodeName": "trainer", "type": "reagent.training.rl_trainer_pytorch.RLTrainer"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "eval_data", "type": "Any"}, {"lineNumber": 556, "col_offset": 28, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "dataset", "type": "reagent.core.types.Dataset"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "petastorm_reader_pool_type", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 108, "col_offset": 74, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "col_name", "type": "str"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "col_name", "type": "str"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "col", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 320, "col_offset": 45, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 321, "col_offset": 54, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 322, "col_offset": 50, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 323, "col_offset": 59, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 330, "col_offset": 38, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 331, "col_offset": 47, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 337, "col_offset": 36, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 341, "col_offset": 31, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 349, "col_offset": 46, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 350, "col_offset": 51, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "rdd", "type": "Any"}, {"lineNumber": 364, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "r", "type": "random.SystemRandom"}, {"lineNumber": 401, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 401, "col_offset": 52, "nodeName": "length", "type": "int"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "_jcatalog", "type": "Any"}, {"lineNumber": 417, "col_offset": 53, "nodeName": "MAX_UPLOAD_PARQUET_TRIES", "type": "int"}, {"lineNumber": 440, "col_offset": 37, "nodeName": "input_table_spec", "type": "reagent.core.types.TableSpec"}, {"lineNumber": 482, "col_offset": 36, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "parquet", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "eval_dataset", "type": "reagent.core.types.Dataset"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "petastorm_reader_pool_type", "type": "Any"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "isinstance_namedtuple", "type": "Callable[[Any], bool]"}, {"lineNumber": 538, "col_offset": 49, "nodeName": "batch", "type": "Any"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "dict_to_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 53, "nodeName": "batch_preprocessor", "type": "reagent.preprocessing.batch_preprocessor.BatchPreprocessor"}, {"lineNumber": 540, "col_offset": 72, "nodeName": "tensor_batch", "type": "Any"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "create_from_training_batch", "type": "Callable[..., Any]"}, {"lineNumber": 541, "col_offset": 68, "nodeName": "tdp", "type": "reagent.core.types.PreprocessedTrainingBatch"}, {"lineNumber": 541, "col_offset": 73, "nodeName": "trainer", "type": "reagent.training.rl_trainer_pytorch.RLTrainer"}, {"lineNumber": 556, "col_offset": 37, "nodeName": "BatchPreprocessor", "type": "Type[reagent.preprocessing.batch_preprocessor.BatchPreprocessor]"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "reader_options", "type": "reagent.core.types.ReaderOptions"}, {"lineNumber": 570, "col_offset": 23, "nodeName": "collate_and_preprocess", "type": "Callable[[reagent.preprocessing.batch_preprocessor.BatchPreprocessor, bool], Any]"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 108, "col_offset": 57, "nodeName": "col", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 194, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 341, "col_offset": 41, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 342, "col_offset": 46, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 343, "col_offset": 50, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 344, "col_offset": 55, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 349, "col_offset": 56, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "col", "type": "Any"}, {"lineNumber": 350, "col_offset": 61, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "explode", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "catalog", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "mode", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "read", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "dataset", "type": "reagent.core.types.OssDataset"}, {"lineNumber": 535, "col_offset": 29, "nodeName": "reader_options", "type": "reagent.core.types.ReaderOptions"}, {"lineNumber": 538, "col_offset": 23, "nodeName": "rlt", "type": "module"}, {"lineNumber": 539, "col_offset": 46, "nodeName": "_asdict", "type": "Any"}, {"lineNumber": 539, "col_offset": 70, "nodeName": "device", "type": "str"}, {"lineNumber": 541, "col_offset": 22, "nodeName": "EvaluationDataPage", "type": "Type[reagent.evaluation.evaluation_data_page.EvaluationDataPage]"}, {"lineNumber": 571, "col_offset": 35, "nodeName": "batch_preprocessor", "type": "Optional[reagent.preprocessing.batch_preprocessor.BatchPreprocessor]"}, {"lineNumber": 571, "col_offset": 63, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 88, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 167, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "spark", "type": "Any"}, {"lineNumber": 539, "col_offset": 46, "nodeName": "batch", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "df", "type": "Any"}]