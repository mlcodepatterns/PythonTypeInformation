[{"lineNumber": 15, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "TestType", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 335, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "Union", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "TypeWrapper", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Any]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tuple_int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "tuple_int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tuple_int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "tuple_float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tuple_float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "tuple_float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "TypeWrapper", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Any]]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "TypeWrapper", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Any]]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "items", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "key", "type": "reagent.ope.estimators.types.TypeWrapper[Tuple[float]]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "Distribution", "type": "Type[reagent.ope.estimators.types.ActionDistribution]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "total", "type": "int"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "TestType", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "tuple_int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "tuple_int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "tuple_int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "tuple_int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "tuple_float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "tuple_float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "tuple_float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "tuple_float_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "ndarray_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "TestClass", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Union[int, Tuple[int], float, Tuple[float], numpy.ndarray, Any]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "tensor_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "TestIntKeyValues", "type": "Type[Any]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "TestTupleFloatKeyValues", "type": "Type[Any]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "TestIntKeyValues", "type": "Type[Any]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "TestIntKeyValues", "type": "Type[Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "values", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "sort", "type": "Callable"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "values", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "sort", "type": "Callable"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "values", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "sort", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "values", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "sort", "type": "Callable"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "keys", "type": "Sequence[nothing]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "items", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "copy", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "copy", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "copy", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "copy", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "copy", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 61, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 56, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 282, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "k", "type": "int"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "TestIntKeyDistribution", "type": "Type[Any]"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "TestIntKeyDistribution", "type": "Type[Any]"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "TestIntKeyDistribution", "type": "Type[Any]"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "TestIntKeyDistribution", "type": "Type[Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "Distribution", "type": "Type[reagent.ope.estimators.types.ActionDistribution]"}, {"lineNumber": 317, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "total", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "_test_sample", "type": "Callable[[reagent.ope.estimators.types.ActionDistribution], Any]"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "_tensor_distribution", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "_test_sample", "type": "Callable[[reagent.ope.estimators.types.ActionDistribution], Any]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "_array_distribution", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "_test_sample", "type": "Callable[[reagent.ope.estimators.types.ActionDistribution], Any]"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "_list_distribution", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "_test_sample", "type": "Callable[[reagent.ope.estimators.types.ActionDistribution], Any]"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "_map_distribution", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 71, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "tuple_int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "tuple_float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "int_val_other", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "_test_list", "type": "List[int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 93, "col_offset": 43, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "TestTypes", "type": "Type[TestTypes]"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "equal", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "equal", "type": "Any"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "_int_float_values", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "key", "type": "reagent.ope.estimators.types.TypeWrapper[Tuple[float]]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "_tuple_float_float_values", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "_int_array_values", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 254, "col_offset": 28, "nodeName": "copy", "type": "Any"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "_int_tensor_values", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "double", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 52, "nodeName": "float64", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "equal", "type": "Any"}, {"lineNumber": 262, "col_offset": 70, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 74, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 74, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 273, "col_offset": 76, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 275, "col_offset": 69, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "to_sequence", "type": "Any"}, {"lineNumber": 276, "col_offset": 44, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "to_sequence", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "to_sequence", "type": "Any"}, {"lineNumber": 278, "col_offset": 44, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "TestDistribution", "type": "Type[TestDistribution]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 290, "col_offset": 35, "nodeName": "TestDistribution", "type": "Type[TestDistribution]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "TestDistribution", "type": "Type[TestDistribution]"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "TestDistribution", "type": "Type[TestDistribution]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "equal", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "values", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "_list_distribution", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "_map_distribution", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "total", "type": "int"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "total", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 321, "col_offset": 43, "nodeName": "total", "type": "int"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "total", "type": "int"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "greedy", "type": "Callable"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "greedy", "type": "Callable"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "greedy", "type": "Callable"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "greedy", "type": "Callable"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 71, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "tuple_int_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "tuple_float_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "ndarray_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TestTypes"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "tensor_val", "type": "reagent.ope.estimators.types.TypeWrapper[Any]"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "key", "type": "reagent.ope.estimators.types.TypeWrapper[Tuple[float]]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 244, "col_offset": 70, "nodeName": "key", "type": "reagent.ope.estimators.types.TypeWrapper[Tuple[float]]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "self", "type": "TestValues"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 259, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "to_tensor", "type": "Any"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "to_tensor", "type": "Any"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "to_tensor", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "to_ndarray", "type": "Any"}, {"lineNumber": 271, "col_offset": 57, "nodeName": "float_list_val", "type": "List[float]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "to_ndarray", "type": "Any"}, {"lineNumber": 273, "col_offset": 45, "nodeName": "tensor_val", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "to_ndarray", "type": "Any"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "array_val", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "_tensor_distribution", "type": "Any"}, {"lineNumber": 303, "col_offset": 50, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "_array_distribution", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 320, "col_offset": 31, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "counts", "type": "List[Union[int, Any]]"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "_tensor_distribution", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "_array_distribution", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "_list_distribution", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "_map_distribution", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "k", "type": "int"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "__name__", "type": "str"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "TestIntType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[int]]"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 231, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 262, "col_offset": 55, "nodeName": "double", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 266, "col_offset": 59, "nodeName": "double", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "double", "type": "Any"}, {"lineNumber": 271, "col_offset": 39, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 273, "col_offset": 63, "nodeName": "float64", "type": "Any"}, {"lineNumber": 275, "col_offset": 39, "nodeName": "Values", "type": "Type[reagent.ope.estimators.types.Values]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 303, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 25, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "self", "type": "TestDistribution"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "TestTupleFloatType", "type": "Type[reagent.ope.estimators.types.TypeWrapper[Tuple[float]]]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 262, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 266, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 273, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "sample", "type": "Callable"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "TestValues", "type": "Type[TestValues]"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "distribution", "type": "reagent.ope.estimators.types.ActionDistribution"}]