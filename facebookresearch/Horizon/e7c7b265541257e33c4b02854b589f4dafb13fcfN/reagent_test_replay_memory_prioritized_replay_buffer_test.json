[{"lineNumber": 26, "col_offset": 0, "nodeName": "SCREEN_SIZE", "type": "Tuple[int, int]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "dummy", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "index", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "priorities", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "fetched_priorities", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "samples", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "PrioritizedReplayBuffer", "type": "Type[reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "SCREEN_SIZE", "type": "Tuple[int, int]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "SCREEN_SIZE", "type": "Tuple[int, int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "dummy", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "action", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "reward", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "priority", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "SCREEN_SIZE", "type": "Tuple[int, int]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "add_count", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "index", "type": "int"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "arange", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "set_priority", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "indices", "type": "Any"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "priorities", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "get_priority", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "create_default_memory", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "PrioritizedReplayBuffer", "type": "Type[reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "SCREEN_SIZE", "type": "Tuple[int, int]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "sample_index_batch", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "prioritized_replay_buffer", "type": "module"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "cursor", "type": "Callable[[], int]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "cursor", "type": "Callable[[], int]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Callable"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "get_priority", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "index", "type": "int"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "get_priority", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "int32", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "indices", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "flip", "type": "Any"}, {"lineNumber": 95, "col_offset": 57, "nodeName": "indices", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "sample_transition_batch", "type": "Callable[..., Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "sample_index_batch", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "prioritized_replay_buffer", "type": "module"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "add_blank", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "cursor", "type": "Callable[[], int]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "sample", "type": "Any"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "sample", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "get", "type": "Callable[[int], float]"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "priorities", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "fetched_priorities", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "get_priority", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "PrioritizedReplayBufferTest"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "REPLAY_CAPACITY", "type": "int"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "memory", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "sum_tree", "type": "reagent.replay_memory.sum_tree.SumTree"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "index", "type": "int"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "memory", "type": "reagent.replay_memory.prioritized_replay_buffer.PrioritizedReplayBuffer"}, {"lineNumber": 97, "col_offset": 80, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "index", "type": "int"}, {"lineNumber": 102, "col_offset": 69, "nodeName": "int32", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 97, "col_offset": 63, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 102, "col_offset": 69, "nodeName": "np", "type": "module"}]