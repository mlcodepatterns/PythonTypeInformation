[{"lineNumber": 92, "col_offset": 0, "nodeName": "log_data_post_step", "type": "Callable[[reagent.training.rl_dataset.RLDataset, str, Any], Callable[[Any, Any, float, bool, float], None]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "PostStep", "type": "Type[Callable[[Any, Any, float, bool, float], None]]"}, {"lineNumber": 92, "col_offset": 73, "nodeName": "PostStep", "type": "Type[Callable[[Any, Any, float, bool, float], None]]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "post_step", "type": "Callable[[Any, Any, float, bool, float], None]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "_num_steps", "type": "int"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "post_step", "type": "Callable[[Any, Any, float, bool, float], None]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "post_step", "type": "Callable[[numpy.ndarray, Any, float, bool, float], None]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "ReplayBuffer", "type": "Type[reagent.replay_memory.circular_replay_buffer.ReplayBuffer]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "Env", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "replay_buffer_inserter", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "replay_buffer_inserter", "type": "Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "device", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "trainer_preprocessor", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "replay_buffer_inserter", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "replay_buffer_inserter", "type": "Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_num_steps", "type": "int"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "RLDataset", "type": "Type[reagent.training.rl_dataset.RLDataset]"}, {"lineNumber": 92, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "Env", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "num_actions", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "n", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "possible_actions_mask", "type": "None"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "possible_actions", "type": "None"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "time_diff", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "reward", "type": "float"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "gym", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "make_replay_buffer_inserter", "type": "Callable[[Any], Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]]"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "Any", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "Any", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 35, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "replay_buffer_inserter", "type": "Union[Any, Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "action", "type": "Any"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "reward", "type": "float"}, {"lineNumber": 37, "col_offset": 67, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 37, "col_offset": 77, "nodeName": "log_prob", "type": "float"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "device", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "make_replay_buffer_trainer_preprocessor", "type": "Callable[[reagent.training.trainer.Trainer, Any, Any], Callable[[Any], Any]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "trainer", "type": "reagent.training.trainer.Trainer"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "device", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "make_replay_buffer_inserter", "type": "Callable[[Any], Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]]"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "Any", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "Any", "type": "Any"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 73, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "replay_buffer_inserter", "type": "Union[Any, Callable[[reagent.replay_memory.circular_replay_buffer.ReplayBuffer, Any, Any, float, bool, float], None]]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "action", "type": "Any"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "reward", "type": "float"}, {"lineNumber": 77, "col_offset": 67, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 77, "col_offset": 77, "nodeName": "log_prob", "type": "float"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "gym", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "Any", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 100, "col_offset": 79, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "action", "type": "str"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "reward", "type": "float"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "insert_pre_timeline_format", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], None]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "_num_steps", "type": "int"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "training_freq", "type": "int"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "size", "type": "int"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "sample_transition_batch_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "trainer_preprocessor", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 84, "col_offset": 54, "nodeName": "train_batch", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "train", "type": "Callable[[reagent.types.PreprocessedTrainingBatch], None]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "preprocessed_batch", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "gym", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "action", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "to", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "bool", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "Box", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "action", "type": "Dict[int, float]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "dataset", "type": "reagent.training.rl_dataset.RLDataset"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "mdp_id", "type": "str"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "obs", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "reward", "type": "float"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "possible_actions", "type": "None"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "time_diff", "type": "int"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "trainer", "type": "reagent.training.trainer.Trainer"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "gym", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "action", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "exp", "type": "Any"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "log_prob", "type": "float"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "full", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "gym", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "num_actions", "type": "Any"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "action", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "env", "type": "Any"}]