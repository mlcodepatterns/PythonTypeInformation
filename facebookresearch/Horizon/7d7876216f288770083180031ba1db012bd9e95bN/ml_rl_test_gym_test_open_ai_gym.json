[{"lineNumber": 11, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "base_config_dict", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "run_gym", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "parameters_string", "type": "Any"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "score_bar", "type": "Any"}, {"lineNumber": 13, "col_offset": 56, "nodeName": "USE_CPU", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 40, "nodeName": "score_bar", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "_get_base_test_config", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "_get_base_test_config", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "_get_base_test_config", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "_get_base_test_config", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "results", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "self", "type": "TestOpenAIGym"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, int], Dict[str, Union[float, str, int, List[str], List[int]]], Dict[str, Union[float, int]], str]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestOpenAIGym"}]