[{"lineNumber": 27, "col_offset": 0, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "state", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "q_values", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "states", "type": "List[Dict[str, float]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "next_states", "type": "List[Dict[str, float]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "lengths", "type": "List[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "num_cheats", "type": "List[int]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "num_cheat", "type": "int"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "solved_in", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "next_action", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "cheat_ratio", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "collections", "type": "module"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "num_states", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "predict", "type": "Callable[..., List[Dict[Any, Any]]]"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "action", "type": "str"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "next_action", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "reward", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "next_action", "type": "str"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "solved_in", "type": "int"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "IterationResult", "type": "Type[`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "states", "type": "List[Dict[str, float]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "next_states", "type": "List[Dict[str, float]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "lengths", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "cheat_ratio", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "num_iterations", "type": "int"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "target_cheat_percentage", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "num_iterations", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "updates_per_iteration", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "iteration", "type": "int"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "epsilon", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "next_state", "type": "int"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "reward", "type": "float"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "step", "type": "Callable[..., Tuple[int, float, bool, List[str]]]"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "action", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "action", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "next_state", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "next_action", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "num_cheat", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "reward", "type": "float"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "next_action", "type": "str"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "solved_in", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "num_cheat", "type": "int"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "LimitedActionGridworld", "type": "Type[ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "RLParameters", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "RLParameters", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "RLParameters", "type": "Any"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "RLParameters", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "DiscreteActionModelParameters", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "DiscreteActionTrainer", "type": "Type[ml.rl.training.discrete_action_trainer.DiscreteActionTrainer]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "q_learning_parameters", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "predictor", "type": "Callable[[], ml.rl.training.discrete_action_predictor.DiscreteActionPredictor]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "num_iterations", "type": "int"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "DiscreteActionModelParameters", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "LimitedActionDiscreteActionTrainer", "type": "Type[ml.rl.training.limited_discrete_action_trainer.LimitedActionDiscreteActionTrainer]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "q_learning_parameters", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "predictor", "type": "Callable[[], ml.rl.training.discrete_action_predictor.DiscreteActionPredictor]"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 231, "col_offset": 53, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "num_iterations", "type": "int"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "current_state", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 262, "col_offset": 72, "nodeName": "state", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "optimality_ratio", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "cheat_ratio", "type": "Any"}, {"lineNumber": 274, "col_offset": 56, "nodeName": "target_cheat_percentage", "type": "int"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "state", "type": "int"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "num_states", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "policy_vector", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "states", "type": "List[Dict[str, float]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "next_states", "type": "List[Dict[str, float]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "possible_next_actions", "type": "Callable[..., List[str]]"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "state", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "solved_in", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "num_cheat", "type": "int"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "_", "type": "float"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "step", "type": "Callable[..., Tuple[int, float, bool, List[str]]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "_rl_parameters_all_cheat_maxq", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "trainer", "type": "ml.rl.training.discrete_action_trainer.DiscreteActionTrainer"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "preprocess_samples", "type": "Callable[[List[Dict[int, Union[float, int]]], List[str], List[Union[float, int]], List[Dict[int, Union[float, int]]], List[str], List[Optional[bool]], List[List[str]], Optional[List[Dict[int, Union[float, int]]]], int], List[ml.rl.training.training_data_page.TrainingDataPage]]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "is_terminals", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "_rl_parameters_maxq", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "trainer", "type": "ml.rl.training.limited_discrete_action_trainer.LimitedActionDiscreteActionTrainer"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "_build_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "predictor", "type": "ml.rl.training.discrete_action_predictor.DiscreteActionPredictor"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "_collect_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "policy", "type": "Callable[[Any], str]"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 236, "col_offset": 46, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "preprocess_samples", "type": "Callable[[List[Dict[int, Union[float, int]]], List[str], List[Union[float, int]], List[Dict[int, Union[float, int]]], List[str], List[Optional[bool]], List[List[str]], Optional[List[Dict[int, Union[float, int]]]], int], List[ml.rl.training.training_data_page.TrainingDataPage]]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "is_terminals", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "updates_per_iteration", "type": "int"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "cheat_ratio", "type": "Any"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "next_state", "type": "int"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "lengths", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "num_cheats", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "__class__", "type": "Type[TestLimitedActionGridworld]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "TrainingParameters", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "train_numpy", "type": "Callable[[ml.rl.training.training_data_page.TrainingDataPage, Optional[ml.rl.training.evaluator.Evaluator]], None]"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "TrainingParameters", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "ActionBudget", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "iteration", "type": "int"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "cheat_ratio", "type": "Any"}, {"lineNumber": 253, "col_offset": 55, "nodeName": "quantile_value", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 271, "col_offset": 45, "nodeName": "target_cheat_percentage", "type": "int"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "trainer", "type": "ml.rl.training.discrete_action_trainer.DiscreteActionTrainer"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "actions", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "target_cheat_percentage", "type": "int"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 253, "col_offset": 55, "nodeName": "trainer", "type": "ml.rl.training.limited_discrete_action_trainer.LimitedActionDiscreteActionTrainer"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "train_numpy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "action", "type": "Any"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 43, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 28, "nodeName": "iteration_result", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "trainer", "type": "ml.rl.training.limited_discrete_action_trainer.LimitedActionDiscreteActionTrainer"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "action", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "height", "type": "int"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 28, "nodeName": "evaluation_results", "type": "`namedtuple-IterationResult-states-actions-rewards-next_states-next_actions-is_terminals-possible_next_actions-lengths-cheat_ratio-current_state`"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "_env", "type": "ml.rl.test.gridworld.limited_action_gridworld.LimitedActionGridworld"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "self", "type": "TestLimitedActionGridworld"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "self", "type": "TestLimitedActionGridworld"}]