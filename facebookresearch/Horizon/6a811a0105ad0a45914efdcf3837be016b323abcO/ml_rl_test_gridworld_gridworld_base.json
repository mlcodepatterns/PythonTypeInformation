[{"lineNumber": 28, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "W", "type": "int"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "S", "type": "int"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "G", "type": "int"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "Environment", "type": "Type[ml.rl.test.environment.environment.Environment]"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "width", "type": "int"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "height", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "STATES", "type": "List[int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "REWARD_SCALE", "type": "float"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 215, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "List", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_optimal_actions", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "sparse_to_dense_net", "type": "None"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "bfs_start", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "working_set", "type": "Set[Union[Tuple[Any, ...], Tuple[Any, Any]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "pos", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_state", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "reward", "type": "Union[float, int]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "info", "type": "None"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "processed_state", "type": "Dict[Any, float]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "processed_state", "type": "Dict[Any, float]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "state", "type": "int"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "use_continuous_action", "type": "Any"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 344, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "R", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "true_q_epsilon_values", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "results", "type": "List[Union[int, float]]"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "do_shuffle", "type": "bool"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "sparse_to_dense_processor", "type": "ml.rl.preprocessing.sparse_to_dense.Caffe2SparseToDenseProcessor"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "actions", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "time_diffs", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 609, "col_offset": 15, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 501, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "_compute_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "_compute_optimal_actions", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 74, "col_offset": 54, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 62, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "default_normalizer", "type": "Callable[..., collections.OrderedDict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "STATES", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "action", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "bfs_start", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "bfs_start", "type": "Tuple[Any, ...]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "empty", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "current", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "current", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "policy", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "action", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "REWARD_SCALE", "type": "float"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "action", "type": "str"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "_no_cheat_step", "type": "Callable[[Any, str], int]"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "_state", "type": "int"}, {"lineNumber": 220, "col_offset": 55, "nodeName": "action", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "_state", "type": "int"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "_state", "type": "int"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "reward", "type": "Union[float, int]"}, {"lineNumber": 224, "col_offset": 67, "nodeName": "info", "type": "None"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "possible_actions", "type": "Callable[..., List[Union[str, Dict[int, float]]]]"}, {"lineNumber": 240, "col_offset": 49, "nodeName": "state", "type": "int"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "state", "type": "int"}, {"lineNumber": 249, "col_offset": 58, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "possible_actions", "type": "Callable[..., List[Union[str, Dict[int, float]]]]"}, {"lineNumber": 269, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "use_continuous_action", "type": "Any"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "processed_action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "processed_action", "type": "Any"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "processed_action", "type": "Any"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "ACTIONS", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 303, "col_offset": 46, "nodeName": "G", "type": "int"}, {"lineNumber": 306, "col_offset": 46, "nodeName": "W", "type": "int"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "act", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "original_y", "type": "Any"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "original_x", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "act", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 328, "col_offset": 30, "nodeName": "W", "type": "int"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "move_on_pos_limit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 44, "nodeName": "act", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 351, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "ACTION", "type": "Union[Type[str], Type[Dict[int, float]]]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "size", "type": "int"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "reward_vector", "type": "Callable[[], Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "q_transition_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 37, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 400, "col_offset": 63, "nodeName": "solve", "type": "Any"}, {"lineNumber": 401, "col_offset": 59, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "reward_vector", "type": "Callable[[], Any]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "q_transition_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 420, "col_offset": 57, "nodeName": "solve", "type": "Any"}, {"lineNumber": 421, "col_offset": 59, "nodeName": "R", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 77, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "true_q_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 432, "col_offset": 43, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 432, "col_offset": 53, "nodeName": "assume_optimal_policy", "type": "bool"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "true_q_epsilon_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 446, "col_offset": 59, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 446, "col_offset": 69, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 448, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 465, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "action", "type": "str"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "actions_vec", "type": "List[str]"}, {"lineNumber": 477, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 479, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 487, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 488, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "action", "type": "str"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "actions_vec", "type": "List[str]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "sorted_features", "type": "List[int]"}, {"lineNumber": 508, "col_offset": 25, "nodeName": "_", "type": "List[int]"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "sort_features_by_normalization", "type": "Callable[[Dict[int, ml.rl.parameters.NormalizationParameters]], Tuple[List[int], List[int]]]"}, {"lineNumber": 508, "col_offset": 60, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 509, "col_offset": 36, "nodeName": "Caffe2SparseToDenseProcessor", "type": "Type[ml.rl.preprocessing.sparse_to_dense.Caffe2SparseToDenseProcessor]"}, {"lineNumber": 509, "col_offset": 65, "nodeName": "sorted_features", "type": "List[int]"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 531, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 551, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "action", "type": "str"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 551, "col_offset": 35, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 559, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "action", "type": "str"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 562, "col_offset": 35, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 567, "col_offset": 27, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 23, "nodeName": "Preprocessor", "type": "Type[ml.rl.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 573, "col_offset": 36, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 575, "col_offset": 25, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 580, "col_offset": 30, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 587, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 587, "col_offset": 55, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 612, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 615, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "S", "type": "int"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "G", "type": "int"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "height", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "collections", "type": "module"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "y", "type": "int"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "y", "type": "int"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "collections", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "working_set", "type": "Set[Union[Tuple[Any, ...], Tuple[Any, Any]]]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "object", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "current", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "possible_actions", "type": "Callable[..., List[Union[str, Dict[int, float]]]]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "action", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "action", "type": "str"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "y", "type": "int"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "y", "type": "int"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "collections", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "object", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "possible_actions", "type": "Callable[..., List[Union[str, Dict[int, float]]]]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "width", "type": "int"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "state", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "width", "type": "int"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 182, "col_offset": 67, "nodeName": "G", "type": "int"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 189, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "size", "type": "int"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "_state", "type": "int"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 219, "col_offset": 54, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "action_to_features", "type": "Callable[[Any], Dict[int, float]]"}, {"lineNumber": 285, "col_offset": 63, "nodeName": "action", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "ACTION", "type": "Union[Type[str], Type[Dict[int, float]]]"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "ACTION", "type": "Union[Type[str], Type[Dict[int, float]]]"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "act", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "width", "type": "int"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "height", "type": "int"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "original_y", "type": "Any"}, {"lineNumber": 329, "col_offset": 31, "nodeName": "original_x", "type": "Any"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "ignore_terminal", "type": "bool"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "state", "type": "int"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "size", "type": "int"}, {"lineNumber": 365, "col_offset": 33, "nodeName": "size", "type": "int"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "fraction", "type": "float"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "poss_a", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 400, "col_offset": 63, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 403, "col_offset": 64, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "height", "type": "int"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "width", "type": "int"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 420, "col_offset": 57, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 423, "col_offset": 72, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "height", "type": "int"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "width", "type": "int"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 429, "col_offset": 53, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 434, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 434, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 435, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 450, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "action", "type": "str"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 479, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 487, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 488, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "action", "type": "str"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 505, "col_offset": 22, "nodeName": "shuffle_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 38, "nodeName": "samples", "type": "ml.rl.test.environment.environment.Samples"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 508, "col_offset": 60, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 511, "col_offset": 11, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 512, "col_offset": 39, "nodeName": "Net", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 514, "col_offset": 18, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 514, "col_offset": 57, "nodeName": "states", "type": "Any"}, {"lineNumber": 515, "col_offset": 63, "nodeName": "sparse_to_dense_processor", "type": "ml.rl.preprocessing.sparse_to_dense.Caffe2SparseToDenseProcessor"}, {"lineNumber": 516, "col_offset": 16, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 521, "col_offset": 73, "nodeName": "sparse_to_dense_processor", "type": "ml.rl.preprocessing.sparse_to_dense.Caffe2SparseToDenseProcessor"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 526, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 527, "col_offset": 51, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 531, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "int64", "type": "Any"}, {"lineNumber": 536, "col_offset": 18, "nodeName": "actions_one_hot", "type": "Any"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "int64", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 547, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 551, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 552, "col_offset": 42, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 556, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 559, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 562, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 563, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 573, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 588, "col_offset": 18, "nodeName": "start", "type": "int"}, {"lineNumber": 588, "col_offset": 26, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "end", "type": "int"}, {"lineNumber": 591, "col_offset": 18, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "set_type", "type": "Callable[[Any], None]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "width", "type": "int"}, {"lineNumber": 88, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "height", "type": "int"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "j", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "working_set", "type": "Set[Union[Tuple[Any, ...], Tuple[Any, Any]]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "current", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "current", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 74, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "bfs_next", "type": "Tuple[Any, Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "width", "type": "int"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 129, "col_offset": 72, "nodeName": "height", "type": "int"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "current", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "current", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 74, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 186, "col_offset": 47, "nodeName": "height", "type": "int"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "max", "type": "Callable"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "min", "type": "Callable"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "max", "type": "Callable"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 193, "col_offset": 59, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "policy_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 64, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "random", "type": "module"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "random", "type": "module"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 281, "col_offset": 51, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 47, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "width", "type": "int"}, {"lineNumber": 309, "col_offset": 66, "nodeName": "height", "type": "int"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "act", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 354, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "width", "type": "int"}, {"lineNumber": 354, "col_offset": 43, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "height", "type": "int"}, {"lineNumber": 358, "col_offset": 44, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "action_to_features", "type": "Callable[[Any], Dict[int, float]]"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "pa", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "pa", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 361, "col_offset": 58, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 365, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "poss_a", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "poss_a", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 372, "col_offset": 33, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 389, "col_offset": 25, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "s", "type": "int"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "s", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "discount", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 394, "col_offset": 54, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 396, "col_offset": 49, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 400, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "eye", "type": "Any"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "size", "type": "int"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "size", "type": "int"}, {"lineNumber": 401, "col_offset": 44, "nodeName": "discount", "type": "Any"}, {"lineNumber": 401, "col_offset": 55, "nodeName": "T", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 409, "col_offset": 35, "nodeName": "discount", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "get", "type": "Callable"}, {"lineNumber": 413, "col_offset": 44, "nodeName": "discount", "type": "float"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 414, "col_offset": 62, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 416, "col_offset": 57, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 420, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "eye", "type": "Any"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "discount", "type": "float"}, {"lineNumber": 421, "col_offset": 55, "nodeName": "T", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 426, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "discount", "type": "float"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 436, "col_offset": 61, "nodeName": "actions", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 443, "col_offset": 24, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 450, "col_offset": 61, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 464, "col_offset": 32, "nodeName": "states", "type": "Any"}, {"lineNumber": 464, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 464, "col_offset": 45, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 466, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 467, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "true_epsilon_values_for_sample", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "actions_vec", "type": "List[str]"}, {"lineNumber": 469, "col_offset": 37, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 479, "col_offset": 61, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "results", "type": "List[Union[int, float]]"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "results", "type": "List[Union[int, float]]"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "states", "type": "Any"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 487, "col_offset": 45, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 488, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 489, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 490, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "true_rewards_for_sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "states", "type": "Any"}, {"lineNumber": 491, "col_offset": 65, "nodeName": "actions_vec", "type": "List[str]"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 512, "col_offset": 39, "nodeName": "core", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 513, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 514, "col_offset": 18, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 514, "col_offset": 57, "nodeName": "samples", "type": "Any"}, {"lineNumber": 518, "col_offset": 18, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 526, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 527, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 538, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 547, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 550, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "actions", "type": "Any"}, {"lineNumber": 550, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 550, "col_offset": 71, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 552, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 553, "col_offset": 73, "nodeName": "int64", "type": "Any"}, {"lineNumber": 556, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 560, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 560, "col_offset": 44, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 563, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 564, "col_offset": 78, "nodeName": "int64", "type": "Any"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 566, "col_offset": 33, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 570, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 570, "col_offset": 37, "nodeName": "states", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 576, "col_offset": 29, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 576, "col_offset": 49, "nodeName": "state_matrix", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 577, "col_offset": 49, "nodeName": "state_matrix_presence", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 581, "col_offset": 29, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 581, "col_offset": 49, "nodeName": "next_state_matrix", "type": "Any"}, {"lineNumber": 582, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 582, "col_offset": 49, "nodeName": "next_state_matrix_presence", "type": "Any"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 606, "col_offset": 42, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 606, "col_offset": 55, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "where", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "current", "type": "Any"}, {"lineNumber": 105, "col_offset": 62, "nodeName": "current", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 109, "col_offset": 85, "nodeName": "W", "type": "int"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "_add_optimal_action", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "bfs_next", "type": "Tuple[Any, Any]"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "working_set", "type": "Set[Union[Tuple[Any, ...], Tuple[Any, Any]]]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "optimal_actions", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 129, "col_offset": 72, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "j", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "current", "type": "Any"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "current", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 147, "col_offset": 85, "nodeName": "W", "type": "int"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "policy", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "invert_action", "type": "Callable[[str], str]"}, {"lineNumber": 148, "col_offset": 64, "nodeName": "action", "type": "Union[str, Dict[int, float]]"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "appendleft", "type": "Callable"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "S", "type": "int"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 186, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "width", "type": "int"}, {"lineNumber": 188, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "height", "type": "int"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 246, "col_offset": 44, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 246, "col_offset": 55, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 51, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "action_to_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 47, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "states", "type": "Any"}, {"lineNumber": 281, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 281, "col_offset": 65, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 309, "col_offset": 66, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 317, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "act", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 352, "col_offset": 43, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 354, "col_offset": 43, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 354, "col_offset": 56, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 356, "col_offset": 43, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 358, "col_offset": 44, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 358, "col_offset": 57, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 36, "nodeName": "state", "type": "int"}, {"lineNumber": 367, "col_offset": 51, "nodeName": "is_wall", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 64, "nodeName": "state", "type": "int"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "possible_actions", "type": "Callable[..., List[Union[str, Dict[int, float]]]]"}, {"lineNumber": 370, "col_offset": 51, "nodeName": "state", "type": "int"}, {"lineNumber": 374, "col_offset": 47, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "state", "type": "int"}, {"lineNumber": 375, "col_offset": 31, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 383, "col_offset": 45, "nodeName": "fraction", "type": "float"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 384, "col_offset": 56, "nodeName": "transition_probabilities", "type": "Any"}, {"lineNumber": 389, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 389, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 389, "col_offset": 55, "nodeName": "size", "type": "int"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 396, "col_offset": 39, "nodeName": "discount", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 416, "col_offset": 47, "nodeName": "discount", "type": "float"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 435, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 436, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 443, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 449, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 450, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 452, "col_offset": 31, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, float, Any]]"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 464, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 478, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 479, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 487, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 490, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 491, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 537, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 537, "col_offset": 31, "nodeName": "samples", "type": "Any"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 538, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 539, "col_offset": 12, "nodeName": "samples", "type": "Any"}, {"lineNumber": 539, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 550, "col_offset": 71, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 553, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 560, "col_offset": 17, "nodeName": "samples", "type": "Any"}, {"lineNumber": 560, "col_offset": 44, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 564, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 566, "col_offset": 33, "nodeName": "samples", "type": "Any"}, {"lineNumber": 566, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 570, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 576, "col_offset": 29, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 576, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 577, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 581, "col_offset": 29, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 581, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 582, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 592, "col_offset": 23, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 594, "col_offset": 19, "nodeName": "one_hot_action", "type": "bool"}, {"lineNumber": 596, "col_offset": 29, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 597, "col_offset": 24, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 598, "col_offset": 28, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 599, "col_offset": 29, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 600, "col_offset": 29, "nodeName": "next_actions_one_hot", "type": "Any"}, {"lineNumber": 601, "col_offset": 38, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 602, "col_offset": 43, "nodeName": "possible_next_actions_mask", "type": "Any"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "time_diffs", "type": "Any"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 606, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "G", "type": "int"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "invert_action", "type": "Callable[[str], str]"}, {"lineNumber": 111, "col_offset": 76, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "appendleft", "type": "Callable"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "bfs_next", "type": "Tuple[Any, Any]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "add", "type": "Callable"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "bfs_next", "type": "Tuple[Any, Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "where", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 147, "col_offset": 56, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "action", "type": "str"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 246, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 246, "col_offset": 69, "nodeName": "possible_actions", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 249, "col_offset": 26, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 258, "col_offset": 60, "nodeName": "x", "type": "int"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 319, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "act", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 352, "col_offset": 43, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 354, "col_offset": 56, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 354, "col_offset": 69, "nodeName": "y", "type": "Any"}, {"lineNumber": 356, "col_offset": 43, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 356, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 358, "col_offset": 57, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 358, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 367, "col_offset": 51, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 374, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "action", "type": "Union[Dict[int, float], str]"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 389, "col_offset": 55, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 394, "col_offset": 40, "nodeName": "discount", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 405, "col_offset": 42, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 414, "col_offset": 48, "nodeName": "discount", "type": "float"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 425, "col_offset": 50, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 435, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 449, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 452, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 456, "col_offset": 23, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 467, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 467, "col_offset": 53, "nodeName": "states", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 490, "col_offset": 53, "nodeName": "states", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 532, "col_offset": 57, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 532, "col_offset": 66, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 537, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 539, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 543, "col_offset": 65, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 543, "col_offset": 74, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 548, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 548, "col_offset": 40, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 557, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 566, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 592, "col_offset": 38, "nodeName": "start", "type": "int"}, {"lineNumber": 592, "col_offset": 44, "nodeName": "end", "type": "int"}, {"lineNumber": 595, "col_offset": 21, "nodeName": "actions", "type": "Any"}, {"lineNumber": 596, "col_offset": 50, "nodeName": "start", "type": "int"}, {"lineNumber": 596, "col_offset": 56, "nodeName": "end", "type": "int"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "start", "type": "int"}, {"lineNumber": 597, "col_offset": 38, "nodeName": "end", "type": "int"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "start", "type": "int"}, {"lineNumber": 598, "col_offset": 54, "nodeName": "end", "type": "int"}, {"lineNumber": 599, "col_offset": 42, "nodeName": "start", "type": "int"}, {"lineNumber": 599, "col_offset": 48, "nodeName": "end", "type": "int"}, {"lineNumber": 600, "col_offset": 50, "nodeName": "start", "type": "int"}, {"lineNumber": 600, "col_offset": 56, "nodeName": "end", "type": "int"}, {"lineNumber": 601, "col_offset": 60, "nodeName": "start", "type": "int"}, {"lineNumber": 601, "col_offset": 66, "nodeName": "end", "type": "int"}, {"lineNumber": 602, "col_offset": 70, "nodeName": "start", "type": "int"}, {"lineNumber": 602, "col_offset": 76, "nodeName": "end", "type": "int"}, {"lineNumber": 603, "col_offset": 38, "nodeName": "start", "type": "int"}, {"lineNumber": 603, "col_offset": 44, "nodeName": "end", "type": "int"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 109, "col_offset": 66, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "working_set", "type": "Set[Union[Tuple[Any, ...], Tuple[Any, Any]]]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 63, "nodeName": "G", "type": "int"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 147, "col_offset": 56, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 147, "col_offset": 66, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 208, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 209, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 352, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 354, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 356, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 358, "col_offset": 70, "nodeName": "y", "type": "Any"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 57, "nodeName": "state", "type": "int"}, {"lineNumber": 379, "col_offset": 49, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "state", "type": "int"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "_true_q_values", "type": "collections.defaultdict[Union[Any, float], Any]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 405, "col_offset": 32, "nodeName": "discount", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "_true_q_epsilon_values", "type": "collections.defaultdict[Union[float, Any], Any]"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 425, "col_offset": 40, "nodeName": "discount", "type": "float"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 441, "col_offset": 58, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 456, "col_offset": 34, "nodeName": "true_q_epsilon_values", "type": "Any"}, {"lineNumber": 532, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 532, "col_offset": 66, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 543, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 74, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 548, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 553, "col_offset": 23, "nodeName": "possible_action_strings", "type": "numpy.ndarray"}, {"lineNumber": 553, "col_offset": 50, "nodeName": "action", "type": "str"}, {"lineNumber": 557, "col_offset": 40, "nodeName": "samples", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 23, "nodeName": "possible_next_action_strings", "type": "numpy.ndarray"}, {"lineNumber": 564, "col_offset": 55, "nodeName": "action", "type": "str"}, {"lineNumber": 595, "col_offset": 29, "nodeName": "start", "type": "int"}, {"lineNumber": 595, "col_offset": 35, "nodeName": "end", "type": "int"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 379, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 379, "col_offset": 63, "nodeName": "poss_a", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 381, "col_offset": 56, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 381, "col_offset": 67, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 435, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 441, "col_offset": 72, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 449, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 456, "col_offset": 56, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 532, "col_offset": 22, "nodeName": "actions", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 381, "col_offset": 77, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 381, "col_offset": 81, "nodeName": "poss_a", "type": "List[Union[str, Dict[int, float]]]"}, {"lineNumber": 435, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 449, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 532, "col_offset": 22, "nodeName": "samples", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "samples", "type": "Any"}]