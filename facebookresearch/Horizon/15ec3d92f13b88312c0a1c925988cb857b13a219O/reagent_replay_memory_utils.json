[{"lineNumber": 17, "col_offset": 0, "nodeName": "_dense_to_sparse", "type": "Callable[[numpy.ndarray], List[Dict[str, float]]]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "DEFAULT_DS", "type": "str"}, {"lineNumber": 29, "col_offset": 5, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "n", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "size", "type": "int"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "batch", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "is_discrete_action", "type": "bool"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "sequence_number", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "reward", "type": "Any"}, {"lineNumber": 29, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "ReplayBuffer", "type": "Type[reagent.replay_memory.circular_replay_buffer.ReplayBuffer]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "sample_transition_batch", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "batch", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "action", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "unique_actions", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "action", "type": "List[Dict[str, float]]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "action", "type": "Union[List[str], List[Dict[str, float]]]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "sequence_number", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "reward", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "rows", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 22, "col_offset": 58, "nodeName": "elem", "type": "Any"}, {"lineNumber": 22, "col_offset": 66, "nodeName": "dense", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 48, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "n", "type": "int"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "action", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "_dense_to_sparse", "type": "Callable[[numpy.ndarray], List[Dict[str, float]]]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "action", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "DEFAULT_DS", "type": "str"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "_dense_to_sparse", "type": "Callable[[numpy.ndarray], List[Dict[str, float]]]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "state", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rows", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "rows", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "dense", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "dense", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "a", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "action", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "batch", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "elem_terminal", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "elem_terminal", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "exp", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "_", "type": "int"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "batch", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "mdp_id", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "r", "type": "Any"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "r", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "reward", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "v", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "v", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "elem", "type": "Any"}, {"lineNumber": 17, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "action", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "item", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "batch", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "sequence_number", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "reward", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "batch", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "batch", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "a", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "_", "type": "int"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "a", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "batch", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "batch", "type": "Any"}]