[{"lineNumber": 33, "col_offset": 0, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "testConstructor", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "testAdd", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "testExtraAdd", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "testLowCapacity", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "testNSteprewardum", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "testSampleTransitionBatch", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "testSampleTransitionBatchExtra", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "testSamplingWithterminalInTrajectory", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "testIsTransitionValid", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "attribute", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "tmp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "_test_subdir", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "num_dims", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_test_observation", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_test_action", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_test_reward", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_test_terminal", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_test_add_count", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected_states", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "_i", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "expected_states", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "update_horizon", "type": "int"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "expected_reward", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "expected_terminal", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "correct_valids", "type": "List[int]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "CheckpointableClass"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "tmp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "cleanup", "type": "Callable[[], None]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "add_count", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "bool", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 184, "col_offset": 44, "nodeName": "expected_states", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "reward", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "next_reward", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 190, "col_offset": 47, "nodeName": "expected_terminal", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "indices", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 55, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "bool", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "stack", "type": "Any"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "stack", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 259, "col_offset": 44, "nodeName": "expected_states", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "action", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "reward", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "next_reward", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 264, "col_offset": 49, "nodeName": "expected_next_states", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 265, "col_offset": 47, "nodeName": "expected_terminal", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "indices", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "extra1", "type": "Any"}, {"lineNumber": 267, "col_offset": 45, "nodeName": "expected_extra1", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "next_extra1", "type": "Any"}, {"lineNumber": 268, "col_offset": 50, "nodeName": "expected_next_extra1", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "extra2", "type": "Any"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "expected_extra2", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "next_extra2", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "expected_next_extra2", "type": "Any"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 282, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 306, "col_offset": 61, "nodeName": "bool", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 307, "col_offset": 44, "nodeName": "expected_states", "type": "numpy.ndarray"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "reward", "type": "Any"}, {"lineNumber": 311, "col_offset": 45, "nodeName": "expected_reward", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "expected_terminal", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "indices", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "num_dims", "type": "int"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "num_dims", "type": "int"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "num_dims", "type": "int"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "num_dims", "type": "int"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tmp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "memory", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 76, "col_offset": 65, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "assertRaisesRegex", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "ReplayBuffer", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "expected_states", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "memory", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 187, "col_offset": 50, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 214, "col_offset": 51, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "sample_transition_batch", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "expected_states", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 239, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "memory", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 259, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 263, "col_offset": 50, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 266, "col_offset": 46, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 267, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 268, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "update_horizon", "type": "int"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "memory", "type": "Any"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 312, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "STACK_SIZE", "type": "int"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "memory", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "memory", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "memory", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "memory", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "memory", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "memory", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "circular_replay_buffer", "type": "module"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "memory", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "memory", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "full", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 69, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 182, "col_offset": 58, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 70, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "memory", "type": "Any"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "memory", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "full", "type": "Any"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 69, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 260, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 266, "col_offset": 70, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "memory", "type": "Any"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 291, "col_offset": 27, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 291, "col_offset": 58, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "full", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 295, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 295, "col_offset": 69, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 313, "col_offset": 70, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "full", "type": "Any"}, {"lineNumber": 321, "col_offset": 32, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "full", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "full", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "self", "type": "ReplayBufferTest"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "correct_valids", "type": "List[int]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "is_valid_transition", "type": "Any"}, {"lineNumber": 352, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 185, "col_offset": 59, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 186, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 64, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 188, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 64, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 191, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 201, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 63, "nodeName": "x", "type": "int"}, {"lineNumber": 237, "col_offset": 68, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 240, "col_offset": 67, "nodeName": "x", "type": "int"}, {"lineNumber": 240, "col_offset": 72, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 244, "col_offset": 58, "nodeName": "x", "type": "int"}, {"lineNumber": 244, "col_offset": 63, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 62, "nodeName": "x", "type": "int"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 260, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 59, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 261, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 59, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 64, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 263, "col_offset": 64, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 266, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "full", "type": "Any"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "OBSERVATION_SHAPE", "type": "Tuple[int, int]"}, {"lineNumber": 284, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 306, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 50, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 313, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 60, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 60, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 60, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "memory", "type": "Any"}, {"lineNumber": 353, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 129, "col_offset": 64, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 64, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 240, "col_offset": 42, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 64, "nodeName": "OBS_DTYPE", "type": "Any"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 309, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 353, "col_offset": 46, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "min", "type": "Callable"}, {"lineNumber": 179, "col_offset": 71, "nodeName": "x", "type": "int"}, {"lineNumber": 179, "col_offset": 76, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "min", "type": "Callable"}, {"lineNumber": 234, "col_offset": 71, "nodeName": "x", "type": "int"}, {"lineNumber": 234, "col_offset": 76, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "x", "type": "int"}, {"lineNumber": 244, "col_offset": 22, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "correct_valids", "type": "List[int]"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "x", "type": "int"}, {"lineNumber": 353, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 234, "col_offset": 42, "nodeName": "replay_capacity", "type": "int"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "num_adds", "type": "int"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "num_adds", "type": "int"}]