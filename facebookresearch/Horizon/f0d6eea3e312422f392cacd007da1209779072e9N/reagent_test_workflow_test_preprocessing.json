[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "NUM_ROWS", "type": "int"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "COL_NAME", "type": "str"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "TABLE_NAME", "type": "str"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "ReagentSQLTestBase", "type": "Type[reagent.test.workflow.reagent_sql_test_base.ReagentSQLTestBase]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 75, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "distributions", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "data", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "INFO", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "distributions", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "distributions", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "toDF", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "TABLE_NAME", "type": "str"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "NUM_ROWS", "type": "int"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "PreprocessingOptions", "type": "Type[reagent.workflow.types.PreprocessingOptions]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "identify_normalization_parameters", "type": "Callable[..., Dict[int, reagent.parameters.NormalizationParameters]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "COL_NAME", "type": "str"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "COL_NAME", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "TABLE_NAME", "type": "str"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "test_class_seed", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "distributions", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "feature_type", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "CONTINUOUS", "type": "str"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "__name__", "type": "str"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "get_random_feature", "type": "Callable[[], Any]"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "NUM_ROWS", "type": "int"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "parallelize", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "data", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "mean", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "k", "type": "str"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "sc", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "k", "type": "str"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "mean", "type": "Any"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "stddev", "type": "Any"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "distributions", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "k", "type": "str"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "info", "type": "Dict[str, int]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "k", "type": "str"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "normalization_params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "k", "type": "str"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "k", "type": "str"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "k", "type": "str"}]