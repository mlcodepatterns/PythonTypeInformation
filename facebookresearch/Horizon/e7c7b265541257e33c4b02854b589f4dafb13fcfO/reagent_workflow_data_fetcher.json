[{"lineNumber": 25, "col_offset": 0, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, int, float], Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "hash_mdp_id_and_subsample", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "make_get_step_udf", "type": "Callable[[Optional[int]], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 145, "col_offset": 0, "nodeName": "make_where_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "make_not_terminal_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "make_existence_bitvector_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 250, "col_offset": 0, "nodeName": "select_relevant_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 0, "nodeName": "infer_states_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "infer_metrics_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 309, "col_offset": 5, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "expr", "type": "str"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "default", "type": "List[int]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "next_long_arr_udf", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 278, "col_offset": 7, "nodeName": "is_col_arr_map", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "next_states_is_col_arr_map", "type": "bool"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "is_col_arr_map", "type": "bool"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "metrics", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "withColumnRenamed", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "expr", "type": "str"}, {"lineNumber": 52, "col_offset": 7, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "StructType", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "possible_keys", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "udf", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "sparse2dense", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "col_name", "type": "str"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "col_name", "type": "str"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "get_step", "type": "Callable[[List[Any]], Any]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "get_next", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "find", "type": "Callable[[str], Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "get_not_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "udf", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "encode", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 218, "col_offset": 33, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 221, "col_offset": 49, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 223, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "make_where_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "make_next_udf", "type": "Callable[[Optional[int], Any], Any]"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "make_existence_bitvector_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 232, "col_offset": 59, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "make_not_terminal_udf", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "select", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "select", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "collect", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 313, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 315, "col_offset": 13, "nodeName": "infer_states_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "infer_metrics_names", "type": "Callable[[Any, Optional[int]], Any]"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 316, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 317, "col_offset": 9, "nodeName": "set_reward_col_as_reward", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 323, "col_offset": 9, "nodeName": "hash_mdp_id_and_subsample", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 324, "col_offset": 9, "nodeName": "perform_preprocessing", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 327, "col_offset": 9, "nodeName": "select_relevant_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "df", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "parquet", "type": "Any"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "parquet_url", "type": "Any"}, {"lineNumber": 329, "col_offset": 11, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 41, "col_offset": 67, "nodeName": "gamma", "type": "float"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "calc_custom_reward", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "crc32", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "filter", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "val", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "col_name", "type": "str"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "col", "type": "Any"}, {"lineNumber": 114, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "col", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 211, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 215, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "MapType", "type": "Any"}, {"lineNumber": 219, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 219, "col_offset": 46, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 227, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 228, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 233, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 236, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "existence_bitvector_udf", "type": "Any"}, {"lineNumber": 243, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "not_terminal_udf", "type": "Any"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "col", "type": "Any"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "select", "type": "Any"}, {"lineNumber": 280, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 280, "col_offset": 19, "nodeName": "explode", "type": "Any"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 289, "col_offset": 50, "nodeName": "next_states_is_col_arr_map", "type": "bool"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 298, "col_offset": 26, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "get_distinct_keys", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "df", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 319, "col_offset": 33, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 323, "col_offset": 52, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 35, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 325, "col_offset": 52, "nodeName": "metrics", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 73, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "custom_reward_expression", "type": "str"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "drop", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, int, float], Any]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "col_name", "type": "str"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "min", "type": "Callable"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "item", "type": "str"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "default", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "target", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "make_get_step_udf", "type": "Callable[[Optional[int]], Any]"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 218, "col_offset": 54, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 218, "col_offset": 66, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "next_long_udf", "type": "Any"}, {"lineNumber": 231, "col_offset": 61, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "next_long_arr_udf", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 263, "col_offset": 47, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 269, "col_offset": 37, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "alias", "type": "Any"}, {"lineNumber": 279, "col_offset": 47, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "map_keys", "type": "Any"}, {"lineNumber": 280, "col_offset": 36, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "flatMap", "type": "Any"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 291, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "next_state_keys", "type": "Any"}, {"lineNumber": 294, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 299, "col_offset": 66, "nodeName": "is_col_arr_map", "type": "bool"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "table_name", "type": "str"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "mode", "type": "Any"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 80, "col_offset": 74, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "col_name", "type": "str"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "col_name", "type": "str"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "col", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "bitvec", "type": "List[int]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 255, "col_offset": 54, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 256, "col_offset": 50, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 257, "col_offset": 59, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 262, "col_offset": 52, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 263, "col_offset": 57, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 268, "col_offset": 38, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 269, "col_offset": 47, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "rdd", "type": "Any"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "col", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "explode", "type": "Any"}, {"lineNumber": 279, "col_offset": 31, "nodeName": "col_name", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "df", "type": "Any"}]