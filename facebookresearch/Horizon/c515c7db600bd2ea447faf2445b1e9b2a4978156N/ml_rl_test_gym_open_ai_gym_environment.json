[{"lineNumber": 33, "col_offset": 16, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "Enum", "type": "Type[enum.Enum]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "enum", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "CONTINUOUS_ACTION", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "SOFT_ACTOR_CRITIC", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "DDPG_ACTOR_CRITIC", "type": "str"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "PYTORCH_DISCRETE_DQN", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "PYTORCH_PARAMETRIC_DQN", "type": "str"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "enum", "type": "module"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "DISCRETE_ACTION", "type": "str"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "CONTINUOUS_ACTION", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "softmax_policy", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "softmax_policy", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "env_name_str", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "gymenv", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "img", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "reward_sum", "type": "float"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "discounted_reward_sum", "type": "float"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "avg_rewards", "type": "float"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "avg_discounted_rewards", "type": "float"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "img", "type": "bool"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "reward_sum", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "discounted_reward_sum", "type": "int"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "num_steps_taken", "type": "int"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "samples", "type": "Union[ml.rl.test.gridworld.gridworld_base.Samples, ml.rl.test.gridworld.gridworld_base.MultiStepSamples]"}, {"lineNumber": 347, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "processed_state", "type": "Dict[int, Any]"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "processed_state", "type": "Dict[int, Any]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "possible_actions", "type": "List[Dict[Any, int]]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "possible_actions", "type": "List[Dict[Any, int]]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "return_single_step_samples", "type": "bool"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "rewards", "type": "List[List[float]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "next_states", "type": "List[List[Dict[int, float]]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "terminals", "type": "List[List[bool]]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "state", "type": "None"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "next_raw_action", "type": "None"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "next_processed_action", "type": "None"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "next_action_probability", "type": "float"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "transition", "type": "int"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "action_deque", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "action_probability_deque", "type": "Deque[Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "sequence_number_deque", "type": "Deque[int]"}, {"lineNumber": 598, "col_offset": 11, "nodeName": "return_single_step_samples", "type": "bool"}, {"lineNumber": 601, "col_offset": 15, "nodeName": "samples", "type": "ml.rl.test.gridworld.gridworld_base.MultiStepSamples"}, {"lineNumber": 415, "col_offset": 9, "nodeName": "Union", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_create_env", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "gymenv", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "img", "type": "bool"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "state_features", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "gymenv", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "make", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "gymenv", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "supports_action", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "n", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "img", "type": "bool"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "only_continuous_normalizer", "type": "Callable[..., collections.OrderedDict[Any, Any]]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "GymDQNPredictor", "type": "Type[ml.rl.test.gym.gym_predictor.GymDQNPredictor]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "action_probability", "type": "Union[float, Any]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "softmax_policy", "type": "Any"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "reward_sum", "type": "Any"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "ep_rew_sum", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "discounted_reward_sum", "type": "Any"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "ep_raw_discounted_sum", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "round", "type": "Callable"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "round", "type": "Callable"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "avg_rewards", "type": "float"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "avg_discounted_rewards", "type": "float"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "transform_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "next_action", "type": "numpy.ndarray"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "_", "type": "float"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "policy", "type": "Callable[..., Tuple[numpy.ndarray, float]]"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 312, "col_offset": 60, "nodeName": "test", "type": "Any"}, {"lineNumber": 312, "col_offset": 66, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "next_action", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "render", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "num_steps_taken", "type": "int"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "reward_sum", "type": "Any"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "reward", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "discounted_reward_sum", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 340, "col_offset": 15, "nodeName": "reward_sum", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "discounted_reward_sum", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "img", "type": "bool"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "_generate_random_samples", "type": "Callable[..., Union[ml.rl.test.gridworld.gridworld_base.Samples, ml.rl.test.gridworld.gridworld_base.MultiStepSamples]]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 352, "col_offset": 29, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "index", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "limit", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "container", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 368, "col_offset": 59, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "action_vec", "type": "Dict[Any, int]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "CONTINUOUS_ACTION", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "action_vec", "type": "Dict[Any, Any]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 395, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 395, "col_offset": 71, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 398, "col_offset": 11, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "action_vec", "type": "Dict[Any, int]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "return_single_step_samples", "type": "bool"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 438, "col_offset": 52, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 443, "col_offset": 33, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "actions", "type": "List[Dict[int, float]]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "next_actions", "type": "List[List[Dict[int, float]]]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "next_actions", "type": "List[List[str]]"}, {"lineNumber": 464, "col_offset": 39, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 465, "col_offset": 38, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 466, "col_offset": 49, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 468, "col_offset": 44, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 469, "col_offset": 43, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 470, "col_offset": 38, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 472, "col_offset": 53, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 475, "col_offset": 58, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "possible_action", "type": "Union[List[nothing], List[str], List[Dict[Any, int]]]"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 556, "col_offset": 15, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 585, "col_offset": 18, "nodeName": "MultiStepSamples", "type": "Type[ml.rl.test.gridworld.gridworld_base.MultiStepSamples]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "gym", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "Box", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "supports_state", "type": "bool"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "Box", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "CONTINUOUS_ACTION", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "img", "type": "bool"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "only_continuous_normalizer", "type": "Callable[..., collections.OrderedDict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "low", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "high", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "only_continuous_normalizer", "type": "Callable[..., collections.OrderedDict[Any, Any]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "low", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "high", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "_", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "_random_sample_action", "type": "Callable[[bool], Any]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "action_probability", "type": "Union[Any, float]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "GymDDPGPredictor", "type": "Type[ml.rl.test.gym.gym_predictor.GymDDPGPredictor]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "run_episode", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "predictor", "type": "Optional[Union[ml.rl.training.rl_predictor_pytorch.RLPredictor, ml.rl.test.gym.gym_predictor.GymPredictor]]"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 277, "col_offset": 38, "nodeName": "test", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "render", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "reward_sum", "type": "Union[Any, float]"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 282, "col_offset": 39, "nodeName": "discounted_reward_sum", "type": "Union[Any, float]"}, {"lineNumber": 282, "col_offset": 63, "nodeName": "n", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "state", "type": "Any"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "reset", "type": "Any"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "action_index", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "transform_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 46, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "policy", "type": "Callable[..., Tuple[numpy.ndarray, float]]"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "test", "type": "Any"}, {"lineNumber": 331, "col_offset": 45, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "reward", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 351, "col_offset": 18, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "Samples", "type": "Type[ml.rl.test.gridworld.gridworld_base.Samples]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "MultiStepSamples", "type": "Type[ml.rl.test.gridworld.gridworld_base.MultiStepSamples]"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "index", "type": "Any"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "processed_state", "type": "Dict[int, Any]"}, {"lineNumber": 365, "col_offset": 33, "nodeName": "raw_state", "type": "Any"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 381, "col_offset": 19, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 381, "col_offset": 31, "nodeName": "action_vec", "type": "Dict[Any, int]"}, {"lineNumber": 381, "col_offset": 43, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "high", "type": "Any"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "low", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 393, "col_offset": 19, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 393, "col_offset": 31, "nodeName": "action_vec", "type": "Dict[Any, Any]"}, {"lineNumber": 393, "col_offset": 43, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 398, "col_offset": 43, "nodeName": "CONTINUOUS_ACTION", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "action_vec", "type": "Dict[Any, int]"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "_", "type": "int"}, {"lineNumber": 439, "col_offset": 45, "nodeName": "_", "type": "int"}, {"lineNumber": 440, "col_offset": 54, "nodeName": "_", "type": "int"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 444, "col_offset": 55, "nodeName": "_", "type": "int"}, {"lineNumber": 446, "col_offset": 21, "nodeName": "_", "type": "int"}, {"lineNumber": 452, "col_offset": 40, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 464, "col_offset": 39, "nodeName": "collections", "type": "module"}, {"lineNumber": 464, "col_offset": 64, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 465, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 465, "col_offset": 63, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 466, "col_offset": 49, "nodeName": "collections", "type": "module"}, {"lineNumber": 466, "col_offset": 74, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "collections", "type": "module"}, {"lineNumber": 467, "col_offset": 62, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 468, "col_offset": 44, "nodeName": "collections", "type": "module"}, {"lineNumber": 468, "col_offset": 69, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 469, "col_offset": 43, "nodeName": "collections", "type": "module"}, {"lineNumber": 469, "col_offset": 68, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 470, "col_offset": 38, "nodeName": "collections", "type": "module"}, {"lineNumber": 470, "col_offset": 63, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 471, "col_offset": 44, "nodeName": "collections", "type": "module"}, {"lineNumber": 471, "col_offset": 69, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 472, "col_offset": 53, "nodeName": "collections", "type": "module"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 475, "col_offset": 58, "nodeName": "collections", "type": "module"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 481, "col_offset": 30, "nodeName": "transition", "type": "int"}, {"lineNumber": 481, "col_offset": 43, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 486, "col_offset": 16, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "_possible_actions", "type": "Callable[[bool, bool], Any]"}, {"lineNumber": 506, "col_offset": 53, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 506, "col_offset": 63, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "reward", "type": "Any"}, {"lineNumber": 508, "col_offset": 32, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 508, "col_offset": 42, "nodeName": "_", "type": "Any"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "step", "type": "Any"}, {"lineNumber": 508, "col_offset": 60, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 510, "col_offset": 16, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 511, "col_offset": 78, "nodeName": "_random_sample_action", "type": "Callable[[bool], Any]"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "_possible_actions", "type": "Callable[[bool, bool], Any]"}, {"lineNumber": 515, "col_offset": 16, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 515, "col_offset": 26, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "processed_action", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 520, "col_offset": 44, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "reward", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "next_processed_state", "type": "Dict[nothing, nothing]"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "next_processed_state", "type": "Dict[int, Any]"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 527, "col_offset": 36, "nodeName": "next_processed_state", "type": "Union[Dict[nothing, nothing], Dict[int, Any]]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "next_processed_action", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 529, "col_offset": 34, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 530, "col_offset": 41, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 531, "col_offset": 41, "nodeName": "possible_action", "type": "Union[List[str], List[nothing], List[Dict[Any, int]]]"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 532, "col_offset": 46, "nodeName": "possible_next_action", "type": "Union[List[str], List[nothing], List[Dict[Any, int]]]"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "transition", "type": "int"}, {"lineNumber": 557, "col_offset": 20, "nodeName": "_", "type": "int"}, {"lineNumber": 586, "col_offset": 20, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 587, "col_offset": 29, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "actions", "type": "Union[List[Dict[int, float]], List[str]]"}, {"lineNumber": 590, "col_offset": 33, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 591, "col_offset": 20, "nodeName": "rewards", "type": "List[List[float]]"}, {"lineNumber": 592, "col_offset": 29, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 593, "col_offset": 24, "nodeName": "next_states", "type": "List[List[Dict[int, float]]]"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "next_actions", "type": "Union[List[List[Dict[int, float]]], List[List[str]]]"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "terminals", "type": "List[List[bool]]"}, {"lineNumber": 596, "col_offset": 34, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "to_single_step", "type": "Callable[[], ml.rl.test.gridworld.gridworld_base.Samples]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "Samples", "type": "Type[ml.rl.test.gridworld.gridworld_base.Samples]"}, {"lineNumber": 415, "col_offset": 24, "nodeName": "MultiStepSamples", "type": "Type[ml.rl.test.gridworld.gridworld_base.MultiStepSamples]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "sf", "type": "int"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "sf", "type": "int"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "a", "type": "int"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "e", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 69, "nodeName": "gymenv", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "env", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 80, "col_offset": 84, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "gym", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "action", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 175, "col_offset": 56, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "GymSACPredictor", "type": "Type[ml.rl.test.gym.gym_predictor.GymSACPredictor]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "env", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "render", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 322, "col_offset": 35, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 323, "col_offset": 41, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "reward", "type": "Any"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 324, "col_offset": 46, "nodeName": "_", "type": "Any"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "step", "type": "Any"}, {"lineNumber": 324, "col_offset": 64, "nodeName": "action_index", "type": "Any"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "reward", "type": "Any"}, {"lineNumber": 326, "col_offset": 36, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 326, "col_offset": 46, "nodeName": "_", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "step", "type": "Any"}, {"lineNumber": 326, "col_offset": 64, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "num_steps_taken", "type": "int"}, {"lineNumber": 336, "col_offset": 48, "nodeName": "max_steps", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "env", "type": "Any"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 379, "col_offset": 23, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 379, "col_offset": 69, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 380, "col_offset": 43, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 389, "col_offset": 39, "nodeName": "reduce", "type": "Callable"}, {"lineNumber": 389, "col_offset": 68, "nodeName": "range_each_dim", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "action_vec", "type": "Dict[Any, Any]"}, {"lineNumber": 392, "col_offset": 49, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 398, "col_offset": 23, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 398, "col_offset": 43, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 405, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Dict[Any, int]]"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 437, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 437, "col_offset": 52, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 439, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 439, "col_offset": 56, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 440, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 440, "col_offset": 65, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 441, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 441, "col_offset": 57, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 444, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 444, "col_offset": 66, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 446, "col_offset": 26, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 449, "col_offset": 46, "nodeName": "_", "type": "int"}, {"lineNumber": 450, "col_offset": 57, "nodeName": "_", "type": "int"}, {"lineNumber": 453, "col_offset": 52, "nodeName": "_", "type": "int"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "reset", "type": "Any"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "clear", "type": "Any"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "clear", "type": "Any"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "clear", "type": "Callable[[], None]"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "clear", "type": "Any"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "clear", "type": "Any"}, {"lineNumber": 497, "col_offset": 67, "nodeName": "_random_sample_action", "type": "Callable[[bool], Any]"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "use_continuous_action", "type": "bool"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 509, "col_offset": 15, "nodeName": "max_step", "type": "Optional[int]"}, {"lineNumber": 509, "col_offset": 40, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 509, "col_offset": 59, "nodeName": "max_step", "type": "Optional[int]"}, {"lineNumber": 511, "col_offset": 78, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 518, "col_offset": 31, "nodeName": "_process_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 51, "nodeName": "state", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "action_deque", "type": "Any"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "action_probability_deque", "type": "Deque[Any]"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "_process_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 59, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 529, "col_offset": 12, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "sequence_number_deque", "type": "Deque[int]"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "possible_action_deque", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "possible_next_action_deque", "type": "Any"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 538, "col_offset": 52, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 539, "col_offset": 34, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 540, "col_offset": 42, "nodeName": "transition", "type": "int"}, {"lineNumber": 540, "col_offset": 54, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 543, "col_offset": 32, "nodeName": "actions", "type": "Union[List[Dict[int, float]], List[str]]"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "rewards", "type": "List[List[float]]"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 546, "col_offset": 32, "nodeName": "next_states", "type": "List[List[Dict[int, float]]]"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 547, "col_offset": 32, "nodeName": "next_actions", "type": "Union[List[List[Dict[int, float]]], List[List[str]]]"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "terminals", "type": "List[List[bool]]"}, {"lineNumber": 549, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 551, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 552, "col_offset": 32, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "transition", "type": "int"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "samples", "type": "ml.rl.test.gridworld.gridworld_base.MultiStepSamples"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "a", "type": "int"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 66, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "all", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "gym", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "gym", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "gym", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "env", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 99, "col_offset": 47, "nodeName": "gym", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "policy", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "policy", "type": "Any"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 52, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "action_probability", "type": "Union[float, Any]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "env", "type": "Any"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "env", "type": "Any"}, {"lineNumber": 334, "col_offset": 46, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 334, "col_offset": 61, "nodeName": "num_steps_taken", "type": "int"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 379, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "env", "type": "Any"}, {"lineNumber": 392, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 449, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 449, "col_offset": 57, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 450, "col_offset": 62, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 450, "col_offset": 68, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 453, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 453, "col_offset": 63, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 487, "col_offset": 16, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "action_deque", "type": "Any"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "action_probability_deque", "type": "Deque[Any]"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "sequence_number_deque", "type": "Deque[int]"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "possible_action_deque", "type": "Any"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "possible_next_action_deque", "type": "Any"}, {"lineNumber": 497, "col_offset": 67, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 518, "col_offset": 31, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 526, "col_offset": 39, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 538, "col_offset": 36, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 542, "col_offset": 40, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 543, "col_offset": 41, "nodeName": "action_deque", "type": "Any"}, {"lineNumber": 544, "col_offset": 54, "nodeName": "action_probability_deque", "type": "Deque[Any]"}, {"lineNumber": 545, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 545, "col_offset": 46, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 546, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 546, "col_offset": 50, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 547, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 547, "col_offset": 51, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 548, "col_offset": 48, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 549, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 549, "col_offset": 45, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 550, "col_offset": 50, "nodeName": "sequence_number_deque", "type": "Deque[int]"}, {"lineNumber": 551, "col_offset": 50, "nodeName": "possible_action_deque", "type": "Any"}, {"lineNumber": 552, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 552, "col_offset": 60, "nodeName": "possible_next_action_deque", "type": "Any"}, {"lineNumber": 557, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 557, "col_offset": 35, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 558, "col_offset": 38, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 559, "col_offset": 46, "nodeName": "transition", "type": "int"}, {"lineNumber": 559, "col_offset": 58, "nodeName": "num_transitions", "type": "int"}, {"lineNumber": 561, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 561, "col_offset": 36, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 562, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 562, "col_offset": 36, "nodeName": "actions", "type": "Union[List[Dict[int, float]], List[str]]"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 564, "col_offset": 24, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 566, "col_offset": 36, "nodeName": "rewards", "type": "List[List[float]]"}, {"lineNumber": 567, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 567, "col_offset": 36, "nodeName": "next_states", "type": "List[List[Dict[int, float]]]"}, {"lineNumber": 568, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 568, "col_offset": 36, "nodeName": "next_actions", "type": "Union[List[List[Dict[int, float]]], List[List[str]]]"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 569, "col_offset": 36, "nodeName": "terminals", "type": "List[List[bool]]"}, {"lineNumber": 570, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 570, "col_offset": 36, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 571, "col_offset": 36, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 572, "col_offset": 36, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "set_if_in_range", "type": "functools.partial[nothing]"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "registry", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 127, "col_offset": 60, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "policy", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "forward", "type": "Any"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "DQNPredictor", "type": "Type[ml.rl.training.dqn_predictor.DQNPredictor]"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "_DQNPredictor", "type": "Type[ml.rl.training._dqn_predictor._DQNPredictor]"}, {"lineNumber": 201, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "in_order_dense_to_sparse", "type": "Any"}, {"lineNumber": 204, "col_offset": 68, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 205, "col_offset": 41, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 206, "col_offset": 70, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "action_probability", "type": "Union[Any, float]"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "action_probability", "type": "Union[float, Any]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 326, "col_offset": 50, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 379, "col_offset": 39, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 379, "col_offset": 56, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 387, "col_offset": 50, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 389, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 389, "col_offset": 64, "nodeName": "y", "type": "Any"}, {"lineNumber": 392, "col_offset": 27, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 392, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 559, "col_offset": 24, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 562, "col_offset": 45, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 564, "col_offset": 46, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 566, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 566, "col_offset": 50, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 567, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 567, "col_offset": 54, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 568, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 568, "col_offset": 55, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 569, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 569, "col_offset": 52, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 570, "col_offset": 49, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 571, "col_offset": 54, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 572, "col_offset": 54, "nodeName": "popleft", "type": "Any"}, {"lineNumber": 574, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 574, "col_offset": 52, "nodeName": "possible_next_action_deque", "type": "Any"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "reward_deque", "type": "Deque[Any]"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "next_state_deque", "type": "Deque[Union[Dict[int, float], Dict[nothing, nothing], Dict[int, Any]]]"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "next_action_deque", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "terminal_deque", "type": "Deque[Any]"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "possible_next_action_deque", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "envs", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "policy", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "state_preprocessor", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "policy", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 204, "col_offset": 33, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 206, "col_offset": 70, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "ParametricDQNPredictor", "type": "Type[ml.rl.training.parametric_dqn_predictor.ParametricDQNPredictor]"}, {"lineNumber": 209, "col_offset": 60, "nodeName": "_ParametricDQNPredictor", "type": "Type[ml.rl.training._parametric_dqn_predictor._ParametricDQNPredictor]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "CONTINUOUS_ACTION", "type": "Any"}, {"lineNumber": 213, "col_offset": 40, "nodeName": "test", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "in_order_dense_to_sparse", "type": "Any"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "predict", "type": "Any"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 219, "col_offset": 67, "nodeName": "sparse_actions", "type": "List[Dict[str, int]]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "action_probability", "type": "Union[Any, float]"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "predictor", "type": "Optional[Union[ml.rl.test.gym.gym_predictor.GymPredictor, ml.rl.training.rl_predictor_pytorch.RLPredictor]]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 379, "col_offset": 39, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 392, "col_offset": 27, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 561, "col_offset": 44, "nodeName": "state_deque", "type": "Deque[Union[Dict[int, float], Dict[int, Any]]]"}, {"lineNumber": 562, "col_offset": 45, "nodeName": "action_deque", "type": "Any"}, {"lineNumber": 564, "col_offset": 46, "nodeName": "action_probability_deque", "type": "Deque[Any]"}, {"lineNumber": 571, "col_offset": 54, "nodeName": "sequence_number_deque", "type": "Deque[int]"}, {"lineNumber": 572, "col_offset": 54, "nodeName": "possible_action_deque", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "gym", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 201, "col_offset": 56, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "max", "type": "Callable"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 55, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "action_idx", "type": "Any"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "DDPGPredictor", "type": "Type[ml.rl.training.ddpg_predictor.DDPGPredictor]"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "ActorPredictor", "type": "Type[ml.rl.training.actor_predictor.ActorPredictor]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "in_order_dense_to_sparse", "type": "Any"}, {"lineNumber": 238, "col_offset": 68, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 206, "col_offset": 50, "nodeName": "get", "type": "Any"}, {"lineNumber": 213, "col_offset": 56, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 214, "col_offset": 55, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 217, "col_offset": 54, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "action_dim", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 220, "col_offset": 68, "nodeName": "float", "type": "Any"}, {"lineNumber": 229, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 229, "col_offset": 47, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "sample", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "action_type", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "DISCRETE_ACTION", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 235, "col_offset": 29, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "action", "type": "Any"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "actor_prediction", "type": "Any"}, {"lineNumber": 239, "col_offset": 52, "nodeName": "sparse_next_states", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "map", "type": "Callable"}, {"lineNumber": 220, "col_offset": 57, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 220, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 229, "col_offset": 47, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "EnvType", "type": "Type[EnvType]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 247, "col_offset": 47, "nodeName": "k", "type": "Any"}, {"lineNumber": 206, "col_offset": 50, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "raw_action", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "max", "type": "Callable"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 52, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 220, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "self", "type": "OpenAIGymEnvironment"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "keys", "type": "Any"}, {"lineNumber": 247, "col_offset": 59, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 242, "col_offset": 68, "nodeName": "key", "type": "Any"}]