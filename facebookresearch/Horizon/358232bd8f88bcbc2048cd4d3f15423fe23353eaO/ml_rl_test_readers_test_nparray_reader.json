[{"lineNumber": 11, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "shard", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "shard", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "shard", "type": "int"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "get_test_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "NpArrayReader", "type": "Type[ml.rl.readers.nparray_reader.NpArrayReader]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 43, "col_offset": 65, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "batch", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 71, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 86, "col_offset": 71, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "n", "type": "int"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 70, "nodeName": "num_shards", "type": "int"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "batch", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "num_batches", "type": "int"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 32, "col_offset": 70, "nodeName": "batch", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "get_shard", "type": "Callable[[int], Any]"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "shard", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 75, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "get_shard", "type": "Callable[[int], Any]"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "shard", "type": "int"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 91, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "get_shard", "type": "Callable[[int], Any]"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "shard", "type": "int"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "assert_batch_equal", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "data", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "batch", "type": "Any"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 15, "col_offset": 43, "nodeName": "n", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "randn", "type": "Any"}, {"lineNumber": 16, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "randn", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "offset", "type": "Any"}, {"lineNumber": 32, "col_offset": 76, "nodeName": "k", "type": "str"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "offset", "type": "Any"}, {"lineNumber": 35, "col_offset": 59, "nodeName": "batch", "type": "Any"}, {"lineNumber": 35, "col_offset": 73, "nodeName": "k", "type": "str"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "reader", "type": "ml.rl.readers.nparray_reader.NpArrayReader"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "self", "type": "TestNpArrayReader"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "k", "type": "str"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "offset", "type": "Any"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "length", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "offset", "type": "Any"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "length", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "shard", "type": "int"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "shard", "type": "int"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 58, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "shard", "type": "int"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "shard_size", "type": "int"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "shard", "type": "int"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "randn", "type": "Any"}, {"lineNumber": 22, "col_offset": 55, "nodeName": "n", "type": "Any"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "randn", "type": "Any"}, {"lineNumber": 23, "col_offset": 56, "nodeName": "n", "type": "Any"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "random", "type": "Any"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "np", "type": "module"}]