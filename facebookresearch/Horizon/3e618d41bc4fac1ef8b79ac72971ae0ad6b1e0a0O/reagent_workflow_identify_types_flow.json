[{"lineNumber": 37, "col_offset": 4, "nodeName": "whitelist_features", "type": "Set[int]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "process", "type": "Callable[[List[Any]], Dict[int, reagent.parameters.NormalizationParameters]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "rows", "type": "Any"}, {"lineNumber": 79, "col_offset": 5, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "counts_df", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "frac", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "max_unique_enum_values", "type": "int"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "quantile_size", "type": "int"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "quantile_k2_threshold", "type": "float"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "skip_box_cox", "type": "bool"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "skip_quantiles", "type": "bool"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "feature_overrides", "type": "Optional[Dict[int, str]]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "whitelist_feature_set", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "available_features", "type": "Set[int]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "assert_whitelist_feature_coverage", "type": "bool"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "create_normalization_spec_spark", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "column_name", "type": "str"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "collect", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "normalization_helper", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "normalization_processor", "type": "Callable[[List[Any]], Dict[int, reagent.parameters.NormalizationParameters]]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "rows", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "select", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "count", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "collect", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "sampleBy", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "agg", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "whitelist_features", "type": "Optional[List[int]]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "whitelist_features", "type": "Set[int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "whitelist_feature_set", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "available_features", "type": "Set[int]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "max_unique_enum_values", "type": "int"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "quantile_size", "type": "int"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "quantile_k2_threshold", "type": "float"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "skip_box_cox", "type": "bool"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "skip_quantiles", "type": "bool"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "feature_overrides", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "whitelist_features", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "assert_whitelist_feature_coverage", "type": "bool"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "NormalizationParameters", "type": "Type[reagent.parameters.NormalizationParameters]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 107, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "alias", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "counts_df", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "frac", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 120, "col_offset": 47, "nodeName": "frac", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "alias", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "fid", "type": "int"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "fid", "type": "int"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "whitelist_features", "type": "Set[int]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "whitelist_feature_set", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "available_features", "type": "Set[int]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "available_features", "type": "Set[int]"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "whitelist_feature_set", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "row", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "get_feature_norm_metadata", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "norm_params", "type": "Dict[str, Optional[Union[Dict[int, str], bool, float, int]]]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "norm_metdata", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "validate_whitelist_features", "type": "Callable[[Dict[int, reagent.parameters.NormalizationParameters]], None]"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "NormalizationParameters", "type": "Type[reagent.parameters.NormalizationParameters]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "table_name", "type": "str"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "preprocessing_options", "type": "reagent.workflow.types.PreprocessingOptions"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "groupBy", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "row", "type": "Any"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "row", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "groupBy", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "params", "type": "Dict[int, reagent.parameters.NormalizationParameters]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "row", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "norm_metdata", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "params", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "explode", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "collect_list", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "NormalizationParameters", "type": "Type[reagent.parameters.NormalizationParameters]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "whitelist_features", "type": "Set[int]"}, {"lineNumber": 63, "col_offset": 65, "nodeName": "whitelist_features", "type": "Set[int]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "alias", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "row", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "row", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "column", "type": "Any"}]