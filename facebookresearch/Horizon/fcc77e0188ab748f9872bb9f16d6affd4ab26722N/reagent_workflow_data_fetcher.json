[{"lineNumber": 25, "col_offset": 0, "nodeName": "calc_custom_reward", "type": "Callable[[Any, Any, str], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, Any, int, float], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 228, "col_offset": 5, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "expr", "type": "str"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "get_step_udf", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "get_not_terminal_udf", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "onehot_udf", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 192, "col_offset": 7, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "withColumnRenamed", "type": "Any"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "calc_custom_reward", "type": "Callable[[Any, Any, str], Any]"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "df", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "expr", "type": "str"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "sql", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "udf", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "get_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 134, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "make_next_udf", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 138, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 141, "col_offset": 9, "nodeName": "make_sparse2dense", "type": "Callable[[Any, str, List[Any]], Any]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "find", "type": "Callable[[str], Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "udf", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "udf", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "get_not_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "encode", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "udf", "type": "Any"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "select", "type": "Any"}, {"lineNumber": 229, "col_offset": 13, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "perform_preprocessing", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "parquet", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "parquet_url", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 38, "col_offset": 67, "nodeName": "gamma", "type": "float"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "calc_custom_reward", "type": "Callable[[Any, Any, str], Any]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "get_step_udf", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "udf", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "get_next", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "return_type", "type": "Any"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "List", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "StructType", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "possible_keys", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "udf", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "sparse2dense", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "output_type", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "col_name", "type": "str"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "withColumn", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "col_name", "type": "str"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "MapType", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "next_map_udf", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "where", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "where_udf", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 164, "col_offset": 49, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 165, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "get_not_terminal_udf", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "onehot", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "onehot_udf", "type": "Any"}, {"lineNumber": 181, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "onehot_udf", "type": "Any"}, {"lineNumber": 187, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "col", "type": "Any"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "df", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "crc32", "type": "Any"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "MAX_UINT32", "type": "int"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "filter", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "cast", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "states", "type": "List[int]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "custom_reward_expression", "type": "Optional[str]"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "multi_steps", "type": "Optional[int]"}, {"lineNumber": 240, "col_offset": 14, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "custom_reward_expression", "type": "str"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "temp_reward_name", "type": "str"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "temp_table_name", "type": "str"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "drop", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "table_name", "type": "str"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "calc_reward_multi_steps", "type": "Callable[[Any, Any, int, float], Any]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "df", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 73, "col_offset": 62, "nodeName": "gamma", "type": "Optional[float]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "step", "type": "int"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "make_next_udf", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "sparse2dense_udf", "type": "Any"}, {"lineNumber": 129, "col_offset": 54, "nodeName": "col_name", "type": "str"}, {"lineNumber": 130, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 130, "col_offset": 51, "nodeName": "col", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "col", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "List", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 48, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 207, "col_offset": 32, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "mode", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "min", "type": "Callable"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "multi_steps", "type": "int"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "key", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "col_name", "type": "str"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 148, "col_offset": 31, "nodeName": "item", "type": "str"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "make_next_udf", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "arr", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "arr_item", "type": "str"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "target", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "make_next_udf", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "sample_range", "type": "Optional[Tuple[float, float]]"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "lower_bound", "type": "float"}, {"lineNumber": 195, "col_offset": 74, "nodeName": "upper_bound", "type": "float"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 200, "col_offset": 45, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 201, "col_offset": 54, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 202, "col_offset": 50, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 203, "col_offset": 59, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 208, "col_offset": 52, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "col", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "next_col", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "map_col", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "col_name", "type": "str"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "col_name", "type": "str"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "LongType", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "result", "type": "List[int]"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "ArrayType", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "col", "type": "Any"}, {"lineNumber": 195, "col_offset": 57, "nodeName": "col", "type": "Any"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "preprocessed_df", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "step", "type": "int"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "BooleanType", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "val", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "presence", "type": "List[bool]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "dense", "type": "List[float]"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "LongType", "type": "Any"}]