[{"lineNumber": 32, "col_offset": 16, "nodeName": "Environment", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "GridWorld", "type": "Type[GridWorld]"}, {"lineNumber": 205, "col_offset": 26, "nodeName": "Environment", "type": "Any"}, {"lineNumber": 259, "col_offset": 0, "nodeName": "GAMMA", "type": "float"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "StateReward", "type": "Any"}, {"lineNumber": 105, "col_offset": 70, "nodeName": "StateDistribution", "type": "Any"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 227, "col_offset": 70, "nodeName": "StateDistribution", "type": "Any"}, {"lineNumber": 261, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "device", "type": "Any"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "opt_policy", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "value_func", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "behavivor_policy", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "target_policy", "type": "Any"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "model", "type": "NoiseGridWorldModel"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "value_func", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "log", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "log_generator", "type": "Any"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "states", "type": "Generator[Any, Any, None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "walls", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "start", "type": "Tuple[()]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "goal", "type": "Tuple[()]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "walls", "type": "List[Tuple[int, int]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "_current_state", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "sr", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "dump", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "dump", "type": "str"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "dump", "type": "str"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "dump", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "dump", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "dump", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "dump", "type": "str"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "dump", "type": "str"}, {"lineNumber": 192, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "_gridworld", "type": "GridWorld"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "noise_prob", "type": "float"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "_steps_taken", "type": "int"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "current_state", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "probs", "type": "List[Union[float, Any]]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "states", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "states", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "states", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "current_state", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "_current_state", "type": "None"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "state", "type": "None"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "from_grid", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 19, "nodeName": "ActionSpace", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "TabularPolicy", "type": "Any"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 292, "col_offset": 14, "nodeName": "DPTrainer", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 292, "col_offset": 35, "nodeName": "opt_policy", "type": "Any"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "train", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "RandomRLPolicy", "type": "Any"}, {"lineNumber": 298, "col_offset": 38, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "EpsilonGreedyRLPolicy", "type": "Any"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "opt_policy", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "NoiseGridWorldModel", "type": "Type[NoiseGridWorldModel]"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 300, "col_offset": 43, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 301, "col_offset": 17, "nodeName": "DPValueFunction", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "target_policy", "type": "Any"}, {"lineNumber": 301, "col_offset": 48, "nodeName": "model", "type": "NoiseGridWorldModel"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "GAMMA", "type": "float"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "DPValueFunction", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "target_policy", "type": "Any"}, {"lineNumber": 302, "col_offset": 50, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 302, "col_offset": 61, "nodeName": "GAMMA", "type": "float"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "PolicyLogGenerator", "type": "Any"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 310, "col_offset": 50, "nodeName": "behavivor_policy", "type": "Any"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "mdps", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "mdps", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "RLEstimatorInput", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 327, "col_offset": 40, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "estimator_input", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "max_horizon", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "walls", "type": "Iterable[Tuple[int, int]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "r", "type": "Sequence[str]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "grid", "type": "Sequence[Sequence[str]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "cls", "type": "Type[GridWorld]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "start", "type": "Union[Tuple[int, int], Tuple[()]]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "goal", "type": "Union[Tuple[int, int], Tuple[()]]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "max_horizon", "type": "int"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "walls", "type": "List[Tuple[int, int]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "_current_state", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "_current_state", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "State", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "Action", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "StateReward", "type": "Any"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "reward", "type": "float"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "State", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "Action", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "_next_state_reward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "state", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "action", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "dump", "type": "str"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "dump", "type": "str"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "ValueFunction", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "dump", "type": "str"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "dump", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "max_horizon", "type": "int"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "reset", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "_gridworld", "type": "GridWorld"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "State", "type": "Any"}, {"lineNumber": 227, "col_offset": 59, "nodeName": "Action", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "probs", "type": "List[Union[float, Any]]"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "epsilon", "type": "float"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "sr", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "_gridworld", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "_gridworld", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "_gridworld", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "_gridworld", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "device", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "GridWorld", "type": "Type[GridWorld]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "GAMMA", "type": "float"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "log", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 14, "nodeName": "GAMMA", "type": "float"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "log", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "target_policy", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "value_func", "type": "Any"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "grid", "type": "Sequence[Sequence[str]]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "y", "type": "int"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "c", "type": "str"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "r", "type": "Sequence[str]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "g", "type": "str"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "State", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "walls", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_validate", "type": "Callable[[Tuple[int, int]], bool]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "from_pos", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "value", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "walls", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "StateReward", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "reward", "type": "float"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "is_end", "type": "bool"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "_transit", "type": "Callable[[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int], float, bool]]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "State", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "is_end", "type": "bool"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "sr", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "RewardProbability", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "reward", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "state", "type": "Tuple[int, int]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "pos", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "value", "type": "float"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "dump", "type": "str"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "dump", "type": "str"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "_validate", "type": "Callable[[Tuple[int, int]], bool]"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "from_pos", "type": "Tuple[int, int]"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "_gridworld", "type": "GridWorld"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "noise_prob", "type": "float"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "value", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "_next_state_reward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 233, "col_offset": 27, "nodeName": "states", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "rp", "type": "nothing"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "torch", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "DMEstimator", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "IPSEstimator", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "IPSEstimator", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "DREstimator", "type": "Any"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "DREstimator", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "MAGICEstimator", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "grid", "type": "Sequence[Sequence[str]]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "g", "type": "str"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "State", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "State", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "is_terminal", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "y", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "reward", "type": "float"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "is_end", "type": "bool"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "_transit", "type": "Callable[[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int], float, bool]]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "value", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "sr", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "size", "type": "Any"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "x", "type": "int"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "y", "type": "int"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "y", "type": "int"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "State", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "pos", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "state_values", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "value", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "value", "type": "Union[float, Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "size", "type": "Tuple[int, int]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "x", "type": "int"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "y", "type": "int"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "start", "type": "Tuple[int, int]"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "self", "type": "ThomasGridWorld"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "State", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "action", "type": "Any"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "_gridworld", "type": "GridWorld"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "sr", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "states", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "RewardProbability", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "states", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "RewardProbability", "type": "Any"}, {"lineNumber": 239, "col_offset": 53, "nodeName": "reward", "type": "Any"}, {"lineNumber": 268, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "dump_policy", "type": "Callable[[Any], str]"}, {"lineNumber": 295, "col_offset": 55, "nodeName": "opt_policy", "type": "Any"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "dump_value_func", "type": "Callable[[Any], str]"}, {"lineNumber": 296, "col_offset": 65, "nodeName": "value_func", "type": "Any"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "dump_value_func", "type": "Callable[[Any], str]"}, {"lineNumber": 305, "col_offset": 35, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "mdps", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "generate_log", "type": "Any"}, {"lineNumber": 315, "col_offset": 51, "nodeName": "state", "type": "Any"}, {"lineNumber": 317, "col_offset": 55, "nodeName": "state", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "device", "type": "Any"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 332, "col_offset": 60, "nodeName": "device", "type": "Any"}, {"lineNumber": 336, "col_offset": 60, "nodeName": "device", "type": "Any"}, {"lineNumber": 339, "col_offset": 59, "nodeName": "device", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "c", "type": "str"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "y", "type": "int"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "g", "type": "str"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "action", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "reward", "type": "float"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "is_end", "type": "bool"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "_transit", "type": "Callable[[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int], float, bool]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "reward", "type": "float"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "is_end", "type": "bool"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "_transit", "type": "Callable[[Tuple[int, int], Tuple[int, int]], Tuple[Tuple[int, int], float, bool]]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "size", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "state", "type": "Tuple[int, int]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "goal", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "state", "type": "Tuple[int, int]"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "walls", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "y", "type": "int"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "state_values", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "valfunc", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "goal", "type": "Tuple[int, int]"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "self", "type": "NoiseGridWorldModel"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "reward", "type": "nothing"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "reward", "type": "Any"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "prob", "type": "nothing"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 239, "col_offset": 53, "nodeName": "sr", "type": "Any"}, {"lineNumber": 239, "col_offset": 64, "nodeName": "probs", "type": "List[Union[float, Any]]"}, {"lineNumber": 295, "col_offset": 33, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 296, "col_offset": 39, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "gridworld", "type": "GridWorld"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "log_generator", "type": "Any"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "mdps", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "x", "type": "int"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "y", "type": "int"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "g", "type": "str"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "walls", "type": "List[Tuple[int, int]]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 100, "col_offset": 67, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "State", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "walls", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "pos", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "State", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "walls", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "dump", "type": "str"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "self", "type": "ThomasGridWorld"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "to_pos", "type": "Tuple[int, int]"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "sr", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "rp", "type": "nothing"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "sr", "type": "Any"}, {"lineNumber": 236, "col_offset": 43, "nodeName": "rp", "type": "nothing"}, {"lineNumber": 236, "col_offset": 53, "nodeName": "probs", "type": "List[Union[float, Any]]"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "sr", "type": "Any"}, {"lineNumber": 239, "col_offset": 70, "nodeName": "value", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 63, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "x", "type": "int"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "y", "type": "int"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "x", "type": "int"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "y", "type": "int"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "self", "type": "GridWorld"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "greedy", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "value", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "dump", "type": "str"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "value", "type": "Any"}, {"lineNumber": 239, "col_offset": 70, "nodeName": "a", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "x", "type": "int"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "y", "type": "int"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "action", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "dump", "type": "str"}, {"lineNumber": 236, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "policy", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "action", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "dump", "type": "str"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "dump", "type": "str"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "State", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "pos", "type": "Tuple[int, int]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "action", "type": "Any"}]