[{"lineNumber": 24, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "level", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "item", "type": "int"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "seed", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "deterministic_random_value", "type": "float"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "max_value", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "delta", "type": "float"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "total_value", "type": "float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "min_value", "type": "float"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "counts", "type": "Dict[int, int]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "SumTree", "type": "Type[ml.rl.replay_memory.sum_tree.SumTree]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "SumTree", "type": "Type[ml.rl.replay_memory.sum_tree.SumTree]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "SumTree", "type": "Type[ml.rl.replay_memory.sum_tree.SumTree]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "SumTree", "type": "Type[ml.rl.replay_memory.sum_tree.SumTree]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "nodes_at_this_depth", "type": "int"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "item", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "seed", "type": "int"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "max_value", "type": "int"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "delta", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "stratified_sample", "type": "Callable[[int], List[int]]"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "max_recorded_priority", "type": "float"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "k", "type": "int"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "sum_tree", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "SumTree", "type": "Type[ml.rl.replay_memory.sum_tree.SumTree]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "sum_tree", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "sum_tree", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "sum_tree", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "get", "type": "Callable[[int], float]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "get", "type": "Callable[[int], float]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "level", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "nodes_at_this_depth", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "random", "type": "module"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "deterministic_random_value", "type": "float"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "total_value", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "min_value", "type": "float"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "max_value", "type": "int"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "seed", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "counts", "type": "Dict[int, int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "counts", "type": "Dict[int, int]"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "counts", "type": "Dict[int, int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "stratified_sample", "type": "Callable[[int], List[int]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "set", "type": "Callable[[int, Union[float, int]], None]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "max_recorded_priority", "type": "float"}, {"lineNumber": 149, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "sum_tree", "type": "module"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "level", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "nodes", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "deterministic_random_value", "type": "float"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "samples", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "level", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "sample", "type": "Callable[..., int]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "self", "type": "SumTreeTest"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "_tree", "type": "ml.rl.replay_memory.sum_tree.SumTree"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "SumTreeTest"}]