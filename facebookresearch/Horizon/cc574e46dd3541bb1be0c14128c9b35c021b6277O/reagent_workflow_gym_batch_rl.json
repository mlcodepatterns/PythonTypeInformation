[{"lineNumber": 37, "col_offset": 0, "nodeName": "initialize_seed", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "timeline_operator", "type": "Callable[[str, reagent.workflow.types.TableSpec], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "create_predictor_policy_from_model", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "PRE_TIMELINE_SUFFIX", "type": "str"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "pd_df", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "spark", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "input_name", "type": "str"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "output_name", "type": "str"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "table_name", "type": "str"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "jit_model", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "avg_reward", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "initialize_seed", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "make", "type": "Callable[[str], Any]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "env_name", "type": "str"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "create_from_env", "type": "Callable"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "fill_replay_buffer", "type": "Callable[[Any, reagent.replay_memory.circular_replay_buffer.ReplayBuffer, int], None]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "num_train_transitions", "type": "int"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "is_discrete_action", "type": "bool"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "is_discrete_action", "type": "bool"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "replay_buffer_to_pre_timeline_df", "type": "Callable[[Optional[bool], reagent.replay_memory.circular_replay_buffer.ReplayBuffer], Any]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "is_discrete_action", "type": "bool"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "replay_buffer", "type": "reagent.replay_memory.circular_replay_buffer.ReplayBuffer"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "to_pickle", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "pkl_path", "type": "str"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "read_pickle", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "pkl_path", "type": "str"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "get_spark_session", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "createDataFrame", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "pd_df", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "createTempView", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "input_name", "type": "str"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "pd_df", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "input_name", "type": "str"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "output_name", "type": "str"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "include_possible_actions", "type": "bool"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "call_spark_class", "type": "Callable[[Any, str, str], None]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "spark", "type": "Any"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "Env", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "Module", "type": "Any"}, {"lineNumber": 103, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "predictor", "type": "reagent.prediction.dqn_torch_predictor.DiscreteDqnTorchPredictor"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 134, "col_offset": 7, "nodeName": "use_gpu", "type": "Optional[bool]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "use_gpu", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "initialize_seed", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "identify_and_train_network", "type": "Callable[..., reagent.workflow.types.RLTrainingOutput]"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "make", "type": "Callable[[str], Any]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "env_name", "type": "str"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "load", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "create_predictor_policy_from_model", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "jit_model", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "create_for_env", "type": "Callable"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "evaluate_for_n_episodes", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "avg_reward", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "passing_score_bar", "type": "float"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "seed", "type": "Optional[int]"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 56, "col_offset": 10, "nodeName": "EnvFactory", "type": "Type[reagent.gym.envs.env_factory.EnvFactory]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "ReplayBuffer", "type": "Type[reagent.replay_memory.circular_replay_buffer.ReplayBuffer]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "num_train_transitions", "type": "int"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "Box", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "spark", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "table_name", "type": "str"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "PRE_TIMELINE_SUFFIX", "type": "str"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "gym", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "nn", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "DiscreteDqnTorchPredictor", "type": "Type[reagent.prediction.dqn_torch_predictor.DiscreteDqnTorchPredictor]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "predictor", "type": "reagent.prediction.dqn_torch_predictor.DiscreteDqnTorchPredictor"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "DiscreteDqnTorchPredictorPolicy", "type": "Type[reagent.workflow.predictor_policies.DiscreteDqnTorchPredictorPolicy]"}, {"lineNumber": 107, "col_offset": 47, "nodeName": "predictor", "type": "reagent.prediction.dqn_torch_predictor.DiscreteDqnTorchPredictor"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "Box", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "model", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "num_train_epochs", "type": "int"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "use_gpu", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "reward_options", "type": "Optional[reagent.workflow.types.RewardOptions]"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "warmstart_path", "type": "Optional[str]"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "validator", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "publisher", "type": "Any"}, {"lineNumber": 148, "col_offset": 10, "nodeName": "EnvFactory", "type": "Type[reagent.gym.envs.env_factory.EnvFactory]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "jit", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "training_output", "type": "reagent.workflow.types.RLTrainingOutput"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "eval_temperature", "type": "float"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "Agent", "type": "Type[reagent.gym.agents.agent.Agent]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "policy", "type": "Union[reagent.workflow.predictor_policies.ActorTorchPredictorPolicy, reagent.workflow.predictor_policies.DiscreteDqnTorchPredictorPolicy]"}, {"lineNumber": 158, "col_offset": 10, "nodeName": "num_eval_episodes", "type": "int"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "env", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "agent", "type": "reagent.gym.agents.agent.Agent"}, {"lineNumber": 158, "col_offset": 61, "nodeName": "max_steps", "type": "Optional[int]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "avg_reward", "type": "Any"}, {"lineNumber": 167, "col_offset": 48, "nodeName": "passing_score_bar", "type": "float"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "gym", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "pkl_path", "type": "str"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "input_table_spec", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 67, "nodeName": "arg", "type": "Dict[str, Union[List[nothing], List[str], str, bool]]"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "gym", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "ActorTorchPredictor", "type": "Type[reagent.prediction.dqn_torch_predictor.ActorTorchPredictor]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "ActorTorchPredictorPolicy", "type": "Type[reagent.workflow.predictor_policies.ActorTorchPredictorPolicy]"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "predictor", "type": "reagent.prediction.dqn_torch_predictor.ActorTorchPredictor"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "get_action_extractor", "type": "Callable[[Any], Callable[[Any], Any]]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "num_eval_episodes", "type": "int"}, {"lineNumber": 162, "col_offset": 54, "nodeName": "avg_reward", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "gym", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "json", "type": "module"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "gym", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "policy", "type": "Union[reagent.workflow.predictor_policies.ActorTorchPredictorPolicy, reagent.workflow.predictor_policies.DiscreteDqnTorchPredictorPolicy]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "env", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "env", "type": "Any"}]