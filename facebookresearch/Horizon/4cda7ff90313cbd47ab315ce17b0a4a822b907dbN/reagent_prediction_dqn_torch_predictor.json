[{"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "DqnPolicyActionSet", "type": "Type[reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "DqnPolicyActionSet", "type": "Type[reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 166, "col_offset": 9, "nodeName": "DqnPolicyActionSet", "type": "Type[reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "softmax_temperature", "type": "None"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 25, "col_offset": 65, "nodeName": "List", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "greedy_act_idx", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "softmax_temperature", "type": "None"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "possible_actions_with_presence", "type": "Tuple[Any, Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "state_feature_presence", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "greedy_act_idx", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "PythonSparseToDenseProcessor", "type": "Type[reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "internal_sparse_to_dense", "type": "reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "state_features", "type": "List[Dict[int, float]]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "state_feature_presence", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "state_feature_presence", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "policy_given_q_values", "type": "Callable[..., reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "DqnPolicyActionSet", "type": "Type[reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "PythonSparseToDenseProcessor", "type": "Type[reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor]"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "PythonSparseToDenseProcessor", "type": "Type[reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "state_internal_sparse_to_dense", "type": "reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "state_features", "type": "List[Dict[int, float]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "action_internal_sparse_to_dense", "type": "reagent.preprocessing.sparse_to_dense.PythonSparseToDenseProcessor"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "action_features", "type": "List[Dict[int, float]]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "tiled_states", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "possible_actions_with_presence", "type": "Tuple[Any, Any]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "policy_given_q_values", "type": "Callable[[Any, float, Any], reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "DqnPolicyActionSet", "type": "Type[reagent.types.DqnPolicyActionSet]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "state_sorted_features", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "dense_state_features", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "dense_state_feature_exist_mask", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 25, "col_offset": 70, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "state", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "state_feature_presence", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "choice", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "greedy_act_idx", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "state_sorted_features", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "action_sorted_features", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "List", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "List", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "dense_state_features", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "dense_state_feature_exist_mask", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "dense_action_features", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "dense_action_feature_exist_mask", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "tiled_states", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "state_feature_presence", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "choice", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "greedy_act_idx", "type": "int"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "max", "type": "Any"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 69, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "action_names", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "action_names", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "retval_item", "type": "Dict[Any, Union[float, Any]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "retval", "type": "List[Dict[Any, Union[float, Any]]]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "size", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "DiscreteDqnTorchPredictor"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "action", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 25, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 80, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "detach", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "size", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "greedy_act_idx", "type": "int"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "ParametricDqnTorchPredictor"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "action", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "values", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "tiled_states", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "q_scores_softmax_numpy", "type": "Any"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "softmax_act_idx", "type": "int"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "masked_softmax", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "softmax_temperature", "type": "float"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "masked_softmax", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "possible_actions_presence", "type": "Any"}, {"lineNumber": 176, "col_offset": 68, "nodeName": "softmax_temperature", "type": "float"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "q_scores", "type": "Any"}]