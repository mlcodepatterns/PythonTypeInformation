[{"lineNumber": 18, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "_verify_optimizer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_make_optimizer_with_step_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_make_optimizer_with_multistep_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_make_optimizer_with_exponential_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_make_optimizer_with_cosine_annealing_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_make_optimizer_with_one_cycle_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_make_optimizer_with_cosine_annealing_warm_restarts_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "lr_schedulers", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_verify_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "is_torch_optimizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "is_torch_lr_scheduler", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 25, "col_offset": 50, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 25, "col_offset": 55, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "self", "type": "TestMakeOptimizer"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "MultiStepLR", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "ExponentialLR", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "CosineAnnealingLR", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "OneCycleLR", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "CosineAnnealingWarmRestarts", "type": "Any"}]