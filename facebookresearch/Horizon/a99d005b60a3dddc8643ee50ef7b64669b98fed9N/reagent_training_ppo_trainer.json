[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "ReAgentLightningModule", "type": "Type[reagent.training.reagent_lightning_module.ReAgentLightningModule]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "scorer", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "scorer", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "sampler", "type": "reagent.gym.types.Sampler"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "sampler", "type": "reagent.gym.types.Sampler"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "gamma", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "optimizer_value_net", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "optimizer_value_net", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "reward_clip", "type": "float"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "reward_clip", "type": "float"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "normalize", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "subtract_mean", "type": "bool"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "subtract_mean", "type": "bool"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "offset_clamp_min", "type": "bool"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "offset_clamp_min", "type": "bool"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "update_freq", "type": "int"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "update_freq", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "update_epochs", "type": "int"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "update_epochs", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "ppo_batch_size", "type": "int"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "ppo_batch_size", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "ppo_epsilon", "type": "float"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "ppo_epsilon", "type": "float"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "entropy_weight", "type": "float"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "entropy_weight", "type": "float"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "value_net", "type": "Optional[reagent.models.base.ModelBase]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "value_net", "type": "Optional[reagent.models.base.ModelBase]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "traj_buffer", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "step", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "losses", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "actions", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "action", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "offset_clamp_min", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "target_propensity", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "losses", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "opts", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "traj_buffer", "type": "List[nothing]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "traj", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "training_batch_list", "type": "List[reagent.types.PolicyGradientInput]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "ppo_loss", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "field", "type": "Callable"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "field", "type": "Callable"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "field", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "policy", "type": "reagent.gym.policies.policy.Policy"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "policy", "type": "reagent.gym.policies.policy.Policy"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "value_net", "type": "Optional[reagent.models.base.ModelBase]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "value_loss_fn", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "PolicyGradientInput", "type": "Type[reagent.types.PolicyGradientInput]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "detach", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "state", "type": "reagent.types.FeatureData"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "discounted_returns", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 64, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "baselines", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "entropy_weight", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "Optimizer", "type": "Type[reagent.optimizer.optimizer.Optimizer]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "PolicyGradientInput", "type": "Type[reagent.types.PolicyGradientInput]"}, {"lineNumber": 159, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "training_batch", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "update_epochs", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "random_order", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "value_net_opt", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "ppo_opt", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "get_optimizers", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "loss", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "value_net_loss", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "manual_backward", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "ppo_loss", "type": "Any"}, {"lineNumber": 200, "col_offset": 39, "nodeName": "ppo_opt", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "MSELoss", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ppo_epsilon", "type": "float"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "ppo_epsilon", "type": "float"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "rlt", "type": "module"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "reward", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "clone", "type": "Any"}, {"lineNumber": 94, "col_offset": 64, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "whiten", "type": "Callable[[Any, Optional[bool]], Any]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "value_loss_fn", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "baselines", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "min", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "scores", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "losses", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "opts", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "rlt", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "traj_buffer", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "step", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "update_freq", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "update_model", "type": "Callable[[], Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "placeholder_loss", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "traj_buffer", "type": "Any"}, {"lineNumber": 167, "col_offset": 40, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "randperm", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "ppo_batch_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "idx", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "training_batch_list", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "_trajectory_to_losses", "type": "Callable[[reagent.types.PolicyGradientInput], Dict[str, Any]]"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "traj", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "manual_backward", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "value_net_loss", "type": "Any"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "value_net_opt", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ppo_opt", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "ppo_opt", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "ModelBase", "type": "Type[reagent.models.base.ModelBase]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "Optimizer__Union", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "Optimizer__Union", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "subtract_mean", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "detach", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "scores", "type": "Any"}, {"lineNumber": 116, "col_offset": 58, "nodeName": "actions", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "exp", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "characteristic_eligibility", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "losses", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "entropy_weight", "type": "Any"}, {"lineNumber": 133, "col_offset": 76, "nodeName": "entropy", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "opts", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "opts", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "traj_buffer", "type": "Any"}, {"lineNumber": 171, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "traj_buffer", "type": "Any"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "random_order", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "_update_model", "type": "Callable[[List[reagent.types.PolicyGradientInput]], Any]"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "training_batch_list", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "PolicyGradientInput", "type": "Type[reagent.types.PolicyGradientInput]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "loss", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "value_net_opt", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "value_net_opt", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "stack", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "state", "type": "reagent.types.FeatureData"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "baselines", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "target_propensity", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "float", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "characteristic_eligibility", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "optimizer_value_net", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "scorer", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "traj_buffer", "type": "Any"}, {"lineNumber": 173, "col_offset": 63, "nodeName": "i", "type": "Any"}, {"lineNumber": 173, "col_offset": 68, "nodeName": "idx", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "rlt", "type": "module"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "stack", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "losses", "type": "Dict[str, List[Any]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "reward_clip", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "detach", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "offset_reinforcement", "type": "Any"}, {"lineNumber": 124, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "ppo_epsilon", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "ppo_epsilon", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "ppo_batch_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 173, "col_offset": 56, "nodeName": "i", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "losses", "type": "Dict[str, List[Any]]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 192, "col_offset": 41, "nodeName": "losses", "type": "Dict[str, List[Any]]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "self", "type": "PPOTrainer"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "k", "type": "str"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "trajectory", "type": "reagent.types.PolicyGradientInput"}]