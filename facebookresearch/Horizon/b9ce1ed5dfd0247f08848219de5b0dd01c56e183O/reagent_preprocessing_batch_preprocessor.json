[{"lineNumber": 17, "col_offset": 0, "nodeName": "batch_to_device", "type": "Callable[[Dict[str, Any], Any], Any]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "Module", "type": "Any"}, {"lineNumber": 24, "col_offset": 35, "nodeName": "BatchPreprocessor", "type": "Type[BatchPreprocessor]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "BatchPreprocessor", "type": "Type[BatchPreprocessor]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "BatchPreprocessor", "type": "Type[BatchPreprocessor]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "out", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "k", "type": "str"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "out", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "DiscreteDqnInput", "type": "Type[reagent.types.DiscreteDqnInput]"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "ParametricDqnInput", "type": "Type[reagent.types.ParametricDqnInput]"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "PolicyNetworkInput", "type": "Type[reagent.types.PolicyNetworkInput]"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "device", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "rlt", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "rlt", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "rlt", "type": "module"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "out", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "to", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "device", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "Preprocessor", "type": "Type[reagent.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 26, "col_offset": 75, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "batch_to_device", "type": "Callable[[Dict[str, Any], Any], Any]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "DiscreteDqnInput", "type": "Type[reagent.types.DiscreteDqnInput]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "Preprocessor", "type": "Type[reagent.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "Preprocessor", "type": "Type[reagent.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "batch_to_device", "type": "Callable[[Dict[str, Any], Any], Any]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "ParametricDqnInput", "type": "Type[reagent.types.ParametricDqnInput]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "Preprocessor", "type": "Type[reagent.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "Preprocessor", "type": "Type[reagent.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "batch_to_device", "type": "Callable[[Dict[str, Any], Any], Any]"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "device", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "state_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "action_preprocessor", "type": "reagent.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "PolicyNetworkInput", "type": "Type[reagent.types.PolicyNetworkInput]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "device", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "F", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "to", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "int64", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "rlt", "type": "module"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "action", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "device", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "self", "type": "ParametricDqnBatchPreprocessor"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "rlt", "type": "module"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "device", "type": "Any"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "device", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "self", "type": "PolicyNetworkBatchPreprocessor"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "rlt", "type": "module"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "to", "type": "Any"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "int64", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "preprocessed_state", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "preprocessed_next_state", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "ExtraData", "type": "Type[reagent.types.ExtraData]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "preprocessed_state", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "preprocessed_next_state", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "preprocessed_action", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "preprocessed_next_action", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "ExtraData", "type": "Type[reagent.types.ExtraData]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "preprocessed_state", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "preprocessed_next_state", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "preprocessed_action", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "FeatureData", "type": "Type[reagent.types.FeatureData]"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "preprocessed_next_action", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "ExtraData", "type": "Type[reagent.types.ExtraData]"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "k", "type": "str"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 50, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "self", "type": "DiscreteDqnBatchPreprocessor"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "rlt", "type": "module"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "rlt", "type": "module"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "rlt", "type": "module"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "rlt", "type": "module"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "rlt", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "rlt", "type": "module"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "rlt", "type": "module"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "rlt", "type": "module"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "rlt", "type": "module"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "rlt", "type": "module"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "rlt", "type": "module"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "rlt", "type": "module"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "rlt", "type": "module"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "batch", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "batch", "type": "Dict[str, Any]"}]