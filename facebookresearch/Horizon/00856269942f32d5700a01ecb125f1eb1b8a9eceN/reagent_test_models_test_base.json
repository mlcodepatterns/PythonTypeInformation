[{"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "ModelBase", "type": "Type[reagent.models.base.ModelBase]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "Any", "type": "Any"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "Any", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "Any", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "Any", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "float_features", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "float_features", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "model", "type": "Model"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "action", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "ModelOutput", "type": "Type[ModelOutput]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "Model", "type": "Type[Model]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected_num_params", "type": "int"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "expected_num_inputs", "type": "int"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "expected_num_outputs", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check_save_load", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestBase"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "model", "type": "Model"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "expected_num_params", "type": "int"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "expected_num_inputs", "type": "int"}, {"lineNumber": 55, "col_offset": 67, "nodeName": "expected_num_outputs", "type": "int"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "FeatureData", "type": "Type[reagent.core.types.FeatureData]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "FeatureData", "type": "Type[reagent.core.types.FeatureData]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "action", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "linear", "type": "Any"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "state", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "rlt", "type": "module"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "randn", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "rlt", "type": "module"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "randn", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "self", "type": "Model"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "torch", "type": "Any"}]