[{"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "RLTrainerMixin", "type": "Type[reagent.training.rl_trainer_pytorch.RLTrainerMixin]"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "ReAgentLightningModule", "type": "Type[reagent.training.reagent_lightning_module.ReAgentLightningModule]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rl_parameters", "type": "reagent.core.parameters.RLParameters"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "rl", "type": "reagent.core.parameters.RLParameters"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "minibatches_per_step", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "q1_network_target", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "q_network_optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "q_network_optimizer", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "actor_network_target", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "actor_network_optimizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "actor_network_optimizer", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "noise_variance", "type": "float"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "noise_variance", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "noise_clip_range", "type": "Tuple[float, float]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "delayed_policy_update", "type": "int"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "delayed_policy_update", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "target_params", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "source_params", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "target_params", "type": "List[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "source_params", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "action", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "action", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "next_state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "next_state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "reward", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "reward", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "q1_value", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "q1_loss", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "RLParameters", "type": "Type[reagent.core.parameters.RLParameters]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "field", "type": "Callable"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "field", "type": "Callable"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "field", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "minibatches_per_step", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "q2_network_target", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "noise_clip", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "target_params", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "source_params", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "PolicyNetworkInput", "type": "Type[reagent.core.types.PolicyNetworkInput]"}, {"lineNumber": 113, "col_offset": 80, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "PolicyNetworkInput", "type": "Type[reagent.core.types.PolicyNetworkInput]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "training_batch", "type": "reagent.core.types.PolicyNetworkInput"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "next_actor", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "action", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "next_state_actor", "type": "Tuple[reagent.core.types.FeatureData, reagent.core.types.FeatureData]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "next_q_value", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "target_q_value", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "action", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "mse_loss", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "q1_value", "type": "Any"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "target_q_value", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "q1_loss", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "q1_loss", "type": "Any"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "q2_value", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "q2_loss", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "actor_action", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "actor_q1_value", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "actor_loss", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "copy", "type": "module"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "copy", "type": "module"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "noise_clip", "type": "float"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "SoftUpdate", "type": "Type[reagent.optimizer.soft_update.SoftUpdate]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "target_params", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "source_params", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "rlt", "type": "module"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "rlt", "type": "module"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "noise_variance", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "next_state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "q1_network_target", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "reward", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "F", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "batch_idx", "type": "int"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "log_every_n_steps", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "log", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "action", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "mse_loss", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "q2_value", "type": "Any"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "target_q_value", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "q2_loss", "type": "Any"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "batch_idx", "type": "int"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "delayed_policy_update", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 169, "col_offset": 45, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "actor_loss", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "soft_update_result", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "result", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "Optimizer__Union", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "Optimizer__Union", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "copy", "type": "module"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "q_network_optimizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "optimizers", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "actor_network_optimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "q1_network_target", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "actor_network_target", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "tau", "type": "float"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "actor_network_target", "type": "Any"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "next_state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "randn_like", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "next_actor", "type": "Any"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "CONTINUOUS_TRAINING_ACTION_RANGE", "type": "Tuple[float, float]"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "FeatureData", "type": "Type[reagent.core.types.FeatureData]"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "next_actor", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "next_state_actor", "type": "Tuple[reagent.core.types.FeatureData, reagent.core.types.FeatureData]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "min", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "next_q_value", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "q1_loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "q1_value", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "next_q_value", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "target_q_value", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "batch_idx", "type": "int"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "log_every_n_steps", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "state", "type": "reagent.core.types.FeatureData"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "FeatureData", "type": "Type[reagent.core.types.FeatureData]"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "actor_action", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "mean", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "batch_idx", "type": "int"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "log_every_n_steps", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "q1_network", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "q_network_optimizer", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "actor_network", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "q2_network_target", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "next_actor", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "rlt", "type": "module"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "q2_network_target", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 141, "col_offset": 51, "nodeName": "next_q_value", "type": "Any"}, {"lineNumber": 141, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "q2_loss", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "q2_value", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "rlt", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "actor_q1_value", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "reporter", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "actor_loss", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "actor_q1_value", "type": "Any"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "q2_network", "type": "Any"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "next_state_actor", "type": "Tuple[reagent.core.types.FeatureData, reagent.core.types.FeatureData]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 141, "col_offset": 66, "nodeName": "not_terminal", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "self", "type": "TD3Trainer"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "noise", "type": "Any"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "noise_clip_range", "type": "Any"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "self", "type": "TD3Trainer"}]