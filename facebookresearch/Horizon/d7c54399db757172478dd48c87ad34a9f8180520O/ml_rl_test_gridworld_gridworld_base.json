[{"lineNumber": 24, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "W", "type": "int"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "S", "type": "int"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "G", "type": "int"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "width", "type": "int"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "height", "type": "int"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "STATES", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 236, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 382, "col_offset": 9, "nodeName": "Samples", "type": "Type[Samples]"}, {"lineNumber": 424, "col_offset": 9, "nodeName": "Samples", "type": "Type[Samples]"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "mdp_ids", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "mdp_ids", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sequence_numbers", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "sequence_numbers", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "action_probabilities", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "action_probabilities", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "rewards", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "rewards", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "possible_actions", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "possible_actions", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "next_states", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "next_states", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "next_actions", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "next_actions", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "terminals", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "terminals", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "possible_next_actions", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "possible_next_actions", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "List", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "sparse_to_dense_net", "type": "None"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "pos", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "reward", "type": "int"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "possible_next_action", "type": "List[str]"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "NUM_PROCESSES", "type": "int"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "sub_transitions", "type": "int"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "sub_transitions_map", "type": "List[int]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "seed", "type": "List[int]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "pool", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "res", "type": "Any"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "terminals", "type": "List[bool]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "possible_actions", "type": "List[List[str]]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "state", "type": "int"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "next_action", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "next_action_probability", "type": "float"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "transition", "type": "int"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "actions", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "time_diffs", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 607, "col_offset": 15, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 519, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Samples"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "_compute_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "default_normalizer", "type": "Callable[..., collections.OrderedDict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "STATES", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "action", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "current", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "action", "type": "str"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "policy", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "action", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 237, "col_offset": 49, "nodeName": "action", "type": "str"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 240, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "_no_cheat_step", "type": "Callable[[Any, str], int]"}, {"lineNumber": 241, "col_offset": 42, "nodeName": "_state", "type": "int"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "action", "type": "str"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "_state", "type": "int"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "possible_actions", "type": "Callable[..., Any]"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "_state", "type": "int"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "_state", "type": "int"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "reward", "type": "int"}, {"lineNumber": 244, "col_offset": 67, "nodeName": "possible_next_action", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "possible_actions", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "action", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "optimal_action", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "ACTIONS", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "G", "type": "int"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "act", "type": "str"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "original_y", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "original_x", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 296, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "act", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "W", "type": "int"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 302, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 305, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 306, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "move_on_pos_limit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "act", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "size", "type": "int"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "reward_vector", "type": "Callable[[], Any]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "q_transition_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "solve", "type": "Any"}, {"lineNumber": 354, "col_offset": 78, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 77, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "true_q_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 43, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "assume_optimal_policy", "type": "bool"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 48, "nodeName": "assume_optimal_policy", "type": "bool"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "NUM_PROCESSES", "type": "int"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "generate_samples_discrete_internal", "type": "Callable[[Any, Any, Any], Samples]"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "Pool", "type": "Any"}, {"lineNumber": 393, "col_offset": 14, "nodeName": "map", "type": "Any"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "func", "type": "functools.partial[nothing]"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "Samples", "type": "Type[Samples]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "mdp_ids", "type": "List[Any]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "mdp_ids", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "sequence_numbers", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "states", "type": "List[Any]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "states", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "actions", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "action_probabilities", "type": "List[Any]"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "rewards", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "possible_actions", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "next_states", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "next_actions", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "terminals", "type": "List[Any]"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "possible_next_actions", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "num_transitions_seed_pair", "type": "Any"}, {"lineNumber": 426, "col_offset": 15, "nodeName": "num_transitions_seed_pair", "type": "Any"}, {"lineNumber": 429, "col_offset": 48, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 431, "col_offset": 39, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 432, "col_offset": 26, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 433, "col_offset": 53, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 435, "col_offset": 30, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 437, "col_offset": 33, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 438, "col_offset": 51, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 439, "col_offset": 56, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "seed", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "seed", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "possible_action", "type": "List[str]"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "next_state", "type": "int"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "transition", "type": "int"}, {"lineNumber": 499, "col_offset": 15, "nodeName": "Samples", "type": "Type[Samples]"}, {"lineNumber": 518, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[[], Any]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 555, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 564, "col_offset": 37, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "action", "type": "str"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 572, "col_offset": 28, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "ones", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 578, "col_offset": 23, "nodeName": "Preprocessor", "type": "Type[ml.rl.preprocessing.preprocessor.Preprocessor]"}, {"lineNumber": 578, "col_offset": 36, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "state_matrix", "type": "str"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 581, "col_offset": 46, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 583, "col_offset": 30, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 583, "col_offset": 50, "nodeName": "next_state_matrix", "type": "str"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 51, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 588, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 588, "col_offset": 55, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 519, "col_offset": 14, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 610, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 613, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "List", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "List", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "possible_actions", "type": "List[List[str]]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "terminals", "type": "List[bool]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "S", "type": "int"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "W", "type": "int"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "G", "type": "int"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "height", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "y", "type": "int"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "y", "type": "int"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "collections", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "object", "type": "Any"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "possible_actions", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "width", "type": "int"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "state", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "width", "type": "int"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "G", "type": "int"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 210, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "size", "type": "int"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 241, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 53, "nodeName": "_state", "type": "int"}, {"lineNumber": 240, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 240, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "choice", "type": "Any"}, {"lineNumber": 256, "col_offset": 38, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 33, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 281, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 286, "col_offset": 13, "nodeName": "act", "type": "str"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "width", "type": "int"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "height", "type": "int"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "original_y", "type": "Any"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "original_x", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "ignore_terminal", "type": "bool"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 311, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "width", "type": "int"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 322, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "height", "type": "int"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "size", "type": "int"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "size", "type": "int"}, {"lineNumber": 328, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "fraction", "type": "float"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "action", "type": "str"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 359, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 361, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 362, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 376, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 384, "col_offset": 48, "nodeName": "NUM_PROCESSES", "type": "int"}, {"lineNumber": 385, "col_offset": 31, "nodeName": "sub_transitions", "type": "int"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 386, "col_offset": 26, "nodeName": "NUM_PROCESSES", "type": "int"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "discount_factor", "type": "Any"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "multiprocessing", "type": "Any"}, {"lineNumber": 392, "col_offset": 46, "nodeName": "NUM_PROCESSES", "type": "int"}, {"lineNumber": 393, "col_offset": 14, "nodeName": "pool", "type": "Any"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "s", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 412, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "s", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "s", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "s", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "merge", "type": "Samples"}, {"lineNumber": 419, "col_offset": 43, "nodeName": "s", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 452, "col_offset": 30, "nodeName": "transition", "type": "int"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 464, "col_offset": 30, "nodeName": "possible_actions", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "next_state", "type": "int"}, {"lineNumber": 466, "col_offset": 24, "nodeName": "reward", "type": "float"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 466, "col_offset": 42, "nodeName": "possible_next_action", "type": "List[str]"}, {"lineNumber": 466, "col_offset": 65, "nodeName": "step", "type": "Callable[[str], Tuple[int, float, bool, List[str]]]"}, {"lineNumber": 466, "col_offset": 75, "nodeName": "action", "type": "str"}, {"lineNumber": 467, "col_offset": 51, "nodeName": "sample_policy", "type": "Callable[[Any, Any], Tuple[str, float]]"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "next_state", "type": "int"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 478, "col_offset": 23, "nodeName": "v", "type": "str"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 485, "col_offset": 37, "nodeName": "transition", "type": "int"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "transition", "type": "int"}, {"lineNumber": 486, "col_offset": 58, "nodeName": "sequence_number", "type": "int"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 487, "col_offset": 28, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 487, "col_offset": 36, "nodeName": "transition", "type": "int"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 488, "col_offset": 28, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 488, "col_offset": 37, "nodeName": "transition", "type": "int"}, {"lineNumber": 488, "col_offset": 49, "nodeName": "action", "type": "str"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 489, "col_offset": 50, "nodeName": "transition", "type": "int"}, {"lineNumber": 489, "col_offset": 62, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 490, "col_offset": 37, "nodeName": "transition", "type": "int"}, {"lineNumber": 490, "col_offset": 49, "nodeName": "reward", "type": "float"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "possible_actions", "type": "List[List[str]]"}, {"lineNumber": 491, "col_offset": 46, "nodeName": "transition", "type": "int"}, {"lineNumber": 491, "col_offset": 58, "nodeName": "possible_action", "type": "List[str]"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 492, "col_offset": 41, "nodeName": "transition", "type": "int"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 493, "col_offset": 42, "nodeName": "transition", "type": "int"}, {"lineNumber": 493, "col_offset": 54, "nodeName": "next_action", "type": "str"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "terminals", "type": "List[bool]"}, {"lineNumber": 494, "col_offset": 39, "nodeName": "transition", "type": "int"}, {"lineNumber": 494, "col_offset": 51, "nodeName": "terminal", "type": "bool"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "set_if_in_range", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 495, "col_offset": 51, "nodeName": "transition", "type": "int"}, {"lineNumber": 495, "col_offset": 63, "nodeName": "possible_next_action", "type": "List[str]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "mdp_ids", "type": "List[str]"}, {"lineNumber": 501, "col_offset": 29, "nodeName": "sequence_numbers", "type": "List[int]"}, {"lineNumber": 502, "col_offset": 19, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 504, "col_offset": 33, "nodeName": "action_probabilities", "type": "List[float]"}, {"lineNumber": 505, "col_offset": 20, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "possible_actions", "type": "List[List[str]]"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 508, "col_offset": 25, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "terminals", "type": "List[bool]"}, {"lineNumber": 510, "col_offset": 34, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "Net", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "sparse_to_dense_net", "type": "Any"}, {"lineNumber": 527, "col_offset": 18, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 527, "col_offset": 57, "nodeName": "states", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "sorted_features", "type": "List[Any]"}, {"lineNumber": 528, "col_offset": 29, "nodeName": "_", "type": "List[int]"}, {"lineNumber": 528, "col_offset": 33, "nodeName": "sort_features_by_normalization", "type": "Callable[[Any], Tuple[List[Any], List[int]]]"}, {"lineNumber": 528, "col_offset": 64, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 529, "col_offset": 35, "nodeName": "sparse_to_dense", "type": "Callable[..., Tuple[str, List[str]]]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 530, "col_offset": 29, "nodeName": "keys", "type": "Any"}, {"lineNumber": 530, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 530, "col_offset": 51, "nodeName": "sorted_features", "type": "List[Any]"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 535, "col_offset": 40, "nodeName": "sparse_to_dense", "type": "Callable[..., Tuple[str, List[str]]]"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "keys", "type": "Any"}, {"lineNumber": 536, "col_offset": 39, "nodeName": "values", "type": "Any"}, {"lineNumber": 536, "col_offset": 51, "nodeName": "sorted_features", "type": "List[Any]"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 540, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 541, "col_offset": 51, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 542, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 545, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "astype", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "int64", "type": "Any"}, {"lineNumber": 550, "col_offset": 18, "nodeName": "actions_one_hot", "type": "Any"}, {"lineNumber": 555, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "int64", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 561, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 564, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 567, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 578, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 581, "col_offset": 25, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 583, "col_offset": 30, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 583, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor.Preprocessor"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 589, "col_offset": 18, "nodeName": "start", "type": "int"}, {"lineNumber": 589, "col_offset": 26, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "end", "type": "int"}, {"lineNumber": 592, "col_offset": 18, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "set_type", "type": "Callable[[Any], None]"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 606, "col_offset": 24, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Samples"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 153, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "width", "type": "int"}, {"lineNumber": 153, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 153, "col_offset": 72, "nodeName": "height", "type": "int"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 156, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "current", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 65, "nodeName": "current", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 74, "nodeName": "action", "type": "str"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "height", "type": "int"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "max", "type": "Callable"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "min", "type": "Callable"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "max", "type": "Callable"}, {"lineNumber": 214, "col_offset": 22, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 214, "col_offset": 59, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 238, "col_offset": 49, "nodeName": "p", "type": "Any"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 244, "col_offset": 53, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 240, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 260, "col_offset": 40, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 262, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 262, "col_offset": 47, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "width", "type": "int"}, {"lineNumber": 281, "col_offset": 66, "nodeName": "height", "type": "int"}, {"lineNumber": 285, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 288, "col_offset": 13, "nodeName": "act", "type": "str"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 36, "nodeName": "state", "type": "int"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 331, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 332, "col_offset": 20, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 37, "nodeName": "s", "type": "int"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "s", "type": "int"}, {"lineNumber": 354, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "eye", "type": "Any"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "size", "type": "int"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "size", "type": "int"}, {"lineNumber": 354, "col_offset": 63, "nodeName": "discount", "type": "Any"}, {"lineNumber": 354, "col_offset": 74, "nodeName": "T", "type": "Any"}, {"lineNumber": 359, "col_offset": 14, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 363, "col_offset": 61, "nodeName": "actions", "type": "Any"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 376, "col_offset": 61, "nodeName": "actions", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "sub_transitions_map", "type": "List[int]"}, {"lineNumber": 393, "col_offset": 59, "nodeName": "seed", "type": "List[int]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "action", "type": "str"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "sample_policy", "type": "Callable[[Any, Any], Tuple[str, float]]"}, {"lineNumber": 458, "col_offset": 64, "nodeName": "state", "type": "Any"}, {"lineNumber": 458, "col_offset": 71, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 464, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 466, "col_offset": 65, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 467, "col_offset": 51, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 476, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 476, "col_offset": 24, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "l", "type": "List[str]"}, {"lineNumber": 481, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 481, "col_offset": 24, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "l", "type": "Any"}, {"lineNumber": 485, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 485, "col_offset": 53, "nodeName": "mdp_id", "type": "int"}, {"lineNumber": 525, "col_offset": 39, "nodeName": "core", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 526, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 527, "col_offset": 18, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 527, "col_offset": 57, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 528, "col_offset": 64, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 530, "col_offset": 29, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 530, "col_offset": 39, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 532, "col_offset": 18, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 533, "col_offset": 16, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 536, "col_offset": 16, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 536, "col_offset": 39, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 540, "col_offset": 51, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 541, "col_offset": 51, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 558, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 561, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 565, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 565, "col_offset": 17, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 565, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 565, "col_offset": 44, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 568, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 569, "col_offset": 78, "nodeName": "int64", "type": "Any"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 571, "col_offset": 33, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "states", "type": "Any"}, {"lineNumber": 588, "col_offset": 30, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 605, "col_offset": 12, "nodeName": "tdp", "type": "ml.rl.training.training_data_page.TrainingDataPage"}, {"lineNumber": 605, "col_offset": 51, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 605, "col_offset": 64, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 606, "col_offset": 12, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 153, "col_offset": 72, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "j", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "current", "type": "Any"}, {"lineNumber": 164, "col_offset": 62, "nodeName": "current", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 169, "col_offset": 85, "nodeName": "W", "type": "int"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "policy", "type": "Any"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "invert_action", "type": "Callable[[str], str]"}, {"lineNumber": 170, "col_offset": 64, "nodeName": "action", "type": "str"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "appendleft", "type": "Callable"}, {"lineNumber": 199, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 59, "nodeName": "S", "type": "int"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 207, "col_offset": 34, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 208, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "width", "type": "int"}, {"lineNumber": 209, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "height", "type": "int"}, {"lineNumber": 210, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 65, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 281, "col_offset": 66, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "act", "type": "str"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "possible_actions", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 51, "nodeName": "state", "type": "int"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 24, "nodeName": "state", "type": "int"}, {"lineNumber": 337, "col_offset": 31, "nodeName": "action", "type": "str"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "fraction", "type": "float"}, {"lineNumber": 345, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 345, "col_offset": 56, "nodeName": "transition_probabilities", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 349, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 349, "col_offset": 55, "nodeName": "size", "type": "int"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 362, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 363, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 365, "col_offset": 43, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 370, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 376, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 483, "col_offset": 18, "nodeName": "i", "type": "Any"}, {"lineNumber": 487, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 487, "col_offset": 53, "nodeName": "state", "type": "Any"}, {"lineNumber": 492, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 492, "col_offset": 58, "nodeName": "next_state", "type": "int"}, {"lineNumber": 551, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 551, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 553, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 565, "col_offset": 17, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 565, "col_offset": 44, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 569, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 571, "col_offset": 33, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "int32", "type": "Any"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 590, "col_offset": 21, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 595, "col_offset": 19, "nodeName": "one_hot_action", "type": "bool"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 598, "col_offset": 24, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 599, "col_offset": 28, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 600, "col_offset": 30, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 601, "col_offset": 29, "nodeName": "next_actions_one_hot", "type": "Any"}, {"lineNumber": 602, "col_offset": 38, "nodeName": "possible_next_actions_mask", "type": "Any"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "time_diffs", "type": "Any"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 605, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "where", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "state", "type": "int"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 221, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "action", "type": "str"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "act", "type": "str"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 336, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "action", "type": "str"}, {"lineNumber": 349, "col_offset": 55, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 368, "col_offset": 47, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 546, "col_offset": 57, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 546, "col_offset": 66, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 551, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 553, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 557, "col_offset": 65, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 557, "col_offset": 74, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 562, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 562, "col_offset": 40, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "start", "type": "int"}, {"lineNumber": 593, "col_offset": 44, "nodeName": "end", "type": "int"}, {"lineNumber": 596, "col_offset": 21, "nodeName": "actions", "type": "Any"}, {"lineNumber": 597, "col_offset": 50, "nodeName": "start", "type": "int"}, {"lineNumber": 597, "col_offset": 56, "nodeName": "end", "type": "int"}, {"lineNumber": 598, "col_offset": 32, "nodeName": "start", "type": "int"}, {"lineNumber": 598, "col_offset": 38, "nodeName": "end", "type": "int"}, {"lineNumber": 599, "col_offset": 48, "nodeName": "start", "type": "int"}, {"lineNumber": 599, "col_offset": 54, "nodeName": "end", "type": "int"}, {"lineNumber": 600, "col_offset": 44, "nodeName": "start", "type": "int"}, {"lineNumber": 600, "col_offset": 50, "nodeName": "end", "type": "int"}, {"lineNumber": 601, "col_offset": 50, "nodeName": "start", "type": "int"}, {"lineNumber": 601, "col_offset": 56, "nodeName": "end", "type": "int"}, {"lineNumber": 602, "col_offset": 65, "nodeName": "start", "type": "int"}, {"lineNumber": 602, "col_offset": 71, "nodeName": "end", "type": "int"}, {"lineNumber": 603, "col_offset": 38, "nodeName": "start", "type": "int"}, {"lineNumber": 603, "col_offset": 44, "nodeName": "end", "type": "int"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 63, "nodeName": "G", "type": "int"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 169, "col_offset": 66, "nodeName": "next_state_pos", "type": "Tuple[Any, Any]"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 57, "nodeName": "state", "type": "int"}, {"lineNumber": 345, "col_offset": 22, "nodeName": "state", "type": "int"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 368, "col_offset": 58, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 546, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 66, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 557, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 74, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 562, "col_offset": 40, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "possible_next_action_strings", "type": "numpy.ndarray"}, {"lineNumber": 569, "col_offset": 55, "nodeName": "action", "type": "str"}, {"lineNumber": 596, "col_offset": 29, "nodeName": "start", "type": "int"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "end", "type": "int"}, {"lineNumber": 155, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 340, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 368, "col_offset": 72, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 546, "col_offset": 22, "nodeName": "actions", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 362, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 375, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 546, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 546, "col_offset": 22, "nodeName": "samples", "type": "Samples"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "samples", "type": "Samples"}]