[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "load", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "insert", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "insert_replay_buffer_format", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "insert_pre_timeline_format", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "INFO", "type": "int"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "use_pickle", "type": "bool"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "use_pickle", "type": "bool"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "use_pickle", "type": "bool"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "timeline_format_action", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "state_features", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "int_state_feature_keys", "type": "List[int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "idx_bump", "type": "int"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 36, "col_offset": 42, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "f", "type": "gzip.GzipFile"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "action", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "reward", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "time_diff", "type": "Any"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "action", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "action", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "split", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "file_extension", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "open", "type": "Callable[..., gzip.GzipFile]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "f", "type": "file"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "f", "type": "file"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "insert_replay_buffer_format", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "insert_pre_timeline_format", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "action", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "reward", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "possible_next_actions_mask", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "time_diff", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "possible_actions_mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "policy_id", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "k", "type": "str"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "k", "type": "str"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "int_state_feature_keys", "type": "List[int]"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "state_features", "type": "Dict[str, Any]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "action", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "reward", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "action_probability", "type": "Any"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "gzip", "type": "module"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "f", "type": "file"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 139, "col_offset": 58, "nodeName": "state", "type": "Any"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "mdp_id", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "sequence_number", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "reward", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "rows", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 44, "nodeName": "line", "type": "str"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "pickle", "type": "module"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "f", "type": "file"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 50, "nodeName": "state_features", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "k", "type": "int"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "idx_bump", "type": "int"}, {"lineNumber": 146, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "action", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "action", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "action", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "terminal", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "RLDataset"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "json", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "f", "type": "file"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "k", "type": "str"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "idx", "type": "int"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "possible_actions", "type": "List[nothing]"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "possible_actions", "type": "List[Dict[str, Any]]"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "val", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 160, "col_offset": 72, "nodeName": "val", "type": "Any"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "action", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "k", "type": "str"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "items", "type": "Callable"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "k", "type": "int"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "idx_bump", "type": "int"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "v", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "a", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "k", "type": "str"}]