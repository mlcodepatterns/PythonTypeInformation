[{"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "MLTrainer", "type": "Type[ml.rl.training.ml_trainer.MLTrainer]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "RLPredictor", "type": "Type[ml.rl.training.rl_predictor.RLPredictor]"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_state_features", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "reward_burnin", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "reward_burnin", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "maxq_learning", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "maxq_learning", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "rl_discount_rate", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "training_iteration", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_buffers", "type": "None"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "skip_normalization", "type": "Optional[bool]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "skip_normalization", "type": "Optional[bool]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "skip_normalization", "type": "Any"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "skip_normalization", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "state_norm_net", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "state_norm_blobname_template", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "_state_features", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 9, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "use_next_actions", "type": "bool"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "use_pna", "type": "Union[bool, Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "use_rt", "type": "bool"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "num_buffers", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "_buffers", "type": "None"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "page_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "q_vals_target", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "training_iteration", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[ml.rl.training.ml_trainer.MLTrainer, str, Any], None]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "training", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "TargetNetwork", "type": "Type[ml.rl.training.target_network.TargetNetwork]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "target_update_rate", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "rl", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "rl", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "rl", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "training", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_prepare_state_normalization", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "normalize_dense_matrix", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "_state_features", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "_state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "state_norm_blobs", "type": "Dict[int, str]"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "state_norm_net", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "state_norm_blobname_template", "type": "str"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "num_state_features", "type": "int"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "Net", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "prepare_normalization", "type": "Callable[[Any, Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`], List[str], str, Optional[bool]], Dict[int, str]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "state_norm_net", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "_state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "_state_features", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "state_norm_blobname_template", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "maxq_learning", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 70, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "sarsa", "type": "bool"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "maxq_learning", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "use_next_actions", "type": "bool"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "use_pna", "type": "Union[Any, bool]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "use_rt", "type": "bool"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "page_size", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "float32", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 286, "col_offset": 32, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "training_iteration", "type": "int"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "reward_burnin", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "maxq_learning", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "q_vals_target", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "update_model", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray], None]"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 34, "nodeName": "actions", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 43, "nodeName": "q_vals_target", "type": "Any"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "training_iteration", "type": "int"}, {"lineNumber": 303, "col_offset": 38, "nodeName": "reward_burnin", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "target_update", "type": "Callable[[], None]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "MLTrainer", "type": "Type[ml.rl.training.ml_trainer.MLTrainer]"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "rl", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "core", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "states", "type": "Any"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "minibatch_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "page_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "use_next_actions", "type": "bool"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "use_pna", "type": "Union[Any, bool]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "use_rt", "type": "bool"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "states_batch", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "actions_batch", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 58, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 280, "col_offset": 44, "nodeName": "num_state_features", "type": "int"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "next_states", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 283, "col_offset": 49, "nodeName": "num_state_features", "type": "int"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "not_terminals", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "training_iteration", "type": "int"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "reward_burnin", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "next_q_values", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 69, "nodeName": "next_q_values", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 303, "col_offset": 38, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "enable_slow_updates", "type": "Callable[[], None]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "target_network", "type": "ml.rl.training.target_network.TargetNetwork"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "state_normalization_parameters", "type": "Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values`]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 109, "col_offset": 57, "nodeName": "Evaluator", "type": "Type[ml.rl.training.evaluator.Evaluator]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 56, "nodeName": "actions", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "states", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 190, "col_offset": 56, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 62, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "actions", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "states", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "use_next_actions", "type": "bool"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "use_pna", "type": "Union[Any, bool]"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "use_rt", "type": "bool"}, {"lineNumber": 234, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "actions", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "train", "type": "Callable[[numpy.ndarray, numpy.ndarray, numpy.ndarray, numpy.ndarray, Optional[numpy.ndarray], numpy.ndarray, Optional[List[Any]]], None]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "states_batch", "type": "Any"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "actions_batch", "type": "Any"}, {"lineNumber": 238, "col_offset": 56, "nodeName": "na_batch", "type": "Any"}, {"lineNumber": 239, "col_offset": 58, "nodeName": "pna_batch", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "evaluator", "type": "Any"}, {"lineNumber": 250, "col_offset": 56, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "List", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "states", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 44, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 283, "col_offset": 49, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "get_max_q_values", "type": "Callable[[numpy.ndarray, Any], numpy.ndarray]"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "next_states", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "possible_next_actions", "type": "Optional[List[Any]]"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "get_sarsa_values", "type": "Callable[[numpy.ndarray, numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 297, "col_offset": 54, "nodeName": "next_states", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 67, "nodeName": "next_actions", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "not_terminals", "type": "numpy.ndarray"}, {"lineNumber": 299, "col_offset": 45, "nodeName": "rl_discount_rate", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "target_network", "type": "ml.rl.training.target_network.TargetNetwork"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 65, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 196, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 200, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 39, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "_", "type": "int"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 212, "col_offset": 42, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "_buffers", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 39, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 234, "col_offset": 50, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 237, "col_offset": 49, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "report", "type": "Any"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "rt_batch", "type": "Any"}, {"lineNumber": 250, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 293, "col_offset": 32, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 297, "col_offset": 32, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 299, "col_offset": 45, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 194, "col_offset": 44, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "_buffers", "type": "Any"}, {"lineNumber": 210, "col_offset": 45, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "num_buffers", "type": "int"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 219, "col_offset": 61, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 221, "col_offset": 56, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 232, "col_offset": 37, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 232, "col_offset": 49, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 237, "col_offset": 57, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 237, "col_offset": 69, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "batch_start", "type": "int"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "batch_end", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "evaluator", "type": "Any"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "get_q_values", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "states_batch", "type": "Any"}, {"lineNumber": 244, "col_offset": 56, "nodeName": "actions_batch", "type": "Any"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "loss_blob", "type": "str"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 244, "col_offset": 24, "nodeName": "self", "type": "RLTrainer"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "self", "type": "RLTrainer"}]