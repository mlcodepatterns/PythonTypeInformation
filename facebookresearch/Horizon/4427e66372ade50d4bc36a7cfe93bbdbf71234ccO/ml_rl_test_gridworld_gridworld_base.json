[{"lineNumber": 16, "col_offset": 0, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "EPSILON", "type": "float"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "W", "type": "int"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "S", "type": "int"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "G", "type": "int"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "width", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "height", "type": "int"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "STATES", "type": "List[int]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "List", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "policy", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "pos", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "_state", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "p", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "_state", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "reward", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "with_possible", "type": "bool"}, {"lineNumber": 158, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "T", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "x", "type": "int"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "states", "type": "List[Dict[Any, float]]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "propensities", "type": "List[float]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "state", "type": "int"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "next_action", "type": "str"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "next_propensity", "type": "float"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "transition", "type": "int"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "last_terminal", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 298, "col_offset": 9, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor_net.PreprocessorNet"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "actions_one_hot", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "propensities", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "possible_next_actions_mask", "type": "List[List[int]]"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "pna", "type": "Any"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "is_terminals", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 386, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "_compute_optimal", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "default_normalizer", "type": "Callable[[Any], collections.OrderedDict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "STATES", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "action", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "empty", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "policy", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "current", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "action", "type": "str"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "policy", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "action", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "y", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "action", "type": "str"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "action", "type": "str"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "choice", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "_no_cheat_step", "type": "Callable[[Any, str], int]"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "_state", "type": "Any"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "action", "type": "str"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "_state", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "possible_next_action", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "possible_next_action", "type": "None"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "reward", "type": "Any"}, {"lineNumber": 165, "col_offset": 67, "nodeName": "possible_next_action", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "_optimal_policy", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "possible_next_actions", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "ACTIONS", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "width", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "height", "type": "Any"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "G", "type": "int"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "act", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "move_on_pos", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "act", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "move_on_pos_limit", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "act", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "size", "type": "int"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "reward_vector", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "q_transition_matrix", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "solve", "type": "Any"}, {"lineNumber": 272, "col_offset": 78, "nodeName": "R", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 77, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "true_q_values", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 275, "col_offset": 43, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 275, "col_offset": 53, "nodeName": "assume_optimal_policy", "type": "bool"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "int_state", "type": "int"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "state", "type": "int"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "next_state", "type": "int"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "transition", "type": "int"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "states", "type": "List[Dict[Any, float]]"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "propensities", "type": "List[float]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "reward_timelines", "type": "Optional[List[Dict[int, float]]]"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 425, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 426, "col_offset": 23, "nodeName": "PreprocessorNet", "type": "Type[ml.rl.preprocessing.preprocessor_net.PreprocessorNet]"}, {"lineNumber": 426, "col_offset": 39, "nodeName": "net", "type": "Any"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 427, "col_offset": 53, "nodeName": "states", "type": "Any"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "normalize_sparse_matrix", "type": "Callable[[str, str, str, Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values-quantiles`], str, Optional[bool], Optional[bool]], Tuple[str, List[str]]]"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "keys", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "from_dict_list", "type": "Callable"}, {"lineNumber": 437, "col_offset": 53, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "normalize_sparse_matrix", "type": "Callable[[str, str, str, Dict[str, ml.rl.preprocessing.normalization.`namedtuple-NormalizationParameters-feature_type-boxcox_lambda-boxcox_shift-mean-stddev-possible_values-quantiles`], str, Optional[bool], Optional[bool]], Tuple[str, List[str]]]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "keys", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "normalization", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "net", "type": "Any"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 449, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "actions", "type": "Any"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "pna_mask", "type": "List[int]"}, {"lineNumber": 463, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 463, "col_offset": 26, "nodeName": "pna", "type": "Any"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "possible_next_actions_mask", "type": "List[List[int]]"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "logical_not", "type": "Any"}, {"lineNumber": 470, "col_offset": 39, "nodeName": "is_terminals", "type": "Any"}, {"lineNumber": 471, "col_offset": 11, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "reward_timelines", "type": "numpy.ndarray"}, {"lineNumber": 474, "col_offset": 25, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 474, "col_offset": 45, "nodeName": "state_matrix", "type": "str"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 475, "col_offset": 50, "nodeName": "next_state_matrix", "type": "str"}, {"lineNumber": 477, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 477, "col_offset": 55, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 386, "col_offset": 14, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 499, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "S", "type": "int"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "G", "type": "int"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "height", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "y", "type": "int"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "x", "type": "int"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "x", "type": "int"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "y", "type": "int"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "collections", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "object", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "current", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "possible_next_actions", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "_state", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "next_state_pos", "type": "Tuple[int, int]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "height", "type": "int"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "state", "type": "int"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "height", "type": "int"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "state", "type": "int"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "height", "type": "int"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "G", "type": "int"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 126, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 127, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "possible_next_actions", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "_state", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "rand", "type": "Any"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 202, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "act", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "width", "type": "int"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "height", "type": "int"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "ignore_terminal", "type": "bool"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 52, "nodeName": "state", "type": "int"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "width", "type": "int"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "height", "type": "int"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "size", "type": "int"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "size", "type": "int"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "USING_ONLY_VALID_ACTION", "type": "bool"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "fraction", "type": "float"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "action", "type": "str"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 277, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "int_state", "type": "int"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 27, "nodeName": "states", "type": "Any"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "move_on_index_limit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 50, "nodeName": "int_state", "type": "int"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "step", "type": "Callable[..., Tuple[int, float, bool, List[str]]]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "action", "type": "str"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "with_possible", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "next_action", "type": "str"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "next_propensity", "type": "float"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "sample_policy", "type": "Callable[[Any, Any], Tuple[str, float]]"}, {"lineNumber": 338, "col_offset": 62, "nodeName": "next_state", "type": "int"}, {"lineNumber": 338, "col_offset": 74, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "action", "type": "str"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 342, "col_offset": 32, "nodeName": "propensity", "type": "float"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "reward", "type": "float"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "next_action", "type": "str"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 347, "col_offset": 41, "nodeName": "possible_next_action", "type": "List[str]"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "is_terminal", "type": "bool"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "last_terminal", "type": "int"}, {"lineNumber": 357, "col_offset": 32, "nodeName": "transition", "type": "int"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "List", "type": "Any"}, {"lineNumber": 377, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 379, "col_offset": 17, "nodeName": "List", "type": "Any"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "List", "type": "Any"}, {"lineNumber": 381, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 402, "col_offset": 117, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 420, "col_offset": 135, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor_net.PreprocessorNet"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "StackedAssociativeArray", "type": "Type[ml.rl.caffe_utils.StackedAssociativeArray]"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "preprocessor", "type": "ml.rl.preprocessing.preprocessor_net.PreprocessorNet"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "saa", "type": "ml.rl.caffe_utils.StackedAssociativeArray"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 448, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 448, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "actions_one_hot", "type": "Any"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 454, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "next_actions_one_hot", "type": "Any"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 465, "col_offset": 46, "nodeName": "pna_mask", "type": "List[int]"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 467, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 472, "col_offset": 40, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 474, "col_offset": 25, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "start", "type": "int"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "end", "type": "int"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "width", "type": "int"}, {"lineNumber": 67, "col_offset": 66, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 72, "nodeName": "height", "type": "int"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "current", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 70, "nodeName": "current", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "current", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "next_state", "type": "int"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "_", "type": "float"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "_", "type": "bool"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "_", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "step", "type": "Callable[..., Tuple[int, float, bool, List[str]]]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "action", "type": "str"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "next_state", "type": "int"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "next_state_pos", "type": "Tuple[int, int]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "next_state_pos", "type": "Tuple[int, int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "argwhere", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "width", "type": "int"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "height", "type": "int"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "max", "type": "Callable"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "min", "type": "Callable"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "max", "type": "Callable"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 162, "col_offset": 62, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 165, "col_offset": 53, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "width", "type": "int"}, {"lineNumber": 202, "col_offset": 66, "nodeName": "height", "type": "int"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 209, "col_offset": 13, "nodeName": "act", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "state", "type": "int"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "poss_a", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "poss_a_count", "type": "int"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "assume_optimal_policy", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "s", "type": "int"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "s", "type": "int"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "eye", "type": "Any"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "size", "type": "int"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "size", "type": "int"}, {"lineNumber": 272, "col_offset": 63, "nodeName": "discount", "type": "Any"}, {"lineNumber": 272, "col_offset": 74, "nodeName": "T", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 279, "col_offset": 61, "nodeName": "actions", "type": "Any"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 292, "col_offset": 61, "nodeName": "actions", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "results", "type": "List[int]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 39, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "transition", "type": "int"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "num_transitions", "type": "Any"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "action", "type": "str"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "propensity", "type": "float"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "sample_policy", "type": "Callable[[Any, Any], Tuple[str, float]]"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 330, "col_offset": 63, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 338, "col_offset": 43, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "states", "type": "List[Dict[Any, float]]"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "propensities", "type": "List[float]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "next_state", "type": "int"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "last_terminal", "type": "int"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "List", "type": "Any"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 381, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 391, "col_offset": 20, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "propensities", "type": "List[float]"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "states", "type": "List[Dict[int, float]]"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "propensities", "type": "List[float]"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "rewards", "type": "List[float]"}, {"lineNumber": 412, "col_offset": 20, "nodeName": "next_states", "type": "List[Dict[int, float]]"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "next_actions", "type": "List[str]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "is_terminals", "type": "List[bool]"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "possible_next_actions", "type": "List[List[str]]"}, {"lineNumber": 416, "col_offset": 20, "nodeName": "reward_timelines", "type": "Optional[List[Dict[int, float]]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 421, "col_offset": 17, "nodeName": "merged", "type": "List[Tuple[Any, ...]]"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 448, "col_offset": 40, "nodeName": "actions", "type": "Any"}, {"lineNumber": 448, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 448, "col_offset": 54, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 448, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 451, "col_offset": 27, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 452, "col_offset": 32, "nodeName": "propensities", "type": "Any"}, {"lineNumber": 454, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 454, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "ACTIONS", "type": "List[str]"}, {"lineNumber": 454, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "pna_mask", "type": "List[int]"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "possible_next_actions_mask", "type": "List[List[int]]"}, {"lineNumber": 467, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 469, "col_offset": 32, "nodeName": "is_terminals", "type": "Any"}, {"lineNumber": 472, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 472, "col_offset": 64, "nodeName": "object", "type": "Any"}, {"lineNumber": 477, "col_offset": 30, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "tdps", "type": "List[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "TrainingDataPage", "type": "Type[ml.rl.training.training_data_page.TrainingDataPage]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 67, "col_offset": 72, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "j", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "j", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "not_visited", "type": "Set[Tuple[int, int]]"}, {"lineNumber": 86, "col_offset": 85, "nodeName": "W", "type": "int"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "policy", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "invert_action", "type": "Callable[[str], str]"}, {"lineNumber": 87, "col_offset": 64, "nodeName": "action", "type": "str"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "appendleft", "type": "Callable"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "S", "type": "int"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 123, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "width", "type": "int"}, {"lineNumber": 125, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "height", "type": "int"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "y", "type": "Any"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "action", "type": "str"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "choice", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 35, "nodeName": "state", "type": "int"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 202, "col_offset": 66, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "act", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "possible_next_actions", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 56, "nodeName": "state", "type": "int"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "transition_probabilities", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "state", "type": "int"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "action", "type": "str"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 262, "col_offset": 45, "nodeName": "fraction", "type": "float"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "T", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "action_probability", "type": "float"}, {"lineNumber": 263, "col_offset": 56, "nodeName": "transition_probabilities", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 267, "col_offset": 55, "nodeName": "size", "type": "int"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 279, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "int_state", "type": "int"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "results", "type": "List[Union[int, Any]]"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 292, "col_offset": 69, "nodeName": "x", "type": "int"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "transition", "type": "int"}, {"lineNumber": 353, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 383, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 448, "col_offset": 54, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 450, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 452, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 459, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 469, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 52, "nodeName": "bool", "type": "Any"}, {"lineNumber": 472, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "where", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "is_terminal", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "next_state", "type": "int"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "next_state_pos", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "queue", "type": "collections.deque[Any]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "next_state", "type": "int"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "_pos", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "state", "type": "int"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "up_state", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "action", "type": "str"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "act", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "action", "type": "str"}, {"lineNumber": 267, "col_offset": 55, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 281, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 284, "col_offset": 32, "nodeName": "int_state", "type": "int"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "DISCOUNT", "type": "float"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 306, "col_offset": 13, "nodeName": "List", "type": "Any"}, {"lineNumber": 307, "col_offset": 13, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 383, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "action_to_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 52, "nodeName": "action", "type": "Any"}, {"lineNumber": 451, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "action_to_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 57, "nodeName": "action", "type": "Any"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "action_to_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 46, "nodeName": "action", "type": "Any"}, {"lineNumber": 469, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 27, "nodeName": "states_ndarray", "type": "Any"}, {"lineNumber": 484, "col_offset": 28, "nodeName": "actions_one_hot", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "propensities", "type": "Any"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "next_states_ndarray", "type": "Any"}, {"lineNumber": 488, "col_offset": 34, "nodeName": "not_terminals", "type": "Any"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "next_actions_one_hot", "type": "Any"}, {"lineNumber": 490, "col_offset": 42, "nodeName": "possible_next_actions_mask", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "grid", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 63, "nodeName": "G", "type": "int"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "next_state_pos", "type": "Tuple[int, int]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 145, "col_offset": 26, "nodeName": "down_state", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "transition_noise", "type": "float"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "left_state", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "right_state", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "possible_actions", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "optimal_policy", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "state", "type": "int"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "state", "type": "int"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 284, "col_offset": 57, "nodeName": "true_q_values", "type": "Any"}, {"lineNumber": 354, "col_offset": 31, "nodeName": "reward_timelines", "type": "List[Dict[int, float]]"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 384, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 459, "col_offset": 36, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 483, "col_offset": 42, "nodeName": "start", "type": "int"}, {"lineNumber": 483, "col_offset": 48, "nodeName": "end", "type": "int"}, {"lineNumber": 484, "col_offset": 44, "nodeName": "start", "type": "int"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "end", "type": "int"}, {"lineNumber": 485, "col_offset": 46, "nodeName": "start", "type": "int"}, {"lineNumber": 485, "col_offset": 52, "nodeName": "end", "type": "int"}, {"lineNumber": 486, "col_offset": 36, "nodeName": "start", "type": "int"}, {"lineNumber": 486, "col_offset": 42, "nodeName": "end", "type": "int"}, {"lineNumber": 487, "col_offset": 52, "nodeName": "start", "type": "int"}, {"lineNumber": 487, "col_offset": 58, "nodeName": "end", "type": "int"}, {"lineNumber": 488, "col_offset": 48, "nodeName": "start", "type": "int"}, {"lineNumber": 488, "col_offset": 54, "nodeName": "end", "type": "int"}, {"lineNumber": 489, "col_offset": 54, "nodeName": "start", "type": "int"}, {"lineNumber": 489, "col_offset": 60, "nodeName": "end", "type": "int"}, {"lineNumber": 490, "col_offset": 69, "nodeName": "start", "type": "int"}, {"lineNumber": 490, "col_offset": 75, "nodeName": "end", "type": "int"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "reward_timelines", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "self", "type": "GridworldBase"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 284, "col_offset": 71, "nodeName": "next_state", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "transition", "type": "int"}, {"lineNumber": 355, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "x", "type": "int"}, {"lineNumber": 354, "col_offset": 48, "nodeName": "transition", "type": "int"}, {"lineNumber": 354, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 384, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 384, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}]