[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "env", "type": "reagent.test.gridworld.gridworld.Gridworld"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "reagent.test.gridworld.gridworld_continuous.GridworldContinuous"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "continuous_action", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "Gridworld", "type": "Type[reagent.test.gridworld.gridworld.Gridworld]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "generate_samples", "type": "Callable[..., Union[reagent.test.environment.environment.MultiStepSamples, reagent.test.environment.environment.Samples]]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_check_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "samples", "type": "Union[reagent.test.environment.environment.MultiStepSamples, reagent.test.environment.environment.Samples]"}, {"lineNumber": 28, "col_offset": 37, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "GridworldContinuous", "type": "Type[reagent.test.gridworld.gridworld_continuous.GridworldContinuous]"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "generate_samples", "type": "Callable[..., Union[reagent.test.environment.environment.MultiStepSamples, reagent.test.environment.environment.Samples]]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_check_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "samples", "type": "Union[reagent.test.environment.environment.Samples, reagent.test.environment.environment.MultiStepSamples]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "OpenAIGymEnvironment", "type": "Type[reagent.test.gym.open_ai_gym_environment.OpenAIGymEnvironment]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "generate_random_samples", "type": "Callable[..., Union[reagent.test.environment.environment.MultiStepSamples, reagent.test.environment.environment.Samples]]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_check_samples", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "samples", "type": "Union[reagent.test.environment.environment.Samples, reagent.test.environment.environment.MultiStepSamples]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "to_single_step", "type": "Any"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "env", "type": "reagent.test.gridworld.gridworld.Gridworld"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "env", "type": "reagent.test.gridworld.gridworld_continuous.GridworldContinuous"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "env", "type": "reagent.test.gym.open_ai_gym_environment.OpenAIGymEnvironment"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "num_steps", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "samples", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "mdp_ids", "type": "Any"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "mdp_ids", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "mdp_ids", "type": "Any"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "mdp_ids", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 147, "col_offset": 64, "nodeName": "states", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "actions", "type": "Any"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "actions", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "samples", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "samples", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "assertActionEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "samples", "type": "Any"}, {"lineNumber": 143, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "samples", "type": "Any"}, {"lineNumber": 145, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 147, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 64, "nodeName": "samples", "type": "Any"}, {"lineNumber": 147, "col_offset": 79, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "samples", "type": "Any"}, {"lineNumber": 148, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 151, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 153, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "samples", "type": "Any"}, {"lineNumber": 155, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 163, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "single_step_samples", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 71, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "sequence_numbers", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "j", "type": "int"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "actions", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "j", "type": "int"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "states", "type": "Any"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "actions", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "self", "type": "TestEnvironment"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "samples", "type": "Any"}, {"lineNumber": 153, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "samples", "type": "Any"}, {"lineNumber": 161, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 63, "nodeName": "samples", "type": "Any"}, {"lineNumber": 163, "col_offset": 81, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "samples", "type": "Any"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "samples", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "samples", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "j", "type": "int"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "j", "type": "int"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 94, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 100, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 105, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "samples", "type": "Any"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "rewards", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 112, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "j", "type": "int"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "terminals", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 123, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "next_states", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 129, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "next_actions", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "j", "type": "int"}, {"lineNumber": 132, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "possible_next_actions", "type": "Any"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "samples", "type": "Any"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "samples", "type": "Any"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "samples", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 100, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "samples", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "samples", "type": "Any"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 129, "col_offset": 78, "nodeName": "j", "type": "int"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 68, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 132, "col_offset": 80, "nodeName": "j", "type": "int"}, {"lineNumber": 135, "col_offset": 24, "nodeName": "samples", "type": "Any"}, {"lineNumber": 135, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 136, "col_offset": 61, "nodeName": "j", "type": "int"}, {"lineNumber": 77, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 80, "nodeName": "j", "type": "int"}, {"lineNumber": 79, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 75, "nodeName": "j", "type": "int"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 77, "nodeName": "j", "type": "int"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 71, "nodeName": "j", "type": "int"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 58, "nodeName": "j", "type": "int"}, {"lineNumber": 94, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 70, "nodeName": "j", "type": "int"}, {"lineNumber": 97, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 72, "nodeName": "j", "type": "int"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "j", "type": "int"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "j", "type": "int"}, {"lineNumber": 117, "col_offset": 61, "nodeName": "j", "type": "int"}, {"lineNumber": 120, "col_offset": 83, "nodeName": "j", "type": "int"}, {"lineNumber": 124, "col_offset": 70, "nodeName": "j", "type": "int"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 120, "col_offset": 67, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "num_steps", "type": "Any"}]