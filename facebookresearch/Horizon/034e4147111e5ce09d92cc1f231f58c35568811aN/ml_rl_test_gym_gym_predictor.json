[{"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "c2_device", "type": "None"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "c2_device", "type": "None"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "policies", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "reward_estimates", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "reward_estimates", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "GymDDPGPredictor"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "GymDDPGPredictor"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "c2_device", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "policy_output_blob", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "internal_policy_output", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "policies", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "policy_output_blob", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "internal_policy_output", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "DQNTrainer", "type": "Type[ml.rl.training.dqn_trainer.DQNTrainer]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "states", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "internal_prediction", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "input", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 103, "col_offset": 36, "nodeName": "DQNTrainer", "type": "Type[ml.rl.training.dqn_trainer.DQNTrainer]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "DQNTrainer", "type": "Type[ml.rl.training.dqn_trainer.DQNTrainer]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "states", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "internal_prediction", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "input", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "DQNTrainer", "type": "Type[ml.rl.training.dqn_trainer.DQNTrainer]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "states", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "internal_reward_estimation", "type": "Any"}, {"lineNumber": 142, "col_offset": 67, "nodeName": "input", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "GymDDPGPredictor"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "internal_prediction", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "states", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "add_action_noise", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "DeviceScope", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "c2_device", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "DiscreteActionTrainer", "type": "Type[ml.rl.training.discrete_action_trainer.DiscreteActionTrainer]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "net", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "policy_output_blob", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "DiscreteActionTrainer", "type": "Type[ml.rl.training.discrete_action_trainer.DiscreteActionTrainer]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "DeviceScope", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "c2_device", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "DiscreteActionTrainer", "type": "Type[ml.rl.training.discrete_action_trainer.DiscreteActionTrainer]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "net", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "internal_policy_output", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "policy_output_blob", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "ParametricDQNTrainer", "type": "Type[ml.rl.training.parametric_dqn_trainer.ParametricDQNTrainer]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "rl_temperature", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "any", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "choice", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "ParametricDQNTrainer", "type": "Type[ml.rl.training.parametric_dqn_trainer.ParametricDQNTrainer]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "ParametricDQNTrainer", "type": "Type[ml.rl.training.parametric_dqn_trainer.ParametricDQNTrainer]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "actions", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "input", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "GymPredictor", "type": "Type[GymPredictor]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "states", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "ContinuousActionDQNTrainer", "type": "Type[ml.rl.training.continuous_action_dqn_trainer.ContinuousActionDQNTrainer]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "internal_policy_model", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "rl_temperature", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "choice", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "states", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "ContinuousActionDQNTrainer", "type": "Type[ml.rl.training.continuous_action_dqn_trainer.ContinuousActionDQNTrainer]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "actions", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "internal_policy_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "action_normalization_parameters", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "eye", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "tile", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "actions", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "Evaluator", "type": "Type[ml.rl.training.evaluator.Evaluator]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "max", "type": "Any"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "action_normalization_parameters", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "eye", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "tile", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "actions", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "action_normalization_parameters", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "eye", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "tile", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "actions", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "GymDDPGPredictor"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "action_normalization_parameters", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "eye", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "tile", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "actions", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "states", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "states", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "actions", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "Evaluator", "type": "Type[ml.rl.training.evaluator.Evaluator]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "max", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "action_normalization_parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "eye", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "tile", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "actions", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "states", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "states", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "actions", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "actions", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "actions", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "states", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "actions", "type": "Any"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "q_scores_softmax", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "q_scores", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "num_actions", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 122, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "self", "type": "GymDQNPredictorPytorch"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "GymDQNPredictor"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "states", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "states", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "states", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 53, "nodeName": "states", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "states", "type": "Any"}]