[{"lineNumber": 12, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "types", "type": "Dict[Any, str]"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "read_data", "type": "Callable[[], Dict[str, Union[numpy.ndarray, List[float]]]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "read_data", "type": "Callable[[], Dict[str, Union[numpy.ndarray, List[float]]]]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "identify_types", "type": "Callable[..., Dict[Any, str]]"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "BINARY", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "CONTINUOUS", "type": "str"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "PROBABILITY", "type": "str"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "preprocessing_util", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "preprocessing_util", "type": "module"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "identify_types", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "types", "type": "Dict[Any, str]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "identify_types", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "types", "type": "Dict[Any, str]"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "identify_types", "type": "module"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestTypeIdentification"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "types", "type": "Dict[Any, str]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "identify_types", "type": "module"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "feature_value_map", "type": "Dict[str, Union[numpy.ndarray, List[float]]]"}]