[{"lineNumber": 25, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "numpy_slate", "type": "List[Union[Dict[Any, Any], Dict[str, Any]]]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "model_index", "type": "int"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "numpy_slate", "type": "List[Union[Dict[Any, Any], Dict[str, Any]]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "inp", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "model_names", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "propensity_net_path", "type": "str"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "value_models", "type": "List[nothing]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "propensity_net_path", "type": "str"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "value_models", "type": "List[nothing]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "inp", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "output", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "Copy", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "PredictorExportMeta", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "save_to_db", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "path", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "output", "type": "str"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "model_output", "type": "str"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "FlattenToVec", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "NextBlob", "type": "Callable[[str], str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "SparseToDense", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "PredictorExportMeta", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "save_to_db", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "path", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_sum_deterministic_policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 65, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "PolicyEvaluatorParameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "PolicyEvaluator", "type": "Type[ml.rl.evaluation.policy_evaluator.PolicyEvaluator]"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "pep", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "evaluate_slates", "type": "Callable[[List[List[Dict[str, numpy.ndarray]]], numpy.ndarray, numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 51, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "value", "type": "float"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "value", "type": "float"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "_sum_deterministic_policy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 65, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_dummy_model_copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "PolicyEvaluatorParameters", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "PolicyEvaluator", "type": "Type[ml.rl.evaluation.policy_evaluator.PolicyEvaluator]"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "pep", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "evaluate_slates", "type": "Callable[[List[List[Dict[str, numpy.ndarray]]], numpy.ndarray, numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "value", "type": "float"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "value", "type": "float"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "x", "type": "int"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "model_scores", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "x", "type": "int"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "inp", "type": "str"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "output", "type": "str"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "inp", "type": "str"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "output", "type": "str"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "model_output", "type": "str"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "model_output", "type": "str"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "ArgMax", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "max_action", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "output", "type": "str"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "output", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "value_models", "type": "Any"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "ValueModelParameters", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "value_models", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "ValueModelParameters", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "_generate_numpy_slate", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "_generate_numpy_slate", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "value_models", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "ValueModelParameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "value_models", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "ValueModelParameters", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "_generate_numpy_slate", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "slates", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "_generate_numpy_slate", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "slate", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "model_scores", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "Transpose", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 59, "nodeName": "float32", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "net", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 71, "col_offset": 57, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "slate", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "model_index", "type": "int"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "slate", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "model_index", "type": "int"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "slate", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "v", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "numpy_slate", "type": "List[Union[Dict[Any, Any], Dict[str, Any]]]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "slate", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "numpy_slate", "type": "List[Union[Dict[Any, Any], Dict[str, Any]]]"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "Sum", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "model_scores", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 166, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "slate", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "model_index", "type": "int"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "v", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "slate", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "model_index", "type": "int"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "k", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "model_blobs", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 131, "col_offset": 46, "nodeName": "x", "type": "int"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "model_scores", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "slate", "type": "Any"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "model_index", "type": "int"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "x", "type": "int"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "np", "type": "module"}]