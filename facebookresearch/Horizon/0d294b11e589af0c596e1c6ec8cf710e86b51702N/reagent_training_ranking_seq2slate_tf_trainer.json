[{"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "Trainer", "type": "Type[reagent.training.trainer.Trainer]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "parameters", "type": "reagent.parameters.Seq2SlateParameters"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "parameters", "type": "reagent.parameters.Seq2SlateParameters"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "use_gpu", "type": "bool"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "print_interval", "type": "int"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "print_interval", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "seq2slate_net", "type": "reagent.models.seq2slate.Seq2SlateTransformerNet"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "seq2slate_net", "type": "reagent.models.seq2slate.Seq2SlateTransformerNet"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "minibatch_size", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "minibatch", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "kl_div_loss", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "components", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "components", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "minibatch", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "label_size", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "field", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "make_optimizer", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "KLDivLoss", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "PreprocessedTrainingBatch", "type": "Type[reagent.types.PreprocessedTrainingBatch]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "PreprocessedTrainingBatch", "type": "Type[reagent.types.PreprocessedTrainingBatch]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "training_batch", "type": "reagent.types.PreprocessedTrainingBatch"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "PreprocessedRankingInput", "type": "Type[reagent.types.PreprocessedRankingInput]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "optim_tgt_out_idx", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "_transform_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "optim_tgt_out_idx", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "kl_div_loss", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "loss", "type": "Any"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "max_src_seq_len", "type": "int"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "optim_tgt_out_idx", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "label_size", "type": "int"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "policy_optimizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "rlt", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "training_batch", "type": "reagent.types.PreprocessedTrainingBatch"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "rlt", "type": "module"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "rlt", "type": "module"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "seq2slate_net", "type": "reagent.models.seq2slate.Seq2SlateTransformerNet"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "training_input", "type": "reagent.types.PreprocessedRankingInput"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "minibatch", "type": "int"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "print_interval", "type": "int"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "seq2slate_net", "type": "reagent.models.seq2slate.Seq2SlateTransformerNet"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "F", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "Optimizer__Union", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "seq2slate_net", "type": "reagent.models.seq2slate.Seq2SlateTransformerNet"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "PER_SYMBOL_LOG_PROB_DIST_MODE", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "Seq2SlateMode", "type": "Type[reagent.models.seq2slate.Seq2SlateMode]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "minibatch", "type": "int"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "loss", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "Seq2SlateTeacherForcingTrainer"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "loss", "type": "Any"}]