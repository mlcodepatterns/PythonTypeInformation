[{"lineNumber": 23, "col_offset": 0, "nodeName": "generate_data_discrete", "type": "Callable[[Any, bool, str], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "ReagentSQLTestBase", "type": "Type[reagent.test.workflow.reagent_sql_test_base.ReagentSQLTestBase]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 234, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "generate_discrete_mdp_pandas_df", "type": "Callable[[Optional[bool], Optional[bool]], Tuple[Any, str]]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "createDataFrame", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "show", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "table_name", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "table_name", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ts", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "df", "type": "reagent.data.oss_data_fetcher.OssDataFetcher"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "multi_steps", "type": "bool"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "INFO", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "generate_data_discrete", "type": "Callable[[Any, bool, str], Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "OssDataFetcher", "type": "Type[reagent.data.oss_data_fetcher.OssDataFetcher]"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "query_data", "type": "Callable[..., reagent.workflow.types.Dataset]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "parquet", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "orderBy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "generate_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "_discrete_read_data", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "verify_discrete_single_step_except_rewards", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEq", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "_discrete_read_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "verify_discrete_single_step_except_rewards", "type": "Any"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "df", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEq", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "generate_data", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "_discrete_read_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "verify_discrete_multi_steps_except_rewards", "type": "Any"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "df", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 59, "nodeName": "state_features", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 140, "col_offset": 58, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "next_state_features", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 178, "col_offset": 53, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 59, "nodeName": "state_features", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 207, "col_offset": 58, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 69, "nodeName": "next_state_features", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "logging", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "multi_steps", "type": "Any"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "df", "type": "reagent.data.oss_data_fetcher.OssDataFetcher"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "ts", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "custom_reward_expression", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "multi_steps", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "read", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "dataset", "type": "reagent.workflow.types.Dataset"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "asc", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "gamma", "type": "float"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 141, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "table_name", "type": "str"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "self", "type": "TestQueryData"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "gamma", "type": "float"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "gamma", "type": "float"}]