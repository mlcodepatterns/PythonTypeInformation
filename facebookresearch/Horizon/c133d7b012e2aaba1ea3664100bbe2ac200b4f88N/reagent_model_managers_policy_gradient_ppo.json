[{"lineNumber": 36, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "ModelManager", "type": "Type[reagent.model_managers.model_manager.ModelManager]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "__hash__", "type": "Callable[[Any], int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "param_hash", "type": "Callable[[Any], int]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "trainer_param", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "PPOTrainerParameters", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "value_net_builder", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "sampler_temperature", "type": "float"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "PPOTrainer", "type": "Type[reagent.training.ppo_trainer.PPOTrainer]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "Module", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 139, "col_offset": 9, "nodeName": "RLTrainingOutput", "type": "Type[reagent.workflow.types.RLTrainingOutput]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "ModelFeatureConfig", "type": "Type[reagent.core.types.ModelFeatureConfig]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "field", "type": "Callable"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "field", "type": "Callable"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 50, "col_offset": 71, "nodeName": "field", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "actions", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_policy", "type": "None"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "policy_net_builder", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "value_net", "type": "None"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "value_net_builder", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "trainer", "type": "reagent.training.ppo_trainer.PPOTrainer"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "serving", "type": "bool"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "policy_serving_module", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "nn", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 140, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "rlt", "type": "module"}, {"lineNumber": 43, "col_offset": 64, "nodeName": "PPOTrainerParameters", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "ValueNetBuilder__Union", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "__post_init_post_parse__", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "PPO"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "trainer_param", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "PPO"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "policy_net_builder", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "build_q_network", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "state_feature_config", "type": "reagent.core.types.ModelFeatureConfig"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "state_normalization_data", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "PPO"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "value_net_builder", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "PPOTrainer", "type": "Type[reagent.training.ppo_trainer.PPOTrainer]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "_policy", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_policy_network", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "build_serving_module", "type": "Any"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "STATE", "type": "str"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "RewardOptions", "type": "Type[reagent.workflow.types.RewardOptions]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "DataFetcher", "type": "Type[reagent.data.data_fetcher.DataFetcher]"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "ReaderOptions", "type": "Type[reagent.workflow.types.ReaderOptions]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "get_model_feature_config", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "self", "type": "PPO"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "self", "type": "PPO"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "policy_net_builder", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "PPO"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "PPO"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "value_net_builder", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "build_value_network", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "state_normalization_data", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "value_net", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "create_predictor_policy_from_model", "type": "Callable[..., reagent.gym.policies.policy.Policy]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "_policy", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "sampler", "type": "reagent.gym.policies.samplers.discrete_sampler.SoftmaxActionSampler"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "_policy", "type": "reagent.gym.policies.policy.Policy"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "self", "type": "PPO"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "PPO"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "value", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "_policy_network", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "state_normalization_data", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "action_names", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "state_feature_config", "type": "reagent.core.types.ModelFeatureConfig"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "NormalizationData", "type": "Type[reagent.core.parameters.NormalizationData]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "NormalizationKey", "type": "Type[reagent.core.parameters.NormalizationKey]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "DiscreteDQNNetBuilder__Union", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "ModelFeatureConfigProvider__Union", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "PPO"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "self", "type": "PPO"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "PPO"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "self", "type": "PPO"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "value_net_builder", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "PPO"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "create_policy", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "asdict", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "build_serving_module", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "PPO"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "SoftmaxActionSampler", "type": "Type[reagent.gym.policies.samplers.discrete_sampler.SoftmaxActionSampler]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "PPO"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "Policy", "type": "Type[reagent.gym.policies.policy.Policy]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "policy_net_builder", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "self", "type": "PPO"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "self", "type": "PPO"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "self", "type": "PPO"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "self", "type": "PPO"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "Dataset", "type": "Type[reagent.workflow.types.Dataset]"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "ReAgentDataModule", "type": "Type[reagent.workflow.data.reagent_data_module.ReAgentDataModule]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "ResourceOptions", "type": "Type[reagent.workflow.types.ResourceOptions]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "state_feature_config_provider", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "PPO"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "trainer_param", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "self", "type": "PPO"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "sampler_temperature", "type": "float"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "_policy_network", "type": "Any"}, {"lineNumber": 95, "col_offset": 75, "nodeName": "sampler", "type": "reagent.gym.policies.samplers.discrete_sampler.SoftmaxActionSampler"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "self", "type": "PPO"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 69, "nodeName": "Dueling", "type": "Type[reagent.net_builder.discrete_dqn.dueling.Dueling]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "RawModelFeatureConfigProvider", "type": "Type[reagent.models.model_feature_config_provider.RawModelFeatureConfigProvider]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "self", "type": "PPO"}, {"lineNumber": 93, "col_offset": 59, "nodeName": "self", "type": "PPO"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "self", "type": "PPO"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 124, "col_offset": 44, "nodeName": "float", "type": "Type[float]"}]