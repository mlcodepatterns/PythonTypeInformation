[{"lineNumber": 22, "col_offset": 0, "nodeName": "generate_data_parametric", "type": "Callable[[Any, bool, str], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "ReagentSQLTestBase", "type": "Type[reagent.test.workflow.reagent_sql_test_base.ReagentSQLTestBase]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 298, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 22, "col_offset": 50, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 22, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "generate_parametric_mdp_pandas_df", "type": "Callable[[Optional[bool], Optional[bool]], Tuple[Any, str]]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "createDataFrame", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "df", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "show", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "createOrReplaceTempView", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "table_name", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "table_name", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "ts", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "df", "type": "reagent.data.oss_data_fetcher.OssDataFetcher"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "gamma", "type": "float"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "multi_steps", "type": "bool"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "INFO", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "generate_data_parametric", "type": "Callable[[Any, bool, str], Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "TableSpec", "type": "Type[reagent.workflow.types.TableSpec]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "OssDataFetcher", "type": "Type[reagent.data.oss_data_fetcher.OssDataFetcher]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "query_data", "type": "Callable[..., reagent.workflow.types.Dataset]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "parquet", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "parquet_url", "type": "str"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "orderBy", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "show", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "generate_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "_parametric_read_data", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "verify_parametric_single_step_except_rewards", "type": "Any"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEq", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "_parametric_read_data", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "verify_parametric_single_step_except_rewards", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "df", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEq", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "generate_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "_parametric_read_data", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "toPandas", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "verify_parametric_multi_steps_except_rewards", "type": "Any"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "df", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 59, "nodeName": "state_features", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "action_presence", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "action_presence", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 65, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 161, "col_offset": 58, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 69, "nodeName": "next_state_features", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 194, "col_offset": 53, "nodeName": "next_action_presence", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 75, "nodeName": "next_action", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 210, "col_offset": 53, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 59, "nodeName": "state_features", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "action_presence", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 244, "col_offset": 48, "nodeName": "action_presence", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 65, "nodeName": "action", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 259, "col_offset": 58, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "next_state_features_presence", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 69, "nodeName": "next_state_features", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqWithPresence", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 292, "col_offset": 53, "nodeName": "next_action_presence", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 75, "nodeName": "next_action", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEq", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "multi_steps", "type": "Any"}, {"lineNumber": 42, "col_offset": 61, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "table_name", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "df", "type": "reagent.data.oss_data_fetcher.OssDataFetcher"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "ts", "type": "reagent.workflow.types.TableSpec"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "custom_reward_expression", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "multi_steps", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "read", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "dataset", "type": "reagent.workflow.types.Dataset"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "asc", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "gamma", "type": "float"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 235, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 273, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "df", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 294, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "table_name", "type": "str"}, {"lineNumber": 42, "col_offset": 61, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "sqlCtx", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "self", "type": "TestQueryDataParametric"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "gamma", "type": "float"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "gamma", "type": "float"}, {"lineNumber": 94, "col_offset": 59, "nodeName": "gamma", "type": "float"}]