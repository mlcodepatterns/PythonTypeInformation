[{"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "bcq_drop_threshold", "type": "float"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "q_net_layer_0_w", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "q_net_layer_0_b", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "q_net_layer_1_w", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "q_net_layer_1_b", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "im_net_layer_0_w", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "im_net_layer_0_b", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "im_net_layer_1_w", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "im_net_layer_1_b", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "bcq_mask", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "final_q_values", "type": "Any"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "FullyConnectedDQN", "type": "Type[ml.rl.models.dqn.FullyConnectedDQN]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "FullyConnectedNetwork", "type": "Type[ml.rl.models.fully_connected_network.FullyConnectedNetwork]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "BatchConstrainedDQN", "type": "Type[ml.rl.models.bcq.BatchConstrainedDQN]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "input_prototype", "type": "Callable[[], ml.rl.types.PreprocessedState]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "model", "type": "ml.rl.models.bcq.BatchConstrainedDQN"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "FullyConnectedDQN", "type": "Type[ml.rl.models.dqn.FullyConnectedDQN]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "FullyConnectedNetwork", "type": "Type[ml.rl.models.fully_connected_network.FullyConnectedNetwork]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "BatchConstrainedDQN", "type": "Type[ml.rl.models.bcq.BatchConstrainedDQN]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expected_num_params", "type": "int"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "expected_num_inputs", "type": "int"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "expected_num_outputs", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "check_save_load", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "TestBCQ"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "model", "type": "ml.rl.models.bcq.BatchConstrainedDQN"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "expected_num_params", "type": "int"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "expected_num_inputs", "type": "int"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "expected_num_outputs", "type": "int"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "from_tensor", "type": "Callable"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "FullyConnectedDQN", "type": "Type[ml.rl.models.dqn.FullyConnectedDQN]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 72, "col_offset": 64, "nodeName": "q_net_layer_0_w", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "q_net_layer_0_b", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "q_net_layer_1_w", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "q_net_layer_1_b", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "FullyConnectedNetwork", "type": "Type[ml.rl.models.fully_connected_network.FullyConnectedNetwork]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 85, "col_offset": 68, "nodeName": "im_net_layer_0_w", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 87, "col_offset": 66, "nodeName": "im_net_layer_0_b", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 89, "col_offset": 68, "nodeName": "im_net_layer_1_w", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "im_net_layer_1_b", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "imitator_probs", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "bcq_drop_threshold", "type": "float"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "BatchConstrainedDQN", "type": "Type[ml.rl.models.bcq.BatchConstrainedDQN]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "model", "type": "ml.rl.models.bcq.BatchConstrainedDQN"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "model", "type": "ml.rl.models.bcq.BatchConstrainedDQN"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestBCQ"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "float_features", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestBCQ"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "PreprocessedState", "type": "Type[ml.rl.types.PreprocessedState]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "functional", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "float_features", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "bcq_drop_threshold", "type": "float"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "state", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "state_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "action_dim", "type": "int"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "bcq_mask", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "bcq_mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "input", "type": "ml.rl.types.PreprocessedState"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "final_q_values", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "q_values", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "q_network", "type": "ml.rl.models.dqn.FullyConnectedDQN"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "imitator_network", "type": "ml.rl.models.fully_connected_network.FullyConnectedNetwork"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "final_q_values", "type": "Any"}]