[{"lineNumber": 20, "col_offset": 0, "nodeName": "save_sum_deterministic_policy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "output", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "model_names", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "max_action", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "meta", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "__slot__", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "Net", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "net", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "output", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "model_output", "type": "str"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "FlattenToVec", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "NextBlob", "type": "Callable[[str], str]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "SparseToDense", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "PredictorExportMeta", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "net", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "save_to_db", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "db_type", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "path", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "meta", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "policy_net_features", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "policy_net_features", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "model_feature_set", "type": "Dict[str, Dict[str, numpy.ndarray]]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "model_feature_set", "type": "Dict[str, Dict[str, numpy.ndarray]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "process_slate_net", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "created_net", "type": "bool"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "value_input_models", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "value_input_models", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "num_slates", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "value_sum", "type": "float"}, {"lineNumber": 21, "col_offset": 10, "nodeName": "core", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "model_output", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "model_output", "type": "str"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "ArgMax", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "max_action", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 33, "col_offset": 70, "nodeName": "output", "type": "str"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "one_blob", "type": "str"}, {"lineNumber": 34, "col_offset": 64, "nodeName": "output", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Slate"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Slate"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "PolicyEvaluatorParameters", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "Net", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "process_slate_net", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "plan", "type": "Callable[[Any, Any, Any, str], str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "process_slate_net", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "db_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "params", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "slates", "type": "List[Slate]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "slate_index", "type": "int"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "slate", "type": "Slate"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "slates", "type": "List[Slate]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "ips_denominator", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "value_sum", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "value_sum", "type": "Union[Any, float]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "num_slates", "type": "int"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "Transpose", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "net", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "core", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "PolicySimulator", "type": "Type[ml.rl.evaluation.policy_simulator.PolicySimulator]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "value_input_models", "type": "Dict[Any, Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "List", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "model_name", "type": "str"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "model_input", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "items", "type": "Callable"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "value_input_model_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "created_net", "type": "bool"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "created_net", "type": "bool"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "RunNet", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "process_slate_net", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "action_probabilities", "type": "str"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "ips_numerator", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "ips_denominator", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 30, "col_offset": 56, "nodeName": "Sum", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "Slate", "type": "Type[Slate]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "policy_net_features", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "name", "type": "str"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "model_feature_set", "type": "Dict[str, Dict[str, numpy.ndarray]]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "value_input_models", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "model_input", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "CreateNet", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "process_slate_net", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "action_probabilities", "type": "Any"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "slate_index", "type": "int"}, {"lineNumber": 28, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 30, "col_offset": 56, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "model_outputs", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "slate", "type": "Slate"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "slate", "type": "Slate"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 76, "col_offset": 67, "nodeName": "model_name", "type": "str"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "model_input", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 80, "col_offset": 77, "nodeName": "value", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "self", "type": "PolicyEvaluator"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "slate_index", "type": "int"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 70, "nodeName": "name", "type": "str"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "value_input_model_params", "type": "Any"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "slate_index", "type": "int"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "np", "type": "module"}]