[{"lineNumber": 26, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 199, "col_offset": 9, "nodeName": "Slate", "type": "Type[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "all_model_features", "type": "Dict[str, Dict[str, List[Any]]]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "example", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "model_features_per_example", "type": "List[Dict[str, Dict[str, Any]]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "all_model_features_numpy", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "inp", "type": "str"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "propensity_net_path", "type": "str"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "db_type", "type": "str"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "global_value_inputs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "value_input_models", "type": "List[nothing]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "propensity_net_path", "type": "str"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "db_type", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "global_value_inputs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "value_input_models", "type": "List[nothing]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "model_name", "type": "str"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "model", "type": "Dict[str, List[Any]]"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "all_model_features_numpy", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "Slate", "type": "Type[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "policy_features", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "all_model_features_numpy", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "Net", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "set_net", "type": "Callable[[Any], None]"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "inp", "type": "str"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "FeedBlob", "type": "Any"}, {"lineNumber": 237, "col_offset": 27, "nodeName": "output", "type": "str"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "Copy", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "PredictorExportMeta", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "net", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "save_to_db", "type": "Any"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "path", "type": "Any"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "meta", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 29, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "PolicyEvaluatorParameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "save_sum_deterministic_policy", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "db_type", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "PolicyEvaluator", "type": "Type[ml.rl.evaluation.policy_evaluator.PolicyEvaluator]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "pep", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "evaluate_slates", "type": "Callable[[List[ml.rl.evaluation.policy_evaluator.Slate], numpy.ndarray, numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "value", "type": "float"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "value", "type": "float"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "temp_directory_name", "type": "nothing"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "_dummy_model_copy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "PolicyEvaluatorParameters", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "save_sum_deterministic_policy", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "policy_file", "type": "str"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "db_type", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "PolicyEvaluator", "type": "Type[ml.rl.evaluation.policy_evaluator.PolicyEvaluator]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "pep", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "evaluate_slates", "type": "Callable[[List[ml.rl.evaluation.policy_evaluator.Slate], numpy.ndarray, numpy.ndarray, numpy.ndarray], float]"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "action_selection", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "rewards", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "baseline_probabilities", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "value", "type": "float"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "value", "type": "float"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "model_name", "type": "str"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "new_model_features", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "items", "type": "Callable"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "model_features", "type": "Dict[str, List[Any]]"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "all_model_features", "type": "Dict[str, Dict[str, List[Any]]]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "all_model_features_numpy", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "C2", "type": "Type[ml.rl.caffe_utils.C2]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "net", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "inp", "type": "str"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "output", "type": "str"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "inp", "type": "str"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "output", "type": "str"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "value_input_models", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "ValueInputModelParameters", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "value_input_models", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "ValueInputModelParameters", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "pep", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "flatten_slate", "type": "Callable[[Dict[str, Any], List[Dict[str, Dict[str, Any]]]], ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "flatten_slate", "type": "Callable[[Dict[str, Any], List[Dict[str, Dict[str, Any]]]], ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "value_input_models", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "ValueInputModelParameters", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "value_input_models", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "ValueInputModelParameters", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "pep", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "flatten_slate", "type": "Callable[[Dict[str, Any], List[Dict[str, Dict[str, Any]]]], ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "slates", "type": "List[ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "flatten_slate", "type": "Callable[[Dict[str, Any], List[Dict[str, Dict[str, Any]]]], ml.rl.evaluation.policy_evaluator.Slate]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "pe", "type": "ml.rl.evaluation.policy_evaluator.PolicyEvaluator"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 210, "col_offset": 50, "nodeName": "example", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "model_name", "type": "str"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "all_model_features", "type": "Dict[str, Dict[str, List[Any]]]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "all_model_features", "type": "Dict[str, Dict[str, List[Any]]]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "model_name", "type": "str"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "model", "type": "Dict[str, List[Any]]"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "model1_file", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "pep", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "TestPolicyEvaluator"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "Any", "type": "Any"}, {"lineNumber": 198, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "all_model_features", "type": "Dict[str, Dict[str, List[Any]]]"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "model_name", "type": "str"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "new_model_features", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "model_features", "type": "Dict[str, List[Any]]"}, {"lineNumber": 212, "col_offset": 39, "nodeName": "model_name", "type": "str"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "model_features", "type": "Dict[str, List[Any]]"}, {"lineNumber": 216, "col_offset": 54, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 218, "col_offset": 58, "nodeName": "feature_value", "type": "Any"}, {"lineNumber": 224, "col_offset": 67, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 224, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "model", "type": "Dict[str, List[Any]]"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "model_features", "type": "Dict[str, List[Any]]"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "feature_id", "type": "str"}, {"lineNumber": 198, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 198, "col_offset": 61, "nodeName": "Any", "type": "Any"}]