[{"lineNumber": 74, "col_offset": 0, "nodeName": "evaluate_boxes", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "evaluate_masks", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "evaluate_keypoints", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "evaluate_box_proposals", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "log_box_proposal_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "log_copy_paste_friendly_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 0, "nodeName": "check_expected_results", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "_use_json_dataset_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 0, "nodeName": "_use_cityscapes_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 0, "nodeName": "_use_voc_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 301, "col_offset": 0, "nodeName": "_coco_eval_to_box_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "_coco_eval_to_mask_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "_coco_eval_to_keypoint_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 0, "nodeName": "_voc_eval_to_box_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 0, "nodeName": "_cs_eval_to_mask_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 349, "col_offset": 0, "nodeName": "_empty_box_results", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 0, "nodeName": "_empty_mask_results", "type": "Callable[[], Any]"}, {"lineNumber": 381, "col_offset": 0, "nodeName": "_empty_keypoint_results", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 0, "nodeName": "_empty_box_proposal_results", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 286, "col_offset": 0, "nodeName": "COCO_AP", "type": "int"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "COCO_AP50", "type": "int"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "COCO_AP75", "type": "int"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "COCO_APS", "type": "int"}, {"lineNumber": 290, "col_offset": 0, "nodeName": "COCO_APM", "type": "int"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "COCO_APL", "type": "int"}, {"lineNumber": 293, "col_offset": 0, "nodeName": "COCO_KPS_APM", "type": "int"}, {"lineNumber": 294, "col_offset": 0, "nodeName": "COCO_KPS_APL", "type": "int"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "MASK_ON", "type": "Any"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "KEYPOINTS_ON", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "all_results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "keypoint_results", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Any]]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "areas", "type": "Dict[unicode, unicode]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "limit", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "EXPECTED_RESULTS", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 336, "col_offset": 11, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "evaluate_boxes", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "MODEL", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "COMPETITION_MODE", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "_use_json_dataset_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "box_results", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "COMPETITION_MODE", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "_use_json_dataset_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "mask_results", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "COMPETITION_MODE", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "evaluate_keypoints", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "all_keyps", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "_coco_eval_to_keypoint_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "_empty_box_proposal_results", "type": "Callable[[], Any]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "keys", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "pad", "type": "int"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "task", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "metric", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "ok", "type": "bool"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "FORCE_JSON_DATASET_EVAL", "type": "Any"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "_empty_box_results", "type": "Callable[[], Any]"}, {"lineNumber": 303, "col_offset": 7, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "stats", "type": "Any"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "_empty_mask_results", "type": "Callable[[], Any]"}, {"lineNumber": 316, "col_offset": 7, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "stats", "type": "Any"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "_empty_keypoint_results", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 7, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "stats", "type": "Any"}, {"lineNumber": 341, "col_offset": 11, "nodeName": "_empty_box_results", "type": "Callable[[], Any]"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "_empty_mask_results", "type": "Callable[[], Any]"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 382, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "use_matlab", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "evaluate_masks", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "all_segms", "type": "Any"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "evaluate_keypoints", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "all_keyps", "type": "Any"}, {"lineNumber": 68, "col_offset": 68, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "evaluate_boxes", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "_coco_eval_to_box_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "_use_cityscapes_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "box_results", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "evaluate_masks", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "all_segms", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "_coco_eval_to_mask_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "_use_cityscapes_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "mask_results", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "json_dataset_evaluator", "type": "module"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "area", "type": "unicode"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "suffix", "type": "unicode"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "key", "type": "unicode"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "results", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "max", "type": "Callable"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "items", "type": "Any"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "results", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "metric_vals", "type": "List[unicode]"}, {"lineNumber": 209, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "EXPECTED_RESULTS", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "results", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 213, "col_offset": 70, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "task", "type": "Any"}, {"lineNumber": 214, "col_offset": 41, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 214, "col_offset": 73, "nodeName": "task", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "metric", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "lo", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "hi", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "ok", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "err", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "tol", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "ok", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "ok", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "find", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "s", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 318, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 323, "col_offset": 29, "nodeName": "s", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "s", "type": "Any"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "s", "type": "Any"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "json_dataset_evaluator", "type": "module"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 80, "col_offset": 71, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "evaluate_boxes", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "_coco_eval_to_box_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "coco_eval", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "_use_voc_evaluator", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "box_results", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "box_results", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "json_dataset_evaluator", "type": "module"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "evaluate_masks", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "all_segms", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "_cs_eval_to_mask_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "cs_eval", "type": "None"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "mask_results", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "keypoint_results", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "areas", "type": "Dict[unicode, unicode]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "evaluate_box_proposals", "type": "Callable[..., Dict[unicode, Any]]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "roidb", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "suffix", "type": "unicode"}, {"lineNumber": 165, "col_offset": 45, "nodeName": "limit", "type": "int"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "stats", "type": "Dict[unicode, Any]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Any]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 185, "col_offset": 52, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "results", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "metric", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "std", "type": "Any"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "mean", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "task", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "metric", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "mean", "type": "Any"}, {"lineNumber": 230, "col_offset": 62, "nodeName": "std", "type": "Any"}, {"lineNumber": 230, "col_offset": 67, "nodeName": "lo", "type": "Any"}, {"lineNumber": 230, "col_offset": 71, "nodeName": "hi", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "atol", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "err", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "tol", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "task", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "metric", "type": "Any"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 238, "col_offset": 56, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 238, "col_offset": 70, "nodeName": "err", "type": "Any"}, {"lineNumber": 238, "col_offset": 75, "nodeName": "tol", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "EXPECTED_RESULTS_EMAIL", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "subject", "type": "unicode"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "find", "type": "Any"}, {"lineNumber": 272, "col_offset": 46, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "COCO_AP", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "COCO_AP50", "type": "int"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "COCO_AP75", "type": "int"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "COCO_APS", "type": "int"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "COCO_APM", "type": "int"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "COCO_APL", "type": "int"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 318, "col_offset": 30, "nodeName": "COCO_AP", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "COCO_AP50", "type": "int"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "COCO_AP75", "type": "int"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 321, "col_offset": 31, "nodeName": "COCO_APS", "type": "int"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "COCO_APM", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 323, "col_offset": 31, "nodeName": "COCO_APL", "type": "int"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 331, "col_offset": 34, "nodeName": "COCO_AP", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 332, "col_offset": 36, "nodeName": "COCO_AP50", "type": "int"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 333, "col_offset": 36, "nodeName": "COCO_AP75", "type": "int"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 334, "col_offset": 35, "nodeName": "COCO_KPS_APM", "type": "int"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Union[int, Any]]]"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "COCO_KPS_APL", "type": "int"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "all_results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "all_results", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "json_dataset_evaluator", "type": "module"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 86, "col_offset": 71, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "evaluate_boxes", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "all_boxes", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "_voc_eval_to_box_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "voc_eval", "type": "None"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "cs_json_dataset_evaluator", "type": "module"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "not_comp", "type": "bool"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "json_dataset_evaluator", "type": "module"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "area", "type": "unicode"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "limit", "type": "int"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "CLASS_SPECIFIC_AR", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "res", "type": "collections.OrderedDict[unicode, collections.OrderedDict[unicode, Any]]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "key", "type": "unicode"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "keys", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 177, "col_offset": 58, "nodeName": "v", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "results", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 187, "col_offset": 53, "nodeName": "task", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "results", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "task", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "results", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "task", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "EXPECTED_RESULTS_SIGMA_TOL", "type": "Any"}, {"lineNumber": 224, "col_offset": 57, "nodeName": "std", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "EXPECTED_RESULTS_SIGMA_TOL", "type": "Any"}, {"lineNumber": 225, "col_offset": 57, "nodeName": "std", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "lo", "type": "Any"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "hi", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "actual_val", "type": "Any"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "job_name", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "job_id", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "msg", "type": "unicode"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "send_email", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "subject", "type": "unicode"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "EXPECTED_RESULTS_EMAIL", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "voc_dataset_evaluator", "type": "module"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "use_matlab", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "TEST", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "results", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "ljust", "type": "Any"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "pad", "type": "int"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "values", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 191, "col_offset": 40, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "metric_vals", "type": "List[unicode]"}, {"lineNumber": 215, "col_offset": 33, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "expected_val", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 249, "col_offset": 42, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "pformat", "type": "Callable[..., str]"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "pformat", "type": "Callable[..., str]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "body", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 249, "col_offset": 42, "nodeName": "os", "type": "module"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "pprint", "type": "module"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "pprint", "type": "module"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 260, "col_offset": 40, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 260, "col_offset": 40, "nodeName": "os", "type": "module"}]