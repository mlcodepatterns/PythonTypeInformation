[{"lineNumber": 33, "col_offset": 0, "nodeName": "get_roidb_blobs", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "get_net", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "get_roidb_sample_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "create_loader_and_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "run_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "blobs", "type": "Dict[unicode, Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "blob_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "type", "type": "unicode"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "gpu_id", "type": "int"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "net", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "roidb", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "roidb", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "roidb", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "loader", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "gpu_dev", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "name_scope", "type": "unicode"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "logger", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "ASPECT_GROUPING", "type": "bool"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "NUM_GPUS", "type": "int"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "blobs", "type": "Dict[unicode, Any]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "stack", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "blobs", "type": "Dict[unicode, Any]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "get_output_names", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "Net", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "name", "type": "unicode"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "net", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "NUM_GPUS", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "get_roidb_sample_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "sample_data", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "RoIDataLoader", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "roidb", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "get_net", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "loader", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "register_sigint_handler", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "start", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "loader", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "net", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "RunNetOnce", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "DeviceOption", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "CUDA", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "GlobalInit", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "setup_logging", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "__name__", "type": "str"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "setLevel", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "INFO", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "RNG_SEED", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "assert_and_infer_cfg", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "data_loader", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "core", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "randint", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "loader", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "loader", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "core", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "caffe2_pb2", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "NameScope", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "name_scope", "type": "unicode"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "astype", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "create_loader_and_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 60, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "create_loader_and_network", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "logging", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "logger", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "logging", "type": "module"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "logging", "type": "module"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "roidb", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "NameScope", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "blob_name", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "blob_names", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "roidb", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "sample_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "core", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "DeviceScope", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "gpu_dev", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "FetchBlob", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "run_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "train_net", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "run_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "test_net", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "test_loader", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "train_loader", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "utils", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "gpu_id", "type": "int"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "DeviceScope", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "blob", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "DequeueBlobs", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "_blobs_queue_name", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "blob_names", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "Proto", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "core", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "ScopedName", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "core", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "OnGPU", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "gpu_id", "type": "int"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "ScopedName", "type": "Any"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "blob_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "CreateBlob", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "blob", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "data_loader", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "net", "type": "Any"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "core", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "test_data", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "muji", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "core", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "workspace", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "data", "type": "Any"}]