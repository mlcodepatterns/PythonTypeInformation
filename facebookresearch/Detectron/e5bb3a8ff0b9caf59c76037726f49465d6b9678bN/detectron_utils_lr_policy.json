[{"lineNumber": 28, "col_offset": 0, "nodeName": "get_lr_at_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "lr_func_steps_with_lrs", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "lr_func_steps_with_decay", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "lr_func_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "get_step_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "get_lr_func", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "lr", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "ind", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "ind", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "steps", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "policy", "type": "unicode"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "it", "type": "Any"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "it", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "WARM_UP_ITERS", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "method", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "WARM_UP_METHOD", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "lr", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "warmup_factor", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "float32", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 63, "col_offset": 10, "nodeName": "get_step_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "cur_iter", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "LRS", "type": "Any"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "get_step_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "cur_iter", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "BASE_LR", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "BASE_LR", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "STEPS", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ind", "type": "int"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "step", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "steps", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "ind", "type": "int"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "LR_POLICY", "type": "Any"}, {"lineNumber": 110, "col_offset": 7, "nodeName": "policy", "type": "unicode"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "get_lr_func", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "method", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "warmup_factor", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "WARM_UP_FACTOR", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "ind", "type": "int"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "GAMMA", "type": "Any"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "ind", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "GAMMA", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "STEPS", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "MAX_ITER", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "cur_iter", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "step", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "method", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "warmup_factor", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "cur_iter", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "STEP_SIZE", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "LR_POLICY", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "policy", "type": "unicode"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "it", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "WARM_UP_ITERS", "type": "Any"}, {"lineNumber": 39, "col_offset": 70, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "WARM_UP_FACTOR", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 41, "col_offset": 70, "nodeName": "method", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "SOLVER", "type": "Any"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "cfg", "type": "detectron.utils.collections.AttrDict"}]