[{"lineNumber": 73, "col_offset": 0, "nodeName": "make_layers_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "alexnet", "type": "Callable[..., Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "CFG", "type": "Dict[str, List[Union[Tuple[int, int, int, int], str]]]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "cfg", "type": "List[Union[Tuple[int, int, int, int], str]]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "dim", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "model", "type": "AlexNet"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "model", "type": "AlexNet"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "features", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "top_layer", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "top_layer", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "AlexNet", "type": "Type[AlexNet]"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "out", "type": "Any"}, {"lineNumber": 91, "col_offset": 72, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "_initialize_weights", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "sobel_filter", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "sobel", "type": "None"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "features", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "view", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "y", "type": "int"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "bn", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "in_channels", "type": "Union[int, str]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "make_layers_features", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "dim", "type": "int"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "sobel_filter", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "top_layer", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "modules", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "m", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "in_channels", "type": "int"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "CFG", "type": "Dict[str, List[Union[Tuple[int, int, int, int], str]]]"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "bn", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "AlexNet", "type": "Type[AlexNet]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "sobel", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 58, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "bias", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "BatchNorm2d", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "MaxPool2d", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "conv2d", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "bias", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "self", "type": "AlexNet"}, {"lineNumber": 60, "col_offset": 58, "nodeName": "m", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "m", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 80, "col_offset": 75, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 80, "col_offset": 89, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "BatchNorm2d", "type": "Any"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "grayscale", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "sobel_filter", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "v", "type": "Union[Tuple[int, int, int, int], str]"}, {"lineNumber": 82, "col_offset": 57, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "sobel_filter", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "sobel_filter", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "m", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "m", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "math", "type": "module"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "n", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "bias", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "m", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "bias", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "m", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "m", "type": "Any"}]