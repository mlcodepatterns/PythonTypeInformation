[{"lineNumber": 23, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "eval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "microavg", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "macroavg", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "usepytorch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "classifier", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "nhid", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "kfold", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "batcher", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "batcher", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "prepare", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "prepare", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "current_task", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "results", "type": "Union[Dict[str, Union[float, int]], Dict[str, Any], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "results", "type": "Union[Dict[str, Any], Dict[str, Union[float, int]], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "micro", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "nsamples", "type": "Union[int, Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "micro", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "macro", "type": "int"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "task", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "macro", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "macro", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 68, "nodeName": "usepytorch", "type": "Union[bool, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "classifier", "type": "Union[Any, str]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "nhid", "type": "Union[Any, int]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "kfold", "type": "Union[Any, int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "classifier", "type": "Union[Any, str]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "classifier", "type": "Union[Any, str]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "results", "type": "Dict[Any, Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "list_tasks", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "evaluation", "type": "binary.CREval"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "do_prepare", "type": "Union[Callable[[Any, Any], Any], Callable[[Any, Any], None]]"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "params", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "prepare", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "run", "type": "Union[Callable[[Any, Any], Dict[str, Union[float, int]]], Callable[[Any, Any], Dict[str, Any]], Callable[[Any, Any], Dict[str, Dict[str, Any]]]]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "batcher", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "params", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "evaltype", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "micro", "type": "int"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "nsamples", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "micro", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "nsamples", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "evaltype", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "macro", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 26, "col_offset": 56, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 68, "nodeName": "params", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "params", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "nhid", "type": "Union[Any, int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "usepytorch", "type": "Union[Any, bool]"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "classifier", "type": "Union[Any, str]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 54, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 69, "nodeName": "list_tasks", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "CREval", "type": "Type[binary.CREval]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "evaluation", "type": "binary.MREval"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "evaluation", "type": "Union[binary.CREval, binary.MREval, binary.MPQAEval, binary.SUBJEval, sst.SSTBinaryEval, trec.TRECEval, mrpc.MRPCEval, sick.SICKRelatednessEval, sts.STSBenchmarkEval, sick.SICKEntailmentEval, snli.SNLIEval, sts.STS14Eval, rank.ImageCaptionRetrievalEval]"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "evaluation", "type": "Union[binary.CREval, binary.MREval, binary.MPQAEval, binary.SUBJEval, sst.SSTBinaryEval, trec.TRECEval, mrpc.MRPCEval, sick.SICKRelatednessEval, sts.STSBenchmarkEval, sick.SICKEntailmentEval, snli.SNLIEval, sts.STS14Eval, rank.ImageCaptionRetrievalEval]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "evaltype", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "evaltype", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 69, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "MREval", "type": "Type[binary.MREval]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "evaluation", "type": "binary.MPQAEval"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "results", "type": "Union[Dict[Any, Any], Dict[str, Union[float, int]], Dict[str, Any], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "results", "type": "Union[Dict[Any, Any], Dict[str, Union[float, int]], Dict[str, Any], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 58, "col_offset": 73, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "MPQAEval", "type": "Type[binary.MPQAEval]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "evaluation", "type": "binary.SUBJEval"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "results", "type": "Union[Dict[Any, Any], Dict[str, Union[float, int]], Dict[str, Any], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "results", "type": "Union[Dict[Any, Any], Dict[str, Union[float, int]], Dict[str, Any], Dict[str, Dict[str, Any]]]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "task", "type": "Any"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 107, "col_offset": 34, "nodeName": "task", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 56, "col_offset": 73, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 58, "col_offset": 73, "nodeName": "params", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 60, "col_offset": 77, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "SUBJEval", "type": "Type[binary.SUBJEval]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "evaluation", "type": "sst.SSTBinaryEval"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "task", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "task", "type": "Any"}, {"lineNumber": 95, "col_offset": 73, "nodeName": "metrics", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 58, "col_offset": 73, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 60, "col_offset": 77, "nodeName": "params", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "SSTBinaryEval", "type": "Type[sst.SSTBinaryEval]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "evaluation", "type": "trec.TRECEval"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 60, "col_offset": 77, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "params", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 64, "col_offset": 88, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "TRECEval", "type": "Type[trec.TRECEval]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "evaluation", "type": "mrpc.MRPCEval"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 62, "col_offset": 77, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "params", "type": "Any"}, {"lineNumber": 64, "col_offset": 88, "nodeName": "params", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 66, "col_offset": 77, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "MRPCEval", "type": "Type[mrpc.MRPCEval]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "evaluation", "type": "sick.SICKRelatednessEval"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 64, "col_offset": 88, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 66, "col_offset": 77, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 68, "col_offset": 77, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "SICKRelatednessEval", "type": "Type[sick.SICKRelatednessEval]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "evaluation", "type": "sts.STSBenchmarkEval"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 66, "col_offset": 77, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 77, "nodeName": "params", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 70, "col_offset": 88, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "STSBenchmarkEval", "type": "Type[sts.STSBenchmarkEval]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "evaluation", "type": "sick.SICKEntailmentEval"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 68, "col_offset": 77, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "params", "type": "Any"}, {"lineNumber": 70, "col_offset": 88, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 72, "col_offset": 97, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "SICKEntailmentEval", "type": "Type[sick.SICKEntailmentEval]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "evaluation", "type": "snli.SNLIEval"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 70, "col_offset": 88, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 97, "nodeName": "params", "type": "Any"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 74, "col_offset": 87, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "SNLIEval", "type": "Type[snli.SNLIEval]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "evaluation", "type": "sts.STS14Eval"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 72, "col_offset": 97, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "params", "type": "Any"}, {"lineNumber": 74, "col_offset": 87, "nodeName": "params", "type": "Any"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "STS14Eval", "type": "Type[sts.STS14Eval]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "evaluation", "type": "rank.ImageCaptionRetrievalEval"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 74, "col_offset": 87, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "params", "type": "Any"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 83, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "ImageCaptionRetrievalEval", "type": "Type[rank.ImageCaptionRetrievalEval]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 76, "col_offset": 77, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "params", "type": "Any"}, {"lineNumber": 78, "col_offset": 83, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "task_path", "type": "Any"}, {"lineNumber": 80, "col_offset": 94, "nodeName": "seed", "type": "Union[Any, int]"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 78, "col_offset": 83, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 94, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "self", "type": "SentEval"}, {"lineNumber": 80, "col_offset": 94, "nodeName": "self", "type": "SentEval"}]