[{"lineNumber": 17, "col_offset": 0, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 239, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "display_data", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "valid_output", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "valid_output", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "valid_output", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "tcs2s", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "train", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "valid", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "valid", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "TrainLoop", "type": "Type[parlai.scripts.train_model.TrainLoop]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "tcs2s", "type": "module"}]