[{"lineNumber": 74, "col_offset": 0, "nodeName": "is_this_circleci", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "skipUnlessTorch", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "skipIfGPU", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "skipUnlessGPU", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "skipUnlessBPE", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "skipIfCircleCI", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "skipUnlessVision", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "skipUnlessFairseq", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "git_ls_files", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "git_ls_dirs", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "git_changed_files", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "git_commit_messages", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 0, "nodeName": "is_new_task_filename", "type": "Callable[[Any], Any]"}, {"lineNumber": 239, "col_offset": 0, "nodeName": "capture_output", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 0, "nodeName": "tempdir", "type": "Callable[[], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 356, "col_offset": 0, "nodeName": "display_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 0, "nodeName": "display_model", "type": "Callable[[Any], Tuple[str, str, str]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "TORCH_AVAILABLE", "type": "bool"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "GPU_AVAILABLE", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "VISION_AVAILABLE", "type": "bool"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "git_", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "GIT_AVAILABLE", "type": "bool"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "BPE_INSTALLED", "type": "bool"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "DETECTRON_AVAILABLE", "type": "bool"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "FAIRSEQ_AVAILABLE", "type": "bool"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "skip_nonexisting", "type": "bool"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "filenames", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "dirs", "type": "Set[Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "fork_point", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 212, "col_offset": 7, "nodeName": "skip_nonexisting", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "fork_point", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "messages", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "messages", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "sio", "type": "io.StringIO"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "d", "type": "str"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "valid", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "popt", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "popt", "type": "Any"}, {"lineNumber": 382, "col_offset": 26, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "stream", "type": "bool"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "TORCH_AVAILABLE", "type": "bool"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "GPU_AVAILABLE", "type": "bool"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "VISION_AVAILABLE", "type": "bool"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "Git", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "git_", "type": "None"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "GIT_AVAILABLE", "type": "bool"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "BPE_INSTALLED", "type": "bool"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "DETECTRON_AVAILABLE", "type": "bool"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "FAIRSEQ_AVAILABLE", "type": "bool"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 122, "col_offset": 57, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "ntries", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "ntries", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "log_retry", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "log_retry", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "filenames", "type": "List[Any]"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "git_ls_files", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "root", "type": "Any"}, {"lineNumber": 199, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "dirs", "type": "Set[Any]"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "strip", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "filenames", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "strip", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "d", "type": "str"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "d", "type": "str"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "time", "type": "int"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "TimeoutError", "type": "Type[TimeoutError]"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "signal", "type": "Callable[[Union[int, signal.Signals], Optional[Union[Callable[[signal.Signals, types.FrameType], None], int, signal.Handlers]]], Optional[Union[Callable[[signal.Signals, types.FrameType], None], int, signal.Handlers]]]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "SIGALRM", "type": "signal.Signals"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "_handler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "alarm", "type": "Callable[[int], int]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "time", "type": "int"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "TimeoutError", "type": "Type[TimeoutError]"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 310, "col_offset": 22, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "valid", "type": "Any"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "opt", "type": "Any"}, {"lineNumber": 348, "col_offset": 61, "nodeName": "valid_datatype", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "skip_valid", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "opt", "type": "Any"}, {"lineNumber": 350, "col_offset": 59, "nodeName": "test_datatype", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "skip_test", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "valid", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "test", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "setup_args", "type": "Callable[[], parlai.core.params.ParlaiParser]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "train_output", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "basename", "type": "str"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "stream", "type": "bool"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "git", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "TORCH_AVAILABLE", "type": "bool"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "reason", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "skipIf", "type": "Callable"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "GPU_AVAILABLE", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "reason", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "GPU_AVAILABLE", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "reason", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "BPE_INSTALLED", "type": "bool"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "reason", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "skipIf", "type": "Callable"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "reason", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "VISION_AVAILABLE", "type": "bool"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "reason", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "DETECTRON_AVAILABLE", "type": "bool"}, {"lineNumber": 131, "col_offset": 52, "nodeName": "reason", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "skipUnless", "type": "Callable"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "FAIRSEQ_AVAILABLE", "type": "bool"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "reason", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "retry"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "retry"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "fn", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "fn", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "git_", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "fork_point", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "filename", "type": "Any"}, {"lineNumber": 234, "col_offset": 28, "nodeName": "filename", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "filename", "type": "Any"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "io", "type": "module"}, {"lineNumber": 252, "col_offset": 9, "nodeName": "redirect_stdout", "type": "Type[contextlib.redirect_stdout]"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "sio", "type": "io.StringIO"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "redirect_stderr", "type": "Type[contextlib.redirect_stderr]"}, {"lineNumber": 252, "col_offset": 69, "nodeName": "sio", "type": "io.StringIO"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "sio", "type": "io.StringIO"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "signal", "type": "module"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "signal", "type": "module"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "signal", "type": "module"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "e", "type": "TimeoutError"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "signal", "type": "Callable[[Union[int, signal.Signals], Optional[Union[Callable[[signal.Signals, types.FrameType], None], int, signal.Handlers]]], Optional[Union[Callable[[signal.Signals, types.FrameType], None], int, signal.Handlers]]]"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "SIGALRM", "type": "signal.Signals"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "SIG_IGN", "type": "int"}, {"lineNumber": 310, "col_offset": 9, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "main", "type": "Any"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "get", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "valid_datatype", "type": "Any"}, {"lineNumber": 349, "col_offset": 36, "nodeName": "main", "type": "Any"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "test_datatype", "type": "Any"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "main", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "dd", "type": "module"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 369, "col_offset": 9, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "popt", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "display_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "popt", "type": "Any"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "dm", "type": "module"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 392, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 393, "col_offset": 9, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "popt", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "display_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "popt", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 412, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "DataRegressionFixture", "type": "Any"}, {"lineNumber": 437, "col_offset": 76, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 442, "col_offset": 19, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "datatype", "type": "str"}, {"lineNumber": 446, "col_offset": 11, "nodeName": "datatype", "type": "str"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "datatype", "type": "str"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "parse_kwargs", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "_regression", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 478, "col_offset": 32, "nodeName": "data_regression", "type": "Any"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "_regression", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "data_regression", "type": "Any"}, {"lineNumber": 490, "col_offset": 15, "nodeName": "_regression", "type": "Callable[[Any, str], Any]"}, {"lineNumber": 490, "col_offset": 32, "nodeName": "data_regression", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "is_this_circleci", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "testself", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "ls_files", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "root", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "fn", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "dirs", "type": "Set[Any]"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "fn", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "merge_base", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "diff", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "fork_point", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "fn", "type": "Any"}, {"lineNumber": 213, "col_offset": 34, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "merge_base", "type": "Any"}, {"lineNumber": 252, "col_offset": 9, "nodeName": "contextlib", "type": "module"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "contextlib", "type": "module"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "signal", "type": "module"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "signal", "type": "module"}, {"lineNumber": 295, "col_offset": 38, "nodeName": "signal", "type": "module"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 312, "col_offset": 45, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 314, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "TrainModel", "type": "Any"}, {"lineNumber": 316, "col_offset": 44, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 345, "col_offset": 7, "nodeName": "opt", "type": "Any"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "opt", "type": "Any"}, {"lineNumber": 349, "col_offset": 36, "nodeName": "EvalModel", "type": "Any"}, {"lineNumber": 349, "col_offset": 57, "nodeName": "opt", "type": "Any"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "EvalModel", "type": "Any"}, {"lineNumber": 351, "col_offset": 55, "nodeName": "opt", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "dd", "type": "module"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "dm", "type": "module"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "obj", "type": "Any"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "Message", "type": "Type[parlai.core.message.Message]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "datatype", "type": "str"}, {"lineNumber": 447, "col_offset": 23, "nodeName": "datatype", "type": "str"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "task", "type": "Any"}, {"lineNumber": 455, "col_offset": 21, "nodeName": "datatype", "type": "str"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 484, "col_offset": 15, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 490, "col_offset": 15, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "ntries", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "git_", "type": "Any"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "exists", "type": "Any"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "fn", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "git_", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "git_", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "exists", "type": "Any"}, {"lineNumber": 213, "col_offset": 66, "nodeName": "fn", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "git_", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "tms", "type": "module"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 349, "col_offset": 36, "nodeName": "ems", "type": "module"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "ems", "type": "module"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "_safe", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 31, "nodeName": "o", "type": "Any"}, {"lineNumber": 413, "col_offset": 38, "nodeName": "o", "type": "Any"}, {"lineNumber": 413, "col_offset": 43, "nodeName": "obj", "type": "Any"}, {"lineNumber": 415, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 415, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "resized", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "gray", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 454, "col_offset": 17, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "self", "type": "retry"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "testfn", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "testself", "type": "Any"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 198, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 312, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 298, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "Any", "type": "Any"}, {"lineNumber": 298, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 298, "col_offset": 61, "nodeName": "Any", "type": "Any"}, {"lineNumber": 413, "col_offset": 20, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 417, "col_offset": 30, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 419, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 428, "col_offset": 48, "nodeName": "Image", "type": "Any"}, {"lineNumber": 429, "col_offset": 26, "nodeName": "resize", "type": "Any"}, {"lineNumber": 429, "col_offset": 56, "nodeName": "NEAREST", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "convert", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "task", "type": "Any"}, {"lineNumber": 442, "col_offset": 34, "nodeName": "datatype", "type": "str"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 428, "col_offset": 34, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 428, "col_offset": 48, "nodeName": "Image", "type": "Any"}, {"lineNumber": 429, "col_offset": 56, "nodeName": "Image", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "resized", "type": "Any"}, {"lineNumber": 442, "col_offset": 22, "nodeName": "self", "type": "AutoTeacherTest"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "key", "type": "str"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "key", "type": "str"}, {"lineNumber": 420, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "key", "type": "str"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 422, "col_offset": 53, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 428, "col_offset": 48, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 429, "col_offset": 26, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 429, "col_offset": 56, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "b64encode", "type": "Callable[..., bytes]"}, {"lineNumber": 420, "col_offset": 43, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 431, "col_offset": 35, "nodeName": "base64", "type": "module"}, {"lineNumber": 431, "col_offset": 52, "nodeName": "tobytes", "type": "Any"}, {"lineNumber": 420, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 422, "col_offset": 36, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 422, "col_offset": 58, "nodeName": "obj", "type": "Dict[Union[Any, str], Union[Any, List[Any], str]]"}, {"lineNumber": 431, "col_offset": 52, "nodeName": "gray", "type": "Any"}, {"lineNumber": 422, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 422, "col_offset": 62, "nodeName": "key", "type": "str"}]