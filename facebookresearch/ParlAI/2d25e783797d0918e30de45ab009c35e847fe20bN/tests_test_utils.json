[{"lineNumber": 15, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "y", "type": "float"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "y", "type": "float"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "y", "type": "float"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "y", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "x", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "y", "type": "float"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "elapsed", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "same", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "more", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "rabbit", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "turtle", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "nt", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "nt", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "opt_copy", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "y", "type": "int"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "y", "type": "int"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "y", "type": "float"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "y", "type": "float"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "y", "type": "float"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "y", "type": "int"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "y", "type": "int"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "y", "type": "float"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "Timer", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "time", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "elapsed", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "time", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "elapsed", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "same", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "resume", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "time", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "more", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "elapsed", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "Timer", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "Timer", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "set_namedtuple_defaults", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "set_namedtuple_defaults", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "opt", "type": "Dict[str, int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "history", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "history", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "x", "type": "float"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "x", "type": "float"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "x", "type": "float"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "x", "type": "int"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "round_sigfigs", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "x", "type": "float"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "time", "type": "module"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "time", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "time", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "time", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "NT", "type": "Type[`namedtuple-NT-a-b-c`]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "fail", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "nt", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "opt_copy", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "normalize_reply", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "uppercase", "type": "Callable[[str], str]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "uppercase", "type": "Callable[[str], str]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "stop", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "turtle", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "turtle", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "rabbit", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "history", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "history", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "history", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "history", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "string_utils", "type": "module"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "t", "type": "Any"}]