[{"lineNumber": 16, "col_offset": 0, "nodeName": "setup_args", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "dict_loop", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "cnt", "type": "int"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "datatypes", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "cnt", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "dt", "type": "str"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "datatypes", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 106, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 7, "nodeName": "parser", "type": "None"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "add_argument_group", "type": "Callable[..., Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "partial", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "parse_known_args", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "skip_if_built", "type": "bool"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "pytorch_teacher_task", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "dt", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "world_dict", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "save", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "dict_loop", "type": "Any"}, {"lineNumber": 20, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "dict_loop", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "dict_loop", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "dict_loop", "type": "Any"}, {"lineNumber": 26, "col_offset": 63, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Any"}, {"lineNumber": 29, "col_offset": 68, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Any"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "DictionaryAgent", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "pytorch_teacher_task", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "pytorch_teacher_task", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "log_every_n_secs", "type": "float"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "TimeLogger", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "cnt", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "partial", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "DictionaryAgent", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "opt", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "opt", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "str2class", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "ordered_opt", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "datatypes", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "datatypes", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "parley", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "dictionary", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "str2class", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "world_dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "cnt", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "world_dict", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "time", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "log", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "cnt", "type": "int"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], int]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "setup_args", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "max", "type": "Callable"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "get", "type": "Callable"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "partial", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "world_dict", "type": "Any"}]