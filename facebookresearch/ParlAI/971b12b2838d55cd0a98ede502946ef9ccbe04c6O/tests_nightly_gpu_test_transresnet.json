[{"lineNumber": 25, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 69, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "MODEL_OPTIONS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "opt", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "display_data", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "MODEL_OPTIONS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "display_data", "type": "module"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "test", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "test", "type": "Any"}]