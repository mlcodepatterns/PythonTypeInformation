[{"lineNumber": 18, "col_offset": 0, "nodeName": "_forced_parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "popt", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "popt", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 206, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 228, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "m", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "valid_mp", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "parser", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "popt", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "popt", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 145, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 167, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "config", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "_base_config", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "m", "type": "str"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "_", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "main", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "opt", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "setup_args", "type": "Callable[[], parlai.core.params.ParlaiParser]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "_forced_parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "popt", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "launch_and_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "popt", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 70, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 101, "col_offset": 69, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "inttests", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "inttests", "type": "module"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "inttests", "type": "module"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "inttests", "type": "module"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "inttests", "type": "module"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 181, "col_offset": 38, "nodeName": "inttests", "type": "module"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "MultiProcessEval", "type": "Any"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "assertAlmostEquals", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "_testMethodName", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "mp_train", "type": "module"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "build_dict", "type": "module"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "build_dict", "type": "module"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "mp_train", "type": "module"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "BATCHSIZE", "type": "int"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "_distributed_train_model", "type": "Any"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "config", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "fail", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "inttests", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "inttests", "type": "module"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "valid", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "valid", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "valid", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "valid", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "valid", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 224, "col_offset": 36, "nodeName": "valid_mp", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "key", "type": "str"}]