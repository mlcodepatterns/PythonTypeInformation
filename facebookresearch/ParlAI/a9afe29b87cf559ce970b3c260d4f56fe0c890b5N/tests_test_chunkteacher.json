[{"lineNumber": 18, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "TestNumExamples", "type": "Type[TestNumExamples]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 30, "col_offset": 62, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "_run", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "_run_mp", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "main", "type": "Any"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestNumExamples"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "MultiProcessTrain", "type": "Any"}, {"lineNumber": 43, "col_offset": 74, "nodeName": "opt", "type": "Dict[str, Union[str, int, Any]]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "test_report", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "mp_train", "type": "module"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "os", "type": "module"}]