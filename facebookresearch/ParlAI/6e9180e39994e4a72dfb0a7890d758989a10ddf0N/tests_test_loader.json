[{"lineNumber": 28, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 109, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "teacher_module", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "task_module", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "load_agent_module", "type": "Callable[[str], Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 35, "col_offset": 39, "nodeName": "RepeatLabelAgent", "type": "Type[parlai.agents.repeat_label.repeat_label.RepeatLabelAgent]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "load_teacher_module", "type": "Callable[[str], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "teacher_module", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "SelfRevisedTeacher", "type": "Type[parlai.tasks.convai2.agents.SelfRevisedTeacher]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "load_task_module", "type": "Callable[[str], module]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "task_module", "type": "module"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "c2agents", "type": "module"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "load_world_module", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "world_module", "type": "Any"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "c2interactive", "type": "Type[parlai.tasks.convai2.worlds.InteractiveWorld]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "load_world_module", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "world_module", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "DialogPartnerWorld", "type": "Type[parlai.core.worlds.DialogPartnerWorld]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "copytree", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "load_agent_module", "type": "Callable[[str], Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "c2agents", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "display_model", "type": "Callable[[Any], Tuple[str, str, str]]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "display_model", "type": "Callable[[Any], Tuple[str, str, str]]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "self", "type": "TestZoo"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "self", "type": "TestZoo"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "self", "type": "TestLoadParlAIInternal"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "OPTIONS", "type": "Dict[str, str]"}]