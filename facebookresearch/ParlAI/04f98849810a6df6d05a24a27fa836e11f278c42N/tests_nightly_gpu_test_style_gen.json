[{"lineNumber": 16, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 92, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "test_cases", "type": "List[Tuple[str, float, float]]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "test_cases", "type": "List[Tuple[str, float, float]]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "model_name", "type": "str"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "style_frac", "type": "float"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "desired_ppl", "type": "float"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestClassifierOnGenerator"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "desired_ppl", "type": "float"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "TestStyleGen"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "style_frac", "type": "float"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "model_name", "type": "str"}]