[{"lineNumber": 18, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 107, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "torch_downloaded", "type": "Optional[_importlib_modulespec.Loader]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "TrainLoop", "type": "Type[examples.train_model.TrainLoop]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "str_output", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "list_output", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 101, "col_offset": 20, "nodeName": "list_output", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "find_loader", "type": "Callable[..., Optional[_importlib_modulespec.Loader]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "display_output", "type": "Type[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "importlib", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "torch_downloaded", "type": "Optional[_importlib_modulespec.Loader]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "world", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "validate_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "log_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "save_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "parleys", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "best_valid", "type": "int"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "impatience", "type": "int"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "saved", "type": "bool"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "valid_world", "type": "None"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "data", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "train", "type": "Callable[[], None]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "str_output", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 91, "col_offset": 53, "nodeName": "str_output", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "str_output", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "str_output", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "str_output", "type": "str"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "str_output", "type": "str"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "create_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "create_task", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "agent", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "str_output", "type": "str"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 58, "col_offset": 63, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "TestTrainLoop", "type": "Type[Any]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "ast", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "setup_test_args", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "score", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "line", "type": "str"}]