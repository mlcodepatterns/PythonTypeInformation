[{"lineNumber": 10, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 203, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "download_unittest_models", "type": "Callable[[], None]"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 57, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 81, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 154, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 185, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 78, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 191, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 191, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 75, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 67, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "valid", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 67, "nodeName": "test", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 104, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 107, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 154, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 180, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "valid", "type": "Any"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 199, "col_offset": 63, "nodeName": "test", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}]