[{"lineNumber": 32, "col_offset": 0, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 231, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "dts", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "dt_and_preprocess", "type": "List[Tuple[str, bool]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "task1", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "task2", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "task1", "type": "str"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "task2", "type": "str"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "task1", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "dt", "type": "str"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "preprocess", "type": "bool"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "dt", "type": "str"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "preprocess", "type": "bool"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "preprocess", "type": "bool"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 58, "nodeName": "task1", "type": "str"}, {"lineNumber": 207, "col_offset": 65, "nodeName": "task2", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 227, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 227, "col_offset": 61, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 227, "col_offset": 71, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]], Dict[str, Union[str, bool]]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]], Dict[str, Union[str, bool]]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]], Dict[str, Union[str, bool]]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 115, "col_offset": 64, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 218, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "valid", "type": "Any"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]], Dict[str, Union[str, bool]]]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "valid", "type": "Any"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "test", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 72, "nodeName": "key", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "dt", "type": "str"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "preprocess", "type": "bool"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[float, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 157, "col_offset": 76, "nodeName": "key", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}]