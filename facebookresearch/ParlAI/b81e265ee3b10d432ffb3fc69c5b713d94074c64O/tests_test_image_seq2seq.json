[{"lineNumber": 39, "col_offset": 0, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "version", "type": "float"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "TORCH_AVAILABLE", "type": "bool"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "version", "type": "float"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "TORCH_AVAILABLE", "type": "bool"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[str, int]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[str, int]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, List[int], str, int]], Dict[str, Union[str, int, List[int]]], Dict[str, Union[float, int, str, List[int]]]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[float, bool, int, str]]]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]], Dict[str, Union[int, str]]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "IMAGE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[str, int]], Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "MULTITASK_ARGS", "type": "Dict[str, Union[str, List[int], int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[int, str, List[int]]], Dict[str, Union[float, int, str, List[int]]], Dict[str, Union[bool, List[int], str, int]]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "EVAL_ARGS", "type": "Dict[str, Union[bool, str, int]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "valid", "type": "None"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "_", "type": "None"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[float, bool, int, str]]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "valid", "type": "None"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "valid", "type": "None"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "m", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "m", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]], Dict[str, Union[int, str]]]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[str, int]], Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]]]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[int, str, List[int]]], Dict[str, Union[float, int, str, List[int]]], Dict[str, Union[bool, List[int], str, int]]]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[float, bool, int, str]]]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestImageSeq2Seq"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestImageSeq2Seq"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "IMAGE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "torch", "type": "Any"}]