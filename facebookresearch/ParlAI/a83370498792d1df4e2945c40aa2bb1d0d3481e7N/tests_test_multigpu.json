[{"lineNumber": 22, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "MODEL_OPTS", "type": "Dict[str, Union[int, float]]"}]