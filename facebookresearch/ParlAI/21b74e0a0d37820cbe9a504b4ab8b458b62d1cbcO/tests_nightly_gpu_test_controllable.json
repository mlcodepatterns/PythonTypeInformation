[{"lineNumber": 17, "col_offset": 0, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 265, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "FAST_MODE", "type": "bool"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "display_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "setup_args", "type": "Callable[[], parlai.core.params.ParlaiParser]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "train", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "tcs2s", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "valid", "type": "None"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "valid", "type": "None"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 200, "col_offset": 37, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "NUM_EXAMPLES", "type": "int"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "TrainLoop", "type": "Type[parlai.scripts.train_model.TrainLoop]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 226, "col_offset": 37, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "NO_REPETITION", "type": "str"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 35, "nodeName": "valid", "type": "None"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tcs2s", "type": "module"}]