[{"lineNumber": 10, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 114, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "download_unittest_models", "type": "Callable[[], None]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 102, "col_offset": 78, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 75, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "LR", "type": "int"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "LR", "type": "int"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "valid", "type": "Any"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 110, "col_offset": 63, "nodeName": "test", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}]