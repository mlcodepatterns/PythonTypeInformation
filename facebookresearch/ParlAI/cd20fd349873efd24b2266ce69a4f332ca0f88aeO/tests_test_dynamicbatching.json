[{"lineNumber": 16, "col_offset": 0, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 197, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 46, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "save_report", "type": "str"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "convos", "type": "parlai.utils.conversations.Conversations"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "convo", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "convos", "type": "parlai.utils.conversations.Conversations"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 53, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "Conversations", "type": "Type[parlai.utils.conversations.Conversations]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "convo_fle", "type": "str"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "dyn_batch_idx", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 140, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 71, "col_offset": 64, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 75, "col_offset": 61, "nodeName": "_RANKER_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "_RANKER_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "save_report", "type": "str"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "turn", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "convo", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 155, "col_offset": 64, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "_RANKER_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 165, "col_offset": 73, "nodeName": "_RANKER_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 183, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 73, "nodeName": "Any", "type": "Any"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "save_report", "type": "str"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "convo", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "convo", "type": "Any"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 140, "col_offset": 73, "nodeName": "Any", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "dyn_batch_idx", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 128, "col_offset": 57, "nodeName": "turn", "type": "Any"}]