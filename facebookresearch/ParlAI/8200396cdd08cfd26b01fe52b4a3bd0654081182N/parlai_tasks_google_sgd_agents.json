[{"lineNumber": 23, "col_offset": 27, "nodeName": "DialogTeacher", "type": "Type[parlai.core.teachers.DialogTeacher]"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "Text2API2TextTeacher", "type": "Type[Text2API2TextTeacher]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "Text2API2TextTeacher", "type": "Type[Text2API2TextTeacher]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "fold", "type": "nothing"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "fold", "type": "nothing"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "dpath", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "dataset_fold", "type": "Union[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "fold_path", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "schema_file", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "file_id", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "api_resp", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "frame", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "resp", "type": "None"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "delex", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "delex", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dialog", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "dialog", "type": "Any"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "DefaultTeacher"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "self", "type": "DefaultTeacher"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "DefaultTeacher"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "shared", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "fold", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "dpath", "type": "str"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "dataset_fold", "type": "Union[str, Any]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "fold_path", "type": "str"}, {"lineNumber": 43, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "schema", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "filename", "type": "str"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "api_resp", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "Message", "type": "Type[parlai.core.message.Message]"}, {"lineNumber": 77, "col_offset": 63, "nodeName": "Message", "type": "Type[parlai.core.message.Message]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "resp", "type": "None"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "slot", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 49, "nodeName": "fold", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "turns", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "num_turns", "type": "int"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "_load_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "fold", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "turns", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "num_turns", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "split", "type": "nothing"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], None]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "fold", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "self", "type": "Text2API2TextTeacher"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "schema_file", "type": "str"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "f", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "schema", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "fold_path", "type": "str"}, {"lineNumber": 51, "col_offset": 52, "nodeName": "f", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "dialogs", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "frame", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "method", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "frame", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "action", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "model_response", "type": "parlai.core.message.Message"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "slots", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "values", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "delex", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "self", "type": "Text2API2TextTeacher"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "dialog", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "turns", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "num_turns", "type": "int"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "call_str", "type": "str"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "resp_str", "type": "str"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "self", "type": "Text2TextTeacher"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "dialog", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "turns", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "num_turns", "type": "int"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "build_", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "fold_size", "type": "Callable[[Any], int]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "dataset_fold", "type": "Union[str, Any]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "open", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "filename", "type": "str"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "f", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "slot_value", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "frame", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "frame", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "slot_type", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "slot_value", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "slot_value", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "replace", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "slot", "type": "Any"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "turns", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "turns", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "_get_api_call_and_results", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "schema_lookup", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "_api_dict_to_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "_api_dict_to_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "turns", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "turns", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "build_", "type": "module"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 48, "nodeName": "file_id", "type": "int"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "json", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "frame", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "action", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "action", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "api_resp", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "delex", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "v", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "self", "type": "Text2API2TextTeacher"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "self", "type": "Text2API2TextTeacher"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "Text2API2TextTeacher"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "schema", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "slot_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "apidict", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "turn_id", "type": "int"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "frame", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "method", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "slot_type", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "is_first_turn", "type": "bool"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "api_call", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "api_results", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 70, "nodeName": "resp_str", "type": "str"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "sys_turn", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "user_turn", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "call_str", "type": "str"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "resp_str", "type": "str"}]