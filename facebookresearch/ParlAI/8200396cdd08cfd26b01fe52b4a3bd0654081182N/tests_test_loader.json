[{"lineNumber": 23, "col_offset": 0, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_load_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_load_teacher", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_load_task", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_load_interactive_world", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_load_dialog_partner_world", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_zoo_no_exists", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_load_internal_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 108, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "teacher_module", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "task_module", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "load_agent_module", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "agent_module", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "RepeatLabelAgent", "type": "Type[parlai.agents.repeat_label.repeat_label.RepeatLabelAgent]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "load_teacher_module", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "teacher_module", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "SelfRevisedTeacher", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "load_task_module", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "task_module", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "c2agents", "type": "module"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "load_world_module", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "world_module", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "c2interactive", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "load_world_module", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "world_module", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "DialogPartnerWorld", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "copytree", "type": "Callable[..., Type[None]]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "load_agent_module", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "parlai_internal_exists", "type": "bool"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "c2agents", "type": "module"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestLoader"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "display_model", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "display_model", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "agent_folder_exists", "type": "bool"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "self", "type": "TestZoo"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "self", "type": "TestZoo"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "OPTIONS", "type": "Dict[str, str]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "OPTIONS", "type": "Dict[str, str]"}]