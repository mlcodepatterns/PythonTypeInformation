[{"lineNumber": 31, "col_offset": 0, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "INITIAL_PROMPT", "type": "str"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "REPORT_DIR", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "DEFAULT_IN", "type": "str"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "DEFAULT_OUT", "type": "str"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "REPORT_DIR", "type": "str"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "positives", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "negatives", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "num_parleys", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "episode", "type": "Any"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "extract_parlai_episodes", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "parley", "type": "Any"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "episode", "type": "Any"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "ex", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 9, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "DEFAULT_IN", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "DEFAULT_OUT", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "num_parleys", "type": "int"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "reward", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "context", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "label", "type": "int"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "example", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "num_parleys", "type": "int"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "negatives", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "context", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "response", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "parley", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "positives", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "negatives", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "add_person_tokens", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "utterances", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "Parley", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "context", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "label", "type": "int"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "example", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 9, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "positives", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "parley", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "INITIAL_PROMPT", "type": "str"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "parley", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "context", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "utterances", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "reward", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "positives", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "parley", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "SUGGESTION_REQUEST", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "context", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "response", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "context", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "response", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "parley", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "parley", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "NEW_TOPIC_REQUEST", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "parley", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "parley", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "history", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "parley", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "ex", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Any]"}]