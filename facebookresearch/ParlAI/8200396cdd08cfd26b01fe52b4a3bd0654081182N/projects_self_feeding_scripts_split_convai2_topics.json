[{"lineNumber": 70, "col_offset": 0, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "includes_topic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "variants", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "word", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "FAMILY", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "SPORTS", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "TOPIC", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "SPORTS", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "TOPIC_NAME", "type": "str"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "variants", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "episode", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "total", "type": "int"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "on_pct", "type": "float"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "unit_prefix", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "topic_prefix", "type": "str"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "on_topic_filename", "type": "str"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "off_topic_filename", "type": "str"}, {"lineNumber": 165, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "FAMILY", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 10, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "TOPIC_NAME", "type": "str"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "extract_fb_episodes", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "total", "type": "int"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "outfile_base", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "outfile_ext", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "TOPIC_NAME", "type": "str"}, {"lineNumber": 156, "col_offset": 53, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "ex", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 160, "col_offset": 54, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "ex", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 10, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "main", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "variants", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "variants", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "TOPIC_NAME", "type": "str"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "episode_string", "type": "str"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "outfile_base", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "unit_prefix", "type": "Any"}, {"lineNumber": 155, "col_offset": 56, "nodeName": "topic_prefix", "type": "str"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "outfile_ext", "type": "Any"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "on_topic_filename", "type": "str"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "outfile_base", "type": "Any"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "unit_prefix", "type": "Any"}, {"lineNumber": 159, "col_offset": 59, "nodeName": "topic_prefix", "type": "str"}, {"lineNumber": 159, "col_offset": 73, "nodeName": "outfile_ext", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "open", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "off_topic_filename", "type": "str"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "word", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "word", "type": "str"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "episode_words", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "includes_topic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "episode", "type": "Any"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "TOPIC", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "example", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "total", "type": "int"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "num_episodes", "type": "int"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 156, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 107, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "episode_to_examples", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "episode", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "on_pct", "type": "float"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "context", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "response", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "w", "type": "str"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "episode_string", "type": "str"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "w", "type": "str"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "topic", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "episode_to_examples", "type": "Any"}, {"lineNumber": 130, "col_offset": 56, "nodeName": "episode", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "episode_to_examples", "type": "Any"}, {"lineNumber": 132, "col_offset": 57, "nodeName": "episode", "type": "Any"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "includes_topic", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "TOPIC", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "parley", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "parley", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "episode", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "parley", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "parley", "type": "Any"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "episode", "type": "Any"}, {"lineNumber": 130, "col_offset": 65, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 66, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "example", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "example", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "example", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "on_topic_exs", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "off_topic_exs", "type": "List[Any]"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "ex", "type": "Any"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "ex", "type": "Any"}]