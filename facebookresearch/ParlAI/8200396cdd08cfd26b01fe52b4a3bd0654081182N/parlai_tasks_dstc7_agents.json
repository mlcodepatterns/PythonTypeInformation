[{"lineNumber": 19, "col_offset": 19, "nodeName": "FixedDialogTeacher", "type": "Type[parlai.core.teachers.FixedDialogTeacher]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "DSTC7Teacher", "type": "Type[DSTC7Teacher]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "DSTC7Teacher", "type": "Type[DSTC7Teacher]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "DSTC7Teacher", "type": "Type[DSTC7Teacher]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "split", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "basedir", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rand", "type": "random.Random"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "episode", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "label_key", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "shared", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "shared", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "new_cands", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "counter", "type": "int"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "new_cands", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "split", "type": "str"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "split", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "build", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "opt", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "basedir", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "shared", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], None]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "Random", "type": "Type[random.Random]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "episode_idx", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "episode", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "label_key", "type": "str"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "text", "type": "str"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "share", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "shared", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "split", "type": "str"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "split", "type": "str"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "episode_idx", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "entry_idx", "type": "Any"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "split", "type": "str"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "counter", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "opt", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "shared", "type": "Any"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "f", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "split", "type": "str"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "id_to_res", "type": "Dict[Any, List[Dict[str, Any]]]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "episode_idx", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "m", "type": "Any"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "m", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "m", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "m", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "candidates", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "rand", "type": "random.Random"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "split", "type": "str"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "self", "type": "DSTC7TeacherAugmented"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "self", "type": "DSTC7TeacherAugmentedSampled"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "self", "type": "DSTC7TeacherAugmentedSampled"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "new_cands", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "get_nb_cands", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "split", "type": "str"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "open", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "filepath", "type": "str"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "line", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "f", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "episode", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "episode", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "DSTC7TeacherAugmentedSampled"}, {"lineNumber": 157, "col_offset": 58, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "get_suffix", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "json", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "read", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "open", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "splited", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "id_", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "id_res", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "id_to_res", "type": "Dict[Any, List[Dict[str, Any]]]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "counter", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "new_cands", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "self", "type": "DSTC7Teacher"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "basedir", "type": "str"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "splited", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "splited", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "splited", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "id_to_res", "type": "Dict[Any, List[Dict[str, Any]]]"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "sample", "type": "Dict[str, Union[str, List[Any], bool]]"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "counter", "type": "int"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "id_", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "id_res", "type": "Any"}, {"lineNumber": 55, "col_offset": 80, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "sample", "type": "Any"}]