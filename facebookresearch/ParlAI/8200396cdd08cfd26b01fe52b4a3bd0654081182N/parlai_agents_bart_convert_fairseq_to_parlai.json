[{"lineNumber": 39, "col_offset": 0, "nodeName": "TRANSFORMER_DROPOUT", "type": "Set[str]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "ParlaiScript", "type": "Type[parlai.core.script.ParlaiScript]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 490, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "each", "type": "str"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "TRANSFORMER_PARAMETER_MAPPING", "type": "Dict[str, str]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "each", "type": "str"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "TRANSFORMER_DROPOUT", "type": "Set[str]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "opt", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "norm_key", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "TRANSFORMER_PARAMETER_MAPPING", "type": "Dict[str, str]"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 235, "col_offset": 60, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "pieces", "type": "List[Dict[str, Any]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "output_sd", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "pieces", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 304, "col_offset": 29, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "output_sd", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "bart_dict", "type": "str"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "new_embs", "type": "Any"}, {"lineNumber": 415, "col_offset": 51, "nodeName": "new_embs", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 436, "col_offset": 29, "nodeName": "specials", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "specials", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "fp16_pad", "type": "int"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "fp16_pad_ez", "type": "Any"}, {"lineNumber": 478, "col_offset": 15, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 308, "col_offset": 48, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "load_fairseq_checkpoint", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "get_parlai_opt", "type": "Callable[[], parlai.core.opt.Opt]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 184, "col_offset": 36, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "f", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "output_sd", "type": "Dict[str, Any]"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 324, "col_offset": 25, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "emb", "type": "str"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "EMBEDDING_DICT_MAPPING", "type": "Dict[str, str]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "_key", "type": "str"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 397, "col_offset": 38, "nodeName": "weight", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 402, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "offset_dict", "type": "Dict[int, Any]"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "new_idx", "type": "Any"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "specials", "type": "Any"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "words", "type": "Any"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "bos", "type": "Any"}, {"lineNumber": 436, "col_offset": 13, "nodeName": "pad", "type": "Any"}, {"lineNumber": 436, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "unk", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "bos", "type": "Any"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "eos", "type": "Any"}, {"lineNumber": 439, "col_offset": 19, "nodeName": "stack", "type": "Any"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 441, "col_offset": 70, "nodeName": "specials", "type": "Any"}, {"lineNumber": 442, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 455, "col_offset": 51, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 477, "col_offset": 31, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "observe", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "ConversionScript", "type": "Type[ConversionScript]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 162, "col_offset": 56, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 56, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "path", "type": "str"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "ModuleNotFoundError", "type": "Type[ModuleNotFoundError]"}, {"lineNumber": 235, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 235, "col_offset": 70, "nodeName": "Any", "type": "Any"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "_load_single_fairseq_checkpoint", "type": "Callable[[str], Dict[str, Any]]"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "_load_single_fairseq_checkpoint", "type": "Callable[[str], Dict[str, Any]]"}, {"lineNumber": 271, "col_offset": 55, "nodeName": "p", "type": "str"}, {"lineNumber": 271, "col_offset": 62, "nodeName": "p", "type": "str"}, {"lineNumber": 271, "col_offset": 67, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "pieces", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "weightorbias", "type": "nothing"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "old", "type": "str"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "new", "type": "str"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 380, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 401, "col_offset": 33, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 402, "col_offset": 30, "nodeName": "bart_dict", "type": "str"}, {"lineNumber": 403, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 28, "nodeName": "offset_dict", "type": "Dict[int, Any]"}, {"lineNumber": 408, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 432, "col_offset": 64, "nodeName": "dict", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 439, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 439, "col_offset": 32, "nodeName": "pad", "type": "Any"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "bos", "type": "Any"}, {"lineNumber": 439, "col_offset": 42, "nodeName": "eos", "type": "Any"}, {"lineNumber": 439, "col_offset": 47, "nodeName": "unk", "type": "Any"}, {"lineNumber": 442, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 444, "col_offset": 16, "nodeName": "specials", "type": "Any"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "words", "type": "Any"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "fp16_pad_ez", "type": "Any"}, {"lineNumber": 451, "col_offset": 63, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 452, "col_offset": 55, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "get_embedding", "type": "Any"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 474, "col_offset": 64, "nodeName": "emb", "type": "Any"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 475, "col_offset": 64, "nodeName": "emb", "type": "Any"}, {"lineNumber": 477, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 58, "nodeName": "Any", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "act", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "each", "type": "str"}, {"lineNumber": 159, "col_offset": 59, "nodeName": "each", "type": "str"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 179, "col_offset": 31, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 189, "col_offset": 64, "nodeName": "fairseq_args", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "transformer_common_config", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 17, "nodeName": "norm_key", "type": "str"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "norm_key", "type": "str"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "load", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "f", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 267, "col_offset": 56, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "pieces", "type": "List[Dict[str, Any]]"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "p", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 45, "nodeName": "pieces", "type": "List[Dict[str, Any]]"}, {"lineNumber": 277, "col_offset": 62, "nodeName": "keys", "type": "Any"}, {"lineNumber": 282, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 325, "col_offset": 50, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 330, "col_offset": 48, "nodeName": "emb", "type": "str"}, {"lineNumber": 333, "col_offset": 28, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 333, "col_offset": 56, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 342, "col_offset": 35, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 342, "col_offset": 67, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "attention_project_name", "type": "str"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "FFN_MAPPING", "type": "Dict[str, str]"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "old", "type": "str"}, {"lineNumber": 377, "col_offset": 53, "nodeName": "new", "type": "str"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 402, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 404, "col_offset": 19, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 407, "col_offset": 16, "nodeName": "new_embs", "type": "Any"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 432, "col_offset": 64, "nodeName": "agent", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 433, "col_offset": 39, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 435, "col_offset": 61, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "fp16_pad", "type": "int"}, {"lineNumber": 468, "col_offset": 18, "nodeName": "SinusoidalPositionalEmbedding", "type": "Any"}, {"lineNumber": 469, "col_offset": 25, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "agent", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "Any", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "ModuleNotFoundError", "type": "Type[ModuleNotFoundError]"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "p", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 284, "col_offset": 34, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 330, "col_offset": 53, "nodeName": "EMBEDDING_DICT_MAPPING", "type": "Dict[str, str]"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 335, "col_offset": 58, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 344, "col_offset": 65, "nodeName": "weightorbias", "type": "nothing"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "attention_project_name", "type": "str"}, {"lineNumber": 345, "col_offset": 49, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "weight", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "size", "type": "int"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "weights", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 382, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 392, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "split", "type": "Any"}, {"lineNumber": 403, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 403, "col_offset": 50, "nodeName": "l", "type": "Any"}, {"lineNumber": 403, "col_offset": 55, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 404, "col_offset": 31, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 407, "col_offset": 45, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "new_idx", "type": "Any"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "pad_idx", "type": "int"}, {"lineNumber": 431, "col_offset": 32, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "dict", "type": "Any"}, {"lineNumber": 433, "col_offset": 51, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 435, "col_offset": 38, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 441, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 441, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "self", "type": "ConversionScript"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "each", "type": "str"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 285, "col_offset": 38, "nodeName": "k", "type": "Any"}, {"lineNumber": 285, "col_offset": 59, "nodeName": "k", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 76, "nodeName": "emb", "type": "str"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 337, "col_offset": 61, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 348, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 348, "col_offset": 47, "nodeName": "size", "type": "int"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 364, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "_key", "type": "str"}, {"lineNumber": 390, "col_offset": 45, "nodeName": "_key", "type": "str"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "_key", "type": "str"}, {"lineNumber": 393, "col_offset": 54, "nodeName": "_key", "type": "str"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "l", "type": "Any"}, {"lineNumber": 403, "col_offset": 65, "nodeName": "readlines", "type": "Any"}, {"lineNumber": 407, "col_offset": 57, "nodeName": "enc_emb_key", "type": "str"}, {"lineNumber": 407, "col_offset": 70, "nodeName": "idx", "type": "int"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "agent", "type": "Any"}, {"lineNumber": 433, "col_offset": 66, "nodeName": "size_dict", "type": "Any"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "specials", "type": "Any"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 440, "col_offset": 45, "nodeName": "words", "type": "Any"}, {"lineNumber": 441, "col_offset": 44, "nodeName": "specials", "type": "Any"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "k", "type": "str"}, {"lineNumber": 232, "col_offset": 56, "nodeName": "k", "type": "str"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "default_restore_location", "type": "Any"}, {"lineNumber": 248, "col_offset": 74, "nodeName": "s", "type": "Any"}, {"lineNumber": 277, "col_offset": 62, "nodeName": "pieces", "type": "List[Dict[str, Any]]"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 288, "col_offset": 36, "nodeName": "k", "type": "Any"}, {"lineNumber": 288, "col_offset": 55, "nodeName": "k", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "mapped_key", "type": "Any"}, {"lineNumber": 346, "col_offset": 44, "nodeName": "each_key", "type": "Any"}, {"lineNumber": 348, "col_offset": 34, "nodeName": "weight", "type": "Any"}, {"lineNumber": 403, "col_offset": 65, "nodeName": "f", "type": "Any"}, {"lineNumber": 407, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "new_idx", "type": "Any"}, {"lineNumber": 412, "col_offset": 47, "nodeName": "return_dict", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 291, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 293, "col_offset": 44, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "idx", "type": "int"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 293, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "weight", "type": "Any"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "new_idx", "type": "Any"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "output_model", "type": "Dict[Any, Any]"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 298, "col_offset": 44, "nodeName": "subpieces", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "set_trace", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 300, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "__import__", "type": "Callable[..., module]"}]