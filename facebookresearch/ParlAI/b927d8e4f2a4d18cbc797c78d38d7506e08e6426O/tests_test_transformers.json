[{"lineNumber": 18, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 737, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 352, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 548, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 555, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 560, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 561, "col_offset": 16, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 29, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 664, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 678, "col_offset": 42, "nodeName": "GENERATOR_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 42, "nodeName": "RANKER_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 700, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 718, "col_offset": 16, "nodeName": "test1", "type": "Any"}, {"lineNumber": 718, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 718, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "test2", "type": "Any"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 721, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 280, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 464, "col_offset": 29, "nodeName": "valid", "type": "None"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 466, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 467, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "test", "type": "None"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 469, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 470, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 495, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 516, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 518, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 606, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 607, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 611, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 643, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 718, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 352, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "mf", "type": "str"}, {"lineNumber": 357, "col_offset": 67, "nodeName": "df", "type": "str"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 36, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 399, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 399, "col_offset": 50, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 414, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 547, "col_offset": 19, "nodeName": "valid", "type": "Any"}, {"lineNumber": 554, "col_offset": 19, "nodeName": "valid", "type": "Any"}, {"lineNumber": 606, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 608, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 611, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 615, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 617, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 622, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 626, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 635, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 636, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 639, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 640, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 643, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 652, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 653, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 726, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 287, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 304, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 379, "col_offset": 52, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 386, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 394, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 406, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 607, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 609, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 612, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 631, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 648, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 726, "col_offset": 61, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 732, "col_offset": 62, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 628, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 628, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 629, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 629, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 645, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 646, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 628, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 629, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 628, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 629, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 645, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 646, "col_offset": 31, "nodeName": "os", "type": "module"}]