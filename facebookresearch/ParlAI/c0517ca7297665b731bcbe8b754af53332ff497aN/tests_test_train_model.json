[{"lineNumber": 17, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 116, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[AssertionError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "pp", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "valid", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "pp", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "value", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "value", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "task2_acc", "type": "Any"}]