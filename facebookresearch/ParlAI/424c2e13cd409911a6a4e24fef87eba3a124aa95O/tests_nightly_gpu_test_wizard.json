[{"lineNumber": 22, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "_", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "eval_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "END2END_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "opt", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "display_data", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "END2END_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "display_data", "type": "module"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "valid", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "valid", "type": "Any"}]