[{"lineNumber": 22, "col_offset": 0, "nodeName": "_path", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "ParlAIDialogTeacher", "type": "Type[parlai.core.teachers.ParlAIDialogTeacher]"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "MultiTaskTeacher", "type": "Type[parlai.core.teachers.MultiTaskTeacher]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "SelfFeedingMTLTeacher", "type": "Type[SelfFeedingMTLTeacher]"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "SelfFeedingMTLTeacher", "type": "Type[SelfFeedingMTLTeacher]"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "SelfFeedingMTLTeacher", "type": "Type[SelfFeedingMTLTeacher]"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "add_suffix", "type": "bool"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "dp", "type": "str"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 286, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 358, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 380, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "build", "type": "Any"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "opt", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "filename", "type": "str"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "dp", "type": "str"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "filename", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "path", "type": "str"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "path", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "episodes", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "num_exs", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "max_train", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "num_batches", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "sampling_prob", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "task_idx_assignment", "type": "int"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "new_task", "type": "bool"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "action", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 360, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "opt", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "suffix", "type": "str"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "train_file_flag", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "eval_file_flag", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "f", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "AllTeacher"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "num_batches", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "AllTeacher"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "AllTeacher"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "AllTeacher"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "observe", "type": "Any"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "observation", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "get_task_index", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "get_task_index", "type": "Callable[[], Any]"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "act", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "action", "type": "Any"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 337, "col_offset": 44, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 343, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 357, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 359, "col_offset": 44, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 365, "col_offset": 28, "nodeName": "opt", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "tasks", "type": "List[str]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "shared", "type": "Any"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 381, "col_offset": 44, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "suffix", "type": "str"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "suffix", "type": "str"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "train_file_flag", "type": "str"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "eval_file_flag", "type": "str"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "path", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "exists", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "path", "type": "str"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "project", "type": "argparse._ArgumentGroup"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "path", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "readlines", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "parley", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "num_exs", "type": "int"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "opt", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "sum", "type": "Any"}, {"lineNumber": 230, "col_offset": 50, "nodeName": "num_batches", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 240, "col_offset": 64, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "act", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "action", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "action", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 270, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 285, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 287, "col_offset": 53, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 313, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 315, "col_offset": 53, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 325, "col_offset": 43, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 337, "col_offset": 64, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 343, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 43, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 359, "col_offset": 64, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "copy", "type": "module"}, {"lineNumber": 368, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 368, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 368, "col_offset": 59, "nodeName": "opt", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 369, "col_offset": 43, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 379, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "SelfFeedingTeacher", "type": "Type[SelfFeedingTeacher]"}, {"lineNumber": 381, "col_offset": 64, "nodeName": "partial_opt", "type": "Optional[parlai.core.opt.Opt]"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "suffix", "type": "str"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "_path", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "_path", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "_path", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "_path", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "path", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "path", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "PathManager", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "f", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "max_train", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "line", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "parley", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "episode", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 229, "col_offset": 51, "nodeName": "bsz", "type": "Any"}, {"lineNumber": 229, "col_offset": 61, "nodeName": "t", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 238, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "actions", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "sampling_prob", "type": "Any"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 299, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 313, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 328, "col_offset": 25, "nodeName": "train_file", "type": "Any"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 328, "col_offset": 60, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 335, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "train_file", "type": "Any"}, {"lineNumber": 350, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 350, "col_offset": 60, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 357, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 369, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "train_file", "type": "Any"}, {"lineNumber": 372, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 372, "col_offset": 60, "nodeName": "train_files", "type": "List[Any]"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 379, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "opt", "type": "Any"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "opt", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "num_exs", "type": "int"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "max_train", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "json", "type": "module"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "parley", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "utterances", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "trimmed", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "parley", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "l", "type": "Any"}, {"lineNumber": 204, "col_offset": 48, "nodeName": "l", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "episodes", "type": "List[List[Dict[str, Any]]]"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "episode", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 229, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "self", "type": "AllTeacher"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 263, "col_offset": 28, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 46, "nodeName": "tasks", "type": "Any"}, {"lineNumber": 268, "col_offset": 62, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 328, "col_offset": 43, "nodeName": "opt", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "opt", "type": "Any"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "train_file_flag", "type": "str"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "eval_file_flag", "type": "str"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 179, "col_offset": 54, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "opt", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "utterances", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "parley", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "add_person_tokens", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 58, "nodeName": "trimmed", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "parley", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "parley", "type": "Any"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "parley", "type": "Any"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "episode", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "t", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 251, "col_offset": 21, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 253, "col_offset": 43, "nodeName": "task_idx", "type": "Any"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 268, "col_offset": 46, "nodeName": "self", "type": "SelfFeedingMTLTeacher"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "subtask", "type": "Any"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "self", "type": "SelfFeedingTeacher"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "split", "type": "Callable"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "opt", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "re", "type": "module"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "parley", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "opt", "type": "Any"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "self", "type": "SelfFeedingTeacher"}]