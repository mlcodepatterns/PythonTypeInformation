[{"lineNumber": 32, "col_offset": 23, "nodeName": "Agent", "type": "Type[parlai.core.agents.Agent]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "returnOneRandomAnswer", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cantAnswerPercent", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "cantAnswerMessage", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "id", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "obs", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "observation", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "get", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "obs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "getID", "type": "Callable[[], str]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "cantAnswerMessage", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "Message", "type": "Type[parlai.core.message.Message]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "obs", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "cantAnswerPercent", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "returnOneRandomAnswer", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "cantAnswerMessage", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 35, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "obs", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "random", "type": "Callable[[], float]"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "self", "type": "RepeatLabelAgent"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "random", "type": "module"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "labels", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "reply", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "labels", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "randrange", "type": "Callable[..., int]"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "random", "type": "module"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 64, "nodeName": "labels", "type": "Any"}]