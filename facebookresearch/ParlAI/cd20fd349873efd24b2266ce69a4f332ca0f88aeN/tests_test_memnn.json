[{"lineNumber": 11, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "valid", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "test", "type": "Any"}]