[{"lineNumber": 83, "col_offset": 0, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "SKIP_TESTS", "type": "bool"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "Agent", "type": "Type[parlai.core.agents.Agent]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "null_token", "type": "str"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "NULL_IDX", "type": "int"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "start_token", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "end_token", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "p1_token", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "P1_IDX", "type": "int"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "p2_token", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "P2_IDX", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "opt", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 833, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "SKIP_TESTS", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "add_cmdline_args", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "TorchAgent", "type": "Type[TorchAgent]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "shared", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "out_again", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "end_obs", "type": "Union[Dict[str, bool], Dict[str, Union[List[str], bool]], Dict[str, Union[str, bool]]]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 655, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "ctx_obs", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[List[str], str]], Dict[str, str]]"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, bool]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "obs_labs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 804, "col_offset": 12, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 804, "col_offset": 17, "nodeName": "obs_labs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 809, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "obs_elabs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 824, "col_offset": 17, "nodeName": "obs_elabs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 829, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "null_token", "type": "str"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "NULL_IDX", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "TorchAgent", "type": "Type[TorchAgent]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, bool]"}, {"lineNumber": 94, "col_offset": 10, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "share", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "obs_labs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 230, "col_offset": 30, "nodeName": "obs_elabs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "inp", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "inp", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "inp", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "inp", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "out_again", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "prev_vec", "type": "Union[List[str], bool, str]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 297, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 303, "col_offset": 36, "nodeName": "obs", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "history", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "obs_labs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "obs_elabs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "labs", "type": "List[str]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "new_vecs", "type": "List[Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]]"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "vec", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 421, "col_offset": 23, "nodeName": "new_vecs", "type": "List[Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "labs", "type": "List[str]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 473, "col_offset": 31, "nodeName": "obs_cands", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "rank_candidates", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 26, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "labels", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 481, "col_offset": 29, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 29, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 487, "col_offset": 15, "nodeName": "cs", "type": "Any"}, {"lineNumber": 487, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 493, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 505, "col_offset": 69, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 511, "col_offset": 69, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "_add_person_tokens", "type": "Any"}, {"lineNumber": 569, "col_offset": 47, "nodeName": "text", "type": "str"}, {"lineNumber": 569, "col_offset": 53, "nodeName": "prefix", "type": "str"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 571, "col_offset": 14, "nodeName": "_add_person_tokens", "type": "Any"}, {"lineNumber": 571, "col_offset": 47, "nodeName": "text", "type": "str"}, {"lineNumber": 571, "col_offset": 53, "nodeName": "prefix", "type": "str"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 583, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 585, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 588, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 593, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "end_obs", "type": "Union[Dict[str, Union[List[str], bool]], Dict[str, bool], Dict[str, Union[str, bool]]]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 595, "col_offset": 37, "nodeName": "end_obs", "type": "Union[Dict[str, Union[List[str], bool]], Dict[str, bool], Dict[str, Union[str, bool]]]"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 601, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 603, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 606, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 609, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 614, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 619, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 624, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 627, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 629, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 632, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 633, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 637, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 645, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 647, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 650, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 652, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 656, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 658, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 662, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 663, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 671, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "ctx_obs", "type": "Union[Dict[str, Union[List[str], str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 673, "col_offset": 37, "nodeName": "ctx_obs", "type": "Union[Dict[str, Union[List[str], str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 674, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 679, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 680, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 681, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 689, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 690, "col_offset": 14, "nodeName": "get_history_vec", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "vec", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 697, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 706, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 707, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 710, "col_offset": 12, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 715, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 719, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 720, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 721, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 723, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "observe", "type": "Callable[[Any], Any]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 768, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 769, "col_offset": 29, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 772, "col_offset": 14, "nodeName": "observe", "type": "Callable[[Any], Any]"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 778, "col_offset": 14, "nodeName": "observe", "type": "Callable[[Any], Any]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 779, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 780, "col_offset": 29, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "observe", "type": "Callable[[Any], Any]"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "batch_act", "type": "Callable[[Any], Any]"}, {"lineNumber": 808, "col_offset": 32, "nodeName": "obs_labs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 809, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "batch_act", "type": "Callable[[Any], Any]"}, {"lineNumber": 828, "col_offset": 32, "nodeName": "obs_elabs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 829, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 834, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "start_token", "type": "str"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "tok", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "dict", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "shared", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 238, "col_offset": 41, "nodeName": "inp", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "inp", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "inp", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 57, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "inp", "type": "Union[Dict[str, str], Dict[str, bool], Dict[str, List[str]]]"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 264, "col_offset": 56, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 270, "col_offset": 34, "nodeName": "inp", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 56, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 279, "col_offset": 45, "nodeName": "history", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "history", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "prev_vec", "type": "Union[bool, List[str], str]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 338, "col_offset": 35, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 377, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 404, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 429, "col_offset": 35, "nodeName": "new_vecs", "type": "List[Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]]"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 432, "col_offset": 33, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "batchify", "type": "Callable[..., parlai.core.torch_agent.Batch]"}, {"lineNumber": 448, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "history", "type": "Any"}, {"lineNumber": 470, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 474, "col_offset": 24, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 475, "col_offset": 26, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 480, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 481, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 482, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 483, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 486, "col_offset": 29, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 486, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 486, "col_offset": 56, "nodeName": "obs_cands", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 487, "col_offset": 31, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 496, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 496, "col_offset": 59, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 503, "col_offset": 34, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 509, "col_offset": 34, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 515, "col_offset": 34, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 525, "col_offset": 34, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.Output]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 570, "col_offset": 45, "nodeName": "text", "type": "str"}, {"lineNumber": 571, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "rfind", "type": "Callable[..., int]"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 593, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 633, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 662, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 671, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 674, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 680, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 690, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 706, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 721, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 731, "col_offset": 26, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 753, "col_offset": 25, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 756, "col_offset": 26, "nodeName": "last_reply", "type": "Callable[..., Any]"}, {"lineNumber": 767, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 767, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 769, "col_offset": 29, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 770, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 772, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 772, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 773, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 774, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 778, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 778, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 780, "col_offset": 29, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 781, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 783, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 784, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 806, "col_offset": 41, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 808, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 809, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 809, "col_offset": 27, "nodeName": "obs_labs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 825, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 826, "col_offset": 41, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 827, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 828, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 829, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 829, "col_offset": 27, "nodeName": "obs_elabs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "end_token", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "tok", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 195, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 239, "col_offset": 18, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 243, "col_offset": 53, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 255, "col_offset": 57, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 260, "col_offset": 39, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 264, "col_offset": 56, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 274, "col_offset": 56, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 275, "col_offset": 57, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 279, "col_offset": 45, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "out_again", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "out_again", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 344, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "reset", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 352, "col_offset": 45, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 363, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 367, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 374, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 380, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 383, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 385, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 394, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 414, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 415, "col_offset": 38, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 415, "col_offset": 43, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 420, "col_offset": 40, "nodeName": "vecs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 420, "col_offset": 48, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 430, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 432, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 433, "col_offset": 33, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 439, "col_offset": 38, "nodeName": "o", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "new_vecs", "type": "List[Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 440, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 441, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 450, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 453, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 454, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 459, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 461, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 465, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 483, "col_offset": 30, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 485, "col_offset": 26, "nodeName": "o", "type": "Dict[str, List[str]]"}, {"lineNumber": 485, "col_offset": 52, "nodeName": "o", "type": "Dict[str, List[str]]"}, {"lineNumber": 485, "col_offset": 57, "nodeName": "obs_cands", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 486, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 488, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "cs", "type": "Any"}, {"lineNumber": 488, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 519, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 529, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 531, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 540, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 544, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "reply", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 569, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 570, "col_offset": 30, "nodeName": "prefix", "type": "str"}, {"lineNumber": 571, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 572, "col_offset": 14, "nodeName": "text", "type": "str"}, {"lineNumber": 573, "col_offset": 58, "nodeName": "text", "type": "str"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 584, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 589, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 596, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 615, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 633, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 651, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 657, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 662, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 664, "col_offset": 28, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "P2_TOKEN", "type": "str"}, {"lineNumber": 664, "col_offset": 28, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 674, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 676, "col_offset": 45, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 680, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "P2_TOKEN", "type": "str"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "P1_TOKEN", "type": "str"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 690, "col_offset": 14, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 698, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 706, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 708, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 721, "col_offset": 15, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 731, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 753, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 756, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 767, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 772, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 778, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 783, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 807, "col_offset": 12, "nodeName": "obs_labs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 807, "col_offset": 33, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 807, "col_offset": 49, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 807, "col_offset": 52, "nodeName": "history", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 825, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 827, "col_offset": 12, "nodeName": "obs_elabs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 827, "col_offset": 34, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 827, "col_offset": 50, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 827, "col_offset": 53, "nodeName": "history", "type": "Any"}, {"lineNumber": 830, "col_offset": 12, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "p1_token", "type": "str"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "P1_IDX", "type": "int"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "txt", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "_check_truncate", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 335, "col_offset": 46, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "obs_vecs", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 353, "col_offset": 48, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "history", "type": "Any"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 400, "col_offset": 62, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 400, "col_offset": 67, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 401, "col_offset": 34, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 416, "col_offset": 44, "nodeName": "labs", "type": "List[str]"}, {"lineNumber": 416, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 420, "col_offset": 24, "nodeName": "vecs", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "vec", "type": "Union[Dict[str, bool], Dict[str, str], Dict[str, List[str]]]"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "vec", "type": "Union[Dict[str, bool], Dict[str, str], Dict[str, List[str]]]"}, {"lineNumber": 426, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 426, "col_offset": 67, "nodeName": "obs", "type": "Any"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "o", "type": "Union[Dict[str, bool], Dict[str, str], Dict[str, List[str]]]"}, {"lineNumber": 440, "col_offset": 44, "nodeName": "labs", "type": "List[str]"}, {"lineNumber": 440, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 441, "col_offset": 34, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 445, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 453, "col_offset": 43, "nodeName": "obs_batch", "type": "List[Dict[str, Union[bool, List[str], str]]]"}, {"lineNumber": 453, "col_offset": 56, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 454, "col_offset": 34, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 573, "col_offset": 43, "nodeName": "prefix", "type": "str"}, {"lineNumber": 573, "col_offset": 63, "nodeName": "idx", "type": "int"}, {"lineNumber": 658, "col_offset": 34, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 664, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 664, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 664, "col_offset": 28, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 676, "col_offset": 45, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 682, "col_offset": 26, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 805, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 806, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 807, "col_offset": 33, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 807, "col_offset": 52, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 810, "col_offset": 29, "nodeName": "reply", "type": "Any"}, {"lineNumber": 810, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 825, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 827, "col_offset": 34, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 827, "col_offset": 53, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 830, "col_offset": 29, "nodeName": "reply", "type": "Any"}, {"lineNumber": 830, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "p2_token", "type": "str"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "P2_IDX", "type": "int"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "idx", "type": "int"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 353, "col_offset": 32, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "agent", "type": "TorchAgent"}, {"lineNumber": 390, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 400, "col_offset": 44, "nodeName": "o", "type": "Dict[str, Union[bool, List[str], str]]"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 416, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 434, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 439, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 445, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 449, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 451, "col_offset": 29, "nodeName": "batch", "type": "parlai.core.torch_agent.Batch"}, {"lineNumber": 488, "col_offset": 42, "nodeName": "obs_cands", "type": "List[Dict[str, List[str]]]"}, {"lineNumber": 573, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 810, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 830, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "batch", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "batch", "type": "Any"}, {"lineNumber": 243, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 245, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "out", "type": "Union[Dict[str, bool], Dict[str, List[str]], Dict[str, str]]"}, {"lineNumber": 264, "col_offset": 32, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "out", "type": "Union[Dict[str, str], Dict[str, List[str]], Dict[str, bool]]"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "out", "type": "Union[Dict[str, List[str]], Dict[str, bool], Dict[str, str]]"}, {"lineNumber": 400, "col_offset": 46, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 445, "col_offset": 49, "nodeName": "obs", "type": "Any"}, {"lineNumber": 488, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 573, "col_offset": 36, "nodeName": "idx", "type": "int"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 244, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 254, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}]