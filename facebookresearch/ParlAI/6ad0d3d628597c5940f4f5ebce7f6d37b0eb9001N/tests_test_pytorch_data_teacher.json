[{"lineNumber": 50, "col_offset": 0, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 483, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "dts", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "exts", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "shuffle_opts", "type": "List[bool]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "task", "type": "str"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "dts", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "agent_processed_observation", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "max_range", "type": "Union[float, str, bool, int]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool]], Dict[str, Union[str, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]]]"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[str, Any, bool]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 348, "col_offset": 41, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "task1", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "task2", "type": "str"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 463, "col_offset": 43, "nodeName": "task1", "type": "str"}, {"lineNumber": 464, "col_offset": 27, "nodeName": "task2", "type": "str"}, {"lineNumber": 469, "col_offset": 46, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 474, "col_offset": 27, "nodeName": "task1", "type": "str"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "ext", "type": "str"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "exts", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "agent", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "act", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "teacher_processed", "type": "bool"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "_", "type": "Any"}, {"lineNumber": 128, "col_offset": 77, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "val1", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "val2", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "agent", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 207, "col_offset": 47, "nodeName": "_", "type": "Any"}, {"lineNumber": 207, "col_offset": 77, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "check_equal_act_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "bsrt_acts_ep1", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "no_bsrt_acts_ep1", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "check_equal_act_lists", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "bsrt_acts_ep2", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "no_bsrt_acts_ep2", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "field", "type": "Union[float, str, bool, int]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "batch_lens", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "lengths", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "verify_batch_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 29, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "verify_batch_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[str, Any, bool]]]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[str, Any, bool]]]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 297, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 297, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[str, Any, bool]]]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 329, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 329, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 352, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 459, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 459, "col_offset": 58, "nodeName": "task1", "type": "str"}, {"lineNumber": 459, "col_offset": 65, "nodeName": "task2", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 475, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 479, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 479, "col_offset": 61, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 479, "col_offset": 71, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str]]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "datatype", "type": "str"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "shuffle_opts", "type": "List[bool]"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "_", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "act", "type": "Any"}, {"lineNumber": 126, "col_offset": 39, "nodeName": "agent", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "agent_processed_observation", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "agent1", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "get_teacher_act", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 66, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "get_teacher_act", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "agent_processed_observation", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "teacher_processed_act", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "val1", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "agent", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "bb", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "bb", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "act1", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "act2", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "act1", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 212, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "bsrt_acts_ep1", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "bsrt_acts_ep2", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 43, "nodeName": "get_acts_epochs_1_and_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 67, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "no_bsrt_acts_ep1", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "no_bsrt_acts_ep2", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 49, "nodeName": "get_acts_epochs_1_and_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 73, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "_", "type": "Any"}, {"lineNumber": 241, "col_offset": 81, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 299, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 299, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[str, Any, bool]]]"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 329, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 331, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 354, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 354, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 356, "col_offset": 71, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 396, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 427, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 460, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 465, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 470, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 475, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 480, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "dt", "type": "str"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "ext", "type": "str"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, int, bool]], Dict[str, Union[float, int, str, bool]]]"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "act", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "agent", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "observe", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "act", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 147, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "val1", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "val2", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "parley", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "parley", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "bb", "type": "Any"}, {"lineNumber": 179, "col_offset": 63, "nodeName": "b", "type": "Any"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 183, "col_offset": 40, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "bb", "type": "Any"}, {"lineNumber": 183, "col_offset": 63, "nodeName": "b", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "acts1", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "acts1", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "acts2", "type": "List[Any]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "val1", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "val2", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 207, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 241, "col_offset": 54, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 245, "col_offset": 53, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 27, "nodeName": "opt", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "opt", "type": "Any"}, {"lineNumber": 250, "col_offset": 46, "nodeName": "agent", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "reset_data", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "bb", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "max_range", "type": "Union[float, str, bool, int]"}, {"lineNumber": 356, "col_offset": 48, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 356, "col_offset": 58, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 380, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 387, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 387, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 388, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 396, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 398, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 401, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 401, "col_offset": 28, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 439, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "task", "type": "str"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "datatype", "type": "str"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "_", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "parser", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "opt", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "agent", "type": "Any"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "val1", "type": "Any"}, {"lineNumber": 152, "col_offset": 57, "nodeName": "val2", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "acts", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "acts", "type": "Any"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "acts_epoch_1", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "acts_epoch_2", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "act1", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "act2", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 212, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 241, "col_offset": 54, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "parley", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "get_agents", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "parley", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "ep_length", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "b", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 404, "col_offset": 44, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 408, "col_offset": 51, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 429, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 181, "col_offset": 54, "nodeName": "b", "type": "Any"}, {"lineNumber": 181, "col_offset": 72, "nodeName": "get", "type": "Any"}, {"lineNumber": 185, "col_offset": 54, "nodeName": "b", "type": "Any"}, {"lineNumber": 185, "col_offset": 72, "nodeName": "get", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "val1", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "val1", "type": "Any"}, {"lineNumber": 200, "col_offset": 47, "nodeName": "val2", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "acts", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "world", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "batch_sort_acts", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 43, "nodeName": "acts", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "b", "type": "Any"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "field", "type": "Any"}, {"lineNumber": 265, "col_offset": 61, "nodeName": "b", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "max", "type": "Callable"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "batch_lens", "type": "Any"}, {"lineNumber": 271, "col_offset": 38, "nodeName": "min", "type": "Callable"}, {"lineNumber": 271, "col_offset": 42, "nodeName": "batch_lens", "type": "Any"}, {"lineNumber": 275, "col_offset": 52, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[str, bool, int]]]"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 404, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 408, "col_offset": 45, "nodeName": "key", "type": "Any"}, {"lineNumber": 408, "col_offset": 71, "nodeName": "key", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}, {"lineNumber": 435, "col_offset": 41, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "parser", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "opt_defaults", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "parser", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 66, "nodeName": "opt", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "datatype", "type": "str"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "datatype", "type": "str"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "RandomSampler", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "eq", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "val1", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "val2", "type": "Any"}, {"lineNumber": 181, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 72, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 256, "col_offset": 26, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 261, "col_offset": 43, "nodeName": "world_data", "type": "Any"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "field", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "datatype", "type": "str"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "pytorch_dataloader", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 81, "nodeName": "opt", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "pytorch_dataloader", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 103, "col_offset": 81, "nodeName": "opt", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "all", "type": "Any"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "get", "type": "Any"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 198, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 55, "nodeName": "eq", "type": "Any"}, {"lineNumber": 198, "col_offset": 64, "nodeName": "val1", "type": "Any"}, {"lineNumber": 198, "col_offset": 70, "nodeName": "val2", "type": "Any"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "opt", "type": "Any"}, {"lineNumber": 198, "col_offset": 55, "nodeName": "torch", "type": "Any"}]