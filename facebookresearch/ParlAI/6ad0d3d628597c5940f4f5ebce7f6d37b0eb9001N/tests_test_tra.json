[{"lineNumber": 17, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "_get_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "_get_threshold", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_train_inline", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_train_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_train_fixed", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "test_train_batch_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "test_eval_inline", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_eval_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_eval_fixed", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "test_eval_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 28, "nodeName": "_AbstractTRATest", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "_get_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "_AbstractTRATest", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "_get_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "_get_threshold", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "_AbstractTRATest", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "_get_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "_get_threshold", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 227, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "teacher", "type": "parlai.tasks.integration_tests.agents.CandidateTeacher"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "all_cands", "type": "List[List[str]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "all_cands_str", "type": "str"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "cls", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "_AbstractTRATest", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "setUpClass", "type": "Callable[[Any], None]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 47, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 118, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "_get_threshold", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "threshold", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "CandidateTeacher", "type": "Type[parlai.tasks.integration_tests.agents.CandidateTeacher]"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "test", "type": "List[List[str]]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "tmp_cands_file", "type": "Any"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "tmp_cands_file", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "args", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "_get_args", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "SkipTest", "type": "Type[unittest.SkipTest]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "train", "type": "List[List[str]]"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "val", "type": "List[List[str]]"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "teacher", "type": "parlai.tasks.integration_tests.agents.CandidateTeacher"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "tempdir", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "f", "type": "file"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "args", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 179, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "new_args", "type": "Dict[Any, Any]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "new_args", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "args", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "_AbstractTRATest", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "cls", "type": "Type[_AbstractTRATest]"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "teacher", "type": "parlai.tasks.integration_tests.agents.CandidateTeacher"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "teacher", "type": "parlai.tasks.integration_tests.agents.CandidateTeacher"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "x", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "x", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "all_cands", "type": "List[List[str]]"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "tmp_cands_file", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "all_cands_str", "type": "str"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 163, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "f", "type": "file"}, {"lineNumber": 163, "col_offset": 53, "nodeName": "valid", "type": "Any"}]