[{"lineNumber": 52, "col_offset": 0, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 483, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "dts", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "exts", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "shuffle_opts", "type": "List[bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "task", "type": "str"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "dts", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "max_range", "type": "Union[float, str, bool, int]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[str, Any, bool]], Dict[str, Union[float, Any, bool]]]"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, str]], Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]]]"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 353, "col_offset": 11, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]]]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "task1", "type": "str"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "task2", "type": "str"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]]]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "ext", "type": "str"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "exts", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "_", "type": "Any"}, {"lineNumber": 132, "col_offset": 77, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "_", "type": "Any"}, {"lineNumber": 211, "col_offset": 77, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 241, "col_offset": 20, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "verify_batch_lengths", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool, int]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[str, Any, bool]], Dict[str, Union[int, Any, bool]]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[str, Any, bool]], Dict[str, Union[int, Any, bool]]]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 300, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 300, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[str, Any, bool]], Dict[str, Union[int, Any, bool]]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "_pyt_train", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool]], Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool]], Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 332, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 332, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 332, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str, bool]], Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]], Dict[str, Union[bool, Any, str]]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]], Dict[str, Union[bool, Any, str]]]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]], Dict[str, Union[bool, Any, str]]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 355, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]], Dict[str, Union[bool, Any, str]]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str], Dict[str, Union[int, str]]]"}, {"lineNumber": 459, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 459, "col_offset": 58, "nodeName": "task1", "type": "str"}, {"lineNumber": 459, "col_offset": 65, "nodeName": "task2", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str], Dict[str, Union[int, str]]]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "datatype", "type": "str"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "shuffle_opts", "type": "List[bool]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "_", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 138, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "get_teacher_act", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 66, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 195, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "act1", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "act2", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "act1", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 216, "col_offset": 50, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "get_acts_epochs_1_and_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 67, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 244, "col_offset": 51, "nodeName": "_", "type": "Any"}, {"lineNumber": 244, "col_offset": 81, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[bool, int, str, float]]"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 302, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[str, Any, bool]], Dict[str, Union[int, Any, bool]]]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[bool, int, str, float]]"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 334, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[bool, int, str, float]]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, str]], Dict[str, Union[bool, Any, str]]]"}, {"lineNumber": 355, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 357, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 357, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 359, "col_offset": 71, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[bool, int, str, float]]"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 388, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 427, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 428, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 456, "col_offset": 19, "nodeName": "integration_test_parser_defaults", "type": "Dict[str, Union[bool, int, str, float]]"}, {"lineNumber": 460, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "dt", "type": "str"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "ext", "type": "str"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, int]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 132, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "unit_test_parser_defaults", "type": "Dict[str, Union[int, float, str]]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "acts1", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "acts1", "type": "Any"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "acts2", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "val1", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "val2", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "path", "type": "module"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "train_setup_args", "type": "Callable[..., parlai.core.params.ParlaiParser]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool, int]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 247, "col_offset": 54, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool, int]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "opt", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 359, "col_offset": 48, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 359, "col_offset": 58, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, str]]"}, {"lineNumber": 388, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[parlai.core.opt.Opt], Any]"}, {"lineNumber": 389, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "display_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "task", "type": "str"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "datatype", "type": "str"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "_", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "parser", "type": "Any"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[parlai.core.opt.Opt], Any]"}, {"lineNumber": 125, "col_offset": 58, "nodeName": "opt", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "act1", "type": "Any"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "act2", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 216, "col_offset": 37, "nodeName": "os", "type": "module"}, {"lineNumber": 217, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, bool, int]], Dict[str, Union[float, str, bool, int]]]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 429, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]], Dict[str, Union[float, str]]]"}, {"lineNumber": 430, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "val1", "type": "Any"}, {"lineNumber": 201, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "val1", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "val2", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 248, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "parser", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "opt_defaults", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "parser", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[parlai.core.opt.Opt], Any]"}, {"lineNumber": 92, "col_offset": 66, "nodeName": "opt", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "all", "type": "Any"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "eq", "type": "Any"}, {"lineNumber": 202, "col_offset": 64, "nodeName": "val1", "type": "Any"}, {"lineNumber": 202, "col_offset": 70, "nodeName": "val2", "type": "Any"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "torch", "type": "Any"}]