[{"lineNumber": 41, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 132, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "knowledge_opt", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "valid", "type": "None"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "_", "type": "None"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, None, None]]"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "END2END_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "_", "type": "None"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "test", "type": "None"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, None, None]]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "RETRIEVAL_OPTIONS", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 49, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "knowledge_opt", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "display_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 81, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 79, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "KnowledgeRetrieverAgent", "type": "Type[projects.wizard_of_wikipedia.knowledge_retriever.knowledge_retriever.KnowledgeRetrieverAgent]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "display_data", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "END2END_OPTIONS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "display_data", "type": "module"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "valid", "type": "None"}, {"lineNumber": 62, "col_offset": 66, "nodeName": "valid", "type": "None"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "valid", "type": "None"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "test", "type": "None"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "test", "type": "None"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "test", "type": "None"}]