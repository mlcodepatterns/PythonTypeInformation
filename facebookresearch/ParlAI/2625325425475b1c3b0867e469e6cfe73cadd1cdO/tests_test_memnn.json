[{"lineNumber": 11, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 120, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, None, None]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 47, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 66, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 78, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestMemnn"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 116, "col_offset": 75, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "LR", "type": "int"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "LR", "type": "int"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "valid", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "test", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "valid", "type": "None"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "valid", "type": "None"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "test", "type": "None"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "test", "type": "None"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "min", "type": "Callable"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "cpu_count", "type": "Callable[[], Optional[int]]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "os", "type": "module"}]