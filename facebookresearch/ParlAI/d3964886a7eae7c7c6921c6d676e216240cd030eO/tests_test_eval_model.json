[{"lineNumber": 13, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 188, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "base_dict", "type": "Dict[str, str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "teachers", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "batchsize", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "bs", "type": "int"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "batchsize", "type": "List[int]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "opt", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "opt", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 59, "nodeName": "opt", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "total_acc", "type": "Any"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "teacher", "type": "str"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "teachers", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "parser", "type": "Any"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "parser", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "parser", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "d", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 174, "col_offset": 28, "nodeName": "teacher", "type": "str"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "bs", "type": "int"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "scores", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "score", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "scores", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "score", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "score", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "ast", "type": "module"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "scores", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "score", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "score", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "task1_acc", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "d", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "d", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 73, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "task2_acc", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "base_dict", "type": "Dict[str, str]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "timeout", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "TestEvalModel"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "bs", "type": "int"}, {"lineNumber": 183, "col_offset": 70, "nodeName": "teacher", "type": "str"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "d", "type": "Dict[str, Union[str, int]]"}]