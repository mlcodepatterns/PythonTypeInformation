[{"lineNumber": 20, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "updates_so_far", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "end", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "progress", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "lr_mult", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "lr_mult", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_number_training_updates", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "patience", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "decay", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "scheduler", "type": "Union[LinearLRScheduler, CosineLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, InvSqrtLRScheduler]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "_number_training_updates", "type": "Any"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "decay_factor", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 440, "col_offset": 28, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 475, "col_offset": 28, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "lr_mult", "type": "Union[float, Any]"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "lr_mult", "type": "Union[float, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "None"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "start", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "add_argument_group", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "hard_reset", "type": "bool"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "hard_reset", "type": "Union[Any, bool]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "_init_warmup_scheduler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 280, "col_offset": 52, "nodeName": "states", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 329, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 329, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 342, "col_offset": 25, "nodeName": "metrics_dict", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 357, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 358, "col_offset": 51, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 358, "col_offset": 62, "nodeName": "patience", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 392, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 403, "col_offset": 53, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 403, "col_offset": 64, "nodeName": "_invsqrt_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "decay_factor", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 437, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 438, "col_offset": 11, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "CosineAnnealingLR", "type": "Any"}, {"lineNumber": 441, "col_offset": 62, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 441, "col_offset": 73, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 444, "col_offset": 30, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 472, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 472, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 472, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 473, "col_offset": 11, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 476, "col_offset": 53, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 476, "col_offset": 64, "nodeName": "_linear_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "max", "type": "Callable"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "states", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "_warmup_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "step", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "progress", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "states", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "states", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "argparser", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "lr_group", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "decay", "type": "Any"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "states", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "load_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "scheduler", "type": "Union[LinearLRScheduler, CosineLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, InvSqrtLRScheduler]"}, {"lineNumber": 292, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "train_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 331, "col_offset": 37, "nodeName": "decay", "type": "Any"}, {"lineNumber": 331, "col_offset": 53, "nodeName": "patience", "type": "Any"}, {"lineNumber": 338, "col_offset": 11, "nodeName": "self", "type": "ReduceOnPlateauLRScheduler"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 346, "col_offset": 28, "nodeName": "metrics_dict", "type": "Any"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 358, "col_offset": 78, "nodeName": "decay", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 402, "col_offset": 36, "nodeName": "max", "type": "Callable"}, {"lineNumber": 402, "col_offset": 43, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 403, "col_offset": 64, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 409, "col_offset": 34, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 439, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 444, "col_offset": 30, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "StopTrainException", "type": "Type[parlai.core.exceptions.StopTrainException]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 446, "col_offset": 34, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 474, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 476, "col_offset": 64, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 485, "col_offset": 30, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 486, "col_offset": 18, "nodeName": "StopTrainException", "type": "Type[parlai.core.exceptions.StopTrainException]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 487, "col_offset": 34, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "updates_so_far", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "end", "type": "float"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "start", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "states", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "states", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "states", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "opt", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 264, "col_offset": 51, "nodeName": "opt", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "scheduler", "type": "Union[LinearLRScheduler, CosineLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, InvSqrtLRScheduler]"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 330, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "ReduceOnPlateauLRScheduler"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 406, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 43, "nodeName": "max", "type": "Callable"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 481, "col_offset": 33, "nodeName": "step", "type": "Any"}, {"lineNumber": 481, "col_offset": 40, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "optim", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "ReduceOnPlateauLRScheduler", "type": "Type[ReduceOnPlateauLRScheduler]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "patience", "type": "Any"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "decay", "type": "Any"}, {"lineNumber": 214, "col_offset": 56, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 214, "col_offset": 72, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 406, "col_offset": 50, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 406, "col_offset": 80, "nodeName": "step", "type": "Any"}, {"lineNumber": 481, "col_offset": 40, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "FixedLRScheduler", "type": "Type[FixedLRScheduler]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "patience", "type": "Any"}, {"lineNumber": 218, "col_offset": 49, "nodeName": "decay", "type": "Any"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 218, "col_offset": 72, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 406, "col_offset": 50, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "InvSqrtLRScheduler", "type": "Type[InvSqrtLRScheduler]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "states", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "CosineLRScheduler", "type": "Type[CosineLRScheduler]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "LinearLRScheduler", "type": "Type[LinearLRScheduler]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 240, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "opt", "type": "Any"}]