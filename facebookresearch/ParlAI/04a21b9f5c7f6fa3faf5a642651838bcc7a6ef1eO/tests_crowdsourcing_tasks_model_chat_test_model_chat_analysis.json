[{"lineNumber": 122, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "analysis_samples_folder", "type": "str"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "analysis_outputs_folder", "type": "str"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "prefixes", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "setup_teardown", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "setup_teardown", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "prefix", "type": "str"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "setup_teardown", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, str]"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "join", "type": "Callable"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "analysis_outputs_folder", "type": "str"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "filtered_stdout", "type": "str"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "filtered_stdout", "type": "str"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "prefix", "type": "str"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "prefixes", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "outputs", "type": "Dict[str, str]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "check_stdout", "type": "Callable[[str, str], None]"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "FileRegressionFixture", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "FileRegressionFixture", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 49, "col_offset": 46, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "arg_string", "type": "str"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "parser_", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "args_", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "outputs", "type": "Dict[str, str]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "results_path", "type": "str"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "file_regression", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 60, "nodeName": "prefix", "type": "str"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "file_regression", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "prefix", "type": "str"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "setup_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "compile_results", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "line", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "prefix", "type": "str"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "ModelChatResultsCompiler", "type": "Type[parlai.crowdsourcing.tasks.model_chat.analysis.compile_results.ModelChatResultsCompiler]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "parser_", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "line", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "open", "type": "Callable"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "results_path", "type": "str"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "outputs", "type": "Dict[str, str]"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "read", "type": "Callable"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "arg_string", "type": "str"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "ModelChatResultsCompiler", "type": "Type[parlai.crowdsourcing.tasks.model_chat.analysis.compile_results.ModelChatResultsCompiler]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "split", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "prefix", "type": "str"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "args_", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "glob", "type": "module"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 63, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "line", "type": "Any"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "os", "type": "module"}]