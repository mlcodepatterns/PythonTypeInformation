[{"lineNumber": 10, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 216, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "download_unittest_models", "type": "Callable[[], None]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[..., Tuple[Any, None, None]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 74, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 167, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 193, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "valid", "type": "None"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 201, "col_offset": 78, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "test", "type": "None"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 75, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 71, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "valid", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "test", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 112, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 115, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 167, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 170, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 193, "col_offset": 66, "nodeName": "valid", "type": "None"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "valid", "type": "None"}, {"lineNumber": 201, "col_offset": 65, "nodeName": "valid", "type": "None"}, {"lineNumber": 204, "col_offset": 64, "nodeName": "test", "type": "None"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "test", "type": "None"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "test", "type": "None"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}]