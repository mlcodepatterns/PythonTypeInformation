[{"lineNumber": 16, "col_offset": 0, "nodeName": "SKIP_HOGWILD", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 105, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "data", "type": "List[nothing]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "output", "type": "display_output"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "output", "type": "display_output"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "display_output"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "s", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "display_output", "type": "Type[display_output]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "stdout", "type": "display_output"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "output", "type": "display_output"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "nt", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "display_output", "type": "Type[display_output]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "stdout", "type": "display_output"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "output", "type": "display_output"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "nt", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "self", "type": "display_output"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "bs", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "bs", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "display_output"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "report_full", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "report", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "nt", "type": "int"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "TrainLoop", "type": "Type[parlai.scripts.train_model.TrainLoop]"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "parser", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "report_valid", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "report_test", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "train", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "load_eval_world", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "agent", "type": "Any"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "opt", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "opt", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "load_eval_world", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "agent", "type": "Any"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "opt", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "opt", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "nt", "type": "int"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "eval_model", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "parser", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "parser", "type": "Any"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "bs", "type": "int"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "self", "type": "TestHogwild"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "report_valid", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "self", "type": "TestHogwild"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "report_test", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "TestHogwild"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "report_full", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "self", "type": "TestHogwild"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "parser", "type": "Any"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "bs", "type": "int"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "self", "type": "TestHogwild"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "report", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "report_part", "type": "Any"}]