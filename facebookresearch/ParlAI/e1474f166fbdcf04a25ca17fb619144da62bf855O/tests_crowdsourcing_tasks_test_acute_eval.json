[{"lineNumber": 261, "col_offset": 24, "nodeName": "CrowdsourcingTestMixin", "type": "Type[parlai.crowdsourcing.utils.tests.CrowdsourcingTestMixin]"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 294, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 297, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 261, "col_offset": 48, "nodeName": "unittest", "type": "module"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "overrides", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "agent_id", "type": "str"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "_set_up_config", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "_set_up_server", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "request_init_data", "type": "Any"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "agent_id", "type": "str"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "send_agent_act", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "agent_id", "type": "str"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "DESIRED_INPUTS", "type": "List[Union[Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[str], str, bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]], Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[int], List[str], bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]]]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "DESIRED_OUTPUTS", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "BLUEPRINT_TYPE", "type": "str"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "TASK_DIRECTORY", "type": "str"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "overrides", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "_register_mock_agents", "type": "Callable[..., List[str]]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "server", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "server", "type": "Any"}, {"lineNumber": 285, "col_offset": 68, "nodeName": "DESIRED_OUTPUTS", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 291, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "find_agents", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "db", "type": "Any"}, {"lineNumber": 289, "col_offset": 20, "nodeName": "self", "type": "TestAcuteEval"}]