[{"lineNumber": 26, "col_offset": 0, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "SKIP_TESTS", "type": "bool"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_mock", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_share", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test__vectorize_text", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test__check_truncate", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "test_vectorize", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_batchify", "type": "Callable[[Any], Any]"}, {"lineNumber": 466, "col_offset": 4, "nodeName": "test_match_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "test__add_person_tokens", "type": "Callable[[Any], Any]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "test_history", "type": "Callable[[Any], Any]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "test_last_reply", "type": "Callable[[Any], Any]"}, {"lineNumber": 759, "col_offset": 4, "nodeName": "test_observe", "type": "Callable[[Any], Any]"}, {"lineNumber": 782, "col_offset": 4, "nodeName": "test_batch_act", "type": "Callable[[Any], Any]"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "test_resume_checkpoint", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "opt", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "get_opt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 902, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "SKIP_TESTS", "type": "bool"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "ParlaiParser", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_cmdline_args", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "parser", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "MockTorchAgent", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent]"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "opt", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "shared", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "text", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "inp", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "obs", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "out_again", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "prefix", "type": "str"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 608, "col_offset": 8, "nodeName": "end_obs", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[List[str], bool]], Dict[str, bool]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "ctx_obs", "type": "Union[Dict[str, str], Dict[str, Union[List[str], str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, bool]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "obs_labs_vecs", "type": "List[Any]"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 810, "col_offset": 17, "nodeName": "obs_labs", "type": "List[Any]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "obs_elabs_vecs", "type": "List[Any]"}, {"lineNumber": 842, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 842, "col_offset": 17, "nodeName": "obs_elabs", "type": "List[Any]"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "reply", "type": "Any"}, {"lineNumber": 847, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "MockTorchAgent", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Union[Any, bool]]"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "parser", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "share", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "text", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "_vectorize_text", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "Message", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "Message", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "obs_labs", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "obs_elabs", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "inp", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "out_again", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "prev_vec", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "out_again", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "Message", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "obs", "type": "Any"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "history", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "obs_labs", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 36, "nodeName": "obs_elabs", "type": "List[Any]"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 344, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "labs", "type": "List[Any]"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "new_vecs", "type": "List[Any]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "vec", "type": "Any"}, {"lineNumber": 390, "col_offset": 23, "nodeName": "new_vecs", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "labs", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "is_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "batch", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "obs_cands", "type": "List[Any]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 451, "col_offset": 24, "nodeName": "rank_candidates", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 26, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "labels", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "cs", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 468, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 472, "col_offset": 39, "nodeName": "reply", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 474, "col_offset": 39, "nodeName": "reply", "type": "Any"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 480, "col_offset": 82, "nodeName": "reply", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 486, "col_offset": 82, "nodeName": "reply", "type": "Any"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "match_batch", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 577, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 585, "col_offset": 14, "nodeName": "_add_person_tokens", "type": "Any"}, {"lineNumber": 585, "col_offset": 47, "nodeName": "text", "type": "str"}, {"lineNumber": 585, "col_offset": 53, "nodeName": "prefix", "type": "str"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "_add_person_tokens", "type": "Any"}, {"lineNumber": 587, "col_offset": 47, "nodeName": "text", "type": "str"}, {"lineNumber": 587, "col_offset": 53, "nodeName": "prefix", "type": "str"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 589, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 598, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 600, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 603, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 605, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 608, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "end_obs", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[List[str], bool]], Dict[str, bool]]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 610, "col_offset": 37, "nodeName": "end_obs", "type": "Union[Dict[str, Union[str, bool]], Dict[str, Union[List[str], bool]], Dict[str, bool]]"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 615, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 623, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 625, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 628, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 633, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 641, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 643, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 646, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 648, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 651, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 653, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 656, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 659, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 661, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 664, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 666, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 669, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 670, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 672, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 675, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 685, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "ctx_obs", "type": "Union[Dict[str, Union[List[str], str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 688, "col_offset": 37, "nodeName": "ctx_obs", "type": "Union[Dict[str, Union[List[str], str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 689, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 690, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 693, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 704, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 705, "col_offset": 14, "nodeName": "get_history_vec", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 706, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 709, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 711, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 716, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "get_history_vec_list", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 721, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 722, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 723, "col_offset": 37, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "get_history_str", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 725, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 761, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 763, "col_offset": 14, "nodeName": "observe", "type": "Any"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 764, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "observation", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 768, "col_offset": 14, "nodeName": "observe", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 774, "col_offset": 14, "nodeName": "observe", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 775, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 29, "nodeName": "observation", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 779, "col_offset": 14, "nodeName": "observe", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 784, "col_offset": 16, "nodeName": "get_agent", "type": "Callable[..., Any]"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "batch_act", "type": "Any"}, {"lineNumber": 814, "col_offset": 32, "nodeName": "obs_labs_vecs", "type": "List[Any]"}, {"lineNumber": 815, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 846, "col_offset": 16, "nodeName": "batch_act", "type": "Any"}, {"lineNumber": 846, "col_offset": 32, "nodeName": "obs_elabs_vecs", "type": "List[Any]"}, {"lineNumber": 847, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "popt", "type": "Any"}, {"lineNumber": 903, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "dict", "type": "Any"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "shared", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "vec", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "inp", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "inp", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "inp", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 53, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "inp", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "inp", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "BEG_IDX", "type": "int"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 57, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "history", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "assertIs", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "out", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 229, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "history", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "assertIsNot", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "prev_vec", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 247, "col_offset": 41, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 304, "col_offset": 35, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 329, "col_offset": 35, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "labels", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "candidates", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "image", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 373, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 399, "col_offset": 35, "nodeName": "new_vecs", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "batchify", "type": "Any"}, {"lineNumber": 419, "col_offset": 35, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "text_lengths", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "label_lengths", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "labels", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 430, "col_offset": 64, "nodeName": "history", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 437, "col_offset": 67, "nodeName": "history", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 440, "col_offset": 73, "nodeName": "history", "type": "Any"}, {"lineNumber": 446, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 451, "col_offset": 24, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 453, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 454, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 456, "col_offset": 26, "nodeName": "batch", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 458, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 459, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 460, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 462, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "candidate_vecs", "type": "Any"}, {"lineNumber": 462, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 462, "col_offset": 56, "nodeName": "obs_cands", "type": "List[Any]"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "batch", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 471, "col_offset": 59, "nodeName": "Output", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 478, "col_offset": 37, "nodeName": "Output", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 484, "col_offset": 37, "nodeName": "Output", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 489, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "Output", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 586, "col_offset": 45, "nodeName": "text", "type": "str"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 588, "col_offset": 14, "nodeName": "rfind", "type": "Callable[..., int]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 608, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 672, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 672, "col_offset": 55, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 679, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 680, "col_offset": 32, "nodeName": "P2_TOKEN", "type": "Any"}, {"lineNumber": 680, "col_offset": 48, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 686, "col_offset": 18, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 689, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 690, "col_offset": 72, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 698, "col_offset": 32, "nodeName": "P2_TOKEN", "type": "Any"}, {"lineNumber": 698, "col_offset": 48, "nodeName": "P1_TOKEN", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 705, "col_offset": 14, "nodeName": "history", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 706, "col_offset": 30, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "history", "type": "Any"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "history", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 731, "col_offset": 26, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "last_reply", "type": "Any"}, {"lineNumber": 763, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 764, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 765, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 765, "col_offset": 29, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 766, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 768, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 769, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 770, "col_offset": 38, "nodeName": "out", "type": "Any"}, {"lineNumber": 774, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 774, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 776, "col_offset": 29, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 777, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 779, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 779, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 780, "col_offset": 25, "nodeName": "out", "type": "Any"}, {"lineNumber": 787, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 801, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 812, "col_offset": 41, "nodeName": "o", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 814, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 815, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 815, "col_offset": 27, "nodeName": "obs_labs_vecs", "type": "List[Any]"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 819, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "Message", "type": "Any"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 844, "col_offset": 41, "nodeName": "o", "type": "Any"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 846, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 847, "col_offset": 27, "nodeName": "obs_elabs_vecs", "type": "List[Any]"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 858, "col_offset": 21, "nodeName": "setup_args", "type": "Any"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 860, "col_offset": 19, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "k", "type": "str"}, {"lineNumber": 861, "col_offset": 19, "nodeName": "v", "type": "Union[str, Any, int, bool]"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 862, "col_offset": 26, "nodeName": "v", "type": "Union[bool, Any, int, str]"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "popt", "type": "Any"}, {"lineNumber": 868, "col_offset": 30, "nodeName": "init_mf", "type": "Any"}, {"lineNumber": 870, "col_offset": 30, "nodeName": "mf", "type": "Any"}, {"lineNumber": 877, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 878, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 880, "col_offset": 16, "nodeName": "mf", "type": "Any"}, {"lineNumber": 881, "col_offset": 16, "nodeName": "init_mf", "type": "Any"}, {"lineNumber": 884, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 886, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 886, "col_offset": 24, "nodeName": "agent", "type": "Any"}, {"lineNumber": 893, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 896, "col_offset": 16, "nodeName": "agent", "type": "Any"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "agent", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 179, "col_offset": 46, "nodeName": "obs", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 200, "col_offset": 53, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "obs", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 218, "col_offset": 56, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 219, "col_offset": 57, "nodeName": "MockDict", "type": "Type[parlai.agents.test_agents.dummy_torch_agent.MockDict]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "out_again", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "out_again", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "reset", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "update_history", "type": "Any"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "o", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 342, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 348, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 352, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 384, "col_offset": 38, "nodeName": "o", "type": "Any"}, {"lineNumber": 384, "col_offset": 43, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 389, "col_offset": 40, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 389, "col_offset": 48, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 402, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "batch", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 409, "col_offset": 38, "nodeName": "o", "type": "Any"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "new_vecs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 425, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 425, "col_offset": 34, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "Message", "type": "Any"}, {"lineNumber": 430, "col_offset": 64, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "Message", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "Message", "type": "Any"}, {"lineNumber": 437, "col_offset": 67, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "Message", "type": "Any"}, {"lineNumber": 440, "col_offset": 73, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 460, "col_offset": 30, "nodeName": "batch", "type": "Any"}, {"lineNumber": 461, "col_offset": 44, "nodeName": "o", "type": "Any"}, {"lineNumber": 461, "col_offset": 70, "nodeName": "o", "type": "Any"}, {"lineNumber": 461, "col_offset": 75, "nodeName": "obs_cands", "type": "List[Any]"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 464, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 464, "col_offset": 33, "nodeName": "cs", "type": "Any"}, {"lineNumber": 464, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 541, "col_offset": 25, "nodeName": "reply", "type": "Any"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "reply", "type": "Any"}, {"lineNumber": 548, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "reply", "type": "Any"}, {"lineNumber": 566, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "reply", "type": "Any"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "reply", "type": "Any"}, {"lineNumber": 585, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 586, "col_offset": 30, "nodeName": "prefix", "type": "str"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 588, "col_offset": 14, "nodeName": "text", "type": "str"}, {"lineNumber": 589, "col_offset": 58, "nodeName": "text", "type": "str"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 604, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 629, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 634, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 642, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 652, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 665, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 672, "col_offset": 55, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 676, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 680, "col_offset": 32, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 680, "col_offset": 48, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 689, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 690, "col_offset": 72, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 694, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 698, "col_offset": 32, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 698, "col_offset": 48, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 705, "col_offset": 14, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 710, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 715, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 717, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 731, "col_offset": 26, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 738, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 741, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 757, "col_offset": 26, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 768, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 774, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 779, "col_offset": 28, "nodeName": "obs", "type": "Dict[str, Union[str, List[str], bool]]"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 813, "col_offset": 12, "nodeName": "obs_labs_vecs", "type": "List[Any]"}, {"lineNumber": 813, "col_offset": 33, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 813, "col_offset": 49, "nodeName": "o", "type": "Any"}, {"lineNumber": 813, "col_offset": 52, "nodeName": "history", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 47, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 816, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "history", "type": "Any"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "obs_elabs_vecs", "type": "List[Any]"}, {"lineNumber": 845, "col_offset": 34, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 845, "col_offset": 50, "nodeName": "o", "type": "Any"}, {"lineNumber": 845, "col_offset": 53, "nodeName": "history", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 848, "col_offset": 47, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 848, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 858, "col_offset": 21, "nodeName": "tms", "type": "module"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 859, "col_offset": 32, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 860, "col_offset": 19, "nodeName": "parser", "type": "Any"}, {"lineNumber": 861, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 862, "col_offset": 16, "nodeName": "popt", "type": "Any"}, {"lineNumber": 863, "col_offset": 25, "nodeName": "TrainLoop", "type": "Any"}, {"lineNumber": 863, "col_offset": 39, "nodeName": "popt", "type": "Any"}, {"lineNumber": 878, "col_offset": 17, "nodeName": "tempdir", "type": "Callable[..., ContextManager[Any]]"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 880, "col_offset": 34, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 881, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 881, "col_offset": 39, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 882, "col_offset": 43, "nodeName": "f", "type": "file"}, {"lineNumber": 884, "col_offset": 22, "nodeName": "get_opt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 884, "col_offset": 30, "nodeName": "init_mf", "type": "Any"}, {"lineNumber": 884, "col_offset": 39, "nodeName": "mf", "type": "Any"}, {"lineNumber": 885, "col_offset": 16, "nodeName": "popt", "type": "Any"}, {"lineNumber": 885, "col_offset": 22, "nodeName": "tl", "type": "Any"}, {"lineNumber": 885, "col_offset": 27, "nodeName": "get_popt_and_tl", "type": "Callable[[Any], Any]"}, {"lineNumber": 885, "col_offset": 43, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 886, "col_offset": 24, "nodeName": "tl", "type": "Any"}, {"lineNumber": 888, "col_offset": 16, "nodeName": "init_model_file", "type": "Any"}, {"lineNumber": 888, "col_offset": 33, "nodeName": "is_finetune", "type": "Any"}, {"lineNumber": 888, "col_offset": 47, "nodeName": "_get_init_model", "type": "Any"}, {"lineNumber": 888, "col_offset": 69, "nodeName": "popt", "type": "Any"}, {"lineNumber": 889, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 889, "col_offset": 33, "nodeName": "init_model_file", "type": "Any"}, {"lineNumber": 889, "col_offset": 50, "nodeName": "init_mf", "type": "Any"}, {"lineNumber": 890, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 890, "col_offset": 32, "nodeName": "is_finetune", "type": "Any"}, {"lineNumber": 891, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 891, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 891, "col_offset": 30, "nodeName": "train", "type": "Any"}, {"lineNumber": 893, "col_offset": 22, "nodeName": "get_opt", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 893, "col_offset": 58, "nodeName": "mf", "type": "Any"}, {"lineNumber": 894, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 895, "col_offset": 16, "nodeName": "popt", "type": "Any"}, {"lineNumber": 895, "col_offset": 22, "nodeName": "tl", "type": "Any"}, {"lineNumber": 895, "col_offset": 27, "nodeName": "get_popt_and_tl", "type": "Callable[[Any], Any]"}, {"lineNumber": 895, "col_offset": 43, "nodeName": "opt", "type": "Dict[str, Union[str, Any, int, bool]]"}, {"lineNumber": 896, "col_offset": 24, "nodeName": "tl", "type": "Any"}, {"lineNumber": 897, "col_offset": 16, "nodeName": "init_model_file", "type": "Any"}, {"lineNumber": 897, "col_offset": 33, "nodeName": "is_finetune", "type": "Any"}, {"lineNumber": 897, "col_offset": 47, "nodeName": "_get_init_model", "type": "Any"}, {"lineNumber": 897, "col_offset": 69, "nodeName": "popt", "type": "Any"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 898, "col_offset": 33, "nodeName": "init_model_file", "type": "Any"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 899, "col_offset": 33, "nodeName": "is_finetune", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "_check_truncate", "type": "Any"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "inp", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 301, "col_offset": 46, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "history", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "obs_vecs", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "vectorize", "type": "Any"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "history", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 369, "col_offset": 62, "nodeName": "o", "type": "Any"}, {"lineNumber": 369, "col_offset": 67, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 385, "col_offset": 44, "nodeName": "labs", "type": "List[Any]"}, {"lineNumber": 385, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 386, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "vec", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "vec", "type": "Any"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "obs", "type": "Any"}, {"lineNumber": 395, "col_offset": 67, "nodeName": "obs", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "o", "type": "Any"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "labs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 415, "col_offset": 37, "nodeName": "obs", "type": "Any"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 424, "col_offset": 43, "nodeName": "obs_batch", "type": "List[Any]"}, {"lineNumber": 424, "col_offset": 56, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 425, "col_offset": 34, "nodeName": "batch", "type": "Any"}, {"lineNumber": 589, "col_offset": 43, "nodeName": "prefix", "type": "str"}, {"lineNumber": 589, "col_offset": 63, "nodeName": "idx", "type": "int"}, {"lineNumber": 811, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 813, "col_offset": 33, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 813, "col_offset": 52, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 816, "col_offset": 29, "nodeName": "reply", "type": "Any"}, {"lineNumber": 843, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 845, "col_offset": 34, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 845, "col_offset": 53, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 848, "col_offset": 29, "nodeName": "reply", "type": "Any"}, {"lineNumber": 862, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 863, "col_offset": 25, "nodeName": "tms", "type": "module"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 881, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 882, "col_offset": 21, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 882, "col_offset": 26, "nodeName": "init_mf", "type": "Any"}, {"lineNumber": 883, "col_offset": 20, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 888, "col_offset": 47, "nodeName": "agent", "type": "Any"}, {"lineNumber": 889, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 890, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 891, "col_offset": 30, "nodeName": "tl", "type": "Any"}, {"lineNumber": 893, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 893, "col_offset": 53, "nodeName": "mf", "type": "Any"}, {"lineNumber": 897, "col_offset": 47, "nodeName": "agent", "type": "Any"}, {"lineNumber": 898, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 898, "col_offset": 50, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 898, "col_offset": 73, "nodeName": "mf", "type": "Any"}, {"lineNumber": 899, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "lab_chc", "type": "str"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "agent", "type": "parlai.agents.test_agents.dummy_torch_agent.MockTorchAgent"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 369, "col_offset": 44, "nodeName": "o", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 384, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 385, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 410, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 415, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "batch", "type": "Any"}, {"lineNumber": 464, "col_offset": 42, "nodeName": "obs_cands", "type": "List[Any]"}, {"lineNumber": 589, "col_offset": 30, "nodeName": "text", "type": "str"}, {"lineNumber": 816, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 848, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 880, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 881, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 883, "col_offset": 20, "nodeName": "f", "type": "file"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 369, "col_offset": 46, "nodeName": "lab_key", "type": "str"}, {"lineNumber": 415, "col_offset": 49, "nodeName": "obs", "type": "Any"}, {"lineNumber": 464, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "idx", "type": "int"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}, {"lineNumber": 219, "col_offset": 36, "nodeName": "lab_vec", "type": "str"}]