[{"lineNumber": 34, "col_offset": 0, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "validate", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "log", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "train", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "datatype", "type": "str"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "cnt", "type": "int"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "metrics", "type": "str"}, {"lineNumber": 250, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "datatype", "type": "str"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "get", "type": "Callable"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "valid_world", "type": "None"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "report", "type": "Any"}, {"lineNumber": 105, "col_offset": 10, "nodeName": "metrics", "type": "str"}, {"lineNumber": 106, "col_offset": 7, "nodeName": "write_log", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "agent", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "world", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "validate_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "log_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "parleys", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "total_exs", "type": "int"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "total_episodes", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "total_epochs", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "max_exs", "type": "None"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "max_parleys", "type": "None"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "world_num_exs", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "best_valid", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "impatience", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "saved", "type": "bool"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "valid_world", "type": "None"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "log", "type": "str"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "world", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "world", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "train", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "train", "type": "argparse._ArgumentGroup"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "create_task", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "agent", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "parley", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "datatype", "type": "str"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "create_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "create_task", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "agent", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "Timer", "type": "Type[parlai.core.utils.Timer]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "world_num_exs", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "max_exs", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "max_parleys", "type": "float"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "agent", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "best_valid", "type": "int"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "best_valid", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "impatience", "type": "int"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "saved", "type": "bool"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "impatience", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "reset", "type": "Callable"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "total_exs", "type": "int"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "max_exs", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "total_epochs", "type": "int"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "agent", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "time_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "total_exs", "type": "int"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 49, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "log", "type": "str"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "reset", "type": "Callable"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "world", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "saved", "type": "bool"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "agent", "type": "Any"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "run_eval", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "agent", "type": "Any"}, {"lineNumber": 247, "col_offset": 29, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "datatype", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "cnt", "type": "int"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "max_exs", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "max_exs", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "datatype", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "metrics", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "f", "type": "file"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "build_dict", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "world", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "world_num_exs", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "ceil", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 150, "col_offset": 38, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "valid_world", "type": "None"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 152, "col_offset": 52, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "valid_report", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "save_agents", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "validate_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "impatience", "type": "int"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "parleys", "type": "int"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "report", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "report_opts", "type": "Dict[str, Any]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "compute_time_metrics", "type": "Callable[[Any, Any], Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "agent", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "time_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "reset_metrics", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "report", "type": "Any"}, {"lineNumber": 195, "col_offset": 45, "nodeName": "report_opts", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "reset_metrics", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 199, "col_offset": 30, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "log_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "parleys", "type": "int"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "save_agents", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "get", "type": "Callable"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "agent", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "TrainLoop", "type": "Type[TrainLoop]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "report", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "get", "type": "Callable"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "build_dict", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "math", "type": "module"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "max_exs", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "best_valid", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "best_valid", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "impatience", "type": "int"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 168, "col_offset": 65, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "floor", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "agent", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "agent", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "world", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 46, "nodeName": "total_exs", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "logs", "type": "List[str]"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "parley", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "total_epochs", "type": "int"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "stop_training", "type": "bool"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "stop_training", "type": "bool"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 242, "col_offset": 13, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "create_agent", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "setup_args", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "display", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 159, "col_offset": 76, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "best_valid", "type": "int"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "display", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "math", "type": "module"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 191, "col_offset": 65, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 191, "col_offset": 77, "nodeName": "report_opts", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 200, "col_offset": 46, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "floor", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "world", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "world", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "max_parleys", "type": "Optional[float]"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "log", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "log", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "validate", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "valid_world", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "world", "type": "Any"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "pop", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 221, "col_offset": 45, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "total_epochs", "type": "int"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 228, "col_offset": 74, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 231, "col_offset": 74, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 234, "col_offset": 52, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "train_report", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "max_parleys", "type": "Optional[float]"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "parleys", "type": "int"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "max_parleys", "type": "Optional[float]"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "log_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "validate_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "train_time", "type": "parlai.core.utils.Timer"}, {"lineNumber": 231, "col_offset": 51, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "self", "type": "TrainLoop"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "self", "type": "TrainLoop"}]