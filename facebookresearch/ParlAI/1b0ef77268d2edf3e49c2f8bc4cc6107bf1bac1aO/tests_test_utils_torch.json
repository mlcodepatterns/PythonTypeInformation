[{"lineNumber": 25, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "lol", "type": "List[List[int]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "items2", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "torch_keys", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "st", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "tup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "stup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "item", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "sitem", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "tup", "type": "Tuple[Any, Dict[nothing, nothing]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "items", "type": "List[Tuple[Any, Dict[nothing, nothing]]]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "item", "type": "Tuple[Any, Dict[nothing, nothing]]"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "items", "type": "List[Tuple[Any, Dict[nothing, nothing]]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "j", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "j", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tup", "type": "Tuple[Any, Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "chunks", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "j", "type": "Tuple[Any, Any]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "j", "type": "Tuple[Any, Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "chunk", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "chunks", "type": "List[Dict[str, Any]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "tup", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "chunks", "type": "List[Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "j", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "j", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "chunks", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "padded_tensor", "type": "Callable[..., Tuple[Any, List[int]]]"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "lol", "type": "List[List[int]]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "lens", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "_", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "padded_tensor", "type": "Callable[..., Tuple[Any, List[int]]]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "lol", "type": "List[List[int]]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "_", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "padded_tensor", "type": "Callable[..., Tuple[Any, List[int]]]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "lol", "type": "List[List[int]]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "IdentityLayer", "type": "Type[parlai.utils.torch.IdentityLayer]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "IdentityLayer", "type": "Type[parlai.utils.torch.IdentityLayer]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "t", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "split", "type": "Callable"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "split", "type": "Callable"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "t", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "t", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "split", "type": "Callable"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "tup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "t", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "split", "type": "Callable"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "t", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "split", "type": "Callable"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "item", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "sitem", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "d", "type": "Dict[nothing, nothing]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "split", "type": "Callable"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "tup", "type": "Tuple[Any, Dict[nothing, nothing]]"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "item", "type": "Tuple[Any, Dict[nothing, nothing]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "tup", "type": "Tuple[Any, Any]"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "tup", "type": "Tuple[Any, Any]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "chunks", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "j", "type": "Tuple[Any, Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "b", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "chunk", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "chunk", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "chunks", "type": "List[Dict[str, Any]]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "t", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "d", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "tup", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "tup", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "chunks", "type": "List[Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "j", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "left", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "split", "type": "Callable"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "neginf", "type": "Callable[[Any], float]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "neginf", "type": "Callable[[Any], float]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "float16", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "neginf", "type": "Callable[[Any], float]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "float16", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "argsort", "type": "Callable[..., List[Any]]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "items2", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "argsort", "type": "Callable[..., List[Any]]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "items2", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 72, "nodeName": "items2", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "trainable_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "emb", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "trainable_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "trainable_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "trainable_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "total_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "emb", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "total_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "total_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "total_parameters", "type": "Callable[[Any], int]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 83, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 93, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "randn", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "guess_split_size", "type": "Callable[..., int]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 18, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "stup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "sitem", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 140, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "left", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "left", "type": "Any"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "items", "type": "List[Tuple[Any, Dict[nothing, nothing]]]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "item", "type": "Tuple[Any, Dict[nothing, nothing]]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "b", "type": "Dict[nothing, nothing]"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "b", "type": "Dict[nothing, nothing]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "b", "type": "Dict[nothing, nothing]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "split", "type": "Callable"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "split", "type": "Callable"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "t", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "t", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 181, "col_offset": 36, "nodeName": "t", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "randn", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "j", "type": "Tuple[Any, Any]"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "randn", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 26, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "randn", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "randn", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "j", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "left", "type": "Any"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "IdentityLayer", "type": "Type[parlai.utils.torch.IdentityLayer]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "_mp_gpu", "type": "str"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "randn", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "schedule_work_items", "type": "Callable"}, {"lineNumber": 245, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 245, "col_offset": 68, "nodeName": "chunks", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 251, "col_offset": 56, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "layer_nos", "type": "Any"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "chunk_idx", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "t", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "t", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "t", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "t", "type": "Any"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "t", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "t", "type": "Any"}, {"lineNumber": 103, "col_offset": 61, "nodeName": "t", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "self", "type": "TestPipelineHelper"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "t", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "st", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "stup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "sitem", "type": "Tuple[Any, Dict[str, Any]]"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "a", "type": "Any"}, {"lineNumber": 170, "col_offset": 13, "nodeName": "self", "type": "TestPipelineHelper"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "self", "type": "TestPipelineHelper"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "j", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "_mp_gpu", "type": "str"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "PipelineHelper", "type": "Type[parlai.utils.torch.PipelineHelper]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "items", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "items2", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 63, "col_offset": 64, "nodeName": "emb", "type": "Any"}, {"lineNumber": 63, "col_offset": 69, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "ident", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "emb", "type": "Any"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "emb2", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "sd", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "right", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "_mp_gpu", "type": "str"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 248, "col_offset": 56, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 251, "col_offset": 56, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "work_items", "type": "List[parlai.utils.torch.`namedtuple-PipelineWorkItem-chunk_idx-layer_nos-next_device`]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "stup", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "_mp_gpu", "type": "str"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "argsort", "type": "Callable[..., List[Any]]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "torch_keys", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "torch_keys", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "layer", "type": "parlai.utils.torch.IdentityLayer"}]