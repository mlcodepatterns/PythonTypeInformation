[{"lineNumber": 16, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 520, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 520, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 662, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 277, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 350, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 529, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 589, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 603, "col_offset": 42, "nodeName": "GENERATOR_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 609, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 622, "col_offset": 42, "nodeName": "RANKER_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 643, "col_offset": 16, "nodeName": "test1", "type": "Any"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 643, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "test2", "type": "Any"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 646, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 663, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 243, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 268, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 310, "col_offset": 50, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 337, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 352, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 461, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 462, "col_offset": 29, "nodeName": "valid", "type": "None"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 464, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 466, "col_offset": 29, "nodeName": "test", "type": "None"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 467, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 468, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 493, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 514, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 515, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 516, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 529, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 530, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 534, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 646, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 649, "col_offset": 12, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 277, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 310, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 350, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "mf", "type": "str"}, {"lineNumber": 355, "col_offset": 67, "nodeName": "df", "type": "str"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 376, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 391, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 395, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 395, "col_offset": 46, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 407, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 529, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 531, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 532, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 534, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 535, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 538, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 540, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 545, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 558, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 563, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 568, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 569, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 577, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 578, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 582, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 651, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 285, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 301, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 384, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 404, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 532, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 532, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 535, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 535, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 554, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 573, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 651, "col_offset": 61, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 657, "col_offset": 62, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 551, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 552, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 570, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 571, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 551, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 552, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 570, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "os", "type": "module"}]