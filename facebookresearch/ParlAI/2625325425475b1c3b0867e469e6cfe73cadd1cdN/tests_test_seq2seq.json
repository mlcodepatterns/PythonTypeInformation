[{"lineNumber": 10, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 154, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "valid", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "test", "type": "None"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "valid", "type": "None"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "test", "type": "None"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "test", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "valid", "type": "None"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "test", "type": "None"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "valid", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "LR", "type": "int"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "NUM_EPOCHS", "type": "int"}]