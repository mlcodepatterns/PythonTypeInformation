[{"lineNumber": 14, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "acceptability_checker", "type": "parlai.crowdsourcing.utils.acceptability.AcceptabilityChecker"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "test_case", "type": "Dict[str, Union[str, bool, List[str]]]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "test_cases", "type": "List[Dict[str, Union[str, bool, List[str]]]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "test_case", "type": "Dict[str, Union[Type[ValueError], List[str], bool]]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "test_cases_with_errors", "type": "List[Dict[str, Union[Type[ValueError], List[str], bool]]]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "AcceptabilityChecker", "type": "Type[parlai.crowdsourcing.utils.acceptability.AcceptabilityChecker]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "check_messages", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "actual_violations", "type": "str"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "acceptability_checker", "type": "parlai.crowdsourcing.utils.acceptability.AcceptabilityChecker"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "possible_violation_types", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "TestAcceptabilityChecker"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "test_case", "type": "Dict[str, Union[str, bool, List[str]]]"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "check_messages", "type": "Callable[..., str]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "test_case", "type": "Dict[str, Union[str, bool, List[str]]]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "test_case", "type": "Dict[str, Union[str, bool, List[str]]]"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "acceptability_checker", "type": "parlai.crowdsourcing.utils.acceptability.AcceptabilityChecker"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "self", "type": "TestAcceptabilityChecker"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "test_case", "type": "Dict[str, Union[Type[ValueError], List[str], bool]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "acceptability_checker", "type": "parlai.crowdsourcing.utils.acceptability.AcceptabilityChecker"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "test_case", "type": "Dict[str, Union[Type[ValueError], List[str], bool]]"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "test_case", "type": "Dict[str, Union[Type[ValueError], List[str], bool]]"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "test_case", "type": "Dict[str, Union[Type[ValueError], List[str], bool]]"}]