[{"lineNumber": 32, "col_offset": 0, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 230, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool]], Dict[str, Union[str, Any, bool]], Dict[str, Union[float, Any, bool]], Dict[str, Union[bool, Any]]]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str, bool]], Dict[str, Union[str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, Any, bool, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "task1", "type": "str"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "task2", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]]]"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "task1", "type": "str"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "task2", "type": "str"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "task1", "type": "str"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_pyt_train", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_pyt_train", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_pyt_train", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, str]], Dict[str, Union[int, str, bool]], Dict[str, Union[float, str, bool]]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "test", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_pyt_batchsort_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 206, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 58, "nodeName": "task1", "type": "str"}, {"lineNumber": 206, "col_offset": 65, "nodeName": "task2", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 226, "col_offset": 61, "nodeName": "dataset1", "type": "str"}, {"lineNumber": 226, "col_offset": 71, "nodeName": "dataset2", "type": "str"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "run_display_test", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "defaults", "type": "Union[Dict[str, Union[int, str]], Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]]]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "defaults", "type": "Union[Dict[str, Union[str, Any, bool]], Dict[str, Union[bool, Any]], Dict[str, Union[int, Any, bool]], Dict[str, Union[float, Any, bool]]]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[bool, Any, int, str]], Dict[str, Union[float, Any, bool, int, str]]]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "solved_task", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "valid", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "test", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "act", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "f", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "parser_defaults", "type": "Dict[str, Union[int, str, float, bool]]"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 212, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "eps_and_exs_counts", "type": "List[Tuple[int, int]]"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "datatype", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "preprocess", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "defaults", "type": "Union[Dict[str, Union[float, str]], Dict[str, str], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "create_task_agent_from_taskname", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "opt", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "teacher", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "keys", "type": "Set[Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "display_setup_args", "type": "Callable"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "self", "type": "TestPytorchDataTeacher"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "str_output", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "opt", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 157, "col_offset": 63, "nodeName": "regular_teacher_act", "type": "Any"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "defaults", "type": "Union[Dict[str, str], Dict[str, Union[float, str]], Dict[str, Union[bool, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "parser", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "pytorch_teacher_act", "type": "Any"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 153, "col_offset": 76, "nodeName": "key", "type": "Any"}, {"lineNumber": 157, "col_offset": 57, "nodeName": "key", "type": "Any"}, {"lineNumber": 157, "col_offset": 83, "nodeName": "key", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "ep_and_ex_counts", "type": "Tuple[int, int]"}]