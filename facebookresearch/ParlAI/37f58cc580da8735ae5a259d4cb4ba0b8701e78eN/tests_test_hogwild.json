[{"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "NUM_THREADS_CHOICES", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "BATCHSIZE_CHOICES", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "nt", "type": "int"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "NUM_THREADS_CHOICES", "type": "List[int]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "nt", "type": "int"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "NUM_THREADS_CHOICES", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "bs", "type": "int"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "BATCHSIZE_CHOICES", "type": "List[int]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "bs", "type": "int"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "BATCHSIZE_CHOICES", "type": "List[int]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "nt", "type": "int"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "bs", "type": "int"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "nt", "type": "int"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "bs", "type": "int"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 60, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 56, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "valid", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "test", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "eval_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 58, "col_offset": 63, "nodeName": "opt", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "NUM_EXS", "type": "int"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "valid", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "stdout", "type": "Any"}]