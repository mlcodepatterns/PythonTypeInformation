[{"lineNumber": 16, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 88, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "str_output", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "list_output", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "list_output", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "display_output", "type": "Type[Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "opt", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "data", "type": "List[nothing]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "train", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "str_output", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "str_output", "type": "str"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "str_output", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "str_output", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "str_output", "type": "str"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "str_output", "type": "str"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "parser", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "str_output", "type": "str"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "TrainLoop", "type": "Type[parlai.scripts.train_model.TrainLoop]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "ast", "type": "module"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "TestTrainModel"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "score", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "score", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "line", "type": "str"}]