[{"lineNumber": 261, "col_offset": 24, "nodeName": "AbstractOneTurnCrowdsourcingTest", "type": "Type[parlai.crowdsourcing.utils.tests.AbstractOneTurnCrowdsourcingTest]"}, {"lineNumber": 282, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 285, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "overrides", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "expected_state", "type": "Dict[str, Union[Dict[str, List[Dict[str, str]]], List[Union[Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[str], str, bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]], Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[int], List[str], bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]]]]]]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "_set_up_config", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "_set_up_server", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "DESIRED_INPUTS", "type": "List[Union[Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[str], str, bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]], Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[int], List[str], bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]]]]"}, {"lineNumber": 278, "col_offset": 67, "nodeName": "DESIRED_OUTPUTS", "type": "Dict[str, List[Dict[str, str]]]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "_test_agent_state", "type": "Callable[[Dict[str, Any]], None]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 271, "col_offset": 31, "nodeName": "BLUEPRINT_TYPE", "type": "str"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "TASK_DIRECTORY", "type": "str"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "overrides", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "self", "type": "TestAcuteEval"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "expected_state", "type": "Dict[str, Union[Dict[str, List[Dict[str, str]]], List[Union[Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[str], str, bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]], Dict[str, Union[int, Dict[str, Union[List[Dict[str, Optional[Union[List[Dict[str, str]], str, List[str]]]]], List[int], List[str], bool]], Dict[str, Union[Dict[str, Union[List[Dict[str, str]], str]], bool, str]]]]]]]]"}]