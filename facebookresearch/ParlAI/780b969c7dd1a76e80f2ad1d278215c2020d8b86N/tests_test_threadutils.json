[{"lineNumber": 15, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 116, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "keyset1", "type": "Set[nothing]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "keyset2", "type": "Set[nothing]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "threads", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "t", "type": "multiprocessing.context.Process"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "threads", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "t", "type": "multiprocessing.context.Process"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "threads", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "d", "type": "Dict[Union[int, str], Union[float, bool, int]]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "k", "type": "Union[int, str]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "v", "type": "Union[float, bool, int]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "keyset1", "type": "Set[nothing]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "keyset2", "type": "Set[nothing]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[int, str], Union[float, bool, int]]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "v", "type": "Union[bool, float, int]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "keyset1", "type": "Set[nothing]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "join", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "SharedTable", "type": "Type[parlai.core.thread_utils.SharedTable]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "sleep", "type": "Callable[[Union[float, int]], None]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "threads", "type": "List[multiprocessing.context.Process]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "Process", "type": "Type[multiprocessing.context.Process]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "t", "type": "multiprocessing.context.Process"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "t", "type": "multiprocessing.context.Process"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "k", "type": "Union[int, str]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "get_lock", "type": "Callable[[], multiprocessing.synchronize.Lock]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "time", "type": "module"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "inc", "type": "Callable[[], Any]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "st", "type": "parlai.core.thread_utils.SharedTable"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "randint", "type": "Callable[[int, int], int]"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "random", "type": "module"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "torch", "type": "Any"}]