[{"lineNumber": 24, "col_offset": 0, "nodeName": "build_cands", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "agent", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "world", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "log_timer", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "cands", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "fw", "type": "file"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "opt", "type": "Any"}, {"lineNumber": 91, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "RepeatLabelAgent", "type": "Type[parlai.agents.repeat_label.repeat_label.RepeatLabelAgent]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "opt", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "create_task", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "agent", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "TimeLogger", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "acts", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "acts", "type": "Any"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "build_cands", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "opt", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "opt", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 42, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "parley", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "acts", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "fw", "type": "file"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "cands", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "fw", "type": "file"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "random", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "mkstemp", "type": "Callable"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "opt", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "world", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "world", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "get_acts", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "acts", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "acts", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "time", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "opt", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "_log", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "total_parleys", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "world", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 66, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "world", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "candidate", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "log_timer", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "log_timer", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "world", "type": "Any"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "cands", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "world", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "opt", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "opt", "type": "Any"}]