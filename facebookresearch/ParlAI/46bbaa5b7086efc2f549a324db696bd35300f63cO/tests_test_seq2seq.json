[{"lineNumber": 10, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 182, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "train_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "download_unittest_models", "type": "Callable[[], None]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "eval_model", "type": "Callable[[Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 57, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 56, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 55, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 162, "col_offset": 70, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 166, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 174, "col_offset": 68, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestBackwardsCompatibility"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 178, "col_offset": 56, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "valid", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "test", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 162, "col_offset": 51, "nodeName": "valid", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "valid", "type": "Any"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 174, "col_offset": 50, "nodeName": "test", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "test", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}]