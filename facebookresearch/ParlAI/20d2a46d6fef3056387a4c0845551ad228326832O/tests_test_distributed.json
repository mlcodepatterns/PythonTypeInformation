[{"lineNumber": 14, "col_offset": 0, "nodeName": "_forced_parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "popt", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "popt", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 93, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "v", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "opt", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "popt", "type": "Any"}, {"lineNumber": 34, "col_offset": 47, "nodeName": "output", "type": "Any"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "valid", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "test", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "destroy_process_group", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "_distributed_train_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "capture_output", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "popt", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "parser", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "self", "type": "TestDistributed"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestDistributed"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 80, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestDistributed"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestDistributed"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 77, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestDistributed"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "opt", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "opt", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "setup_args", "type": "Callable[[], parlai.core.params.ParlaiParser]"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "_forced_parse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "opt", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "build_dict", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "popt", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "launch_and_train", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "popt", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 66, "nodeName": "valid", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "valid", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "test", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "opt", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "opt", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "mp_train", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "build_dict", "type": "module"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "build_dict", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "mp_train", "type": "module"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "os", "type": "module"}]