[{"lineNumber": 32, "col_offset": 0, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 110, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, str, int]], Dict[str, Union[str, int]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, int, str]], Dict[str, Union[str, int]], Dict[str, Union[float, int, str]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[bool, int, List[int], str]], Dict[str, Union[str, List[int], int]], Dict[str, Union[float, int, List[int], str]]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[str, int]], Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "IMAGE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 89, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[bool, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "MULTITASK_ARGS", "type": "Dict[str, Union[str, List[int], int]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "args", "type": "Union[Dict[str, Union[int, str, List[int]]], Dict[str, Union[float, int, List[int], str]], Dict[str, Union[bool, int, List[int], str]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "m", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "m", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[str, int]], Dict[str, Union[float, int, str]], Dict[str, Union[bool, str, int]]]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[bool, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "BASE_ARGS", "type": "Dict[str, Union[bool, str, int, float]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "args", "type": "Union[Dict[str, Union[int, str, List[int]]], Dict[str, Union[float, int, List[int], str]], Dict[str, Union[bool, int, List[int], str]]]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "IMAGE_ARGS", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "TEXT_ARGS", "type": "Dict[str, Union[int, str]]"}]