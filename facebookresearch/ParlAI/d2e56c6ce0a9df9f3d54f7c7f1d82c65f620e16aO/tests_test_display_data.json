[{"lineNumber": 13, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "str_output", "type": "str"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "display_output", "type": "Type[Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "old_out", "type": "TextIO"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "data", "type": "List[nothing]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "display_data", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestDisplayData"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestDisplayData"}, {"lineNumber": 47, "col_offset": 46, "nodeName": "str_output", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestDisplayData"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "str_output", "type": "str"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "self", "type": "TestDisplayData"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "str_output", "type": "str"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "Any"}]