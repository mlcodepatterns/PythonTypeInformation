[{"lineNumber": 11, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "a", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "task_dir", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "b", "type": "Set[str]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "a", "type": "Set[str]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "b", "type": "Set[str]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "not_in_b", "type": "Set[str]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "not_in_a", "type": "Set[str]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "t", "type": "str"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "a", "type": "Set[str]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "b", "type": "Set[str]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "b", "type": "Set[str]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "a", "type": "Set[str]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "error_msg", "type": "str"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "t", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 19, "col_offset": 50, "nodeName": "task_list", "type": "List[Dict[str, Union[str, List[str]]]]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "t", "type": "str"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "not_in_b", "type": "Set[str]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "not_in_a", "type": "Set[str]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "task_dir", "type": "str"}, {"lineNumber": 28, "col_offset": 123, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 127, "nodeName": "not_in_b", "type": "Set[str]"}, {"lineNumber": 30, "col_offset": 133, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 137, "nodeName": "not_in_a", "type": "Set[str]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 63, "nodeName": "t", "type": "str"}, {"lineNumber": 22, "col_offset": 69, "nodeName": "t", "type": "str"}, {"lineNumber": 22, "col_offset": 92, "nodeName": "t", "type": "str"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "t", "type": "Dict[str, Union[str, List[str]]]"}]