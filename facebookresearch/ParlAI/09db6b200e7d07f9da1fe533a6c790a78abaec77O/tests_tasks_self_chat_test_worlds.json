[{"lineNumber": 15, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "opt", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "agent1", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "agent2", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "RepeatLabelAgent", "type": "Type[parlai.agents.repeat_label.repeat_label.RepeatLabelAgent]"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "opt", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "clone", "type": "Callable"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "get_contexts", "type": "unittest.mock.MagicMock"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "return_value", "type": "List[nothing]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "get_openers", "type": "unittest.mock.MagicMock"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "seed_utts", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "acts", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assert_seed_utts_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_seed_utts_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "get_contexts", "type": "unittest.mock.MagicMock"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "return_value", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "contexts", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "get_openers", "type": "unittest.mock.MagicMock"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "return_value", "type": "List[nothing]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "acts", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_contexts_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_contexts_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "parser", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "parser", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "agent1", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 29, "col_offset": 44, "nodeName": "agent1", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 29, "col_offset": 52, "nodeName": "agent2", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "get_contexts", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "get_openers", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "parley", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "get_acts", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "seed_utts", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "get_contexts", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "get_openers", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "parley", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "get_acts", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "world", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "acts", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "world", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "a", "type": "Any"}, {"lineNumber": 58, "col_offset": 45, "nodeName": "acts", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "contexts", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "self", "type": "TestSelfChat"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "utterances", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "seed_utts", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 59, "col_offset": 68, "nodeName": "contexts", "type": "List[str]"}]