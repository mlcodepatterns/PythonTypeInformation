[{"lineNumber": 19, "col_offset": 0, "nodeName": "setup_args", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "report", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "verify", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "report", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "agent", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "world", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 87, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "parser", "type": "None"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "report", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "log", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "log", "type": "Any"}, {"lineNumber": 35, "col_offset": 66, "nodeName": "log", "type": "Dict[str, int]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "text", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "RepeatLabelAgent", "type": "Type[parlai.agents.repeat_label.repeat_label.RepeatLabelAgent]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "create_task", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "agent", "type": "parlai.agents.repeat_label.repeat_label.RepeatLabelAgent"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 44, "col_offset": 7, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "log_every_n_secs", "type": "float"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "TimeLogger", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "act", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "report", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "world", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "setup_args", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "verify", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 23, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "world", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "report", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "epoch_done", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "parley", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "acts", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "act", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "log_every_n_secs", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "world", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "world", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "world", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "world", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "act", "type": "Any"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "act", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "act", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "time", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "act", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "report", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "world", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "log_time", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "num_episodes", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "world", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "world", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "counts", "type": "Dict[str, int]"}]