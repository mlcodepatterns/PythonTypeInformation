[{"lineNumber": 18, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 717, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 858, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 717, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 858, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 888, "col_offset": 4, "nodeName": "text_args", "type": "Dict[str, str]"}, {"lineNumber": 956, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 933, "col_offset": 8, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 309, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 382, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "mf", "type": "str"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "df", "type": "str"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 573, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 631, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "create_agent", "type": "Callable[..., Any]"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 697, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 726, "col_offset": 40, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "model_file", "type": "str"}, {"lineNumber": 784, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 798, "col_offset": 42, "nodeName": "GENERATOR_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 804, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "_test_learning_rate_resuming", "type": "Callable[[Any], Any]"}, {"lineNumber": 817, "col_offset": 42, "nodeName": "RANKER_ARGS", "type": "Dict[Any, Any]"}, {"lineNumber": 820, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 838, "col_offset": 16, "nodeName": "test1", "type": "Any"}, {"lineNumber": 838, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 838, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 841, "col_offset": 8, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 841, "col_offset": 16, "nodeName": "test2", "type": "Any"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 841, "col_offset": 50, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 918, "col_offset": 15, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 918, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 918, "col_offset": 48, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 933, "col_offset": 15, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 934, "col_offset": 8, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 934, "col_offset": 15, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 934, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 934, "col_offset": 48, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 949, "col_offset": 15, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 950, "col_offset": 8, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 950, "col_offset": 15, "nodeName": "test", "type": "Dict[str, Any]"}, {"lineNumber": 950, "col_offset": 22, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 950, "col_offset": 48, "nodeName": "args", "type": "parlai.core.opt.Opt"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 255, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 310, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 311, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 330, "col_offset": 48, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 342, "col_offset": 50, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 356, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 362, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "valid_beam_block", "type": "None"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "test_beam_block", "type": "None"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "valid_beam_block2", "type": "None"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "test_beam_block2", "type": "None"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 384, "col_offset": 30, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 389, "col_offset": 31, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "assertGreaterEqual", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 510, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 511, "col_offset": 29, "nodeName": "valid", "type": "None"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 513, "col_offset": 32, "nodeName": "valid", "type": "None"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 514, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 515, "col_offset": 29, "nodeName": "test", "type": "None"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 516, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "TestTransformerGenerator"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "test", "type": "None"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 542, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 563, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 564, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 566, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 573, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 592, "col_offset": 29, "nodeName": "valid", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 593, "col_offset": 32, "nodeName": "valid", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 594, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 595, "col_offset": 32, "nodeName": "test", "type": "Any"}, {"lineNumber": 601, "col_offset": 19, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 602, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 678, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 697, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 713, "col_offset": 15, "nodeName": "valid", "type": "Any"}, {"lineNumber": 714, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "tempdir", "type": "Callable[..., contextlib._GeneratorContextManager[Any]]"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 727, "col_offset": 38, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 728, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 731, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 838, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 841, "col_offset": 24, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 849, "col_offset": 8, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 917, "col_offset": 22, "nodeName": "base_args", "type": "Any"}, {"lineNumber": 917, "col_offset": 40, "nodeName": "text_args", "type": "Any"}, {"lineNumber": 918, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 920, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 933, "col_offset": 22, "nodeName": "base_args", "type": "Any"}, {"lineNumber": 933, "col_offset": 40, "nodeName": "image_args", "type": "Any"}, {"lineNumber": 934, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 949, "col_offset": 22, "nodeName": "base_args", "type": "Any"}, {"lineNumber": 949, "col_offset": 40, "nodeName": "multitask_args", "type": "Any"}, {"lineNumber": 950, "col_offset": 22, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 952, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "self", "type": "TestTransformerRanker"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 330, "col_offset": 48, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 342, "col_offset": 50, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 387, "col_offset": 53, "nodeName": "mf", "type": "str"}, {"lineNumber": 387, "col_offset": 67, "nodeName": "df", "type": "str"}, {"lineNumber": 389, "col_offset": 31, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 405, "col_offset": 36, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 411, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "valid", "type": "None"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 427, "col_offset": 46, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 429, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 429, "col_offset": 50, "nodeName": "noblock_valid", "type": "Any"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 439, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 442, "col_offset": 36, "nodeName": "valid", "type": "None"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 33, "nodeName": "valid", "type": "None"}, {"lineNumber": 623, "col_offset": 19, "nodeName": "valid", "type": "Any"}, {"lineNumber": 630, "col_offset": 19, "nodeName": "valid", "type": "Any"}, {"lineNumber": 726, "col_offset": 13, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 728, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 729, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 731, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 736, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 737, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 742, "col_offset": 16, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 742, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 746, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 747, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 754, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 755, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 756, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 759, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "valid3", "type": "Any"}, {"lineNumber": 760, "col_offset": 30, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 764, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 773, "col_offset": 16, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "self", "type": "TestLearningRateScheduler"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "valid4", "type": "Any"}, {"lineNumber": 846, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 852, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 917, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 917, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 921, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 933, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 933, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 949, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 949, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 316, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "mf", "type": "str"}, {"lineNumber": 346, "col_offset": 30, "nodeName": "df", "type": "str"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 402, "col_offset": 22, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 409, "col_offset": 52, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 416, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 424, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 436, "col_offset": 51, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 727, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 729, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 729, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 732, "col_offset": 32, "nodeName": "model_file", "type": "str"}, {"lineNumber": 732, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 751, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 768, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 846, "col_offset": 61, "nodeName": "valid1", "type": "Any"}, {"lineNumber": 852, "col_offset": 62, "nodeName": "valid2", "type": "Any"}, {"lineNumber": 748, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 748, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 749, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 749, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 765, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 766, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 766, "col_offset": 44, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 921, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 953, "col_offset": 12, "nodeName": "valid", "type": "Dict[str, Any]"}, {"lineNumber": 748, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 749, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 766, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 748, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 749, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 766, "col_offset": 31, "nodeName": "os", "type": "module"}]