[{"lineNumber": 16, "col_offset": 22, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "ALPHA_NUM", "type": "str"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "NON_WS", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "annotators", "type": "Set[nothing]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "data", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "compile", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "m", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "span", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "start_ws", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "Tokens", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "data", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "annotators", "type": "Set[nothing]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "regex", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "m", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "group", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "span", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "span", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "end_ws", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "end_ws", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "ALPHA_NUM", "type": "str"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "NON_WS", "type": "str"}, {"lineNumber": 27, "col_offset": 53, "nodeName": "MULTILINE", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "logger", "type": "parlai.utils.logging.ParlaiLogger"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "finditer", "type": "Any"}, {"lineNumber": 38, "col_offset": 52, "nodeName": "text", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "span", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "data", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "token", "type": "Any"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "span", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "IGNORECASE", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "UNICODE", "type": "Any"}, {"lineNumber": 27, "col_offset": 53, "nodeName": "regex", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "_regexp", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "span", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "regex", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "regex", "type": "Any"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "start_ws", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "end_ws", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "self", "type": "SimpleTokenizer"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "matches", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "i", "type": "int"}]