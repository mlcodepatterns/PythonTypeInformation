[{"lineNumber": 23, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 375, "col_offset": 23, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "ParlAILRScheduler", "type": "Type[ParlAILRScheduler]"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "updates_so_far", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "end", "type": "float"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "progress", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "lr_mult", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "lr_mult", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_number_training_updates", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "patience", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "decay", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 308, "col_offset": 15, "nodeName": "scheduler", "type": "Union[InvSqrtLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, LinearLRScheduler, CosineLRScheduler]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "_number_training_updates", "type": "Any"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "decay_factor", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 470, "col_offset": 28, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "lr_mult", "type": "Union[float, Any]"}, {"lineNumber": 512, "col_offset": 15, "nodeName": "lr_mult", "type": "Union[Any, float]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "max", "type": "Callable"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "None"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "min", "type": "Callable"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "start", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "get", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "add_argument_group", "type": "Callable[..., argparse._ArgumentGroup]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "get", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "states", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "hard_reset", "type": "bool"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "hard_reset", "type": "Union[bool, Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "_init_warmup_scheduler", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "states", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 355, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "metrics_dict", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 383, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 383, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 384, "col_offset": 51, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 384, "col_offset": 62, "nodeName": "patience", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 419, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 419, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "invsqrt_lr_decay_gamma", "type": "Union[int, Any]"}, {"lineNumber": 428, "col_offset": 42, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 431, "col_offset": 53, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 431, "col_offset": 64, "nodeName": "_invsqrt_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "decay_factor", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 467, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 467, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 468, "col_offset": 11, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "CosineAnnealingLR", "type": "Any"}, {"lineNumber": 471, "col_offset": 62, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 471, "col_offset": 73, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 474, "col_offset": 11, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 474, "col_offset": 30, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 502, "col_offset": 37, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 502, "col_offset": 53, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 503, "col_offset": 11, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 506, "col_offset": 53, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 506, "col_offset": 64, "nodeName": "_linear_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 18, "nodeName": "max", "type": "Callable"}, {"lineNumber": 515, "col_offset": 11, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "states", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "LambdaLR", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "_warmup_lr", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "_is_lr_warming_up", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 72, "col_offset": 67, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "_number_training_updates", "type": "int"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "step", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "progress", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "states", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "states", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 177, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "lr_group", "type": "argparse._ArgumentGroup"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "opt", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "opt", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "opt", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "opt", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "opt", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "decay", "type": "Any"}, {"lineNumber": 288, "col_offset": 39, "nodeName": "states", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "load_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "states", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "scheduler", "type": "Union[InvSqrtLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, LinearLRScheduler, CosineLRScheduler]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 321, "col_offset": 30, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "train_step", "type": "Callable[[Any], Any]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 357, "col_offset": 37, "nodeName": "decay", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "patience", "type": "Any"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "self", "type": "ReduceOnPlateauLRScheduler"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 372, "col_offset": 28, "nodeName": "metrics_dict", "type": "Any"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 384, "col_offset": 78, "nodeName": "decay", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 428, "col_offset": 42, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "max", "type": "Callable"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "invsqrt_lr_decay_gamma", "type": "Union[Any, int]"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 431, "col_offset": 64, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 434, "col_offset": 35, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 437, "col_offset": 37, "nodeName": "scheduler_steps", "type": "Any"}, {"lineNumber": 437, "col_offset": 56, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 438, "col_offset": 18, "nodeName": "StopTrainException", "type": "Type[parlai.core.exceptions.StopTrainException]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 474, "col_offset": 30, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 475, "col_offset": 18, "nodeName": "StopTrainException", "type": "Type[parlai.core.exceptions.StopTrainException]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 506, "col_offset": 64, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 515, "col_offset": 30, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 516, "col_offset": 18, "nodeName": "StopTrainException", "type": "Type[parlai.core.exceptions.StopTrainException]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "updates_so_far", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "warmup_updates", "type": "Union[int, Any]"}, {"lineNumber": 61, "col_offset": 53, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "states", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "end", "type": "float"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "start", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "states", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "states", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "states", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "step", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "_number_training_updates", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "opt", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "warn_once", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 290, "col_offset": 51, "nodeName": "opt", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "scheduler", "type": "Union[InvSqrtLRScheduler, FixedLRScheduler, ReduceOnPlateauLRScheduler, LinearLRScheduler, CosineLRScheduler]"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "ReduceOnPlateauLRScheduler"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "FixedLRScheduler"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 434, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 43, "nodeName": "max", "type": "Callable"}, {"lineNumber": 437, "col_offset": 11, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 437, "col_offset": 56, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 471, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "CosineLRScheduler"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "optim", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "optim", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "warmup_scheduler", "type": "Any"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "states", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "s", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "ReduceOnPlateauLRScheduler", "type": "Type[ReduceOnPlateauLRScheduler]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 239, "col_offset": 39, "nodeName": "patience", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "decay", "type": "Any"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 239, "col_offset": 72, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "states", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 434, "col_offset": 50, "nodeName": "invsqrt_lr_decay_gamma", "type": "Union[Any, int]"}, {"lineNumber": 434, "col_offset": 80, "nodeName": "step", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "ParlAILRScheduler"}, {"lineNumber": 237, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "FixedLRScheduler", "type": "Type[FixedLRScheduler]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "patience", "type": "Any"}, {"lineNumber": 243, "col_offset": 49, "nodeName": "decay", "type": "Any"}, {"lineNumber": 243, "col_offset": 56, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 243, "col_offset": 72, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "opt", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 434, "col_offset": 50, "nodeName": "self", "type": "InvSqrtLRScheduler"}, {"lineNumber": 511, "col_offset": 41, "nodeName": "step", "type": "Any"}, {"lineNumber": 511, "col_offset": 48, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 241, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "InvSqrtLRScheduler", "type": "Type[InvSqrtLRScheduler]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "invsqrt_lr_decay_gamma", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "states", "type": "Any"}, {"lineNumber": 511, "col_offset": 48, "nodeName": "self", "type": "LinearLRScheduler"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 257, "col_offset": 24, "nodeName": "CosineLRScheduler", "type": "Type[CosineLRScheduler]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "get", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "LinearLRScheduler", "type": "Type[LinearLRScheduler]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "hard_reset", "type": "Any"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "patience", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "decay", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "warmup_updates", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "warmup_rate", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "max_lr_steps", "type": "Any"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "opt", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "opt", "type": "Any"}]