[{"lineNumber": 23, "col_offset": 0, "nodeName": "_mock_train", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "SKIP_HOGWILD", "type": "Any"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "LR", "type": "int"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "outdir", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 163, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "setup_args", "type": "Callable"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "set_defaults", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "outdir", "type": "str"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "valid", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "test", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "parser", "type": "Any"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "args", "type": "Dict[str, Union[str, int, bool, float]]"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "redirect_stdout", "type": "Type[contextlib.redirect_stdout]"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "TrainLoop", "type": "Type[parlai.scripts.train_model.TrainLoop]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "valid", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "train", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "_mock_train", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "_mock_train", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "_mock_train", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "_mock_train", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "outdir", "type": "str"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "contextlib", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "tl", "type": "parlai.scripts.train_model.TrainLoop"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "stdout", "type": "str"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 60, "nodeName": "stdout", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "stdout", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 62, "nodeName": "stdout", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "stdout", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 123, "col_offset": 60, "nodeName": "stdout", "type": "str"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestSeq2Seq"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 58, "nodeName": "stdout", "type": "str"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "LR", "type": "int"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "BATCH_SIZE", "type": "int"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestHogwildSeq2seq"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 60, "nodeName": "stdout", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestHogwildSeq2seq"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "stdout", "type": "str"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "parser", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "valid", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "valid", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "test", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "NUM_EPOCHS", "type": "int"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "valid", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "valid", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "test", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "os", "type": "module"}]