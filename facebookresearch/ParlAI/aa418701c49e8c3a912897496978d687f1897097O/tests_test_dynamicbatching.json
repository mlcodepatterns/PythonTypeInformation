[{"lineNumber": 14, "col_offset": 0, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 135, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 39, "col_offset": 62, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "opt", "type": "parlai.core.opt.Opt"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "num_goal", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_test_correct_processed", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 88, "col_offset": 63, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "valid_report", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "test_report", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "train_model", "type": "Callable[[parlai.core.opt.Opt], Tuple[Dict[str, Any], Dict[str, Any]]]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "eval_model", "type": "Callable[..., Tuple[None, None]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 45, "col_offset": 38, "nodeName": "Opt", "type": "Type[parlai.core.opt.Opt]"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "TestDynamicBatching"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "self", "type": "TestBatchSort"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "testing_utils", "type": "module"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "_TASK", "type": "str"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "NUM_TEST", "type": "int"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "EXAMPLE_SIZE", "type": "int"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "Any", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "_DEFAULT_OPTIONS", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 88, "col_offset": 68, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 73, "nodeName": "Any", "type": "Any"}]