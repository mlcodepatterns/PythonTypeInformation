[{"lineNumber": 10, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "null_token", "type": "str"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "NULL_IDX", "type": "int"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "start_token", "type": "str"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "end_token", "type": "str"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 226, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "vec_observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "true_i", "type": "List[int]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "vec_observations", "type": "List[Union[Dict[nothing, nothing], Dict[str, Union[List[str], str]]]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "batch_reply", "type": "List[Dict[str, str]]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "predictions", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "output", "type": "parlai.core.torch_agent.`namedtuple-Output-text-text_candidates`"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "expected_unmapped", "type": "List[Dict[str, str]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "null_token", "type": "str"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "NULL_IDX", "type": "int"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[[Any], None]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "observation", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[[Any], None]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "batchify", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "vec_observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "batchify", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "vec_observations", "type": "List[Union[Dict[nothing, nothing], Dict[str, Union[List[str], str]]]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "Output", "type": "Type[parlai.core.torch_agent.`namedtuple-Output-text-text_candidates`]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "predictions", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 195, "col_offset": 17, "nodeName": "ParlaiParser", "type": "Type[parlai.core.params.ParlaiParser]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "add_cmdline_args", "type": "Callable[[Any], None]"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "parse_args", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "MockDict", "type": "Type[MockDict]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "opt", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "shared", "type": "Dict[str, Union[MockDict, Dict[str, Any]]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "maintain_dialog_history", "type": "Callable[..., collections.deque[Any]]"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str, collections.deque[Any]]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str, collections.deque[Any]]]"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "maintain_dialog_history", "type": "Callable[..., collections.deque[Any]]"}, {"lineNumber": 220, "col_offset": 64, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str, collections.deque[Any]]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "start_token", "type": "str"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "obs", "type": "Union[Dict[nothing, nothing], Dict[str, Union[List[str], str]]]"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "obs", "type": "Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "vectorize", "type": "Callable"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "obs", "type": "Union[Dict[nothing, nothing], Dict[str, Union[List[str], str]]]"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "obs", "type": "Union[Dict[nothing, nothing], Dict[str, Union[List[str], str]]]"}, {"lineNumber": 167, "col_offset": 60, "nodeName": "observations", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[nothing, nothing]]]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "batch_reply", "type": "List[Dict[str, str]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "expected_unmapped", "type": "List[Dict[str, str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "expected_unmapped", "type": "List[Dict[str, str]]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 183, "col_offset": 87, "nodeName": "expected_unmapped", "type": "List[Dict[str, str]]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "TorchAgent", "type": "Type[parlai.core.torch_agent.TorchAgent]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "parser", "type": "parlai.core.params.ParlaiParser"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestTorchAgent"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "key", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "end_token", "type": "str"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "msg", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "msg", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "labels", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "match_batch", "type": "Callable"}, {"lineNumber": 183, "col_offset": 42, "nodeName": "batch_reply", "type": "List[Dict[str, str]]"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 183, "col_offset": 76, "nodeName": "output", "type": "parlai.core.torch_agent.`namedtuple-Output-text-text_candidates`"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "msg", "type": "Any"}, {"lineNumber": 210, "col_offset": 36, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 211, "col_offset": 42, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "observation", "type": "Dict[str, Union[bool, List[str], str, collections.deque[Any]]]"}, {"lineNumber": 221, "col_offset": 14, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "self", "type": "MockDict"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 101, "col_offset": 64, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "batch", "type": "Any"}, {"lineNumber": 154, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "START_IDX", "type": "int"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "END_IDX", "type": "int"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "batch", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "e", "type": "ImportError"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "history", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 148, "col_offset": 52, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "valid_indices", "type": "Any"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "true_i", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "mdict", "type": "MockDict"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "agent", "type": "parlai.core.torch_agent.TorchAgent"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "text_vec", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "batch", "type": "Any"}, {"lineNumber": 154, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "label_vec", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "obs_vec", "type": "Dict[str, Union[str, List[str]]]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "batch", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "batch", "type": "Any"}]