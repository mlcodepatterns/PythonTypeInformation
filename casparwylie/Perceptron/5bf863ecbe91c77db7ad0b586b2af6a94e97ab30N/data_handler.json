[{"lineNumber": 8, "col_offset": 1, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 12, "col_offset": 1, "nodeName": "found_alphas", "type": "Dict[nothing, nothing]"}, {"lineNumber": 13, "col_offset": 1, "nodeName": "prev_file", "type": "str"}, {"lineNumber": 14, "col_offset": 1, "nodeName": "row_len", "type": "int"}, {"lineNumber": 15, "col_offset": 1, "nodeName": "target_has_encoded_alphas", "type": "bool"}, {"lineNumber": 10, "col_offset": 2, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "ui", "type": "Any"}, {"lineNumber": 17, "col_offset": 2, "nodeName": "new_dataset_str", "type": "str"}, {"lineNumber": 18, "col_offset": 2, "nodeName": "new_dataset", "type": "List[List[Optional[str]]]"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 147, "col_offset": 2, "nodeName": "has_found_alpha", "type": "bool"}, {"lineNumber": 148, "col_offset": 6, "nodeName": "row_i", "type": "int"}, {"lineNumber": 167, "col_offset": 2, "nodeName": "class_range", "type": "int"}, {"lineNumber": 180, "col_offset": 9, "nodeName": "bin_vector", "type": "Union[List[float], List[nothing], int, List[int]]"}, {"lineNumber": 184, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 185, "col_offset": 2, "nodeName": "valid_for_viewer", "type": "bool"}, {"lineNumber": 186, "col_offset": 2, "nodeName": "error", "type": "str"}, {"lineNumber": 218, "col_offset": 2, "nodeName": "rows_for_testing_list", "type": "Any"}, {"lineNumber": 230, "col_offset": 2, "nodeName": "field_targ_try", "type": "Any"}, {"lineNumber": 231, "col_offset": 2, "nodeName": "targ_kwords", "type": "Dict[str, int]"}, {"lineNumber": 233, "col_offset": 6, "nodeName": "pos", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "field_targ_try", "type": "Any"}, {"lineNumber": 250, "col_offset": 2, "nodeName": "field_to_ig_try", "type": "Any"}, {"lineNumber": 265, "col_offset": 2, "nodeName": "field_min_try", "type": "Any"}, {"lineNumber": 281, "col_offset": 25, "nodeName": "error", "type": "str"}, {"lineNumber": 282, "col_offset": 9, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 286, "col_offset": 2, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 287, "col_offset": 2, "nodeName": "image_file_names", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 6, "nodeName": "image_file_name", "type": "Any"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "image_file_names", "type": "List[Any]"}, {"lineNumber": 303, "col_offset": 2, "nodeName": "new_row", "type": "List[Union[Any, str]]"}, {"lineNumber": 304, "col_offset": 2, "nodeName": "sing_bin_target", "type": "None"}, {"lineNumber": 305, "col_offset": 2, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 339, "col_offset": 2, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 339, "col_offset": 24, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 340, "col_offset": 2, "nodeName": "to_retrieve", "type": "Any"}, {"lineNumber": 340, "col_offset": 21, "nodeName": "to_retrieve", "type": "Any"}, {"lineNumber": 341, "col_offset": 2, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 343, "col_offset": 2, "nodeName": "dataset", "type": "List[str]"}, {"lineNumber": 344, "col_offset": 2, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 346, "col_offset": 2, "nodeName": "has_alphas", "type": "bool"}, {"lineNumber": 347, "col_offset": 2, "nodeName": "matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 348, "col_offset": 2, "nodeName": "targets", "type": "List[List[str]]"}, {"lineNumber": 349, "col_offset": 2, "nodeName": "max_data_amount", "type": "int"}, {"lineNumber": 354, "col_offset": 2, "nodeName": "discount_chars", "type": "List[str]"}, {"lineNumber": 356, "col_offset": 2, "nodeName": "string", "type": "Any"}, {"lineNumber": 357, "col_offset": 6, "nodeName": "char", "type": "str"}, {"lineNumber": 357, "col_offset": 14, "nodeName": "discount_chars", "type": "List[str]"}, {"lineNumber": 362, "col_offset": 9, "nodeName": "string", "type": "Any"}, {"lineNumber": 369, "col_offset": 9, "nodeName": "row", "type": "Any"}, {"lineNumber": 372, "col_offset": 2, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 373, "col_offset": 6, "nodeName": "field_pos", "type": "Any"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "dataset_meta_alphas", "type": "Any"}, {"lineNumber": 376, "col_offset": 2, "nodeName": "new_meta", "type": "Dict[int, Any]"}, {"lineNumber": 377, "col_offset": 6, "nodeName": "key", "type": "int"}, {"lineNumber": 377, "col_offset": 13, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 379, "col_offset": 9, "nodeName": "new_meta", "type": "Dict[int, Any]"}, {"lineNumber": 382, "col_offset": 2, "nodeName": "has_alphas", "type": "bool"}, {"lineNumber": 383, "col_offset": 6, "nodeName": "i", "type": "Any"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "has_alphas", "type": "bool"}, {"lineNumber": 392, "col_offset": 2, "nodeName": "px_count", "type": "int"}, {"lineNumber": 393, "col_offset": 2, "nodeName": "done_msg", "type": "str"}, {"lineNumber": 394, "col_offset": 2, "nodeName": "prev_pos_of_matrix", "type": "int"}, {"lineNumber": 395, "col_offset": 6, "nodeName": "i", "type": "int"}, {"lineNumber": 416, "col_offset": 2, "nodeName": "matrix_float", "type": "Any"}, {"lineNumber": 417, "col_offset": 2, "nodeName": "matrix_for_input", "type": "Any"}, {"lineNumber": 418, "col_offset": 9, "nodeName": "matrix_for_input", "type": "Any"}, {"lineNumber": 421, "col_offset": 2, "nodeName": "avaliable_txts", "type": "List[str]"}, {"lineNumber": 422, "col_offset": 6, "nodeName": "f", "type": "str"}, {"lineNumber": 425, "col_offset": 9, "nodeName": "avaliable_txts", "type": "List[str]"}, {"lineNumber": 428, "col_offset": 2, "nodeName": "vector", "type": "List[int]"}, {"lineNumber": 429, "col_offset": 2, "nodeName": "target", "type": "int"}, {"lineNumber": 10, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 20, "col_offset": 3, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 3, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 146, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 149, "col_offset": 3, "nodeName": "row", "type": "Any"}, {"lineNumber": 150, "col_offset": 3, "nodeName": "row", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "el_i", "type": "int"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "dataset_meta_alphas_list", "type": "Any"}, {"lineNumber": 168, "col_offset": 5, "nodeName": "class_range", "type": "int"}, {"lineNumber": 178, "col_offset": 3, "nodeName": "bin_vector", "type": "List[float]"}, {"lineNumber": 187, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 188, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "get", "type": "Any"}, {"lineNumber": 189, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 190, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 192, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 193, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 194, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 199, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 213, "col_offset": 3, "nodeName": "error", "type": "str"}, {"lineNumber": 216, "col_offset": 3, "nodeName": "error", "type": "str"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "map_to_int_if_valid", "type": "Any"}, {"lineNumber": 219, "col_offset": 5, "nodeName": "rows_for_testing_list", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "rows_for_testing_list", "type": "Any"}, {"lineNumber": 222, "col_offset": 3, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 232, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 243, "col_offset": 5, "nodeName": "field_targ_try", "type": "Union[Any, bool]"}, {"lineNumber": 244, "col_offset": 3, "nodeName": "error", "type": "str"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "map_to_int_if_valid", "type": "Any"}, {"lineNumber": 251, "col_offset": 5, "nodeName": "field_to_ig_try", "type": "Any"}, {"lineNumber": 252, "col_offset": 3, "nodeName": "error", "type": "str"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "field_to_ig_try", "type": "Any"}, {"lineNumber": 262, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "map_to_int_if_valid", "type": "Any"}, {"lineNumber": 266, "col_offset": 5, "nodeName": "field_min_try", "type": "Any"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "field_min_try", "type": "Any"}, {"lineNumber": 274, "col_offset": 3, "nodeName": "c", "type": "int"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "min_field", "type": "Any"}, {"lineNumber": 281, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 306, "col_offset": 5, "nodeName": "target_pos", "type": "Any"}, {"lineNumber": 307, "col_offset": 3, "nodeName": "is_valid_bin_target", "type": "Union[Any, bool]"}, {"lineNumber": 309, "col_offset": 7, "nodeName": "el_i", "type": "int"}, {"lineNumber": 334, "col_offset": 9, "nodeName": "new_row", "type": "List[Union[Any, str]]"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "sing_bin_target", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 339, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 340, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 341, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 342, "col_offset": 2, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 343, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 344, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 2, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "sort_dataset_meta_alphas", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "meta_has_alphas", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 347, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 348, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 349, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 350, "col_offset": 5, "nodeName": "to_retrieve", "type": "Any"}, {"lineNumber": 351, "col_offset": 3, "nodeName": "to_retrieve", "type": "int"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "max_data_amount", "type": "int"}, {"lineNumber": 355, "col_offset": 5, "nodeName": "extra_chars", "type": "None"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "discount_chars", "type": "List[Any]"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "meta", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 399, "col_offset": 3, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 413, "col_offset": 2, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "done_msg", "type": "str"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "float32", "type": "Any"}, {"lineNumber": 417, "col_offset": 21, "nodeName": "matrix_float", "type": "Any"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 429, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "target", "type": "Any"}, {"lineNumber": 430, "col_offset": 5, "nodeName": "target", "type": "int"}, {"lineNumber": 430, "col_offset": 14, "nodeName": "output_count", "type": "int"}, {"lineNumber": 431, "col_offset": 7, "nodeName": "i", "type": "int"}, {"lineNumber": 434, "col_offset": 10, "nodeName": "vector", "type": "List[int]"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 22, "col_offset": 3, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 23, "col_offset": 3, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 24, "col_offset": 3, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 25, "col_offset": 3, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "name_for_new", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "dataset_meta_str", "type": "str"}, {"lineNumber": 37, "col_offset": 7, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "start", "type": "int"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "row_i", "type": "int"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "prev_file", "type": "Any"}, {"lineNumber": 138, "col_offset": 7, "nodeName": "return_str", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "data_by_row", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "split", "type": "Any"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "strip_row_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "row", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 162, "col_offset": 6, "nodeName": "has_found_alpha", "type": "bool"}, {"lineNumber": 169, "col_offset": 6, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "bin_vector", "type": "List[nothing]"}, {"lineNumber": 195, "col_offset": 5, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 196, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 198, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "get", "type": "Any"}, {"lineNumber": 201, "col_offset": 5, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 202, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 204, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 206, "col_offset": 5, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "error", "type": "str"}, {"lineNumber": 212, "col_offset": 5, "nodeName": "isfile", "type": "Callable[[Union[str, bytes, _PathLike[str], _PathLike[bytes]]], bool]"}, {"lineNumber": 215, "col_offset": 5, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 218, "col_offset": 66, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 220, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "split", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "error", "type": "str"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "row_len", "type": "int"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "field_targ_try", "type": "bool"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 250, "col_offset": 60, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 254, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 263, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 264, "col_offset": 2, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 265, "col_offset": 58, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "error", "type": "str"}, {"lineNumber": 273, "col_offset": 3, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "min_vals", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "min_fields", "type": "Any"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "divider", "type": "Union[int, float]"}, {"lineNumber": 278, "col_offset": 46, "nodeName": "divider", "type": "Union[int, float]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "c", "type": "int"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "pre_file_type_loc", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "image_name_data", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "target_val", "type": "Any"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "c", "type": "int"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "row_px", "type": "int"}, {"lineNumber": 308, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 308, "col_offset": 9, "nodeName": "row", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 342, "col_offset": 2, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 344, "col_offset": 21, "nodeName": "json", "type": "module"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "dataset", "type": "List[str]"}, {"lineNumber": 345, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 345, "col_offset": 62, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 346, "col_offset": 41, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 350, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 351, "col_offset": 3, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 351, "col_offset": 22, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 355, "col_offset": 44, "nodeName": "discount_chars", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 61, "nodeName": "extra_chars", "type": "None"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "string", "type": "Any"}, {"lineNumber": 365, "col_offset": 5, "nodeName": "real_strip", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 7, "nodeName": "row", "type": "Any"}, {"lineNumber": 374, "col_offset": 3, "nodeName": "append", "type": "Callable"}, {"lineNumber": 375, "col_offset": 2, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 378, "col_offset": 3, "nodeName": "new_meta", "type": "Dict[int, Any]"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "dataset_meta_alphas", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "has_alphas", "type": "bool"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "to_retrieve", "type": "Union[Any, int]"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "cancel_training", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "done_msg", "type": "str"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "target_string", "type": "str"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "target_vals", "type": "List[str]"}, {"lineNumber": 410, "col_offset": 6, "nodeName": "to_retrieve", "type": "Union[Any, int]"}, {"lineNumber": 413, "col_offset": 2, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 422, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 433, "col_offset": 3, "nodeName": "vector", "type": "List[int]"}, {"lineNumber": 19, "col_offset": 5, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "path", "type": "module"}, {"lineNumber": 20, "col_offset": 103, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 22, "col_offset": 61, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 22, "col_offset": 86, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "open", "type": "Callable"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "dataset_meta_str", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 34, "col_offset": 5, "nodeName": "new_testing_file", "type": "TextIO"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 10, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 5, "nodeName": "end", "type": "int"}, {"lineNumber": 40, "col_offset": 5, "nodeName": "end", "type": "int"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "ig", "type": "Any"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "start", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "start", "type": "int"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "end", "type": "int"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 132, "col_offset": 5, "nodeName": "target_has_encoded_alphas", "type": "bool"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 135, "col_offset": 7, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "new_dataset_str", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "new_dataset", "type": "List[List[Optional[str]]]"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 152, "col_offset": 7, "nodeName": "el_i", "type": "int"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "f_ig", "type": "Any"}, {"lineNumber": 158, "col_offset": 5, "nodeName": "element", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "dataset_meta_alphas_list", "type": "Any"}, {"lineNumber": 171, "col_offset": 5, "nodeName": "bin_vector", "type": "List[nothing]"}, {"lineNumber": 173, "col_offset": 5, "nodeName": "target", "type": "Any"}, {"lineNumber": 174, "col_offset": 5, "nodeName": "bin_vector", "type": "Union[int, List[int]]"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 195, "col_offset": 5, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 212, "col_offset": 5, "nodeName": "path", "type": "module"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 223, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 10, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "pos", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "targ_kwords", "type": "Dict[str, int]"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "pos", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "targ_kwords", "type": "Dict[str, int]"}, {"lineNumber": 236, "col_offset": 5, "nodeName": "pos", "type": "int"}, {"lineNumber": 238, "col_offset": 5, "nodeName": "pos", "type": "int"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "append", "type": "Union[Any, Callable]"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "pos", "type": "int"}, {"lineNumber": 246, "col_offset": 6, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 248, "col_offset": 5, "nodeName": "error", "type": "str"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 260, "col_offset": 11, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 267, "col_offset": 6, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "validate_divider", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "map_to_int_if_valid", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "validate_divider", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 44, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "image_file_name", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "rfind", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "image_file_name", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "imread", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "cvtColor", "type": "Any"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 294, "col_offset": 46, "nodeName": "COLOR_BGR2GRAY", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 298, "col_offset": 9, "nodeName": "col_px", "type": "int"}, {"lineNumber": 309, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "row", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "row", "type": "Any"}, {"lineNumber": 311, "col_offset": 7, "nodeName": "el_i", "type": "int"}, {"lineNumber": 342, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 342, "col_offset": 86, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "read", "type": "Callable"}, {"lineNumber": 344, "col_offset": 32, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 345, "col_offset": 62, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "dataset", "type": "List[str]"}, {"lineNumber": 358, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 358, "col_offset": 10, "nodeName": "string", "type": "Any"}, {"lineNumber": 360, "col_offset": 5, "nodeName": "string", "type": "Any"}, {"lineNumber": 365, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "row", "type": "Any"}, {"lineNumber": 367, "col_offset": 7, "nodeName": "real_strip", "type": "Callable[..., Any]"}, {"lineNumber": 368, "col_offset": 7, "nodeName": "row", "type": "Any"}, {"lineNumber": 374, "col_offset": 3, "nodeName": "keys", "type": "List[int]"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 374, "col_offset": 19, "nodeName": "field_pos", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "key", "type": "int"}, {"lineNumber": 384, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 400, "col_offset": 6, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 400, "col_offset": 10, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 404, "col_offset": 7, "nodeName": "has_alphas", "type": "bool"}, {"lineNumber": 405, "col_offset": 5, "nodeName": "item_as_array", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 5, "nodeName": "item_as_array", "type": "numpy.ndarray"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "item_as_array", "type": "numpy.ndarray"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "target_vals", "type": "List[str]"}, {"lineNumber": 410, "col_offset": 6, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 413, "col_offset": 2, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 422, "col_offset": 44, "nodeName": "from_", "type": "Any"}, {"lineNumber": 423, "col_offset": 6, "nodeName": "f", "type": "str"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "f", "type": "str"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "output_count", "type": "int"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 433, "col_offset": 10, "nodeName": "target", "type": "int"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 19, "col_offset": 52, "nodeName": "os", "type": "module"}, {"lineNumber": 19, "col_offset": 100, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "read", "type": "Callable"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "json", "type": "module"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 33, "col_offset": 7, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "open", "type": "Callable"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "row_i", "type": "int"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "encoded_row_str", "type": "str"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "is_viewing_trans", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "vis_sep", "type": "str"}, {"lineNumber": 108, "col_offset": 9, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 131, "col_offset": 5, "nodeName": "find_alpha_classes", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 137, "col_offset": 5, "nodeName": "render_dataset_opts", "type": "Any"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "data_by_row", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "row_i", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "real_strip", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 6, "nodeName": "has_found_alpha", "type": "bool"}, {"lineNumber": 170, "col_offset": 7, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "index", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "populate_binary_vector", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "class_range", "type": "int"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 195, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "prepro", "type": "Any"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 212, "col_offset": 5, "nodeName": "os", "type": "module"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 225, "col_offset": 5, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 225, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 234, "col_offset": 6, "nodeName": "pos", "type": "Any"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "targ_kwords", "type": "Dict[str, int]"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "pos", "type": "Any"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "isdigit", "type": "Any"}, {"lineNumber": 257, "col_offset": 48, "nodeName": "replace", "type": "Any"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "get", "type": "Any"}, {"lineNumber": 269, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 269, "col_offset": 85, "nodeName": "get", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "min_field", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "image_file_name", "type": "Any"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "pre_file_type_loc", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "split", "type": "Any"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 293, "col_offset": 42, "nodeName": "image_file_name", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 294, "col_offset": 46, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "target_val", "type": "Any"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 300, "col_offset": 6, "nodeName": "c", "type": "int"}, {"lineNumber": 307, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 307, "col_offset": 73, "nodeName": "target_pos", "type": "Any"}, {"lineNumber": 310, "col_offset": 17, "nodeName": "el_i", "type": "int"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "target_pos", "type": "Any"}, {"lineNumber": 342, "col_offset": 86, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "char", "type": "str"}, {"lineNumber": 359, "col_offset": 43, "nodeName": "char", "type": "str"}, {"lineNumber": 360, "col_offset": 14, "nodeName": "string", "type": "Any"}, {"lineNumber": 367, "col_offset": 7, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "row", "type": "Any"}, {"lineNumber": 378, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 378, "col_offset": 43, "nodeName": "key", "type": "int"}, {"lineNumber": 396, "col_offset": 6, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "dataset", "type": "List[str]"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "target_string", "type": "str"}, {"lineNumber": 404, "col_offset": 7, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "flat_single_item", "type": "List[str]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "matrices", "type": "List[numpy.ndarray]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "targets", "type": "List[List[str]]"}, {"lineNumber": 411, "col_offset": 7, "nodeName": "i", "type": "int"}, {"lineNumber": 412, "col_offset": 5, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 424, "col_offset": 4, "nodeName": "avaliable_txts", "type": "List[str]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "vector", "type": "List[int]"}, {"lineNumber": 19, "col_offset": 67, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "rfind", "type": "Any"}, {"lineNumber": 28, "col_offset": 57, "nodeName": "name_for_new", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "ig", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "row_i", "type": "int"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "start", "type": "int"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "row_len", "type": "int"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "strip_row_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "new_row", "type": "List[Optional[str]]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "sing_bin_target", "type": "Optional[str]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "change_data_to_processed", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 78, "nodeName": "dataset_meta", "type": "Dict[str, Union[List[Any], Any, Dict[int, List[Any]]]]"}, {"lineNumber": 55, "col_offset": 91, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "is_viewing_trans", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "row_str", "type": "str"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "encoded_row_str", "type": "str"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "row_str", "type": "str"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "target_has_encoded_alphas", "type": "bool"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "target_has_encoded_alphas", "type": "bool"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 85, "col_offset": 7, "nodeName": "encoded_targets", "type": "List[Union[List[nothing], List[int], int, List[float]]]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "targ_pos", "type": "Any"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 96, "col_offset": 7, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 99, "col_offset": 9, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "range_", "type": "Any"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "target_vec_example", "type": "Union[int, List[int]]"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "target_vec_ex_str", "type": "str"}, {"lineNumber": 103, "col_offset": 7, "nodeName": "target_vec_ex_str", "type": "str"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "target_vec_ex_str", "type": "str"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "new_row", "type": "List[Optional[str]]"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "new_dataset_str", "type": "str"}, {"lineNumber": 120, "col_offset": 10, "nodeName": "for_viewer", "type": "Any"}, {"lineNumber": 121, "col_offset": 6, "nodeName": "new_testing_row", "type": "List[nothing]"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "testing_row", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 6, "nodeName": "targs_show", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "targs", "type": "Any"}, {"lineNumber": 130, "col_offset": 84, "nodeName": "prev_file", "type": "str"}, {"lineNumber": 131, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 137, "col_offset": 5, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "row_i", "type": "int"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "row", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "element", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "element", "type": "Any"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "dataset_meta_alphas_list", "type": "Any"}, {"lineNumber": 174, "col_offset": 18, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 192, "col_offset": 34, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 225, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "pos", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 247, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 257, "col_offset": 48, "nodeName": "val", "type": "Any"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "image_name_data", "type": "Any"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "dirname", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "write", "type": "Callable"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 313, "col_offset": 9, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 314, "col_offset": 7, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 325, "col_offset": 9, "nodeName": "el_i", "type": "Union[str, int]"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "target_pos", "type": "Any"}, {"lineNumber": 326, "col_offset": 10, "nodeName": "is_valid_bin_target", "type": "Union[Any, bool]"}, {"lineNumber": 328, "col_offset": 7, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "new_el", "type": "Union[str, Any]"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "file_name", "type": "Any"}, {"lineNumber": 359, "col_offset": 7, "nodeName": "string", "type": "Any"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "string", "type": "Any"}, {"lineNumber": 384, "col_offset": 10, "nodeName": "meta", "type": "Any"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "i", "type": "Any"}, {"lineNumber": 399, "col_offset": 22, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 399, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 411, "col_offset": 10, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 412, "col_offset": 5, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 19, "col_offset": 67, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 34, "col_offset": 62, "nodeName": "name_for_new", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 55, "col_offset": 95, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "encoded_row", "type": "List[Union[List[int], List[float], List[nothing], int]]"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "temp_new_row", "type": "List[Optional[str]]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "new_row", "type": "List[Optional[str]]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "to_ig", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "el_i", "type": "int"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "encoded_row_str", "type": "str"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "encoded_row_str", "type": "str"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "vec", "type": "Union[List[float], List[nothing], int, List[int]]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "sing_bin_target", "type": "Optional[str]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "populate_binary_vector", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "new_dataset", "type": "List[List[Optional[str]]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "vis_sep", "type": "str"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "write", "type": "Callable"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "write", "type": "Callable"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 130, "col_offset": 84, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 136, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 137, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 154, "col_offset": 6, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "el_i", "type": "int"}, {"lineNumber": 155, "col_offset": 10, "nodeName": "row_i", "type": "int"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "has_found_alpha", "type": "bool"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "el_i", "type": "int"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 224, "col_offset": 7, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 225, "col_offset": 49, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 225, "col_offset": 66, "nodeName": "as_range", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "prepro_vals", "type": "Dict[str, Optional[Union[Any, str, bool, int, range, List[int], Dict[Union[str, Any], Optional[Union[List[nothing], int, float, Any]]]]]]"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "replace", "type": "Any"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "min_fields", "type": "Any"}, {"lineNumber": 269, "col_offset": 85, "nodeName": "min_fields", "type": "Any"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "min_vals", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 313, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "real_strip", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "sing_bin_target", "type": "Union[str, Any]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "new_el", "type": "Union[str, Any]"}, {"lineNumber": 330, "col_offset": 7, "nodeName": "append", "type": "Callable"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "new_el", "type": "Union[str, Any]"}, {"lineNumber": 332, "col_offset": 6, "nodeName": "new_row", "type": "List[Union[Any, str]]"}, {"lineNumber": 342, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 342, "col_offset": 51, "nodeName": "to_retrieve", "type": "Any"}, {"lineNumber": 407, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "to_retrieve", "type": "Union[Any, int]"}, {"lineNumber": 412, "col_offset": 5, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 412, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 412, "col_offset": 64, "nodeName": "to_retrieve", "type": "Union[Any, int]"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "ig", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "new_row", "type": "List[Optional[str]]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "alpha_class_to_binary_vector", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "sing_bin_target", "type": "Optional[str]"}, {"lineNumber": 101, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 101, "col_offset": 81, "nodeName": "range_", "type": "Any"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "target_vec_ex_str", "type": "str"}, {"lineNumber": 109, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "row_str", "type": "str"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "vis_sep", "type": "str"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "new_txt_file", "type": "TextIO"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "row_str", "type": "str"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "vis_sep", "type": "str"}, {"lineNumber": 114, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "percentage", "type": "int"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "msg", "type": "str"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "testing_row", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 6, "nodeName": "new_testing_file", "type": "TextIO"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 136, "col_offset": 95, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "el_i", "type": "int"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 257, "col_offset": 6, "nodeName": "val", "type": "Any"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 269, "col_offset": 85, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 277, "col_offset": 41, "nodeName": "c", "type": "int"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 315, "col_offset": 63, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 317, "col_offset": 9, "nodeName": "new_el", "type": "str"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "new_el", "type": "Union[str, Any]"}, {"lineNumber": 330, "col_offset": 7, "nodeName": "new_row", "type": "List[Union[Any, str]]"}, {"lineNumber": 342, "col_offset": 51, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 412, "col_offset": 64, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "prepro_vals", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "row_i", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "to_ig", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "temp_new_row", "type": "List[Optional[str]]"}, {"lineNumber": 69, "col_offset": 9, "nodeName": "vec", "type": "Union[List[float], List[nothing], int, List[int]]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "e", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "e", "type": "Optional[str]"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "new_row", "type": "List[Optional[str]]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "vec", "type": "Union[int, List[float], List[nothing], List[int]]"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "vec", "type": "Union[int, List[float], List[nothing], List[int]]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 56, "nodeName": "sing_bin_target", "type": "Optional[str]"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "e", "type": "int"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "e", "type": "int"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "target_vec_example", "type": "Union[int, List[int]]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "new_target_list_for_dis", "type": "str"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "row_i", "type": "int"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "print_console", "type": "Any"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "msg", "type": "str"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 7, "nodeName": "targs_show", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "testing_row", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "targs", "type": "Any"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "name_for_new", "type": "Any"}, {"lineNumber": 136, "col_offset": 95, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "el_i", "type": "int"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 269, "col_offset": 85, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 316, "col_offset": 63, "nodeName": "el_i", "type": "int"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 320, "col_offset": 10, "nodeName": "el_i", "type": "str"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "el_i", "type": "Union[str, int]"}, {"lineNumber": 322, "col_offset": 10, "nodeName": "new_el", "type": "str"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 412, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "folders_for_data", "type": "Dict[str, str]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "temp_new_row", "type": "List[Optional[str]]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "temp_new_row", "type": "List[Optional[str]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "alpha_class_to_binary_vector", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "e", "type": "Union[List[int], List[float], List[nothing], int]"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "e", "type": "Union[List[int], List[float], List[nothing], int]"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "encoded_row", "type": "List[Union[List[int], List[float], List[nothing], int]]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "targ_pos", "type": "Any"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 87, "col_offset": 80, "nodeName": "targ_pos", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "encoded_targets", "type": "List[Union[List[nothing], List[int], int, List[float]]]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "user_interface", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "row_i", "type": "int"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "targs", "type": "Any"}, {"lineNumber": 127, "col_offset": 103, "nodeName": "join", "type": "Callable"}, {"lineNumber": 299, "col_offset": 29, "nodeName": "image_matrix", "type": "Any"}, {"lineNumber": 299, "col_offset": 50, "nodeName": "col_px", "type": "int"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 315, "col_offset": 63, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "el_i", "type": "int"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "el_i", "type": "int"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "el_i", "type": "int"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "temp_new_row", "type": "List[Optional[str]]"}, {"lineNumber": 69, "col_offset": 68, "nodeName": "found_alphas", "type": "Dict[int, List[Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "vec", "type": "Union[List[float], List[nothing], int, List[int]]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "vec", "type": "Union[List[float], List[nothing], int, List[int]]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "e", "type": "Union[List[nothing], List[int], int, List[float]]"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "e", "type": "Union[List[nothing], List[int], int, List[float]]"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "encoded_targets", "type": "List[Union[List[nothing], List[int], int, List[float]]]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "row_i", "type": "int"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "row_px", "type": "int"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 316, "col_offset": 75, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 317, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 317, "col_offset": 28, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "el_i", "type": "int"}, {"lineNumber": 69, "col_offset": 68, "nodeName": "self", "type": "data_processor"}, {"lineNumber": 69, "col_offset": 86, "nodeName": "el_i", "type": "int"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "encoded_row", "type": "List[Union[List[int], List[float], List[nothing], int]]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "data_by_row", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 127, "col_offset": 112, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 116, "nodeName": "e", "type": "Any"}, {"lineNumber": 127, "col_offset": 123, "nodeName": "e", "type": "Any"}, {"lineNumber": 127, "col_offset": 128, "nodeName": "targs_show", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 315, "col_offset": 67, "nodeName": "new_el", "type": "Any"}, {"lineNumber": 317, "col_offset": 36, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "new_el", "type": "Union[str, Any]"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "new_target_list", "type": "str"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "row_i", "type": "int"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "element", "type": "Any"}, {"lineNumber": 322, "col_offset": 37, "nodeName": "dataset_meta", "type": "Any"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "el_i", "type": "Union[str, int]"}, {"lineNumber": 127, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "e", "type": "str"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "e", "type": "str"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "testing_row", "type": "List[str]"}]