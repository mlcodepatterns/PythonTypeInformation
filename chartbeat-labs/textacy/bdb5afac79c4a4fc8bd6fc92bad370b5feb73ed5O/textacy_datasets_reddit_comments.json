[{"lineNumber": 36, "col_offset": 0, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "DOWNLOAD_ROOT", "type": "unicode"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "RE_REDDIT_LINK", "type": "Pattern[unicode]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "filepaths", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "download", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "_generate_filestubs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "_parse_date", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "_total_mos", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "__iter__", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "_get_filters", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "_filtered_iter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "_convert_timestamp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "_clean_content", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "full_date_range", "type": "Tuple[unicode, unicode]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "_full_score_range", "type": "Tuple[int, int]"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_date_range", "type": "None"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "filestubs", "type": "Tuple[str, ...]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "filestub", "type": "str"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "filestubs", "type": "Tuple[str, ...]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "start", "type": "datetime.datetime"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "end", "type": "datetime.datetime"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "tot_mo", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "filepaths", "type": "Union[List[Any], Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "filters", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "_date_range", "type": "Any"}, {"lineNumber": 284, "col_offset": 27, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "_date_range", "type": "Any"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "DEFAULT_DATA_DIR", "type": "Any"}, {"lineNumber": 104, "col_offset": 73, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "isdir", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "validate_and_clip_range_filter", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "full_date_range", "type": "Tuple[unicode, unicode]"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "_generate_filestubs", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "_parse_date", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "_parse_date", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "range_", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "month", "type": "int"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "_date_range", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "filepaths", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "filepaths", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "filepaths", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 222, "col_offset": 11, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "_date_range", "type": "None"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "_date_range", "type": "None"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 344, "col_offset": 44, "nodeName": "content", "type": "Any"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "constants", "type": "Any"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "META", "type": "Dict[unicode, unicode]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "utils", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "string_types", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "download_file", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "compat", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "yr", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "mo", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "divmod", "type": "Callable"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "tot_mo", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "strptime", "type": "Callable[[Any, Union[str, unicode], Union[str, unicode]], datetime.datetime]"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "dt", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "year", "type": "int"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "filepaths", "type": "Union[Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "read_json", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "validate_set_member_filter", "type": "Any"}, {"lineNumber": 218, "col_offset": 57, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 218, "col_offset": 68, "nodeName": "string_types", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "validate_and_clip_range_filter", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "full_date_range", "type": "Tuple[unicode, unicode]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "validate_and_clip_range_filter", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "_full_score_range", "type": "Tuple[int, int]"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "_get_filters", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 286, "col_offset": 51, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 286, "col_offset": 63, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 286, "col_offset": 76, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 287, "col_offset": 73, "nodeName": "limit", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "_get_filters", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 328, "col_offset": 51, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 328, "col_offset": 63, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 328, "col_offset": 76, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 329, "col_offset": 73, "nodeName": "limit", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "RE_REDDIT_LINK", "type": "Pattern[unicode]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "RedditComments", "type": "Type[RedditComments]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "compat", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "utils", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "urljoin", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "DOWNLOAD_ROOT", "type": "unicode"}, {"lineNumber": 149, "col_offset": 46, "nodeName": "filestub", "type": "str"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "filestub", "type": "str"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "force", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "_total_mos", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 52, "nodeName": "start", "type": "datetime.datetime"}, {"lineNumber": 163, "col_offset": 64, "nodeName": "_total_mos", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 80, "nodeName": "end", "type": "datetime.datetime"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "filestub", "type": "str"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "tio", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "_clean_content", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "line", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "utils", "type": "Any"}, {"lineNumber": 218, "col_offset": 68, "nodeName": "compat", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "utils", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "string_types", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "utils", "type": "Any"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "record", "type": "Any"}, {"lineNumber": 286, "col_offset": 22, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "_filtered_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 63, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "itertools", "type": "module"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "_filtered_iter", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 63, "nodeName": "filters", "type": "List[Callable[[Any], Any]]"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "sub", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "get_filepaths", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "compat", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 163, "col_offset": 64, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "_generate_filestubs", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "_date_range", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 206, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 215, "col_offset": 62, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 220, "col_offset": 58, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "compat", "type": "Any"}, {"lineNumber": 233, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 233, "col_offset": 68, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "record", "type": "Any"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "record", "type": "Any"}, {"lineNumber": 329, "col_offset": 43, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 330, "col_offset": 42, "nodeName": "record", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 346, "col_offset": 18, "nodeName": "content", "type": "unicode"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "RE_NONBREAKING_SPACE", "type": "Any"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "sub", "type": "Any"}, {"lineNumber": 351, "col_offset": 51, "nodeName": "content", "type": "unicode"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "tio", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "yr", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 184, "col_offset": 57, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 190, "col_offset": 70, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "get", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "filter_", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "filter_", "type": "Any"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "filters", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 336, "col_offset": 49, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "constants", "type": "Any"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "RE_LINEBREAK", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "mo", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "get", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "record", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "record", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "record", "type": "Any"}, {"lineNumber": 228, "col_offset": 65, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "record", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "record", "type": "Any"}, {"lineNumber": 237, "col_offset": 60, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "record", "type": "Any"}, {"lineNumber": 348, "col_offset": 18, "nodeName": "content", "type": "unicode"}, {"lineNumber": 351, "col_offset": 17, "nodeName": "constants", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "record", "type": "Any"}]