[{"lineNumber": 20, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "reddit_fname", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "score_ranges", "type": "List[Union[Tuple[int, int], Tuple[int, None], Tuple[None, int]]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "score_range", "type": "Union[Tuple[int, int], Tuple[int, None], Tuple[None, int]]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "score_ranges", "type": "List[Union[Tuple[int, int], Tuple[int, None], Tuple[None, int]]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "subreddits", "type": "List[Union[Tuple[str], Set[str]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected_lens", "type": "Tuple[int, int]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "RedditReader", "type": "Type[textacy.corpora.reddit_reader.RedditReader]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "reddit_fname", "type": "str"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "subreddit", "type": "Union[Tuple[str], Set[str]]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "expected_len", "type": "int"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "subreddits", "type": "List[Union[Tuple[str], Set[str]]]"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "expected_lens", "type": "Tuple[int, int]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "record", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 25, "col_offset": 36, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "write_json_lines", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "REDDIT_COMMENTS", "type": "List[Dict[str, Optional[Union[bool, str, int]]]]"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "reddit_fname", "type": "str"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "write_json_lines", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "REDDIT_COMMENTS", "type": "List[Dict[str, Optional[Union[bool, str, int]]]]"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "reddit_fname", "type": "str"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "unicode_type", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "texts", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "record", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "expected_len", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "score_range", "type": "Union[Tuple[None, int], Tuple[int, None], Tuple[int, int]]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "score_range", "type": "Union[Tuple[None, int], Tuple[int, None], Tuple[int, int]]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "records", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 24, "col_offset": 55, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 24, "col_offset": 71, "nodeName": "__file__", "type": "str"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 57, "col_offset": 65, "nodeName": "score_range", "type": "Union[Tuple[None, int], Tuple[int, None], Tuple[int, int]]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "redditreader", "type": "textacy.corpora.reddit_reader.RedditReader"}, {"lineNumber": 69, "col_offset": 63, "nodeName": "subreddit", "type": "Union[Set[str], Tuple[str]]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "subreddit", "type": "Union[Set[str], Tuple[str]]"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 55, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "self", "type": "RedditReaderTestCase"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "record", "type": "Any"}, {"lineNumber": 24, "col_offset": 55, "nodeName": "os", "type": "module"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "record", "type": "Any"}, {"lineNumber": 61, "col_offset": 55, "nodeName": "score_range", "type": "Union[Tuple[None, int], Tuple[int, None], Tuple[int, int]]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "record", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "score_range", "type": "Union[Tuple[None, int], Tuple[int, None], Tuple[int, int]]"}]