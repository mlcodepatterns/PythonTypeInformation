[{"lineNumber": 18, "col_offset": 0, "nodeName": "test_download", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test_oserror", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_metadata", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_texts", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_texts_limit", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_texts_min_len", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_records", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_records_author", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_records_date_range", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_bad_filters", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "pytestmark", "type": "Any"}, {"lineNumber": 10, "col_offset": 10, "nodeName": "OxfordTextArchive", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "skipif", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "record", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "limit", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "min_len", "type": "int"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "authors", "type": "Tuple[Set[str], Set[str]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "author", "type": "Set[str]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "authors", "type": "Tuple[Set[str], Set[str]]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "date_ranges", "type": "Tuple[List[str], Tuple[str, str]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "date_range", "type": "Union[List[str], Tuple[str, str]]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "date_ranges", "type": "Tuple[List[str], Tuple[str, str]]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "bad_filters", "type": "Tuple[Dict[str, str], Dict[str, str]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "bad_filter", "type": "Dict[str, str]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "bad_filters", "type": "Tuple[Dict[str, str], Dict[str, str]]"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "mark", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "OxfordTextArchive", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "download", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "_metadata_filepath", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "_text_dirpath", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "OxfordTextArchive", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "records", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "texts", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "meta", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "records", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "OSError", "type": "Type[OSError]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "unicode_", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "limit", "type": "int"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "text", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "unicode_", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "meta", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "tempdir", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "tmpdir", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "texts", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "entry", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "compat", "type": "module"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "compat", "type": "module"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "entry", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "values", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "entry", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "min_len", "type": "int"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "athr", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "texts", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "entry", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "values", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "texts", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "records", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "meta", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "records", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "bad_filter", "type": "Dict[str, str]"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "texts", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 53, "col_offset": 67, "nodeName": "min_len", "type": "int"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "author", "type": "Set[str]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 78, "col_offset": 57, "nodeName": "date_range", "type": "Union[List[str], Tuple[str, str]]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "DATASET", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "limit", "type": "int"}]