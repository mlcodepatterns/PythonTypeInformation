[{"lineNumber": 12, "col_offset": 0, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 10, "nodeName": "RedditComments", "type": "Type[textacy.datasets.reddit_comments.RedditComments]"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "dataset", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "dataset", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "limit", "type": "int"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "min_len", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "subreddits", "type": "Tuple[Set[str], Set[str]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "subreddit", "type": "Set[str]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "subreddits", "type": "Tuple[Set[str], Set[str]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "date_ranges", "type": "Tuple[List[str], Tuple[str, str]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "date_range", "type": "Union[List[str], Tuple[str, str]]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "date_ranges", "type": "Tuple[List[str], Tuple[str, str]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "score_ranges", "type": "Tuple[List[int], Tuple[int, int]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "score_range", "type": "Union[List[int], Tuple[int, int]]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "score_ranges", "type": "Tuple[List[int], Tuple[int, int]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "bad_filters", "type": "Tuple[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "bad_filter", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "bad_filters", "type": "Tuple[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "RedditComments", "type": "Type[textacy.datasets.reddit_comments.RedditComments]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "download", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "RedditComments", "type": "Type[textacy.datasets.reddit_comments.RedditComments]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "IOError", "type": "Type[OSError]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dataset", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "unicode_", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 73, "nodeName": "limit", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "record", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 21, "col_offset": 57, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 21, "col_offset": 73, "nodeName": "__file__", "type": "str"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "filenames", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "dataset", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 21, "col_offset": 57, "nodeName": "path", "type": "module"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "self", "type": "RedditCommentsTestCase"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "_", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "r", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "r", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "r", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "bad_filter", "type": "Union[Dict[str, str], Dict[str, int]]"}, {"lineNumber": 21, "col_offset": 57, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 41, "col_offset": 64, "nodeName": "limit", "type": "int"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "min_len", "type": "int"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "subreddit", "type": "Set[str]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "date_range", "type": "Union[List[str], Tuple[str, str]]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "DATASET", "type": "textacy.datasets.reddit_comments.RedditComments"}, {"lineNumber": 78, "col_offset": 57, "nodeName": "score_range", "type": "Union[List[int], Tuple[int, int]]"}]