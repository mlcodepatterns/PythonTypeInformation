[{"lineNumber": 8, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_is_plural_noun", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_is_negated_verb", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_preserve_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_normalize_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "load_spacy", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "plural_nouns", "type": "List[int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "negated_verbs", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "preserved_cases", "type": "List[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "normalized_strs", "type": "List[unicode]"}, {"lineNumber": 11, "col_offset": 21, "nodeName": "data", "type": "module"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "text", "type": "unicode"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "tok", "type": "Any"}, {"lineNumber": 24, "col_offset": 61, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "tok", "type": "Any"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 53, "nodeName": "tok", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "normalized_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "tok", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "tok", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "is_plural_noun", "type": "Callable[[Any], bool]"}, {"lineNumber": 24, "col_offset": 44, "nodeName": "tok", "type": "Any"}, {"lineNumber": 24, "col_offset": 61, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "is_negated_verb", "type": "Callable[[Any], bool]"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "tok", "type": "Any"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "preserve_case", "type": "Callable[[Any], bool]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "tok", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "spacy_utils", "type": "module"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "self", "type": "SpacyUtilsTestCase"}, {"lineNumber": 51, "col_offset": 78, "nodeName": "is_space", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "spacy_utils", "type": "module"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "spacy_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "spacy_utils", "type": "module"}, {"lineNumber": 51, "col_offset": 78, "nodeName": "tok", "type": "Any"}]