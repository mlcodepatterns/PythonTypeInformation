[{"lineNumber": 32, "col_offset": 0, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "NAME", "type": "str"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "DESCRIPTION", "type": "str"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "SITE_URL", "type": "str"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "DOWNLOAD_ROOT", "type": "str"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "MIN_DATE", "type": "str"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "MAX_DATE", "type": "str"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "MIN_SCORE", "type": "int"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "MAX_SCORE", "type": "int"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[str]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "Dataset", "type": "Type[textacy.datasets.base.Dataset]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "filenames", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "download", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "_parse_date_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "_parse_score_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_generate_filenames", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "_convert_timestamp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "_clean_content", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "NAME", "type": "str"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "DATA_DIR", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "fnames", "type": "Tuple[str, ...]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "fname", "type": "str"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "fnames", "type": "Tuple[str, ...]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "texts", "type": "Generator[Any, Any, None]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "records", "type": "Generator[Any, Any, None]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "filepaths", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "MIN_DATE", "type": "str"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "MAX_DATE", "type": "str"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "_parse_date_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "_generate_filenames", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "url", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "date_range", "type": "Tuple[str, Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "date_range", "type": "Tuple[Union[str, Any], str]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "date_range", "type": "Union[Tuple[Union[str, Any], str], Tuple[str, Any], Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[int, Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[Union[Any, int], int]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "score_range", "type": "Union[Tuple[Union[Any, int], int], Any, Tuple[int, Any]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "end", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "end", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "year", "type": "int"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "yrmo", "type": "str"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "filepaths", "type": "Tuple[Any, ...]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "filepaths", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "filenames", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 265, "col_offset": 44, "nodeName": "content", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "normalize_whitespace", "type": "Callable[[Any], unicode]"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "content", "type": "str"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "NAME", "type": "str"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "DESCRIPTION", "type": "str"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "SITE_URL", "type": "str"}, {"lineNumber": 53, "col_offset": 76, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "urljoin", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "DOWNLOAD_ROOT", "type": "str"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "fname", "type": "str"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "fname", "type": "str"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "url", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "write_streaming_download_file", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "url", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "MIN_DATE", "type": "str"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any]"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "MAX_DATE", "type": "str"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "MIN_SCORE", "type": "int"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "MAX_SCORE", "type": "int"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "month", "type": "int"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 203, "col_offset": 51, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 204, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "record", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "string_types", "type": "Tuple[Type[str], Union[Type[str], Type[unicode]]]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "_parse_score_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 50, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "_parse_date_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 231, "col_offset": 24, "nodeName": "read_json_lines", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "limit", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "RedditComments", "type": "Type[RedditComments]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "compat", "type": "module"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "force", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any]"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "strptime", "type": "Callable[[Any, Union[str, unicode], Union[str, unicode]], datetime.datetime]"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "fnames", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "compat", "type": "module"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "fname", "type": "str"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 231, "col_offset": 55, "nodeName": "mode", "type": "str"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "score_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "date_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "_clean_content", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 251, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "limit", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "get_filenames", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 93, "col_offset": 70, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 107, "col_offset": 76, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "strptime", "type": "Callable[[Any, Union[str, unicode], Union[str, unicode]], datetime.datetime]"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 143, "col_offset": 28, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "_generate_filenames", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 70, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 233, "col_offset": 58, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "get", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 240, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "content", "type": "str"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 224, "col_offset": 70, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 74, "nodeName": "needed_filepaths", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "line", "type": "Any"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 247, "col_offset": 67, "nodeName": "get", "type": "Any"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 259, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 259, "col_offset": 49, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "replace", "type": "Callable"}, {"lineNumber": 224, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "filenames", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "score_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 235, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 235, "col_offset": 74, "nodeName": "score_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 238, "col_offset": 38, "nodeName": "date_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 238, "col_offset": 78, "nodeName": "date_range", "type": "Union[Any, Tuple[Any, ...]]"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "line", "type": "Any"}, {"lineNumber": 247, "col_offset": 67, "nodeName": "line", "type": "Any"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "content", "type": "str"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "self", "type": "RedditComments"}]