[{"lineNumber": 30, "col_offset": 0, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[str]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "MIN_DATE", "type": "str"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "MAX_DATE", "type": "str"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "MIN_INT", "type": "int"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "MAX_INT", "type": "int"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "first_path", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "s", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "content", "type": "str"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "path", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "paths", "type": "Union[Tuple[Any], Tuple[Any, ...]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "texts", "type": "Generator[Any, Any, None]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "records", "type": "Generator[Any, Any, None]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "paths", "type": "Any"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "string_types", "type": "Tuple[Union[Type[bytes], Type[str]], Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "paths", "type": "Tuple[Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "first_path", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "content", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "normalize_whitespace", "type": "Callable[[Any], str]"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "content", "type": "str"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "PY2", "type": "bool"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "paths", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "paths", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "paths", "type": "Tuple[Any, ...]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "split", "type": "Callable"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[str]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[str], str]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "string_types", "type": "Tuple[Union[Type[bytes], Type[str]], Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "date_range", "type": "Tuple[str, Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "date_range", "type": "Tuple[Union[str, Any], str]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "score_range", "type": "Tuple[int, Any]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "score_range", "type": "Tuple[Union[Any, int], int]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "read_json_lines", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "limit", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 183, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 214, "col_offset": 51, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 215, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "record", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "path", "type": "module"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "paths", "type": "Union[Tuple[Any], Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "MIN_DATE", "type": "str"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any]"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "MAX_DATE", "type": "str"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "MIN_INT", "type": "int"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "MAX_INT", "type": "int"}, {"lineNumber": 130, "col_offset": 51, "nodeName": "mode", "type": "str"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "score_range", "type": "Union[Any, Tuple[Union[Any, int], int], Tuple[int, Any]]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any, Tuple[Union[str, Any], str]]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "_clean_content", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "limit", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "paths", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "os", "type": "module"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "paths", "type": "Union[Tuple[Any], Tuple[Any, ...]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "content", "type": "str"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any]"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 132, "col_offset": 58, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "get", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 140, "col_offset": 51, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 70, "col_offset": 66, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 70, "col_offset": 71, "nodeName": "paths", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 136, "col_offset": 62, "nodeName": "line", "type": "Any"}, {"lineNumber": 140, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "self", "type": "RedditReader"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "get", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "content", "type": "str"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "score_range", "type": "Union[Any, Tuple[Union[Any, int], int], Tuple[int, Any]]"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 134, "col_offset": 74, "nodeName": "score_range", "type": "Union[Any, Tuple[Union[Any, int], int], Tuple[int, Any]]"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any, Tuple[Union[str, Any], str]]"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 137, "col_offset": 78, "nodeName": "date_range", "type": "Union[Tuple[str, Any], Any, Tuple[Union[str, Any], str]]"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "line", "type": "Any"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "line", "type": "Any"}]