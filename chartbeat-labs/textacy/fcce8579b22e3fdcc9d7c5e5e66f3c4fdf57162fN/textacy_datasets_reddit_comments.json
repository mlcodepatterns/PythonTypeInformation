[{"lineNumber": 38, "col_offset": 0, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "DESCRIPTION", "type": "unicode"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "SITE_URL", "type": "unicode"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "DATA_DIR", "type": "Union[str, unicode]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "DOWNLOAD_ROOT", "type": "unicode"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "MIN_SCORE", "type": "int"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "MAX_SCORE", "type": "int"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[unicode]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "Dataset", "type": "Type[textacy.datasets.base.Dataset]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "filenames", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "download", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "_parse_score_range", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "_generate_filestubs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "_convert_timestamp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "_clean_content", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "data_dir", "type": "str"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "min_date", "type": "unicode"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "max_date", "type": "unicode"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "DATA_DIR", "type": "Union[str, unicode]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "fstubs", "type": "Tuple[str, ...]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "fstub", "type": "str"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "fstubs", "type": "Tuple[str, ...]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "texts", "type": "Generator[Any, Any, None]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "records", "type": "Generator[Any, Any, None]"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 289, "col_offset": 24, "nodeName": "filenames", "type": "Union[Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "content", "type": "unicode"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "_parse_date_range", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "_generate_filestubs", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "url", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[int, Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[Union[Any, int], int]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "score_range", "type": "Union[Tuple[Union[Any, int], int], Any, Tuple[int, Any]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "end", "type": "Any"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "end", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "year", "type": "int"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "yrmo", "type": "str"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "_iterate", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "score_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "filenames", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "filenames", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "filenames", "type": "Union[Tuple[()], Tuple[Any, ...]]"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 324, "col_offset": 44, "nodeName": "content", "type": "Any"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "normalize_whitespace", "type": "Callable[[Any], unicode]"}, {"lineNumber": 330, "col_offset": 47, "nodeName": "content", "type": "unicode"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "NAME", "type": "unicode"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "DESCRIPTION", "type": "unicode"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "SITE_URL", "type": "unicode"}, {"lineNumber": 104, "col_offset": 76, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 63, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "urljoin", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "DOWNLOAD_ROOT", "type": "unicode"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "fstub", "type": "str"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "fstub", "type": "str"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "url", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "write_streaming_download_file", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "url", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "filename", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "MIN_SCORE", "type": "int"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "MAX_SCORE", "type": "int"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "month", "type": "int"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 219, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 253, "col_offset": 18, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 254, "col_offset": 51, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 255, "col_offset": 60, "nodeName": "limit", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "record", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "string_types", "type": "Tuple[Type[str], Union[Type[str], Type[unicode]]]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "_parse_score_range", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "_parse_date_range", "type": "Callable[[Any], Tuple[Any, ...]]"}, {"lineNumber": 273, "col_offset": 48, "nodeName": "date_range", "type": "Any"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 284, "col_offset": 18, "nodeName": "IOError", "type": "Type[IOError]"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "read_json_lines", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "filename", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 313, "col_offset": 15, "nodeName": "n", "type": "int"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "limit", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "REDDIT_LINK_RE", "type": "Pattern[unicode]"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "preprocess", "type": "module"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "RedditComments", "type": "Type[RedditComments]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 115, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "compat", "type": "module"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "filename", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "force", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "fileio", "type": "module"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "score_range", "type": "Union[Any, Tuple[int, Any]]"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "strptime", "type": "Callable[[Any, Union[str, unicode], Union[str, unicode]], datetime.datetime]"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "fstubs", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "strftime", "type": "Callable[[Union[str, unicode]], str]"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "compat", "type": "module"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 268, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "subreddit", "type": "Set[Any]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "fstub", "type": "str"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "date_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "fileio", "type": "module"}, {"lineNumber": 292, "col_offset": 19, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "score_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "date_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "_clean_content", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "text_only", "type": "Any"}, {"lineNumber": 310, "col_offset": 19, "nodeName": "n", "type": "int"}, {"lineNumber": 310, "col_offset": 24, "nodeName": "limit", "type": "Any"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "get_filenames", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "LOGGER", "type": "logging.Logger"}, {"lineNumber": 154, "col_offset": 71, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 154, "col_offset": 76, "nodeName": "score_range", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "strptime", "type": "Callable[[Any, Union[str, unicode], Union[str, unicode]], datetime.datetime]"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "yrmo", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "dt", "type": "datetime.datetime"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "next_yr", "type": "int"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "next_mo", "type": "int"}, {"lineNumber": 268, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 268, "col_offset": 46, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 269, "col_offset": 32, "nodeName": "subreddit", "type": "Any"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "_generate_filestubs", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 54, "nodeName": "date_range", "type": "Tuple[Any, ...]"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "fname", "type": "Any"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "filenames", "type": "Union[Tuple[Any, ...], Tuple[()]]"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 292, "col_offset": 58, "nodeName": "subreddit", "type": "Union[Set[Any], Any]"}, {"lineNumber": 296, "col_offset": 38, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 296, "col_offset": 62, "nodeName": "get", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 299, "col_offset": 51, "nodeName": "line", "type": "Any"}, {"lineNumber": 300, "col_offset": 51, "nodeName": "min_len", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "_convert_timestamp", "type": "Callable[[Any], Any]"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "utcfromtimestamp", "type": "Callable"}, {"lineNumber": 326, "col_offset": 18, "nodeName": "content", "type": "unicode"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "fileio", "type": "module"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 278, "col_offset": 35, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 279, "col_offset": 19, "nodeName": "fname", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "needed_filenames", "type": "Set[Any]"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 296, "col_offset": 62, "nodeName": "line", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "self", "type": "RedditComments"}, {"lineNumber": 306, "col_offset": 67, "nodeName": "get", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 318, "col_offset": 49, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "replace", "type": "Callable[..., unicode]"}, {"lineNumber": 294, "col_offset": 39, "nodeName": "score_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 294, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 294, "col_offset": 73, "nodeName": "score_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 297, "col_offset": 38, "nodeName": "date_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 297, "col_offset": 55, "nodeName": "line", "type": "Any"}, {"lineNumber": 297, "col_offset": 77, "nodeName": "date_range", "type": "Union[Tuple[Any, ...], Any]"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "line", "type": "Any"}, {"lineNumber": 306, "col_offset": 67, "nodeName": "line", "type": "Any"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "content", "type": "unicode"}]