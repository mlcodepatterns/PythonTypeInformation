[{"lineNumber": 13, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_words", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_words_filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_words_good_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_words_min_freq", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_ngrams_less_than_1", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_ngrams_n", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_ngrams_filter", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "test_ngrams_min_freq", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_ngrams_good_tag", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_named_entities", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_named_entities_good", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_named_entities_min_freq", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_named_entities_determiner", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_named_entities_drop_determiners", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test_noun_chunks", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_noun_chunks_determiner", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_noun_chunks_min_freq", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_pos_regex_matches", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "test_subject_verb_object_triples", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_acronyms_and_definitions", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_acronyms_and_definitions_known", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "test_direct_quotations", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "maxDiff", "type": "None"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "n", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "include_types", "type": "Set[unicode]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ents", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "expected", "type": "Dict[unicode, unicode]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "observed", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "Dict[unicode, unicode]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "load_spacy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "update", "type": "Callable[[Iterable[Any]], None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "update", "type": "Callable[[Iterable[Any]], None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "expected", "type": "List[nothing]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "observed", "type": "List[Any]"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "observed", "type": "List[unicode]"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "acronyms_and_definitions", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "observed", "type": "Dict[Any, Any]"}, {"lineNumber": 169, "col_offset": 35, "nodeName": "expected", "type": "Dict[unicode, unicode]"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "acronyms_and_definitions", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "observed", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "expected", "type": "Dict[unicode, unicode]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "observed", "type": "List[unicode]"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "expected", "type": "List[unicode]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "cache", "type": "module"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "collections", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "lower_", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "collections", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "extract", "type": "module"}, {"lineNumber": 168, "col_offset": 52, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "extract", "type": "module"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 36, "nodeName": "text", "type": "unicode"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "words", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "words", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "tok", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "tok", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "words", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "label_", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "ent_type", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "pos_", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "extract", "type": "module"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "noun_chunks", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "noun_chunks", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "noun_chunks", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "pos_regex_matches", "type": "Callable[[Any, Any], Generator[Any, Any, None]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "subject_verb_object_triples", "type": "Callable[[Any], Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "direct_quotations", "type": "Callable[[Any], Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "words", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "is_stop", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "is_punct", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "like_num", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "pos_", "type": "Any"}, {"lineNumber": 43, "col_offset": 51, "nodeName": "tok", "type": "Any"}, {"lineNumber": 43, "col_offset": 58, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "tok", "type": "Any"}, {"lineNumber": 51, "col_offset": 63, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "extract", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "n", "type": "int"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "extract", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "is_punct", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "like_num", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "extract", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "span", "type": "Any"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "extract", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "pos_", "type": "Any"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "span", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 70, "nodeName": "tok", "type": "Any"}, {"lineNumber": 87, "col_offset": 77, "nodeName": "span", "type": "Any"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "ent", "type": "Any"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "ent", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "ent", "type": "Any"}, {"lineNumber": 93, "col_offset": 55, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "include_types", "type": "Set[unicode]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "label_", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "include_types", "type": "Set[unicode]"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "ent", "type": "Any"}, {"lineNumber": 99, "col_offset": 67, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "extract", "type": "module"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "extract", "type": "module"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "ent", "type": "Any"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "ent", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "ents", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "extract", "type": "module"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "extract", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "extract", "type": "module"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "extract", "type": "module"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "extract", "type": "module"}, {"lineNumber": 163, "col_offset": 56, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "extract", "type": "module"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "extract", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "tok", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "tok", "type": "Any"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "tok", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "tok", "type": "Any"}, {"lineNumber": 36, "col_offset": 56, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "tok", "type": "Any"}, {"lineNumber": 37, "col_offset": 49, "nodeName": "tok", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "tok", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "extract", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "ExtractTestCase"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "n", "type": "int"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "span", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "span", "type": "Any"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "SpacySpan", "type": "Any"}, {"lineNumber": 63, "col_offset": 64, "nodeName": "span", "type": "Any"}, {"lineNumber": 63, "col_offset": 72, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "is_stop", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "is_stop", "type": "Any"}, {"lineNumber": 68, "col_offset": 72, "nodeName": "span", "type": "Any"}, {"lineNumber": 68, "col_offset": 80, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "tok", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "span", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 68, "nodeName": "tok", "type": "Any"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "span", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "tok", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "span", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 68, "nodeName": "tok", "type": "Any"}, {"lineNumber": 70, "col_offset": 75, "nodeName": "span", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "tok", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "ent", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "ent", "type": "Any"}, {"lineNumber": 110, "col_offset": 55, "nodeName": "ent", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "POS_REGEX_PATTERNS", "type": "Dict[unicode, Dict[unicode, unicode]]"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "lower_", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "span", "type": "Any"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "n", "type": "int"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "lower_", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "constants", "type": "module"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "tok", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "span", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "span", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "spacy_doc", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "span", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "self", "type": "ExtractTestCase"}]