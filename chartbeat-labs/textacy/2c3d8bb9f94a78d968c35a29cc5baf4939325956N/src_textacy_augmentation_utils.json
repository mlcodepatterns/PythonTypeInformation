[{"lineNumber": 21, "col_offset": 0, "nodeName": "to_aug_toks", "type": "Callable[[Any], List[namedtuple_AugTok_text_ws_pos_is_word_syns]]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "concept_net", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "udhr", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "AugTok", "type": "Type[namedtuple_AugTok_text_ws_pos_is_word_syns]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "ConceptNet", "type": "Any"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "UDHR", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "lang", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "lang", "type": "Any"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "char_weights", "type": "Union[List[Tuple[str, int]], List[Tuple[Any, int]]]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "resources", "type": "Any"}, {"lineNumber": 15, "col_offset": 7, "nodeName": "datasets", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "collections", "type": "module"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "toks_syns", "type": "Generator[List[nothing], Any, None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "toks_syns", "type": "Generator[Any, Any, None]"}, {"lineNumber": 21, "col_offset": 53, "nodeName": "AugTok", "type": "Type[namedtuple_AugTok_text_ws_pos_is_word_syns]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "char_weights", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "Union", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "lang", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "synonyms", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "char_weights", "type": "List[Tuple[str, int]]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "Span", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "concept_net", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "concept_net", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "_", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "tok", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "tok", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "syns", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "toks_syns", "type": "Union[Generator[Any, Any, None], Generator[List[nothing], Any, None]]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "Span", "type": "Any"}, {"lineNumber": 28, "col_offset": 61, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 28, "col_offset": 66, "nodeName": "Span", "type": "Any"}, {"lineNumber": 28, "col_offset": 73, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 28, "col_offset": 78, "nodeName": "spacy_obj", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "ascii_lowercase", "type": "str"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "digits", "type": "str"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "repeat", "type": "Callable"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "collections", "type": "module"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "char", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "string", "type": "module"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "string", "type": "module"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "itertools", "type": "module"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 69, "col_offset": 59, "nodeName": "char", "type": "Any"}, {"lineNumber": 69, "col_offset": 67, "nodeName": "text", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "texts", "type": "Any"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "isalnum", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "udhr", "type": "Any"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "lang", "type": "str"}, {"lineNumber": 69, "col_offset": 75, "nodeName": "char", "type": "Any"}]