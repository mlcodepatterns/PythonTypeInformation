[{"lineNumber": 14, "col_offset": 0, "nodeName": "NUMERIC_NE_TYPES", "type": "Set[str]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "SUBJ_DEPS", "type": "Set[str]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "OBJ_DEPS", "type": "Set[str]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "AUX_DEPS", "type": "Set[str]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "REPORTING_VERBS", "type": "Set[str]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "CURRENCIES", "type": "Dict[str, str]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "POS_REGEX_PATTERNS", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "PUNCT_TRANSLATE_BYTES", "type": "bytes"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "ACRONYM_REGEX", "type": "Pattern[str]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "EMAIL_REGEX", "type": "Pattern[str]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "PHONE_REGEX", "type": "Pattern[str]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "NUMBERS_REGEX", "type": "Pattern[str]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "CURRENCY_REGEX", "type": "Pattern[str]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "LINEBREAK_REGEX", "type": "Pattern[str]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "NONBREAKING_SPACE_REGEX", "type": "Pattern[str]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "URL_REGEX", "type": "Pattern[str]"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "SHORT_URL_REGEX", "type": "Pattern[str]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "DANGLING_PARENS_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "LEAD_TAIL_CRUFT_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "LEAD_HYPHEN_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "NEG_DIGIT_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "WEIRD_HYPHEN_SPACE_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "WEIRD_APOSTR_SPACE_TERM_RE", "type": "Pattern[str]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "fromkeys", "type": "Callable"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 46, "col_offset": 146, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "re", "type": "module"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "re", "type": "module"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "re", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "re", "type": "module"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "re", "type": "module"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "re", "type": "module"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "re", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 146, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 128, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 47, "col_offset": 144, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "UNICODE", "type": "int"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 98, "col_offset": 10, "nodeName": "re", "type": "module"}, {"lineNumber": 102, "col_offset": 58, "nodeName": "re", "type": "module"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "re", "type": "module"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "re", "type": "module"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "re", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "maxunicode", "type": "int"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 47, "col_offset": 128, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 144, "nodeName": "re", "type": "module"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "re", "type": "module"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "chr_", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 50, "col_offset": 62, "nodeName": "c", "type": "str"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "c", "type": "str"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "category", "type": "Callable[[str], str]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "compat", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 50, "col_offset": 52, "nodeName": "re", "type": "module"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "chr_", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "PUNCT_TRANSLATE_UNICODE", "type": "Dict[int, None]"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "CURRENCIES", "type": "Dict[str, str]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "compat", "type": "Any"}]