[{"lineNumber": 14, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_streaming_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_vectorization_and_topic_modeling_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_corpus_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_plaintext_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_extract_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_text_stats_functionality", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "cw", "type": "textacy.datasets.capitol_words.CapitolWords"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "records", "type": "Generator[Any, Any, None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "n_topics", "type": "int"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "top_n", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "model", "type": "textacy.tm.topic_model.TopicModel"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "doc_topic_matrix", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "keyword", "type": "unicode"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "kwics", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "bigram", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "bigrams", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "trigram", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "trigrams", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "ne", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "nes", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "pos_regex_matches", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "stmt", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "stmts", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "keyterm", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "keyterms", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "basic_counts", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "basic_counts", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "field", "type": "unicode"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "readability_stats", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "readability_stats", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "field", "type": "unicode"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "load_spacy", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "CapitolWords", "type": "Type[textacy.datasets.capitol_words.CapitolWords]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "records", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "split_record_fields", "type": "Callable[..., Any]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "records", "type": "Generator[Any, Any, None]"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "cw", "type": "textacy.datasets.capitol_words.CapitolWords"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "Dataset", "type": "Type[textacy.datasets.base.Dataset]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "Corpus", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "Vectorizer", "type": "Type[textacy.vsm.Vectorizer]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "fit_transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "TopicModel", "type": "Type[textacy.tm.topic_model.TopicModel]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "fit", "type": "Callable[[Any], None]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "doc_term_matrix", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "doc_term_matrix", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "doc_term_matrix", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "doc_topic_matrix", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 52, "nodeName": "n_topics", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "topic_idx", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "top_terms", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "top_topic_terms", "type": "Callable[..., Generator[Tuple[Any, Tuple[Any, ...]], Any, None]]"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "id_to_term", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "preprocessed_text", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "keyword_in_context", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "keyword", "type": "unicode"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "pre", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "kw", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "post", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "textrank", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "TextStats", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "doc", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "n_words", "type": "Any"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "flesch_kincaid_grade_level", "type": "Any"}, {"lineNumber": 117, "col_offset": 61, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "ts", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "basic_counts", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "ts", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "readability_stats", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "data", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "datasets", "type": "module"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "textacy", "type": "module"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "strip", "type": "Any"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "spacy_lang", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "cw", "type": "textacy.datasets.capitol_words.CapitolWords"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "fileio", "type": "module"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "textacy", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "text_stream", "type": "Any"}, {"lineNumber": 25, "col_offset": 58, "nodeName": "metadata_stream", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "base", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "textacy", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "textacy", "type": "module"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "vectorizer", "type": "textacy.vsm.Vectorizer"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "textacy", "type": "module"}, {"lineNumber": 40, "col_offset": 51, "nodeName": "n_topics", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "model", "type": "textacy.tm.topic_model.TopicModel"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "model", "type": "textacy.tm.topic_model.TopicModel"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "sp", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "model", "type": "textacy.tm.topic_model.TopicModel"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "vectorizer", "type": "textacy.vsm.Vectorizer"}, {"lineNumber": 46, "col_offset": 87, "nodeName": "top_n", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "topic_idx", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "top_n", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "textacy", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "preprocess_text", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "text_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "kw", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "keyword", "type": "unicode"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "pre", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "unicode_", "type": "Union[Type[str], Type[unicode]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "post", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "unicode_", "type": "Union[Type[str], Type[unicode]]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "bigram", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "SpacySpan", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "trigram", "type": "Any"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "SpacySpan", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "ne", "type": "Any"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "SpacySpan", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "label_", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "label_", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "match", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "SpacySpan", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "stmt", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "unicode_", "type": "Union[Type[str], Type[unicode]]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "keyterms", "type": "module"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "keyterm", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "unicode_", "type": "Union[Type[str], Type[unicode]]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "textacy", "type": "module"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "ts", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "ts", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "textacy", "type": "module"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "textacy", "type": "module"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "texts", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 55, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "textacy", "type": "module"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "datasets", "type": "module"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "doc", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "doc_topic_matrix", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "top_terms", "type": "Tuple[Any, ...]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "textacy", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "textacy", "type": "module"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "compat", "type": "module"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "compat", "type": "module"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "bigram", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "ngrams", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "trigram", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "named_entities", "type": "Callable[..., Generator[Any, Any, None]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "ne", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "ne", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "pos_regex_matches", "type": "Callable[[Any, Any], Generator[Any, Any, None]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "semistructured_statements", "type": "Callable[..., Generator[Tuple[Any, Any, Any], Any, None]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "stmt", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "compat", "type": "module"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "stmt", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "textacy", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "keyterm", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "compat", "type": "module"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "keyterm", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "field", "type": "unicode"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "field", "type": "unicode"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "cw", "type": "textacy.datasets.capitol_words.CapitolWords"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "textacy", "type": "module"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "corpus", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "islower", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "char", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "preprocessed_text", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "char", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "preprocessed_text", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "textacy", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "textacy", "type": "module"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "extract", "type": "module"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "extract", "type": "module"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "extract", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "extract", "type": "module"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "extract", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "textacy", "type": "module"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "textacy", "type": "module"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "keyterm", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "basic_counts", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "readability_stats", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "self", "type": "ReadmeTestCase"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "char", "type": "Any"}, {"lineNumber": 62, "col_offset": 64, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "isalnum", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "isspace", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "textacy", "type": "module"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "textacy", "type": "module"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "textacy", "type": "module"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "textacy", "type": "module"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "POS_REGEX_PATTERNS", "type": "Dict[unicode, Dict[unicode, unicode]]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "textacy", "type": "module"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 62, "col_offset": 64, "nodeName": "char", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "char", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "char", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "constants", "type": "module"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "doc", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "textacy", "type": "module"}]