[{"lineNumber": 7, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "test_mapper", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_convert_coordinates", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_pixel_bbox", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_pixel_bounds_convert", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_bbox_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 68, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "test_tile_data", "type": "str"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "classes", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "match_label", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "bc", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "passing", "type": "List[int]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "failing", "type": "List[int]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "x", "type": "int"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "y", "type": "int"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "z", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "_mapper", "type": "Any"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "x", "type": "int"}, {"lineNumber": 18, "col_offset": 33, "nodeName": "y", "type": "int"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "z", "type": "int"}, {"lineNumber": 18, "col_offset": 39, "nodeName": "test_tile_data", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "_mapper", "type": "Any"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "x", "type": "int"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "y", "type": "int"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "z", "type": "int"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "test_tile_data", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "tile", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "_mapper", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "x", "type": "int"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "y", "type": "int"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "z", "type": "int"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "test_tile_data", "type": "str"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "match_label", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "tile", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "_bbox_class", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 19, "col_offset": 56, "nodeName": "x", "type": "int"}, {"lineNumber": 19, "col_offset": 59, "nodeName": "y", "type": "int"}, {"lineNumber": 19, "col_offset": 62, "nodeName": "z", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 24, "col_offset": 55, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 56, "nodeName": "x", "type": "int"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "y", "type": "int"}, {"lineNumber": 25, "col_offset": 62, "nodeName": "z", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 30, "col_offset": 55, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "int", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 56, "nodeName": "x", "type": "int"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "y", "type": "int"}, {"lineNumber": 33, "col_offset": 62, "nodeName": "z", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "label", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "match_label", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "_convert_coordinates", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "_convert_coordinates", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "_convert_coordinates", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "_pixel_bbox", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "_pixel_bounds_convert", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "bc", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "passing", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestLabel"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "bc", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "failing", "type": "List[int]"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 18, "col_offset": 85, "nodeName": "classes", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 68, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 24, "col_offset": 85, "nodeName": "classes", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 30, "col_offset": 68, "nodeName": "ml_type", "type": "str"}, {"lineNumber": 30, "col_offset": 85, "nodeName": "classes", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 69, "nodeName": "int", "type": "Any"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 85, "nodeName": "int", "type": "Any"}, {"lineNumber": 20, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 85, "nodeName": "np", "type": "module"}]