[{"lineNumber": 18, "col_offset": 0, "nodeName": "titlecase", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "replace_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "ret", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "first", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "word", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "ret", "type": "str"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "ret", "type": "str"}, {"lineNumber": 64, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "scriptdir", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "datadir", "type": "str"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "infiles", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "infile", "type": "str"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "infiles", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "s", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "split", "type": "Callable"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "s", "type": "Any"}, {"lineNumber": 39, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "ret", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "scriptdir", "type": "str"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "title", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "outfile", "type": "str"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "first", "type": "bool"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "word", "type": "str"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "first", "type": "bool"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "word", "type": "str"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "first", "type": "bool"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "skip", "type": "bool"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "tail", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "__file__", "type": "str"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "path", "type": "module"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "parse", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "infile", "type": "str"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "getroot", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "tail", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "tail", "type": "str"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "xpath", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "title_text", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "ratio", "type": "float"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "outdir", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "outfile", "type": "str"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "word", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "ret", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "text", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "skip", "type": "bool"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "child", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "skip", "type": "bool"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "child", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "text", "type": "str"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "glob", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "datadir", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "etree", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "root", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "get_text", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "title", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "ratio", "type": "float"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 90, "col_offset": 76, "nodeName": "infile", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "word", "type": "str"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "isalpha", "type": "Callable[[], bool]"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "c", "type": "str"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "word", "type": "str"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "tail", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "skip", "type": "bool"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "tail", "type": "str"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 73, "nodeName": "title_text", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "replace_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "title", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "upper", "type": "Callable[[], str]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "c", "type": "str"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "child", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "child", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "text", "type": "Optional[str]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "n", "type": "int"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "os", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "titlecase", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "title_text", "type": "Any"}, {"lineNumber": 90, "col_offset": 59, "nodeName": "os", "type": "module"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "n", "type": "int"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "c", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "title_text", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "word", "type": "str"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "word", "type": "str"}, {"lineNumber": 87, "col_offset": 50, "nodeName": "c", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "lower", "type": "Any"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "c", "type": "Any"}]