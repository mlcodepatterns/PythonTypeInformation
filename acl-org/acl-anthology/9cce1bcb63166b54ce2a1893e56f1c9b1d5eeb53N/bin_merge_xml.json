[{"lineNumber": 36, "col_offset": 0, "nodeName": "opentag", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "merge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "unique_attributes", "type": "Set[str]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "recurse_elements", "type": "Set[str]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "exclude_elements", "type": "Set[str]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "copy", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "aroot", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "broot", "type": "Any"}, {"lineNumber": 80, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "atree", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "btree", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "Element", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "copy", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "copy", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "achildren", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "bchildren", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "indent", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "after", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "getroot", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "getroot", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 10, "nodeName": "aroot", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "broot", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 91, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "outfile", "type": "file"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "outfile", "type": "IO[str]"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "stdout", "type": "IO[str]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "parse", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "afile", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "parse", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "bfile", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "merge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "atree", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "btree", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "write", "type": "Union[Callable[[Union[bytearray, str, unicode]], int], Callable[[Union[bytearray, str, unicode]], None]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "etree", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "a", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "unique_attributes", "type": "Set[str]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "etree", "type": "Any"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "splitlines", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "anode", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "bnode", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "text", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "tail", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "op", "type": "str"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "ai", "type": "int"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "aj", "type": "int"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "bi", "type": "int"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "bj", "type": "int"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "get_opcodes", "type": "Callable[[], List[Tuple[str, int, int, int, int]]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "atree", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "btree", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "argparse", "type": "module"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "ap", "type": "argparse.ArgumentParser"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "sys", "type": "module"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "etree", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "etree", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "outfile", "type": "Union[IO[str], file]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "decode", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "attrib", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "attrib", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "s", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "recurse_elements", "type": "Set[str]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "tag", "type": "Any"}, {"lineNumber": 48, "col_offset": 66, "nodeName": "recurse_elements", "type": "Set[str]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "opentag", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "opentag", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "anode", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "strip", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "op", "type": "str"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "a", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "anode", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "bnode", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "anode", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "indent", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "after", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "SequenceMatcher", "type": "Type[difflib.SequenceMatcher[Any]]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "bchildren", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "tail", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "indent", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "tail", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "after", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "op", "type": "str"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "atree", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "difflib", "type": "module"}, {"lineNumber": 59, "col_offset": 40, "nodeName": "bi", "type": "int"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "bj", "type": "int"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "tag", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "exclude_elements", "type": "Set[str]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "achild", "type": "nothing"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "bchild", "type": "nothing"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "etree", "type": "Any"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 93, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "tag", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "text", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "logging", "type": "module"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "sourceline", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "anode", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "anode", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "anode", "type": "Any"}, {"lineNumber": 73, "col_offset": 42, "nodeName": "achildren", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "bchildren", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "achild", "type": "nothing"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "bchild", "type": "nothing"}, {"lineNumber": 57, "col_offset": 65, "nodeName": "map", "type": "Callable"}, {"lineNumber": 57, "col_offset": 69, "nodeName": "opentag", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 78, "nodeName": "achildren", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 98, "nodeName": "map", "type": "Callable"}, {"lineNumber": 57, "col_offset": 102, "nodeName": "opentag", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 111, "nodeName": "bchildren", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "logging", "type": "module"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "sourceline", "type": "Any"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "tag", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "sourceline", "type": "Any"}, {"lineNumber": 65, "col_offset": 86, "nodeName": "tag", "type": "Any"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 68, "col_offset": 74, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 68, "col_offset": 89, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "copy", "type": "module"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "ai", "type": "int"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "aj", "type": "int"}, {"lineNumber": 73, "col_offset": 70, "nodeName": "bi", "type": "int"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "bj", "type": "int"}, {"lineNumber": 61, "col_offset": 67, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "find", "type": "Any"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 65, "col_offset": 86, "nodeName": "bchild", "type": "Any"}, {"lineNumber": 68, "col_offset": 74, "nodeName": "etree", "type": "Any"}, {"lineNumber": 68, "col_offset": 106, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "getparent", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "bchild", "type": "Any"}]