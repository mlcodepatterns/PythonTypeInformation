[{"lineNumber": 45, "col_offset": 0, "nodeName": "parse_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "unparse_latex", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "xmlify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "unicodify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 0, "nodeName": "unicodify_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 0, "nodeName": "contents", "type": "Callable[[Any], Any]"}, {"lineNumber": 263, "col_offset": 0, "nodeName": "convert_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 0, "nodeName": "convert_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "closers", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "tags", "type": "Dict[Any, Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "token_re", "type": "Pattern[str]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "trivial_math_re", "type": "Pattern[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "open", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "e", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "close", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "e", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tag", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "e", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "DOTALL", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "toks", "type": "collections.deque[Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "leading_space", "type": "bool"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "leading_space", "type": "bool"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 240, "col_offset": 11, "nodeName": "s", "type": "str"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "child", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "t", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 280, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "collections", "type": "module"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "Entry", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "e", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "e", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "table", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "e", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "e", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "table", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "e", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "e", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "table", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "re", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "deque", "type": "Type[collections.deque[Any]]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "toks", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "open", "type": "str"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "tok", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "l", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "open", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "tag", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "tag", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "verbatim", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "s", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 175, "col_offset": 59, "nodeName": "s", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "decode", "type": "Callable"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "s", "type": "str"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "s", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "s", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 190, "col_offset": 43, "nodeName": "s", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "s", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "s", "type": "str"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 224, "col_offset": 71, "nodeName": "s", "type": "str"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "s", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "normalize", "type": "Callable[[str, str], str]"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "s", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 232, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "repl", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 46, "nodeName": "s", "type": "str"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 10, "nodeName": "t", "type": "Any"}, {"lineNumber": 257, "col_offset": 7, "nodeName": "text", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "s", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "xmlify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "s", "type": "str"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "unicodify_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "contents", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "t", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "xmlify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "s", "type": "str"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "unicodify_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "input", "type": "Callable"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "type", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "token_re", "type": "Pattern[str]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "collections", "type": "module"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "open", "type": "str"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "toks", "type": "collections.deque[Any]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "popleft", "type": "Callable"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "prev", "type": "Any"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "close_implicit", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "delete_root", "type": "bool"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "parse_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "codecs", "type": "module"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "s", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 224, "col_offset": 80, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "verbatim", "type": "Any"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 257, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "html", "type": "module"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "etree", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "etree", "type": "Any"}, {"lineNumber": 274, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "etree", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "fileinput", "type": "module"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "convert_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "e", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "toks", "type": "collections.deque[Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "tok", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "open", "type": "str"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "last", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "open", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "close", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "unparse_latex", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "close", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "close", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "open", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "close", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "s", "type": "str"}, {"lineNumber": 224, "col_offset": 80, "nodeName": "re", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "tags", "type": "Dict[Any, Any]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "unicodify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "text", "type": "str"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "child", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "tail", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "tail", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "escape", "type": "Callable"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "text", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "child", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "etree", "type": "Any"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "tok", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "closers", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "open", "type": "str"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "open", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "open", "type": "str"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "tok", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "prev", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "type", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "close", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "close", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "open", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "open", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "fullmatch", "type": "Callable"}, {"lineNumber": 138, "col_offset": 63, "nodeName": "text", "type": "str"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "text", "type": "str"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "tag", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "open", "type": "str"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "close", "type": "str"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "child", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 236, "col_offset": 72, "nodeName": "group", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "tags", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "node", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "child", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "unicodify_string", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "tail", "type": "str"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "html", "type": "module"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "etree", "type": "Any"}, {"lineNumber": 260, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "etree", "type": "Any"}, {"lineNumber": 287, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 62, "nodeName": "open", "type": "str"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "close_implicit", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 79, "col_offset": 18, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "last", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "unparse_latex", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 37, "nodeName": "trivial_math_re", "type": "Pattern[str]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "tag", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "text", "type": "str"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "tag", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "open", "type": "str"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "close", "type": "str"}, {"lineNumber": 236, "col_offset": 72, "nodeName": "m", "type": "Any"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "tag", "type": "Any"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "child", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "open", "type": "str"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "closers", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 90, "col_offset": 35, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "l", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "openers", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "unparse_latex", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 46, "nodeName": "l", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "open", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "tag", "type": "Any"}, {"lineNumber": 148, "col_offset": 50, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 65, "nodeName": "tag", "type": "Any"}, {"lineNumber": 245, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "prev", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "open", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "stack", "type": "List[List[Any]]"}]