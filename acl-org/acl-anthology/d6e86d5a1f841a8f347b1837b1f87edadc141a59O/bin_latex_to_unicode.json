[{"lineNumber": 34, "col_offset": 0, "nodeName": "tokenize_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "parse_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "latex_to_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 0, "nodeName": "flatten_trivial_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 0, "nodeName": "append_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 266, "col_offset": 0, "nodeName": "latextree_to_xml", "type": "Callable[[Any], Any]"}, {"lineNumber": 305, "col_offset": 0, "nodeName": "xml_to_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 319, "col_offset": 0, "nodeName": "latex_to_xml", "type": "Callable[..., Any]"}, {"lineNumber": 329, "col_offset": 0, "nodeName": "find_fixed_case", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "closers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "tags", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "token_re", "type": "Pattern[str]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "math_table", "type": "Dict[str, str]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "c", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "open", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "close", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tag", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "DOTALL", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "tok", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "leading_space", "type": "bool"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 159, "col_offset": 7, "nodeName": "leading_space", "type": "bool"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "s", "type": "str"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "s", "type": "str"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "c", "type": "str"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "xroot", "type": "Any"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "xroot", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "xtree", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "xtree", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "tree", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 7, "nodeName": "fixed_case", "type": "bool"}, {"lineNumber": 323, "col_offset": 7, "nodeName": "trivial_math", "type": "bool"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "tree", "type": "Any"}, {"lineNumber": 357, "col_offset": 7, "nodeName": "conservative", "type": "bool"}, {"lineNumber": 369, "col_offset": 4, "nodeName": "node", "type": "Any"}, {"lineNumber": 371, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 373, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "collections", "type": "module"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 20, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "Entry", "type": "Type[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "table", "type": "List[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "table", "type": "List[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "table", "type": "List[`namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 33, "col_offset": 47, "nodeName": "re", "type": "module"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "s", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "open", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "tokenize_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 10, "nodeName": "l", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "unescape", "type": "Callable"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "s", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "s", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 136, "col_offset": 58, "nodeName": "s", "type": "str"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 137, "col_offset": 50, "nodeName": "s", "type": "str"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "s", "type": "str"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "s", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 152, "col_offset": 66, "nodeName": "s", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "decode", "type": "Callable"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "s", "type": "str"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "s", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "replace", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "replace", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "replace", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "replace", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 168, "col_offset": 63, "nodeName": "s", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 169, "col_offset": 65, "nodeName": "s", "type": "str"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 170, "col_offset": 77, "nodeName": "s", "type": "str"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 193, "col_offset": 42, "nodeName": "s", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 14, "nodeName": "s", "type": "str"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 200, "col_offset": 74, "nodeName": "s", "type": "str"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "s", "type": "str"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "s", "type": "str"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "d", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "join", "type": "Callable"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "normalize", "type": "Callable[[str, str], str]"}, {"lineNumber": 223, "col_offset": 37, "nodeName": "s", "type": "str"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "repl", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "s", "type": "str"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "math_table", "type": "Dict[str, str]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 256, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "text", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "tail", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "Element", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "visit", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "xroot", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "tail", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "xtree", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 10, "nodeName": "xtree", "type": "Any"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "parse_latex", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 23, "nodeName": "s", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 325, "col_offset": 11, "nodeName": "latextree_to_xml", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "tree", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "xml_to_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "tree", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "prev", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "braces", "type": "int"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "text", "type": "bool"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 370, "col_offset": 10, "nodeName": "node", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "input", "type": "Callable"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "type", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "token_re", "type": "Pattern[str]"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "open", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "open", "type": "Any"}, {"lineNumber": 103, "col_offset": 10, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "close_implicit", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "l", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "l", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "html", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "codecs", "type": "module"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "s", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "s", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 200, "col_offset": 83, "nodeName": "IGNORECASE", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "decomposition", "type": "Callable[[str], str]"}, {"lineNumber": 215, "col_offset": 38, "nodeName": "c", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "d", "type": "str"}, {"lineNumber": 219, "col_offset": 19, "nodeName": "c", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "map", "type": "Callable"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "decompose", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "s", "type": "str"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "s", "type": "str"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "re", "type": "module"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "c", "type": "str"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "copy", "type": "module"}, {"lineNumber": 261, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "text", "type": "Any"}, {"lineNumber": 264, "col_offset": 50, "nodeName": "text", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 270, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "open", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "tag", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "tag", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "etree", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "text", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 313, "col_offset": 11, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "tail", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "copy", "type": "module"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "find_fixed_case", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "tree", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "flatten_trivial_math", "type": "Callable[[Any], Any]"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "tree", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "cur", "type": "Any"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "cur", "type": "Any"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "cur", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "cur", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "prev", "type": "Any"}, {"lineNumber": 355, "col_offset": 19, "nodeName": "child", "type": "Any"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "node", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "copy", "type": "module"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "fileinput", "type": "module"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "latex_to_xml", "type": "Callable[..., Any]"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "e", "type": "`namedtuple-Entry-open-close-tag-type-verbatim`"}, {"lineNumber": 49, "col_offset": 14, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "tok", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "l", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "s", "type": "str"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "logging", "type": "module"}, {"lineNumber": 200, "col_offset": 83, "nodeName": "re", "type": "module"}, {"lineNumber": 204, "col_offset": 17, "nodeName": "logging", "type": "module"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "normalize", "type": "Callable[[str, str], str]"}, {"lineNumber": 217, "col_offset": 49, "nodeName": "c", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "tag", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "child", "type": "Any"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "tail", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "append_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "xparent", "type": "Any"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "child", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "verbatim", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "tag", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "verbatim", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "latex_to_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "tail", "type": "str"}, {"lineNumber": 334, "col_offset": 11, "nodeName": "cur", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "visit", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "child", "type": "Any"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "prev", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "text", "type": "bool"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "braces", "type": "int"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "text", "type": "bool"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "braces", "type": "int"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "tree", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "type", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "tok", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "math_mode", "type": "bool"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "tok", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "tok", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "c", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "s", "type": "str"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "unicodedata", "type": "module"}, {"lineNumber": 230, "col_offset": 64, "nodeName": "group", "type": "Any"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "append_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "xparent", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "append_text", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "xparent", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "Element", "type": "Any"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "tag", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "type", "type": "Any"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "text", "type": "str"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "child", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "latex_to_unicode", "type": "Callable[[Any], Any]"}, {"lineNumber": 310, "col_offset": 46, "nodeName": "text", "type": "str"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "visit", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 22, "nodeName": "child", "type": "Any"}, {"lineNumber": 314, "col_offset": 42, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "conservative", "type": "bool"}, {"lineNumber": 349, "col_offset": 13, "nodeName": "cur", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "child", "type": "Any"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 364, "col_offset": 26, "nodeName": "child", "type": "Any"}, {"lineNumber": 364, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "etree", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "open", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "closers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "open", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "tok", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "close_implicit", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "top", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 230, "col_offset": 64, "nodeName": "s", "type": "Any"}, {"lineNumber": 245, "col_offset": 13, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "open", "type": "Any"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "visit", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "child", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "xparent", "type": "Any"}, {"lineNumber": 282, "col_offset": 37, "nodeName": "node", "type": "Any"}, {"lineNumber": 286, "col_offset": 24, "nodeName": "etree", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "xparent", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 296, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "node", "type": "Any"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "tags", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 310, "col_offset": 46, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 335, "col_offset": 44, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 336, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "prev", "type": "None"}, {"lineNumber": 339, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 339, "col_offset": 60, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "conservative", "type": "bool"}, {"lineNumber": 362, "col_offset": 46, "nodeName": "isspace", "type": "Any"}, {"lineNumber": 364, "col_offset": 43, "nodeName": "child", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "open", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "open", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "d", "type": "str"}, {"lineNumber": 248, "col_offset": 45, "nodeName": "child", "type": "Any"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "math_table", "type": "Dict[str, str]"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "openers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 295, "col_offset": 27, "nodeName": "open", "type": "Any"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "visit", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "child", "type": "Any"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 308, "col_offset": 43, "nodeName": "tag", "type": "Any"}, {"lineNumber": 335, "col_offset": 27, "nodeName": "cur", "type": "Any"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "cur", "type": "Any"}, {"lineNumber": 339, "col_offset": 60, "nodeName": "prev", "type": "None"}, {"lineNumber": 343, "col_offset": 52, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 343, "col_offset": 71, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "cur", "type": "Any"}, {"lineNumber": 362, "col_offset": 46, "nodeName": "child", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "closers", "type": "Dict[Any, `namedtuple-Entry-open-close-tag-type-verbatim`]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 248, "col_offset": 54, "nodeName": "node", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "node", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "math_table", "type": "Dict[str, str]"}, {"lineNumber": 289, "col_offset": 27, "nodeName": "open", "type": "Any"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 296, "col_offset": 41, "nodeName": "flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 49, "nodeName": "child", "type": "Any"}, {"lineNumber": 296, "col_offset": 60, "nodeName": "child", "type": "Any"}, {"lineNumber": 308, "col_offset": 43, "nodeName": "xnode", "type": "Any"}, {"lineNumber": 335, "col_offset": 44, "nodeName": "cur", "type": "Any"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "cur", "type": "Any"}, {"lineNumber": 343, "col_offset": 63, "nodeName": "cur", "type": "Any"}, {"lineNumber": 347, "col_offset": 41, "nodeName": "cur", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "tokr", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "child", "type": "Any"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "math_table", "type": "Dict[str, str]"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 296, "col_offset": 69, "nodeName": "node", "type": "Any"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "cur", "type": "Any"}, {"lineNumber": 343, "col_offset": 81, "nodeName": "cur", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "stack", "type": "List[List[Any]]"}, {"lineNumber": 245, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "node", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 252, "col_offset": 50, "nodeName": "i", "type": "int"}]