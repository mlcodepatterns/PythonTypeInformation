[{"lineNumber": 14, "col_offset": 0, "nodeName": "find_any", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "protect_recurse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "protect", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "child", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "tail", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "tail", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "truelist", "type": "Set[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "paper", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "j", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "tag", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tail", "type": "None"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "Element", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "tag", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "attrib", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "process", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "protect_recurse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "node", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "open", "type": "Callable"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "infile", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "outfile", "type": "str"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "parse", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "infile", "type": "str"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "findall", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "title", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "outfile", "type": "str"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "outfilehandle", "type": "TextIO"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "find", "type": "Any"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "w", "type": "Any"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "j", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "node", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "ET", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "find_any", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "append_text", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "process", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "tail", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "line", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "line", "type": "str"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "sys", "type": "module"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "ET", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "xpath", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "titletext", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "fixed", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "tree", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "outfile", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "i", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "append_text", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "upper", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "chars", "type": "Iterator[Any]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "groupby", "type": "Callable"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "upper", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "find_any", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "text", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "i", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "protect_recurse", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "child", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "truelist", "type": "Set[str]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "getroot", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "paper", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "fixedcase_title", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "titletext", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "fixed", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "outfilehandle", "type": "TextIO"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "j", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "itertools", "type": "module"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "text", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "text", "type": "str"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "i", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "tree", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "get_text", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "title", "type": "Any"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "truelist", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 76, "nodeName": "falselist", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "replace_node", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "title", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "j", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "w", "type": "Any"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "j", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "Element", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "chars", "type": "Iterator[Any]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "append_text", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "b", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "protect", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "title", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "words", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "w", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "text", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "w", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 55, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "span", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "ET", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "newnode", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "chars", "type": "Iterator[Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "w", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "b", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "titletext", "type": "Any"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "fixed", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "decode", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "decode", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "j", "type": "Any"}, {"lineNumber": 18, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 51, "nodeName": "w", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "title", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 77, "col_offset": 42, "nodeName": "title", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "ET", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "ET", "type": "Any"}]