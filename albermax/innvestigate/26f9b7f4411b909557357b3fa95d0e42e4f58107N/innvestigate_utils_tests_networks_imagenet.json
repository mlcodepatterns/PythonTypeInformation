[{"lineNumber": 43, "col_offset": 0, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "vgg16_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "vgg16_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "vgg16", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "vgg16_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "vgg16", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "vgg19_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "vgg19", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "resnet50_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 0, "nodeName": "resnet50", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "inception_v3_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "inception_v3", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 0, "nodeName": "inception_resnet_v2_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 0, "nodeName": "inception_resnet_v2", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "output_n", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "offset", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "offset", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "output_n", "type": "int"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "pre_softmax_tensors", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "VGG16", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "activation", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "activation", "type": "str"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "VGG19", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "ResNet50", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 203, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "InceptionV3", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 220, "col_offset": 67, "nodeName": "X", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "InceptionResNetV2", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "base", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "base", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "base", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "base", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "base", "type": "Any"}, {"lineNumber": 151, "col_offset": 64, "nodeName": "output_n", "type": "int"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "base", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "output_n", "type": "int"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "vgg19", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "vgg19", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "resnet50", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "resnet50", "type": "Any"}, {"lineNumber": 194, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "inception_v3", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "inception_v3", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "inception_resnet_v2", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "inception_resnet_v2", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "X", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "activation", "type": "Union[Any, str]"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "keras", "type": "Any"}]