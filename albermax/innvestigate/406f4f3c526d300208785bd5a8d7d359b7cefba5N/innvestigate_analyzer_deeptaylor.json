[{"lineNumber": 20, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "ReverseAnalyzerBase", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "DeepTaylor", "type": "Type[DeepTaylor]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "base", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "positive_outputs", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "model_with_positive_output", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_bounds_low", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "low", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_bounds_high", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "high", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "BoundedRule", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "_add_model_softmax_check", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_add_model_check", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "As", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Alpha1Beta0Rule", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "WSquareRule", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "is_batch_normalization_layer", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "do_nothing", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "is_max_pooling", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "is_average_pooling", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_gradient_reverse_mapping", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "_create_analysis", "type": "Any"}, {"lineNumber": 134, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "Model", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "_prepare_model", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "model_with_positive_output", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "high", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "_bounds_low", "type": "Any"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "_bounds_high", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "lrp_rules", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_add_conditional_reverse_mapping", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "BoundedProxyRule", "type": "Type[Any]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "_create_analysis", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 41, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "lrp_rules", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "lrp_rules", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "kchecks", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "kchecks", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "kchecks", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "models", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "positive_outputs", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "low", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "high", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "DeepTaylor", "type": "Type[DeepTaylor]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "DeepTaylor", "type": "Type[DeepTaylor]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "model", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "keras", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "DeepTaylor", "type": "Type[DeepTaylor]"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "self", "type": "DeepTaylor"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "BoundedDeepTaylor", "type": "Type[BoundedDeepTaylor]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "BoundedDeepTaylor", "type": "Type[BoundedDeepTaylor]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "self", "type": "BoundedDeepTaylor"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "layers", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "low", "type": "Any"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "high", "type": "Any"}, {"lineNumber": 181, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "keras", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "BoundedProxyRule", "type": "Type[Any]"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "self", "type": "Any"}]