[{"lineNumber": 45, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "TrainerMixin", "type": "Type[TrainerMixin]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "_model_checks_msg", "type": "str"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_model_checks_raise_exception", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "model_checks_raise_exception", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "_model", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "neuron_selection_inputs", "type": "List[nothing]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "__class__", "type": "Type[AnalyzerBase]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "class_name", "type": "str"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "save", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "savez", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "fname", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "model_from_json", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "analyzer", "type": "module"}, {"lineNumber": 122, "col_offset": 47, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "fname", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "BatchSequence", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "X", "type": "None"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 22, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "_create_analysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 302, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 302, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "reverse_model", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "ret", "type": "Tuple[Any, Any]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "_reverse_tensors_mapping", "type": "Dict[int, Any]"}, {"lineNumber": 328, "col_offset": 44, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "flatnonzero", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "pop", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 356, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "model_contains", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "_model", "type": "Any"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "_model", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "_model", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "innvestigate", "type": "module"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 171, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "steps", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "compile_analyzer", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 278, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 48, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 299, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "GradientWRT", "type": "Any"}, {"lineNumber": 309, "col_offset": 50, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "_reverse_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "_default_reverse_mapping", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "_head_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 321, "col_offset": 40, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 324, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "_reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "_model_checks_raise_exception", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "class_name", "type": "str"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "Max", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 218, "col_offset": 42, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 55, "nodeName": "neuron_selection_inputs", "type": "List[nothing]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 272, "col_offset": 43, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 279, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 279, "col_offset": 44, "nodeName": "clazz", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 309, "col_offset": 44, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 309, "col_offset": 47, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 321, "col_offset": 40, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 326, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 326, "col_offset": 44, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "ret", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "listify", "type": "Any"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 333, "col_offset": 52, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 337, "col_offset": 40, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 339, "col_offset": 54, "nodeName": "nfinite_tensors", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 343, "col_offset": 43, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 356, "col_offset": 44, "nodeName": "clazz", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "listify", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "checks", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "_model_checks_msg", "type": "str"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "_model_checks_msg", "type": "str"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 324, "col_offset": 41, "nodeName": "ret", "type": "Any"}, {"lineNumber": 325, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 325, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 325, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 325, "col_offset": 56, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 327, "col_offset": 64, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "warnings", "type": "module"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "FiniteCheck", "type": "Any"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "ilayers", "type": "Any"}]