[{"lineNumber": 48, "col_offset": 35, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "_add_model_check", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "_do_model_checks", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "analyze", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "save_npz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "_state_to_kwargs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "load_npz", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 27, "nodeName": "TrainerMixin", "type": "Type[TrainerMixin]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "_add_model_softmax_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "_prepare_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "create_analyzer_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 435, "col_offset": 4, "nodeName": "_create_analysis", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "_handle_debug_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "analyze", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 4, "nodeName": "_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 507, "col_offset": 4, "nodeName": "_state_to_kwargs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 519, "col_offset": 26, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 579, "col_offset": 4, "nodeName": "_gradient_reverse_mapping", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "_reverse_mapping", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "_default_reverse_mapping", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "_head_mapping", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 601, "col_offset": 4, "nodeName": "_create_analysis", "type": "Callable[..., Any]"}, {"lineNumber": 649, "col_offset": 4, "nodeName": "_handle_debug_output", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 690, "col_offset": 4, "nodeName": "_state_to_kwargs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "model_checks", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "_model_check_done", "type": "bool"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "state", "type": "Dict[unicode, Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "steps", "type": "Optional[Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 334, "col_offset": 38, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "_allow_lambda_layers", "type": "Any"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "analysis_inputs", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "stop_analysis_at_tensors", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "tmp", "type": "Tuple[Any, List[Any], List[Any]]"}, {"lineNumber": 404, "col_offset": 59, "nodeName": "tmp", "type": "Tuple[Any, List[Any], List[Any]]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool]]"}, {"lineNumber": 505, "col_offset": 15, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool]]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 516, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 569, "col_offset": 32, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 570, "col_offset": 36, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 573, "col_offset": 45, "nodeName": "reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 574, "col_offset": 37, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "mask", "type": "List[bool]"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 617, "col_offset": 11, "nodeName": "return_all_reversed_tensors", "type": "Any"}, {"lineNumber": 647, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 651, "col_offset": 11, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 711, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_do_model_checks", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_model_checks", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "check", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "message", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "check_instance", "type": "Dict[unicode, Any]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "check", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "types", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "messages", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "checked", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Union[bool, Any]"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Union[bool, Any]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "__class__", "type": "Type[AnalyzerBase]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "class_name", "type": "str"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "state", "type": "Dict[unicode, Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "state", "type": "Dict[unicode, Any]"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "save", "type": "Callable[[], Any]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "savez", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "fname", "type": "Any"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "pop", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "model_from_json", "type": "Any"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "analyzer", "type": "module"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Any"}, {"lineNumber": 217, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "fname", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "BatchSequence", "type": "Any"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "X", "type": "None"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "_add_model_check", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_add_model_check", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 32, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 377, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "analysis_inputs", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "stop_analysis_at_tensors", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "_model", "type": "Any"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "_prepare_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 403, "col_offset": 34, "nodeName": "_model", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "analysis_inputs", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "stop_analysis_at_tensors", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 14, "nodeName": "_create_analysis", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 456, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 459, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 574, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 577, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 584, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 584, "col_offset": 22, "nodeName": "layer", "type": "Any"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "_gradient_reverse_mapping", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 589, "col_offset": 12, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "_gradient_reverse_mapping", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 596, "col_offset": 33, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "reverse_model", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "_debug_tensors_indices", "type": "Dict[unicode, Tuple[int, int]]"}, {"lineNumber": 621, "col_offset": 12, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "_reverse_tensors_mapping", "type": "Dict[int, Any]"}, {"lineNumber": 624, "col_offset": 44, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "ret", "type": "Tuple[Any, List[Any]]"}, {"lineNumber": 651, "col_offset": 11, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 666, "col_offset": 11, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 692, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "pop", "type": "Any"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 701, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_model_checks", "type": "List[Dict[unicode, Any]]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "model_contains", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "_model", "type": "Any"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "check", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "zip", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "messages", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 57, "nodeName": "types", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "checked_layers", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "message", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 152, "col_offset": 63, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "innvestigate", "type": "module"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 264, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 288, "col_offset": 54, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 288, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "steps", "type": "Optional[Any]"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 345, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 369, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 375, "col_offset": 50, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 378, "col_offset": 64, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 403, "col_offset": 34, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 406, "col_offset": 14, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 407, "col_offset": 44, "nodeName": "stop_analysis_at_tensors", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "create_analyzer_model", "type": "Callable[[], Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool]]"}, {"lineNumber": 503, "col_offset": 47, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool]]"}, {"lineNumber": 504, "col_offset": 45, "nodeName": "_allow_lambda_layers", "type": "Any"}, {"lineNumber": 509, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 513, "col_offset": 37, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 514, "col_offset": 35, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 577, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 580, "col_offset": 75, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "GradientWRT", "type": "Any"}, {"lineNumber": 581, "col_offset": 61, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "Max", "type": "Any"}, {"lineNumber": 584, "col_offset": 43, "nodeName": "Gather", "type": "Any"}, {"lineNumber": 587, "col_offset": 19, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 590, "col_offset": 15, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 595, "col_offset": 15, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 604, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 606, "col_offset": 14, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "_reverse_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 36, "nodeName": "_default_reverse_mapping", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "_head_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 36, "nodeName": "stop_analysis_at_tensors", "type": "Any"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 613, "col_offset": 38, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "_reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 615, "col_offset": 40, "nodeName": "return_all_reversed_tensors", "type": "Any"}, {"lineNumber": 619, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 622, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 626, "col_offset": 15, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 631, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 631, "col_offset": 33, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 16, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 637, "col_offset": 33, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 639, "col_offset": 15, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 640, "col_offset": 16, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 644, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 644, "col_offset": 33, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 646, "col_offset": 27, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 652, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[unicode, Tuple[int, int]]"}, {"lineNumber": 653, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 654, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 656, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 659, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[unicode, Tuple[int, int]]"}, {"lineNumber": 660, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 661, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 667, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[unicode, Tuple[int, int]]"}, {"lineNumber": 668, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 669, "col_offset": 30, "nodeName": "flatnonzero", "type": "Any"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 679, "col_offset": 41, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 680, "col_offset": 45, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 682, "col_offset": 22, "nodeName": "_reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 685, "col_offset": 46, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "state", "type": "Dict[unicode, Union[Any, bool, unicode]]"}, {"lineNumber": 687, "col_offset": 22, "nodeName": "_reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 692, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 693, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 695, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 697, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 698, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 700, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[unicode, Any]"}, {"lineNumber": 702, "col_offset": 42, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 703, "col_offset": 46, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 707, "col_offset": 23, "nodeName": "reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 708, "col_offset": 47, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 710, "col_offset": 23, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "model_checks", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "model_checks", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "model_checks", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "model_checks", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "to_list", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "checked", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "_model", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "_model", "type": "Any"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "class_name", "type": "str"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "state", "type": "Dict[unicode, Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 288, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 288, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 296, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 345, "col_offset": 14, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "contains_activation", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "Max", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "Input", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 383, "col_offset": 35, "nodeName": "neuron_indexing", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 385, "col_offset": 44, "nodeName": "neuron_indexing", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 393, "col_offset": 42, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 393, "col_offset": 55, "nodeName": "analysis_inputs", "type": "List[Any]"}, {"lineNumber": 469, "col_offset": 12, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 502, "col_offset": 22, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 502, "col_offset": 43, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 503, "col_offset": 47, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 504, "col_offset": 45, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 511, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 511, "col_offset": 23, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "clazz", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 577, "col_offset": 14, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 577, "col_offset": 35, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 580, "col_offset": 25, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 581, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 581, "col_offset": 39, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 581, "col_offset": 49, "nodeName": "mask", "type": "List[bool]"}, {"lineNumber": 581, "col_offset": 55, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 581, "col_offset": 58, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 584, "col_offset": 43, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 608, "col_offset": 29, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 609, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 612, "col_offset": 20, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 613, "col_offset": 38, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 614, "col_offset": 39, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 621, "col_offset": 26, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 622, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 623, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 623, "col_offset": 45, "nodeName": "v", "type": "Any"}, {"lineNumber": 623, "col_offset": 50, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "to_list", "type": "Any"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "ret", "type": "Any"}, {"lineNumber": 652, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 656, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 657, "col_offset": 60, "nodeName": "tmp", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 659, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 663, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 664, "col_offset": 60, "nodeName": "tmp", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 667, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 669, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 671, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 671, "col_offset": 19, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 672, "col_offset": 34, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 674, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 678, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 678, "col_offset": 22, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 678, "col_offset": 43, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 679, "col_offset": 41, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 680, "col_offset": 45, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 682, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 684, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 685, "col_offset": 46, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 687, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 701, "col_offset": 23, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 701, "col_offset": 44, "nodeName": "clazz", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "checked_layers", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "_allow_lambda_layers", "type": "Any"}, {"lineNumber": 339, "col_offset": 27, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 339, "col_offset": 38, "nodeName": "layer", "type": "Any"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "Lambda", "type": "Any"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "kchecks", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "layers", "type": "Any"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "layers", "type": "Any"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "int32", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "analysis_inputs", "type": "List[Any]"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "stop_analysis_at_tensors", "type": "List[Any]"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "Gather", "type": "Any"}, {"lineNumber": 387, "col_offset": 44, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 621, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 621, "col_offset": 41, "nodeName": "ret", "type": "Any"}, {"lineNumber": 622, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 622, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 622, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 622, "col_offset": 56, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 627, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 627, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 627, "col_offset": 53, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 629, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 629, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 633, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 633, "col_offset": 53, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 635, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 635, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 640, "col_offset": 59, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 642, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 642, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 653, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 653, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 660, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 660, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 668, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 668, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 669, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 669, "col_offset": 56, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 674, "col_offset": 22, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 675, "col_offset": 55, "nodeName": "nfinite_tensors", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "message", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "checked_layers", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "NotAnalyzeableModelException", "type": "Type[NotAnalyzeableModelException]"}, {"lineNumber": 113, "col_offset": 59, "nodeName": "tmp_message", "type": "unicode"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "core", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "keras", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "keras", "type": "Any"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 387, "col_offset": 58, "nodeName": "neuron_indexing", "type": "Any"}, {"lineNumber": 627, "col_offset": 23, "nodeName": "Min", "type": "Any"}, {"lineNumber": 630, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 630, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 630, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 630, "col_offset": 43, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 633, "col_offset": 23, "nodeName": "Max", "type": "Any"}, {"lineNumber": 636, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 636, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 636, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 636, "col_offset": 43, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 640, "col_offset": 37, "nodeName": "FiniteCheck", "type": "Any"}, {"lineNumber": 643, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 643, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 643, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 643, "col_offset": 43, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 655, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 655, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 655, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 655, "col_offset": 48, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 662, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 662, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 662, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 662, "col_offset": 48, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 669, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 673, "col_offset": 46, "nodeName": "i", "type": "Any"}, {"lineNumber": 673, "col_offset": 51, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "tmp_message", "type": "unicode"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "layers", "type": "Any"}, {"lineNumber": 627, "col_offset": 23, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 633, "col_offset": 23, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 640, "col_offset": 37, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 339, "col_offset": 45, "nodeName": "keras", "type": "Any"}]