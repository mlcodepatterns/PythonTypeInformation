[{"lineNumber": 45, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "TrainerMixin", "type": "Type[TrainerMixin]"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "__name__", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "generator", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "_model", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "neuron_selection_inputs", "type": "List[nothing]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any]]"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Union[bool, Any]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 313, "col_offset": 45, "nodeName": "reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 314, "col_offset": 37, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "_conditional_mappings", "type": "List[nothing]"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "return_all_reversed_tensors", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 442, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "checks", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "messages", "type": "List[nothing]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "disable_no_training_warning", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "__class__", "type": "Type[AnalyzerBase]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "class_name", "type": "str"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "class_name", "type": "str"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "save", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "savez", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "fname", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "pop", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "model_from_json", "type": "Any"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "model_json", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "model_weights", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "disable_model_checks", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "analyzer", "type": "module"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "state", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "load", "type": "Any"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "fname", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "load", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "BatchSequence", "type": "Any"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "X", "type": "None"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "generator", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "_fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "fit", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "fit_generator", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 50, "nodeName": "model", "type": "Any"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 51, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "Model", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "_create_analysis", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "model", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 320, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 320, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "reverse_model", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "_debug_tensors_indices", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "_reverse_tensors_mapping", "type": "Dict[int, Any]"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "mapping", "type": "Dict[int, Any]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "ret", "type": "Tuple[Any, List[Any]]"}, {"lineNumber": 381, "col_offset": 11, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "pop", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "_disable_model_checks", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "model_contains", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "_model", "type": "Any"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "checks", "type": "List[nothing]"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "messages", "type": "List[nothing]"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "types", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "to_json", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "state", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "innvestigate", "type": "module"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "AnalyzerBase", "type": "Type[AnalyzerBase]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 180, "col_offset": 54, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 180, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "steps", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 216, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 217, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "model_output", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "compile_analyzer", "type": "Callable[[], Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any]]"}, {"lineNumber": 284, "col_offset": 47, "nodeName": "_neuron_selection_mode", "type": "Any"}, {"lineNumber": 289, "col_offset": 32, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 291, "col_offset": 48, "nodeName": "neuron_selection_mode", "type": "Any"}, {"lineNumber": 317, "col_offset": 66, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "condition", "type": "nothing"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "layer", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "reverse_f", "type": "nothing"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "GradientWRT", "type": "Any"}, {"lineNumber": 327, "col_offset": 50, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "_reverse_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "_default_reverse_mapping", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "_head_mapping", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 344, "col_offset": 39, "nodeName": "_reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 345, "col_offset": 40, "nodeName": "return_all_reversed_tensors", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 33, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 390, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "_debug_tensors_indices", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "debug_values", "type": "Any"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "flatnonzero", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "_reverse_verbose", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "_reverse_clip_values", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "_reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "_reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "_reverse_check_finite", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Union[bool, Any, str]]"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "_reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 424, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 433, "col_offset": 42, "nodeName": "reverse_verbose", "type": "Any"}, {"lineNumber": 434, "col_offset": 46, "nodeName": "reverse_clip_values", "type": "Any"}, {"lineNumber": 436, "col_offset": 23, "nodeName": "reverse_project_bottleneck_layers", "type": "Any"}, {"lineNumber": 438, "col_offset": 23, "nodeName": "reverse_check_min_max_values", "type": "Any"}, {"lineNumber": 439, "col_offset": 47, "nodeName": "reverse_check_finite", "type": "Any"}, {"lineNumber": 441, "col_offset": 23, "nodeName": "reverse_reapply_on_copied_layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "x", "type": "nothing"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "x", "type": "nothing"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "get", "type": "nothing"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "x", "type": "nothing"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "x", "type": "nothing"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "x", "type": "nothing"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "_model_checks", "type": "List[nothing]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "to_list", "type": "Any"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "checked", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "check_count", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "_model", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "_model", "type": "Any"}, {"lineNumber": 111, "col_offset": 41, "nodeName": "class_name", "type": "str"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "f", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "OneEpochTrainerMixin", "type": "Type[OneEpochTrainerMixin]"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "self", "type": "OneEpochTrainerMixin"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "Max", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "keras", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "model_inputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 55, "nodeName": "neuron_selection_inputs", "type": "List[nothing]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 283, "col_offset": 43, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 284, "col_offset": 47, "nodeName": "self", "type": "AnalyzerNetworkBase"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "AnalyzerNetworkBase", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "clazz", "type": "Type[AnalyzerNetworkBase]"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 327, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 327, "col_offset": 44, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 344, "col_offset": 39, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "itervalues", "type": "Callable"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "v", "type": "Any"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 353, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 353, "col_offset": 44, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "to_list", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "ret", "type": "Any"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 387, "col_offset": 63, "nodeName": "tmp", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 394, "col_offset": 63, "nodeName": "tmp", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 399, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 401, "col_offset": 19, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 409, "col_offset": 22, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 409, "col_offset": 43, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 410, "col_offset": 41, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "self", "type": "ReverseAnalyzerBase"}, {"lineNumber": 432, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 432, "col_offset": 23, "nodeName": "ReverseAnalyzerBase", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "clazz", "type": "Type[ReverseAnalyzerBase]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 58, "col_offset": 42, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "x", "type": "nothing"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 64, "col_offset": 56, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "AnalyzerBase"}, {"lineNumber": 220, "col_offset": 27, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "six", "type": "module"}, {"lineNumber": 351, "col_offset": 41, "nodeName": "ret", "type": "Any"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 352, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 352, "col_offset": 56, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 357, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 357, "col_offset": 53, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 363, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 363, "col_offset": 53, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 365, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "iutils", "type": "Any"}, {"lineNumber": 370, "col_offset": 59, "nodeName": "tensors", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 383, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 383, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 390, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 398, "col_offset": 42, "nodeName": "indices", "type": "Tuple[int, int]"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 399, "col_offset": 56, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 405, "col_offset": 58, "nodeName": "nfinite_tensors", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "message", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "check_type", "type": "Any"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "Min", "type": "Any"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 360, "col_offset": 43, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "Max", "type": "Any"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 43, "nodeName": "tmp", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "FiniteCheck", "type": "Any"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "debug_tensors", "type": "List[Any]"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 385, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 385, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 385, "col_offset": 48, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 392, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 392, "col_offset": 48, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 399, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 403, "col_offset": 46, "nodeName": "i", "type": "Any"}, {"lineNumber": 403, "col_offset": 51, "nodeName": "nfinite_tensors", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "message", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 357, "col_offset": 23, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "ilayers", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "warnings", "type": "module"}]