[{"lineNumber": 47, "col_offset": 0, "nodeName": "test_precommit__WrapperBase", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_precommit__AugmentReduceBase__keras_based", "type": "Callable[[], Any]"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "test_precommit__GaussianSmoother__keras_based", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_precommit__PathIntegrator__keras_based", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_serialize_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_serialize_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_serialize_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "test_serialize_analyzer", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "method", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "WrapperBase", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "WrapperBase", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "WrapperBase", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "AugmentReduceBase", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "AugmentReduceBase", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "AugmentReduceBase", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "AugmentReduceBase", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "GaussianSmoother", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "GaussianSmoother", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "GaussianSmoother", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "GaussianSmoother", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "PathIntegrator", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "PathIntegrator", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "PathIntegrator", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "PathIntegrator", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "dryrun", "type": "module"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "Input", "type": "Type[innvestigate.analyzer.misc.Input]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "Input", "type": "Type[innvestigate.analyzer.misc.Input]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 32, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "Input", "type": "Type[innvestigate.analyzer.misc.Input]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "Gradient", "type": "Type[innvestigate.analyzer.gradient_based.Gradient]"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "model", "type": "Any"}]