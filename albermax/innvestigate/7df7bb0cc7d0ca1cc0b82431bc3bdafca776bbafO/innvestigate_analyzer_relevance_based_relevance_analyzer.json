[{"lineNumber": 81, "col_offset": 19, "nodeName": "AnalyzerNetworkBase", "type": "Any"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "ReverseAnalyzerBase", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "LRP", "type": "Type[LRP]"}, {"lineNumber": 461, "col_offset": 11, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 475, "col_offset": 17, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 498, "col_offset": 27, "nodeName": "LRPEpsilon", "type": "Type[LRPEpsilon]"}, {"lineNumber": 507, "col_offset": 17, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 514, "col_offset": 14, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "LRP", "type": "Type[LRP]"}, {"lineNumber": 573, "col_offset": 31, "nodeName": "LRPAlphaBeta", "type": "Type[LRPAlphaBeta]"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "_LRPAlphaBetaFixedParams", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 594, "col_offset": 31, "nodeName": "_LRPAlphaBetaFixedParams", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 604, "col_offset": 21, "nodeName": "_LRPAlphaBetaFixedParams", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 614, "col_offset": 31, "nodeName": "_LRPAlphaBetaFixedParams", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 623, "col_offset": 15, "nodeName": "LRPAlpha1Beta0IgnoreBias", "type": "Type[LRPAlpha1Beta0IgnoreBias]"}, {"lineNumber": 629, "col_offset": 19, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 677, "col_offset": 20, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 717, "col_offset": 24, "nodeName": "LRPCompositeA", "type": "Type[LRPCompositeA]"}, {"lineNumber": 727, "col_offset": 24, "nodeName": "LRPCompositeB", "type": "Type[LRPCompositeB]"}, {"lineNumber": 736, "col_offset": 27, "nodeName": "LRPCompositeA", "type": "Type[LRPCompositeA]"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "LRPCompositeB", "type": "Type[LRPCompositeB]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "ZRule", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "ZIgnoreBiasRule", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "EpsilonRule", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "EpsilonIgnoreBiasRule", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "WSquareRule", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "FlatRule", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "AlphaBetaRule", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "AlphaBetaIgnoreBiasRule", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "Alpha2Beta1Rule", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "Alpha2Beta1IgnoreBiasRule", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "Alpha1Beta0Rule", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "Alpha1Beta0IgnoreBiasRule", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "ZPlusRule", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "ZPlusFastRule", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "BoundedRule", "type": "Any"}, {"lineNumber": 230, "col_offset": 10, "nodeName": "base", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "_allow_lambda_layers", "type": "Any"}, {"lineNumber": 179, "col_offset": 36, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 208, "col_offset": 9, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "_input_layer_rule", "type": "Any"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "ReverseMappingBase", "type": "Type[innvestigate.utils.keras.graph.ReverseMappingBase]"}, {"lineNumber": 354, "col_offset": 45, "nodeName": "ReverseLayer", "type": "Type[Any]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "default_return_layers", "type": "List[Any]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "rule", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "_epsilon", "type": "Any"}, {"lineNumber": 479, "col_offset": 24, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "EpsilonRule", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "_alpha", "type": "Any"}, {"lineNumber": 526, "col_offset": 22, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "_beta", "type": "Any"}, {"lineNumber": 527, "col_offset": 21, "nodeName": "beta", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "_bias", "type": "bool"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "bias", "type": "bool"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "AlphaBetaRule", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 659, "col_offset": 31, "nodeName": "EpsilonRule", "type": "Any"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "EpsilonRule", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "InputLayer", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "Conv2DTranspose", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "Conv3D", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "Conv3DTranspose", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "Cropping1D", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "Cropping2D", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "Cropping3D", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "SeparableConv1D", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "SeparableConv2D", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "UpSampling1D", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "UpSampling2D", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "UpSampling3D", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "ZeroPadding1D", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "ZeroPadding2D", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "ZeroPadding3D", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "ActivityRegularization", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "Lambda", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "Masking", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "Permute", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "RepeatVector", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "Reshape", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "SpatialDropout1D", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "SpatialDropout2D", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "SpatialDropout3D", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "LocallyConnected1D", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "LocallyConnected2D", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Add", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "Concatenate", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "Dot", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "Maximum", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "Minimum", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "Subtract", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "AlphaDropout", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "GaussianDropout", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "GaussianNoise", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "BatchNormalization", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "GlobalMaxPooling1D", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "GlobalMaxPooling2D", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "GlobalMaxPooling3D", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "MaxPooling1D", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "MaxPooling2D", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "MaxPooling3D", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "BaselineLRPZ"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "to_list", "type": "Callable"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "_get_state", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Any"}, {"lineNumber": 197, "col_offset": 61, "nodeName": "state", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 267, "col_offset": 11, "nodeName": "rule", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "rule", "type": "Any"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "_rule", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "_rule", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "rule", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "LRP"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "use_conditions", "type": "bool"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "rules", "type": "List[Union[Tuple[Callable[[Any, Any], Any], Any], Tuple[Callable[[Any, Any], Any], Union[Any, Type[Any]]]]]"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "_input_layer_rule", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "_input_layer_rule", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "kgraph", "type": "module"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 378, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 394, "col_offset": 19, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "_get_state", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Any"}, {"lineNumber": 420, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 456, "col_offset": 64, "nodeName": "state", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "assert_lrp_epsilon_param", "type": "Any"}, {"lineNumber": 478, "col_offset": 50, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 478, "col_offset": 59, "nodeName": "self", "type": "LRPEpsilon"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "LRPEpsilon"}, {"lineNumber": 481, "col_offset": 31, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 510, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 517, "col_offset": 38, "nodeName": "model", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "beta", "type": "Any"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "assert_infer_lrp_alpha_beta_param", "type": "Any"}, {"lineNumber": 525, "col_offset": 63, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 525, "col_offset": 70, "nodeName": "beta", "type": "None"}, {"lineNumber": 525, "col_offset": 76, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 530, "col_offset": 33, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 543, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "_get_state", "type": "Callable[[], Any]"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 561, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 561, "col_offset": 61, "nodeName": "state", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 577, "col_offset": 17, "nodeName": "_state_to_kwargs", "type": "Callable[[Any], Any]"}, {"lineNumber": 577, "col_offset": 73, "nodeName": "state", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 587, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 617, "col_offset": 55, "nodeName": "model", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 626, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 636, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 659, "col_offset": 31, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 671, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 707, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 719, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 729, "col_offset": 48, "nodeName": "model", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 738, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 748, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "topology", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "convolutional", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "core", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "local", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "local", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "normalization", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "pooling", "type": "Any"}, {"lineNumber": 181, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "iutils", "type": "module"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "_allow_lambda_layers", "type": "Any"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "state", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 198, "col_offset": 46, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "LRP"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "rule", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "LRP"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "rule", "type": "Any"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "use_conditions", "type": "bool"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "rules", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "use_conditions", "type": "bool"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "rules", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "rule", "type": "Any"}, {"lineNumber": 299, "col_offset": 11, "nodeName": "self", "type": "LRP"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "self", "type": "LRP"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "BoundedRule", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "input_layer_rule", "type": "Type[Any]"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "BoundedProxyRule", "type": "Type[Any]"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "use_conditions", "type": "bool"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 329, "col_offset": 15, "nodeName": "use_conditions", "type": "bool"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "rules", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "_rule", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "_gamma", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "_beta", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "_mean", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "_std", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "Rs", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "contains_kernel", "type": "Callable[[Any], bool]"}, {"lineNumber": 372, "col_offset": 38, "nodeName": "ReverseLayer", "type": "Type[Any]"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "is_batch_normalization_layer", "type": "Callable[..., bool]"}, {"lineNumber": 373, "col_offset": 51, "nodeName": "BatchNormalizationReverseLayer", "type": "Type[Any]"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 378, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 383, "col_offset": 93, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 393, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "_rule", "type": "Union[List[Any], Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "_input_layer_rule", "type": "Any"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 419, "col_offset": 27, "nodeName": "state", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 421, "col_offset": 31, "nodeName": "rule", "type": "Any"}, {"lineNumber": 422, "col_offset": 43, "nodeName": "input_layer_rule", "type": "Any"}, {"lineNumber": 464, "col_offset": 43, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 464, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 470, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 471, "col_offset": 67, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "rutils", "type": "Any"}, {"lineNumber": 493, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 494, "col_offset": 46, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 495, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 501, "col_offset": 59, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 502, "col_offset": 59, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 510, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 511, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 517, "col_offset": 46, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 518, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "rutils", "type": "Any"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 544, "col_offset": 48, "nodeName": "AlphaBetaProxyRule", "type": "Type[Any]"}, {"lineNumber": 545, "col_offset": 45, "nodeName": "kwargs", "type": "Dict[str, Union[bool, int, Any]]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 550, "col_offset": 31, "nodeName": "_alpha", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 551, "col_offset": 30, "nodeName": "_beta", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 552, "col_offset": 30, "nodeName": "_bias", "type": "Any"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 558, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 564, "col_offset": 31, "nodeName": "beta", "type": "Any"}, {"lineNumber": 565, "col_offset": 31, "nodeName": "bias", "type": "Any"}, {"lineNumber": 587, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 591, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 597, "col_offset": 63, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 601, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 607, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 611, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 617, "col_offset": 63, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 621, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 626, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 626, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 636, "col_offset": 51, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 637, "col_offset": 59, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 667, "col_offset": 30, "nodeName": "is_dense_layer", "type": "Callable[..., bool]"}, {"lineNumber": 667, "col_offset": 54, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 668, "col_offset": 30, "nodeName": "is_conv_layer", "type": "Callable[..., bool]"}, {"lineNumber": 668, "col_offset": 53, "nodeName": "Alpha1Beta0Rule", "type": "Any"}, {"lineNumber": 672, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 673, "col_offset": 51, "nodeName": "conditional_rules", "type": "List[Union[Tuple[Callable[..., bool], Type[Any]], Tuple[Callable[..., bool], Any]]]"}, {"lineNumber": 674, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "is_dense_layer", "type": "Callable[..., bool]"}, {"lineNumber": 704, "col_offset": 54, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "is_conv_layer", "type": "Callable[..., bool]"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "Alpha2Beta1Rule", "type": "Any"}, {"lineNumber": 708, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 709, "col_offset": 51, "nodeName": "conditional_rules", "type": "List[Union[Tuple[Callable[..., bool], Type[Any]], Tuple[Callable[..., bool], Any]]]"}, {"lineNumber": 710, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 720, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 721, "col_offset": 65, "nodeName": "FlatRule", "type": "Any"}, {"lineNumber": 722, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 730, "col_offset": 49, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 732, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 739, "col_offset": 52, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 740, "col_offset": 68, "nodeName": "WSquareRule", "type": "Any"}, {"lineNumber": 741, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 749, "col_offset": 52, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 751, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "engine", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "BaselineLRPZ", "type": "Type[BaselineLRPZ]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "self", "type": "BaselineLRPZ"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "Gradient", "type": "Type[innvestigate.layers.Gradient]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "i", "type": "Any"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "g", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "gradients", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "BaselineLRPZ", "type": "Type[BaselineLRPZ]"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "self", "type": "BaselineLRPZ"}, {"lineNumber": 191, "col_offset": 45, "nodeName": "self", "type": "BaselineLRPZ"}, {"lineNumber": 197, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "BaselineLRPZ", "type": "Type[BaselineLRPZ]"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "clazz", "type": "Type[BaselineLRPZ]"}, {"lineNumber": 281, "col_offset": 28, "nodeName": "six", "type": "module"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 282, "col_offset": 28, "nodeName": "rule", "type": "Any"}, {"lineNumber": 282, "col_offset": 38, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "rule", "type": "Any"}, {"lineNumber": 282, "col_offset": 55, "nodeName": "ReverseMappingBase", "type": "Type[innvestigate.utils.keras.graph.ReverseMappingBase]"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "rule", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 288, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "rule", "type": "Any"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "low", "type": "Any"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "high", "type": "Any"}, {"lineNumber": 304, "col_offset": 39, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "insert", "type": "Union[Callable, Any]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "insert", "type": "Any"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "input_layer_rule", "type": "Union[Any, Type[Any]]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "condition", "type": "Any"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "rule", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "select_rule", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 343, "col_offset": 41, "nodeName": "layer", "type": "Any"}, {"lineNumber": 343, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 345, "col_offset": 30, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 345, "col_offset": 42, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 347, "col_offset": 29, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 347, "col_offset": 40, "nodeName": "layer", "type": "Any"}, {"lineNumber": 347, "col_offset": 47, "nodeName": "state", "type": "Any"}, {"lineNumber": 350, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 52, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "apply", "type": "Any"}, {"lineNumber": 351, "col_offset": 40, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 351, "col_offset": 44, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 351, "col_offset": 48, "nodeName": "Rs", "type": "Any"}, {"lineNumber": 351, "col_offset": 52, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "params", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 363, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 75, "nodeName": "layer", "type": "Any"}, {"lineNumber": 363, "col_offset": 82, "nodeName": "state", "type": "Any"}, {"lineNumber": 372, "col_offset": 13, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "LRP", "type": "Type[LRP]"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "self", "type": "LRP"}, {"lineNumber": 383, "col_offset": 112, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "keras", "type": "Any"}, {"lineNumber": 385, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 386, "col_offset": 22, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "Activation", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "GradientWRT", "type": "Type[innvestigate.layers.GradientWRT]"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "reversed_Ys", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "LRP", "type": "Type[LRP]"}, {"lineNumber": 411, "col_offset": 27, "nodeName": "self", "type": "LRP"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "self", "type": "LRP"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "self", "type": "LRP"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 420, "col_offset": 23, "nodeName": "LRP", "type": "Type[LRP]"}, {"lineNumber": 420, "col_offset": 28, "nodeName": "clazz", "type": "Type[LRP]"}, {"lineNumber": 456, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 456, "col_offset": 23, "nodeName": "_LRPFixedParams", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 456, "col_offset": 40, "nodeName": "clazz", "type": "Type[_LRPFixedParams]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 464, "col_offset": 14, "nodeName": "LRPZ", "type": "Type[LRPZ]"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "self", "type": "LRPZ"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 470, "col_offset": 14, "nodeName": "LRPZIgnoreBias", "type": "Type[LRPZIgnoreBias]"}, {"lineNumber": 470, "col_offset": 30, "nodeName": "self", "type": "LRPZIgnoreBias"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 493, "col_offset": 14, "nodeName": "LRPEpsilon", "type": "Type[LRPEpsilon]"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "self", "type": "LRPEpsilon"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "LRPEpsilonIgnoreBias", "type": "Type[LRPEpsilonIgnoreBias]"}, {"lineNumber": 501, "col_offset": 36, "nodeName": "self", "type": "LRPEpsilonIgnoreBias"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 510, "col_offset": 14, "nodeName": "LRPWSquare", "type": "Type[LRPWSquare]"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "self", "type": "LRPWSquare"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 517, "col_offset": 14, "nodeName": "LRPFlat", "type": "Type[LRPFlat]"}, {"lineNumber": 517, "col_offset": 23, "nodeName": "self", "type": "LRPFlat"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 543, "col_offset": 14, "nodeName": "LRPAlphaBeta", "type": "Type[LRPAlphaBeta]"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "LRPAlphaBeta", "type": "Type[LRPAlphaBeta]"}, {"lineNumber": 548, "col_offset": 36, "nodeName": "self", "type": "LRPAlphaBeta"}, {"lineNumber": 550, "col_offset": 31, "nodeName": "self", "type": "LRPAlphaBeta"}, {"lineNumber": 551, "col_offset": 30, "nodeName": "self", "type": "LRPAlphaBeta"}, {"lineNumber": 552, "col_offset": 30, "nodeName": "self", "type": "LRPAlphaBeta"}, {"lineNumber": 561, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "LRPAlphaBeta", "type": "Type[LRPAlphaBeta]"}, {"lineNumber": 561, "col_offset": 37, "nodeName": "clazz", "type": "Type[LRPAlphaBeta]"}, {"lineNumber": 577, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 577, "col_offset": 23, "nodeName": "_LRPAlphaBetaFixedParams", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 577, "col_offset": 49, "nodeName": "clazz", "type": "Type[_LRPAlphaBetaFixedParams]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 587, "col_offset": 14, "nodeName": "LRPAlpha2Beta1", "type": "Type[LRPAlpha2Beta1]"}, {"lineNumber": 587, "col_offset": 30, "nodeName": "self", "type": "LRPAlpha2Beta1"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 597, "col_offset": 14, "nodeName": "LRPAlpha2Beta1IgnoreBias", "type": "Type[LRPAlpha2Beta1IgnoreBias]"}, {"lineNumber": 597, "col_offset": 40, "nodeName": "self", "type": "LRPAlpha2Beta1IgnoreBias"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 607, "col_offset": 14, "nodeName": "LRPAlpha1Beta0", "type": "Type[LRPAlpha1Beta0]"}, {"lineNumber": 607, "col_offset": 30, "nodeName": "self", "type": "LRPAlpha1Beta0"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 617, "col_offset": 14, "nodeName": "LRPAlpha1Beta0IgnoreBias", "type": "Type[LRPAlpha1Beta0IgnoreBias]"}, {"lineNumber": 617, "col_offset": 40, "nodeName": "self", "type": "LRPAlpha1Beta0IgnoreBias"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 626, "col_offset": 14, "nodeName": "LRPZPlus", "type": "Type[LRPZPlus]"}, {"lineNumber": 626, "col_offset": 24, "nodeName": "self", "type": "LRPZPlus"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 636, "col_offset": 14, "nodeName": "LRPZPlusFast", "type": "Type[LRPZPlusFast]"}, {"lineNumber": 636, "col_offset": 28, "nodeName": "self", "type": "LRPZPlusFast"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 667, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 668, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 668, "col_offset": 53, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 671, "col_offset": 14, "nodeName": "LRPCompositeA", "type": "Type[LRPCompositeA]"}, {"lineNumber": 671, "col_offset": 29, "nodeName": "self", "type": "LRPCompositeA"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 705, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 705, "col_offset": 53, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 707, "col_offset": 14, "nodeName": "LRPCompositeB", "type": "Type[LRPCompositeB]"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "self", "type": "LRPCompositeB"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 719, "col_offset": 14, "nodeName": "LRPCompositeAFlat", "type": "Type[LRPCompositeAFlat]"}, {"lineNumber": 719, "col_offset": 33, "nodeName": "self", "type": "LRPCompositeAFlat"}, {"lineNumber": 721, "col_offset": 65, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 729, "col_offset": 14, "nodeName": "LRPCompositeBFlat", "type": "Type[LRPCompositeBFlat]"}, {"lineNumber": 729, "col_offset": 33, "nodeName": "self", "type": "LRPCompositeBFlat"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 738, "col_offset": 14, "nodeName": "LRPCompositeAWSquare", "type": "Type[LRPCompositeAWSquare]"}, {"lineNumber": 738, "col_offset": 36, "nodeName": "self", "type": "LRPCompositeAWSquare"}, {"lineNumber": 740, "col_offset": 68, "nodeName": "rrule", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 748, "col_offset": 14, "nodeName": "LRPCompositeBWSquare", "type": "Type[LRPCompositeBWSquare]"}, {"lineNumber": 748, "col_offset": 36, "nodeName": "self", "type": "LRPCompositeBWSquare"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "keras", "type": "Any"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "contains_activation", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "ilayers", "type": "module"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "contains_activation", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "inspect", "type": "module"}, {"lineNumber": 282, "col_offset": 55, "nodeName": "kgraph", "type": "module"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "rule", "type": "Any"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "rules", "type": "Union[List[Union[Tuple[Callable[[Any, Any], Any], Any], Tuple[Callable[[Any, Any], Any], Union[Any, Type[Any]]]]], Any]"}, {"lineNumber": 314, "col_offset": 30, "nodeName": "input_layer_rule", "type": "Union[Any, Type[Any]]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "rules", "type": "Any"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "layer", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "condition", "type": "Any"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "layer", "type": "Any"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "rule", "type": "Any"}, {"lineNumber": 334, "col_offset": 65, "nodeName": "layer", "type": "Any"}, {"lineNumber": 336, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "rules", "type": "Any"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 344, "col_offset": 78, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 344, "col_offset": 138, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 345, "col_offset": 42, "nodeName": "six", "type": "module"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "LRP_RULES", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 52, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 350, "col_offset": 95, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 350, "col_offset": 139, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 350, "col_offset": 160, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "_rule", "type": "Any"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 383, "col_offset": 50, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "layers", "type": "Any"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "ilayers", "type": "module"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 402, "col_offset": 43, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 402, "col_offset": 48, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 402, "col_offset": 51, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 488, "col_offset": 56, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 489, "col_offset": 63, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 490, "col_offset": 60, "nodeName": "bias", "type": "Any"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 58, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 538, "col_offset": 68, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 539, "col_offset": 67, "nodeName": "beta", "type": "Any"}, {"lineNumber": 540, "col_offset": 67, "nodeName": "bias", "type": "bool"}, {"lineNumber": 541, "col_offset": 64, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "contains_activation", "type": "Callable[..., Any]"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 661, "col_offset": 56, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 664, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 682, "col_offset": 35, "nodeName": "contains_activation", "type": "Callable[..., Any]"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 698, "col_offset": 56, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 701, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "only_relu_activation", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 63, "nodeName": "layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "BASELINELRPZ_LAYERS", "type": "Tuple[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any]"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "allow_lambda_layers", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "layer", "type": "Any"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "Lambda", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "is_convnet_layer", "type": "Callable[[Any], bool]"}, {"lineNumber": 257, "col_offset": 68, "nodeName": "layer", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "rules", "type": "Any"}, {"lineNumber": 344, "col_offset": 46, "nodeName": "layer", "type": "Any"}, {"lineNumber": 344, "col_offset": 92, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 344, "col_offset": 103, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 344, "col_offset": 115, "nodeName": "string_types", "type": "Tuple[Type[str]]"}, {"lineNumber": 344, "col_offset": 138, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "rule_class", "type": "Any"}, {"lineNumber": 350, "col_offset": 114, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 350, "col_offset": 160, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 363, "col_offset": 22, "nodeName": "BatchNormalizationReverseLayer", "type": "Type[Any]"}, {"lineNumber": 363, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 47, "nodeName": "keras", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "int_shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 387, "col_offset": 53, "nodeName": "x", "type": "Any"}, {"lineNumber": 387, "col_offset": 56, "nodeName": "y", "type": "Any"}, {"lineNumber": 387, "col_offset": 61, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 387, "col_offset": 65, "nodeName": "Xs", "type": "Any"}, {"lineNumber": 387, "col_offset": 69, "nodeName": "Ys", "type": "Any"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 488, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 537, "col_offset": 22, "nodeName": "AlphaBetaProxyRule", "type": "Type[Any]"}, {"lineNumber": 537, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 35, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 652, "col_offset": 30, "nodeName": "only_relu_activation", "type": "Callable[[Any], Any]"}, {"lineNumber": 652, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 661, "col_offset": 22, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 661, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 682, "col_offset": 35, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 689, "col_offset": 30, "nodeName": "only_relu_activation", "type": "Callable[[Any], Any]"}, {"lineNumber": 689, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 698, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 698, "col_offset": 22, "nodeName": "EpsilonProxyRule", "type": "Type[Any]"}, {"lineNumber": 698, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "core", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "model", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "low", "type": "Any"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "high", "type": "Any"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "is_input_layer", "type": "Callable[..., bool]"}, {"lineNumber": 313, "col_offset": 72, "nodeName": "layer", "type": "Any"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 332, "col_offset": 34, "nodeName": "rule", "type": "Any"}, {"lineNumber": 344, "col_offset": 115, "nodeName": "six", "type": "module"}, {"lineNumber": 350, "col_offset": 52, "nodeName": "reverse_state", "type": "Any"}, {"lineNumber": 350, "col_offset": 160, "nodeName": "_rule", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 387, "col_offset": 34, "nodeName": "K", "type": "Any"}, {"lineNumber": 652, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 689, "col_offset": 30, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "layers", "type": "Any"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "BoundedProxyRule", "type": "Type[Any]"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 313, "col_offset": 49, "nodeName": "kchecks", "type": "module"}, {"lineNumber": 350, "col_offset": 160, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 49, "nodeName": "keras", "type": "Any"}]