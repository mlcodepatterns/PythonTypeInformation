[{"lineNumber": 55, "col_offset": 0, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "vgg16_custom_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "vgg16_custom", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "vgg16_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "vgg16", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "vgg19_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "vgg19", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 0, "nodeName": "resnet50_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "resnet50", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 0, "nodeName": "inception_v3_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "inception_v3", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "inception_resnet_v2_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 0, "nodeName": "inception_resnet_v2", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 0, "nodeName": "densenet121_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "densenet121", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "densenet169_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "densenet169", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 0, "nodeName": "densenet201_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 0, "nodeName": "densenet201", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "nasnet_large_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "nasnet_large", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 0, "nodeName": "nasnet_mobile_preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 0, "nodeName": "nasnet_mobile", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "output_n", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "offset", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "offset", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "output_n", "type": "int"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "clazz", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "pre_softmax_tensors", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "shape", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "activation", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "activation", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "input_layer", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "dropout_layer", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "dense_layer", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "VGG16", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "X", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "VGG19", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 179, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "ResNet50", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "InceptionV3", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 213, "col_offset": 67, "nodeName": "X", "type": "Any"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "InceptionResNetV2", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 230, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "DenseNet121", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 242, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "DenseNet169", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 254, "col_offset": 56, "nodeName": "X", "type": "Any"}, {"lineNumber": 258, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "DenseNet201", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 271, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "NASNetLarge", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "preprocess_input", "type": "Any"}, {"lineNumber": 288, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "_prepare_keras_net", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "NASNetMobile", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "kgraph", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "model", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "image_data_format", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "net", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "VGG16_OFFSET", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "image_data_format", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "conv_pool", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "Flatten", "type": "Any"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "base", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "base", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "base", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "base", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "base", "type": "Any"}, {"lineNumber": 132, "col_offset": 64, "nodeName": "output_n", "type": "int"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "base", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "input_shape", "type": "List[Optional[int]]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "output_n", "type": "int"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "vgg16", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "vgg19", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "vgg19", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "resnet50", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "resnet50", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "inception_v3", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "inception_v3", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "inception_resnet_v2", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "inception_resnet_v2", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "densenet", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "nasnet", "type": "Any"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "image_data_format", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "log_reg", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "nasnet", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "nasnet", "type": "Any"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "image_data_format", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "log_reg", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "nasnet", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "K", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 7, "nodeName": "X", "type": "Any"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "K", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "base", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "net", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "activation", "type": "Union[str, Any]"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 275, "col_offset": 7, "nodeName": "K", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "mnist", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "applications", "type": "Any"}, {"lineNumber": 292, "col_offset": 7, "nodeName": "K", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "mnist", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "applications", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "keras", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "keras", "type": "Any"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "keras", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "keras", "type": "Any"}]