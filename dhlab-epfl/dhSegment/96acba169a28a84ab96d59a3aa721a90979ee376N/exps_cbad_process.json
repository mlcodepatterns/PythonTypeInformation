[{"lineNumber": 118, "col_offset": 0, "nodeName": "vertical_local_maxima", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "remove_borders", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "filenames_to_predict", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 53, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "probs2", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "contours", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "filtered_contours", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "page_width", "type": "int"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "contours", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "local_maxima", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "local_maxima", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "border_component", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "basename", "type": "str"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "lines_prob", "type": "Any"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "debug", "type": "bool"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "ratio", "type": "Tuple[Any, Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "xml_filename", "type": "str"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "ConfigProto", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "m", "type": "dh_segment.inference.loader.LoadedModel"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "line_extraction_v1", "type": "Callable[..., Tuple[List[numpy.ndarray], numpy.ndarray]]"}, {"lineNumber": 70, "col_offset": 76, "nodeName": "sigma", "type": "float"}, {"lineNumber": 70, "col_offset": 83, "nodeName": "low_threshold", "type": "float"}, {"lineNumber": 70, "col_offset": 98, "nodeName": "high_threshold", "type": "float"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "filter_width", "type": "float"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "vertical_maxima", "type": "bool"}, {"lineNumber": 72, "col_offset": 7, "nodeName": "output_basename", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "cleaning_probs", "type": "Callable[[numpy.ndarray, Union[float, int]], numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "hysteresis_thresholding", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "probs2", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "low_threshold", "type": "float"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "high_threshold", "type": "float"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "find_lines", "type": "Callable[[numpy.ndarray], List[Any]]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "filtered_contours", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "local_maxima", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "morphologyEx", "type": "Any"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "MORPH_CLOSE", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "local_maxima", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "copy", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "label_components", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "count", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "label_components", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 7, "nodeName": "mask_dir", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 14, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "line_extraction_v1", "type": "Callable[..., Tuple[List[numpy.ndarray], numpy.ndarray]]"}, {"lineNumber": 170, "col_offset": 46, "nodeName": "lines_prob", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "save_baselines", "type": "Callable[..., dh_segment.io.PAGE.Page]"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "xml_filename", "type": "str"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "ratio", "type": "Tuple[Any, Any]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "Session", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "LoadedModel", "type": "Type[dh_segment.inference.loader.LoadedModel]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "filenames_to_predict", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "probs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dump_pickle", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 53, "col_offset": 77, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "sigma", "type": "float"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "centroid_x", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "centroid_y", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 82, "col_offset": 79, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "cv2", "type": "Any"}, {"lineNumber": 121, "col_offset": 84, "nodeName": "ones", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "margin", "type": "int"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "ones", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "load", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "npy_filename", "type": "str"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "imread", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "imresize", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "lines_prob", "type": "Any"}, {"lineNumber": 170, "col_offset": 60, "nodeName": "post_process_params", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "imsave", "type": "Any"}, {"lineNumber": 173, "col_offset": 72, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "basename", "type": "str"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "PAGE", "type": "module"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "input_dir", "type": "str"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 86, "nodeName": "input_dir", "type": "str"}, {"lineNumber": 39, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "output_basename", "type": "Any"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "contours", "type": "List[numpy.ndarray]"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 53, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 53, "col_offset": 77, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 90, "nodeName": "vertical_maxima", "type": "bool"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "mean", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "cnt", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "centroid_x", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "centroid_x", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "filtered_contours", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 82, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 69, "nodeName": "probs", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "local_maxima", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 84, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 106, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "margin", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "margin", "type": "int"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "label_components", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "border_component", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "channel_baselines", "type": "int"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "mask_dir", "type": "str"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "lines_prob", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "original_shape", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "original_shape", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 177, "col_offset": 73, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "sep", "type": "str"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 43, "col_offset": 88, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "baseline_chanel", "type": "int"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "lines_mask", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "vertical_local_maxima", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 79, "nodeName": "probs2", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "filter_width", "type": "float"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "page_width", "type": "int"}, {"lineNumber": 109, "col_offset": 81, "nodeName": "page_width", "type": "int"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 106, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "margin", "type": "int"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "npy_filename", "type": "str"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "basename", "type": "str"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 173, "col_offset": 60, "nodeName": "basename", "type": "str"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 68, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 73, "nodeName": "pred", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "path", "type": "module"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "sep", "type": "str"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 73, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 88, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 103, "nodeName": "pred", "type": "Any"}, {"lineNumber": 53, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 67, "nodeName": "filter_width", "type": "float"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 33, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 51, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "path", "type": "module"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "m", "type": "dh_segment.inference.loader.LoadedModel"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "split", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "os", "type": "module"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 43, "col_offset": 62, "nodeName": "filename", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "os", "type": "module"}]