[{"lineNumber": 10, "col_offset": 13, "nodeName": "Filter", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "slope", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "slope", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "attrs", "type": "Dict[str, str]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "attrs", "type": "Dict[str, str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "z", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "G", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "where", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "where", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "h", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "h", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "kernel_lowpass", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "attrs", "type": "Dict[str, str]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "z", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "kernel_highpass", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "kernel", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "Expwin", "type": "Type[Expwin]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "attrs", "type": "Dict[str, str]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "attrs", "type": "Dict[str, str]"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "slope", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "slope", "type": "Any"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "band_min", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "band_max", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "lmax", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "lmax", "type": "Any"}, {"lineNumber": 84, "col_offset": 50, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "self", "type": "Expwin"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "G", "type": "Any"}]