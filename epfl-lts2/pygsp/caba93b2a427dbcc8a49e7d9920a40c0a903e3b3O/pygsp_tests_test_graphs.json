[{"lineNumber": 125, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 129, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "Xin", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "Comet", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "G3", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "N", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "Ne", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "directed", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "NNGraph", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "Xin", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "Bunny", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "Cube", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "Cube", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "Sphere", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "TwoMoons", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "TwoMoons", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "Grid2d", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "Torus", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "LowStretchTree", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "RandomRegular", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Ring", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "Community", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "Minnesota", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "Sensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "Airfoil", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "FullConnected", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "Logo", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "Path", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "RandomRing", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "SwissRoll", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "graphs", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "todense", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "todense", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "pygsp", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "G", "type": "Any"}]