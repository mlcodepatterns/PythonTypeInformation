[{"lineNumber": 125, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 129, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "W1", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "W1", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "G1", "type": "pygsp.graphs.Graph"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "lap1", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "rep1", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "t1", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "G2", "type": "pygsp.graphs.Graph"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "rep2", "type": "Dict[str, Optional[Union[Dict[str, bool], bool]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "t2", "type": "Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "W3", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "G3", "type": "pygsp.graphs.Graph"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "lap3", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rep3", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "t3", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "W4", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "G4", "type": "pygsp.graphs.Graph"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "lap4", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "rep4", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "t4", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "test_graphs", "type": "List[Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "test_graphs", "type": "List[Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "s", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "stype", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 126, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "W1", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "W1", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "lap1", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "lap1", "type": "Any"}, {"lineNumber": 42, "col_offset": 61, "nodeName": "weight_check1", "type": "Dict[str, bool]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "G1", "type": "pygsp.graphs.Graph"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "rep1", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "empty", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "W2", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "weight_check2", "type": "Dict[str, bool]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "G2", "type": "pygsp.graphs.Graph"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "rep2", "type": "Dict[str, Optional[Union[Dict[str, bool], bool]]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "W3", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "G3", "type": "pygsp.graphs.Graph"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "lap3", "type": "Any"}, {"lineNumber": 59, "col_offset": 61, "nodeName": "weight_check3", "type": "Dict[str, bool]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "G3", "type": "pygsp.graphs.Graph"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "rep3", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "empty", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "W4", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "W4", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "W4", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "lap4", "type": "Any"}, {"lineNumber": 68, "col_offset": 61, "nodeName": "weight_check4", "type": "Dict[str, bool]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "G4", "type": "pygsp.graphs.Graph"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "rep4", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "t1", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "t2", "type": "Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "t3", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "t4", "type": "Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "mat_answser", "type": "None"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "test_tree_depths", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "A", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "root", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "test_distanz", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "y", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "compute_fourier_basis", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 66, "nodeName": "lmax", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "w_c", "type": "Dict[str, bool]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "mat_answser", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "mat_answser", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "test_is_directed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "test_estimate_lmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "test_check_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "test_check_connectivity", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "test_symetrize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "W", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "is_directed", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "rep", "type": "Union[Dict[str, Any], Dict[str, Optional[Union[Dict[str, bool], bool]]]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "operators", "type": "module"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 78, "col_offset": 66, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "check_weights", "type": "Callable[..., Dict[str, bool]]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "W", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "distanz", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "symetrize", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 64, "nodeName": "W", "type": "Any"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "sy_type", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "tree_depths", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 98, "col_offset": 60, "nodeName": "A", "type": "Any"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "root", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "arange", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "utils", "type": "module"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "estimate_lmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "utils", "type": "module"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "check_connectivity", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "utils", "type": "module"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "utils", "type": "module"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "utils", "type": "module"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "t", "type": "Union[Dict[str, Union[Dict[str, Any], pygsp.graphs.Graph]], Dict[str, Union[Dict[str, Optional[Union[Dict[str, bool], bool]]], pygsp.graphs.Graph]]]"}]