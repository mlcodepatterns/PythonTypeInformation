[{"lineNumber": 9, "col_offset": 21, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "XCoords", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "YCoords", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "ii", "type": "numpy.ndarray"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "jj", "type": "numpy.ndarray"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "p", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "YCoords", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "YCoords", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "XCoords", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "XCoords", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "csc_matrix", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "LowStretchTree"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "kron", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "YCoords", "type": "numpy.ndarray"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "kron", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "XCoords", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "W", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "coords", "type": "Any"}, {"lineNumber": 60, "col_offset": 74, "nodeName": "plotting", "type": "Dict[str, Union[float, int, numpy.ndarray]]"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "ii", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "jj", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "YCoords", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "XCoords", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "ii", "type": "Any"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "jj", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "XCoords", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "YCoords", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "LowStretchTree", "type": "Type[LowStretchTree]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "self", "type": "LowStretchTree"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "ii", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "ii", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "ii", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "jj", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "jj", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "jj", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "YCoords", "type": "Any"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "XCoords", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "ii", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "p", "type": "int"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "p", "type": "int"}, {"lineNumber": 44, "col_offset": 60, "nodeName": "p", "type": "int"}, {"lineNumber": 46, "col_offset": 60, "nodeName": "p", "type": "int"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "k", "type": "Any"}, {"lineNumber": 58, "col_offset": 59, "nodeName": "k", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "p", "type": "int"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "p", "type": "int"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "p", "type": "int"}, {"lineNumber": 33, "col_offset": 62, "nodeName": "p", "type": "int"}, {"lineNumber": 36, "col_offset": 71, "nodeName": "p", "type": "int"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "p", "type": "int"}, {"lineNumber": 37, "col_offset": 71, "nodeName": "p", "type": "int"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "p", "type": "int"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "p", "type": "int"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "p", "type": "int"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "p", "type": "int"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "p", "type": "int"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "p", "type": "int"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "p", "type": "int"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "p", "type": "int"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "p", "type": "int"}, {"lineNumber": 41, "col_offset": 46, "nodeName": "p", "type": "int"}]