[{"lineNumber": 143, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 147, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "W1", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "mask1", "type": "numpy.ndarray"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "W1", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "G1", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "lap1", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "sym1", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "t1", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "G2", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "t2", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "W3", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "G3", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "lap3", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "sym3", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "t3", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "W4", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "G4", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "lap4", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "sym4", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "t4", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "test_graphs", "type": "List[Dict[str, Any]]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "test_graphs", "type": "List[Dict[str, Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "G5", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "checks5", "type": "Dict[str, bool]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "W1", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "W1", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "W1", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "lap1", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "sym1", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "lap1", "type": "Any"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "weight_check1", "type": "Dict[str, bool]"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "sym1", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "G1", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "rep1", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "W2", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "W2", "type": "Any"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "weight_check2", "type": "Dict[str, bool]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "G2", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "rep2", "type": "Dict[str, Optional[Union[bool, Dict[str, bool]]]]"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "W3", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "G3", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "G3", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "lap3", "type": "Any"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "weight_check3", "type": "Dict[str, bool]"}, {"lineNumber": 69, "col_offset": 41, "nodeName": "sym3", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "G3", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "rep3", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "W4", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "W4", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "W4", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "W4", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "lap4", "type": "Any"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "weight_check4", "type": "Dict[str, bool]"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "sym4", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "G4", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "rep4", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "t1", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "t3", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "t4", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "check", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "test_check_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "G5", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "checks5", "type": "Dict[str, bool]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "compute_fourier_basis", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "G", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 74, "nodeName": "lmax", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "w_c", "type": "Dict[str, bool]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 66, "nodeName": "is_conn", "type": "bool"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "check", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "test_is_directed", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "test_estimate_lmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "test_check_weights", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "test_check_connectivity", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "test_symmetrize", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "W", "type": "Any"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "graphs", "type": "module"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "test_estimate_lmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "arange", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "mask1", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "is_directed", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 55, "nodeName": "G", "type": "Any"}, {"lineNumber": 86, "col_offset": 59, "nodeName": "rep", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "operators", "type": "module"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 90, "col_offset": 74, "nodeName": "G", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "check_weights", "type": "Callable[[Any], Dict[str, bool]]"}, {"lineNumber": 93, "col_offset": 57, "nodeName": "W", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "check_connectivity", "type": "Callable[..., bool]"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "G", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "distanz", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "todense", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "t2", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "gutils", "type": "module"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "estimate_lmax", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 67, "nodeName": "G", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "gutils", "type": "module"}, {"lineNumber": 93, "col_offset": 57, "nodeName": "G", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "gutils", "type": "module"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "utils", "type": "module"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "t", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "arange", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "graphs", "type": "module"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "gutils", "type": "module"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "graphs", "type": "module"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "graphs", "type": "module"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "ans", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "graphs", "type": "module"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "symmetrize", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "W", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "gutils", "type": "module"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "graphs", "type": "module"}]