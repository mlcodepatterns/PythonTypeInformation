[{"lineNumber": 144, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 148, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Bunny"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Cube"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "G2", "type": "pygsp.graphs.Cube"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Sphere"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.TwoMoons"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "G2", "type": "pygsp.graphs.TwoMoons"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Grid2d"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Torus"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "G", "type": "Type[pygsp.graphs.Comet]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "Comet", "type": "Type[pygsp.graphs.Comet]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.LowStretchTree"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.RandomRegular"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Ring"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Community"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Minnesota"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Sensor"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Airfoil"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.DavidSensorNet"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "G2", "type": "pygsp.graphs.DavidSensorNet"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "G3", "type": "pygsp.graphs.DavidSensorNet"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.FullConnected"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Logo"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Path"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.RandomRing"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.SwissRoll"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "test_default_graph", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "test_NNGraph", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "test_Bunny", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "test_Sphere", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "test_Cube", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "test_Grid2d", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "test_Torus", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "test_Comet", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "test_LowStretchTree", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "test_RandomRegular", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "test_Ring", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "test_Community", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "test_Sensor", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "test_Airfoil", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "test_DavidSensorNet", "type": "Callable[[], Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "test_FullConnected", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "test_Logo", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "test_Path", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "test_RandomRing", "type": "Callable[[], Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "N", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "Ne", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "directed", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "Bunny", "type": "Type[pygsp.graphs.Bunny]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "Cube", "type": "Type[pygsp.graphs.Cube]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "Cube", "type": "Type[pygsp.graphs.Cube]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "Sphere", "type": "Type[pygsp.graphs.Sphere]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "TwoMoons", "type": "Type[pygsp.graphs.TwoMoons]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "TwoMoons", "type": "Type[pygsp.graphs.TwoMoons]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "Grid2d", "type": "Type[pygsp.graphs.Grid2d]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "Torus", "type": "Type[pygsp.graphs.Torus]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "LowStretchTree", "type": "Type[pygsp.graphs.LowStretchTree]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "RandomRegular", "type": "Type[pygsp.graphs.RandomRegular]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "Ring", "type": "Type[pygsp.graphs.Ring]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "Community", "type": "Type[pygsp.graphs.Community]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "Minnesota", "type": "Type[pygsp.graphs.Minnesota]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "Sensor", "type": "Type[pygsp.graphs.Sensor]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "Airfoil", "type": "Type[pygsp.graphs.Airfoil]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "DavidSensorNet", "type": "Type[pygsp.graphs.DavidSensorNet]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Type[pygsp.graphs.DavidSensorNet]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Type[pygsp.graphs.DavidSensorNet]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "FullConnected", "type": "Type[pygsp.graphs.FullConnected]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "Logo", "type": "Type[pygsp.graphs.Logo]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "Path", "type": "Type[pygsp.graphs.Path]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "RandomRing", "type": "Type[pygsp.graphs.RandomRing]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "SwissRoll", "type": "Type[pygsp.graphs.SwissRoll]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "graphs", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "todense", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "todense", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "todense", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "pygsp", "type": "module"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "G", "type": "pygsp.graphs.Graph"}]