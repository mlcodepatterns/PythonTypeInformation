[{"lineNumber": 131, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 135, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "test_default_graph", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "test_NNGraph", "type": "Callable[[], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "test_Bunny", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "test_Sphere", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "test_Cube", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "test_Grid2d", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "test_Torus", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "test_Comet", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "test_LowStretchTree", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "test_RandomRegular", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "test_Ring", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "test_Community", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "test_Sensor", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "test_Airfoil", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "test_DavidSensorNet", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "test_FullConnected", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "test_Logo", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "test_Path", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "test_RandomRing", "type": "Callable[[], Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "b", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Graph", "type": "Type[pygsp.graphs.Graph]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "A", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "N", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "Ne", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "directed", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "graphs", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "G", "type": "pygsp.graphs.Graph"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "pygsp", "type": "module"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "W", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "G", "type": "pygsp.graphs.Graph"}]