[{"lineNumber": 152, "col_offset": 0, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "FunctionsTestCase", "type": "Type[FunctionsTestCase]"}, {"lineNumber": 156, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 3, "nodeName": "sys", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "run", "type": "Callable[[Union[unittest.case.TestCase, unittest.suite.TestSuite]], unittest.result.TestResult]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "run", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "Xin", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "G2", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "G3", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "G", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "dummy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "a", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "b", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "Ne", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "Ne", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "N", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "Graph", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "W", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "ki", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "kj", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "A", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "NNGraph", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "Xin", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "Bunny", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "Cube", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "Cube", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "G2", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "Sphere", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "TwoMoons", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "TwoMoons", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "G2", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "Grid2d", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "Torus", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "Comet", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "LowStretchTree", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "RandomRegular", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "Ring", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "Community", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "Minnesota", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "Sensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "Airfoil", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "DavidSensorNet", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "G2", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "G3", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "FullConnected", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "Logo", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "Path", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "RandomRing", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "SwissRoll", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "needed_attributes_testing", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "G", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "graphs", "type": "module"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "nptest", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "G", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "G", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "G", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "G", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "FunctionsTestCase"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "G", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "G", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "graphs", "type": "module"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "graphs", "type": "module"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "ki", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "kj", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "coords", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "arange", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "G", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "np", "type": "module"}]