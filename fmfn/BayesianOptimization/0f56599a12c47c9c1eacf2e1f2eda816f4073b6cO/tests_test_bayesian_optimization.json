[{"lineNumber": 9, "col_offset": 0, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "test_register", "type": "Callable[[], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_probe_lazy", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "test_probe_eager", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "test_suggest_at_random", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "test_suggest_with_one_observation", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_prime_queue_all_empty", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "test_prime_queue_empty_with_init", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "test_prime_queue_with_register", "type": "Callable[[], Any]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "test_prime_queue_with_register_and_init", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_prime_subscriptions", "type": "Callable[[], Any]"}, {"lineNumber": 197, "col_offset": 0, "nodeName": "test_set_bounds", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "test_set_gp_params", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 0, "nodeName": "test_maximize", "type": "Callable[[], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "util", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "util", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "event", "type": "str"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "DEFAULT_EVENTS", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_subscriber", "type": "str"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "pbounds", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "empty", "type": "Any"}, {"lineNumber": 286, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "probe", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "UtilityFunction", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "UtilityFunction", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "_prime_queue", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "_prime_queue", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "_prime_queue", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "_prime_queue", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "_prime_subscriptions", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "subscribe", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "_prime_subscriptions", "type": "Any"}, {"lineNumber": 181, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 50, "nodeName": "pbounds", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "set_bounds", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "set_bounds", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "n_restarts_optimizer", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "set_gp_params", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "n_restarts_optimizer", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "set_gp_params", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "n_restarts_optimizer", "type": "Any"}, {"lineNumber": 251, "col_offset": 16, "nodeName": "BayesianOptimization", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "target_func", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "PBOUNDS", "type": "Dict[str, Tuple[int, int]]"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "Tracker", "type": "Type[Any]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "subscribe", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "subscribe", "type": "Any"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "subscribe", "type": "Any"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "maximize", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "start_count", "type": "int"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "values", "type": "Callable"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "space", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "register", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "register", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "max", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "params_to_array", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "dim", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "params_to_array", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_queue", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "test_subscriber", "type": "str"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "test_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "_events", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "_events", "type": "Any"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 193, "col_offset": 23, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_events", "type": "Any"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 222, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "_gp", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "start_count", "type": "int"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "step_count", "type": "int"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "end_count", "type": "int"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "update_start", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "OPTMIZATION_STEP", "type": "str"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "update_step", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "OPTMIZATION_END", "type": "str"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "update_end", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 291, "col_offset": 17, "nodeName": "__file__", "type": "str"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "space", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "util", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "space", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "space", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "util", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "space", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "test_subscriber", "type": "str"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "test_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "test_subscriber", "type": "str"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "test_callback", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "OPTMIZATION_STEP", "type": "str"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "OPTMIZATION_END", "type": "str"}, {"lineNumber": 193, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 223, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 265, "col_offset": 14, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "tracker", "type": "Any"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "ScreenLogger", "type": "Type[bayes_opt.observer.ScreenLogger]"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "keys", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "keys", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "space", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "space", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "space", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "space", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "space", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "keys", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "keys", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_events", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_events", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "_events", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "_events", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "_events", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "_events", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "OPTMIZATION_START", "type": "str"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "event", "type": "str"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "event", "type": "str"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "Events", "type": "Type[bayes_opt.event.Events]"}]