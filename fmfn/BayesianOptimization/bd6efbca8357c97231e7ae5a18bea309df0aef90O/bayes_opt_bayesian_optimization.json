[{"lineNumber": 11, "col_offset": 0, "nodeName": "acq_max", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "matern52", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "__author__", "type": "str"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "max_acq", "type": "None"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "x_tries", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "x_try", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "x_tries", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "clip", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "theta", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "n_features", "type": "int"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "size", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "keys", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "dim", "type": "int"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "bounds", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "bounds", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "x_init", "type": "List[List[Any]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "X", "type": "None"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "Y", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "util", "type": "None"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "plog", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "res", "type": "Dict[str, Union[Dict[str, None], Dict[str, Union[List[Dict[Any, Any]], List[Any]]], Dict[str, Any]]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "x", "type": "nothing"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "x_init", "type": "List[List[Any]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "X", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "Y", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "param_tup_lens", "type": "List[int]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "target", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "points_dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "util", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "ur", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "minimize", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "max_acq", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "float", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "float", "type": "Any"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "size", "type": "int"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "n_features", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "exp", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "GaussianProcess", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "PrintLog", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "res", "type": "Dict[str, Union[Dict[str, None], Dict[str, Union[List[Dict[Any, Any]], List[Any]]], Dict[str, Any]]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "init_points", "type": "List[nothing]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 235, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "new_bounds", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "row", "type": "int"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "key", "type": "Any"}, {"lineNumber": 281, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "reset_timer", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "UtilityFunction", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "initialized", "type": "bool"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "max", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "unique_rows", "type": "Any"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "acq_max", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 354, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 354, "col_offset": 23, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "pwarning", "type": "bool"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "Y", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "ur", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "max_acq", "type": "None"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "max_acq", "type": "None"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "fun", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 9, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "r", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "matern52", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 189, "col_offset": 65, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "map", "type": "Callable"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "map", "type": "Callable"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "target", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "plog", "type": "Any"}, {"lineNumber": 322, "col_offset": 41, "nodeName": "acq", "type": "Any"}, {"lineNumber": 322, "col_offset": 52, "nodeName": "kappa", "type": "Any"}, {"lineNumber": 322, "col_offset": 62, "nodeName": "xi", "type": "Any"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "init", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "init_points", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "gp", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "gp_params", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "gp", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 337, "col_offset": 32, "nodeName": "Y", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "utility", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "gp", "type": "Any"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "print_header", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "any", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "pwarning", "type": "bool"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "append", "type": "Any"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "Y", "type": "Any"}, {"lineNumber": 371, "col_offset": 17, "nodeName": "unique_rows", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "X", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "acq_max", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "print_summary", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "x_try", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 98, "col_offset": 61, "nodeName": "n_features", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "r", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "bounds", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "dim", "type": "int"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "init_points", "type": "Any"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "print_step", "type": "Any"}, {"lineNumber": 205, "col_offset": 37, "nodeName": "x", "type": "nothing"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "param_tup_lens", "type": "List[int]"}, {"lineNumber": 233, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "e", "type": "int"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "e", "type": "int"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "param_tup_lens", "type": "List[int]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "points_dict", "type": "Any"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "x_init", "type": "List[List[Any]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "pbounds", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "row", "type": "int"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 284, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "print_header", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "ur", "type": "Any"}, {"lineNumber": 337, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "ur", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "util", "type": "Any"}, {"lineNumber": 341, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 343, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "plog", "type": "Any"}, {"lineNumber": 358, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "X", "type": "Any"}, {"lineNumber": 368, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "f", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "gp", "type": "Any"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 372, "col_offset": 36, "nodeName": "Y", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "Y", "type": "Any"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "Y", "type": "Any"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "utility", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "gp", "type": "Any"}, {"lineNumber": 381, "col_offset": 34, "nodeName": "y_max", "type": "Any"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "print_step", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "max", "type": "Any"}, {"lineNumber": 395, "col_offset": 45, "nodeName": "Y", "type": "Any"}, {"lineNumber": 396, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "plog", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "random", "type": "Any"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "ones", "type": "Any"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "dim", "type": "int"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "dim", "type": "int"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "plog", "type": "Any"}, {"lineNumber": 205, "col_offset": 40, "nodeName": "y_init", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "param_tup_lens", "type": "List[int]"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 247, "col_offset": 47, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "all_points", "type": "List[Any]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 281, "col_offset": 34, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "plog", "type": "Any"}, {"lineNumber": 340, "col_offset": 27, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 24, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 31, "nodeName": "ur", "type": "Any"}, {"lineNumber": 372, "col_offset": 36, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "ur", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "util", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 382, "col_offset": 35, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "plog", "type": "Any"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 386, "col_offset": 49, "nodeName": "Y", "type": "Any"}, {"lineNumber": 386, "col_offset": 69, "nodeName": "pwarning", "type": "bool"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "Y", "type": "Any"}, {"lineNumber": 392, "col_offset": 54, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 45, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 396, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 396, "col_offset": 54, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "d", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "points_dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "points_dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 360, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 368, "col_offset": 48, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 379, "col_offset": 31, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 386, "col_offset": 37, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 386, "col_offset": 49, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 391, "col_offset": 42, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 392, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 393, "col_offset": 54, "nodeName": "X", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "res", "type": "Dict[str, Union[Dict[str, None], Dict[str, Union[List[Dict[Any, Any]], List[Any]]], Dict[str, Any]]]"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "res", "type": "Dict[str, Union[Dict[str, None], Dict[str, Union[List[Dict[Any, Any]], List[Any]]], Dict[str, Any]]]"}, {"lineNumber": 396, "col_offset": 54, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "X", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "n_features", "type": "int"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "x", "type": "nothing"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "target", "type": "Any"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 358, "col_offset": 32, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "bounds", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 368, "col_offset": 57, "nodeName": "keys", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 68, "nodeName": "x_max", "type": "Any"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "theta", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 44, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 368, "col_offset": 57, "nodeName": "self", "type": "BayesianOptimization"}, {"lineNumber": 393, "col_offset": 61, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 393, "col_offset": 61, "nodeName": "Y", "type": "Any"}]