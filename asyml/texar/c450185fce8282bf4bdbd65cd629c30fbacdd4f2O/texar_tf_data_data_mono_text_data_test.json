[{"lineNumber": 24, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 354, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_vocab_file", "type": "IO[bytes]"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_text_file", "type": "IO[bytes]"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "text_data_1", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "iterator_1", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "text_data_batch_1", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "_vocab_file", "type": "IO[bytes]"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "_vocab_size", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "_text_file", "type": "IO[bytes]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[int, bool, str]], bool, int]]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "make_initializable_iterator", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "make_initializable_iterator", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "make_initializable_iterator", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 221, "col_offset": 41, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "MonoTextData", "type": "Type[texar.tf.data.data.mono_text_data.MonoTextData]"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "make_initializable_iterator", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "get_next", "type": "Any"}, {"lineNumber": 304, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[int, bool, str]], bool, int]]"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "_hparams", "type": "Dict[str, Union[Dict[str, Union[int, bool, str]], bool, int]]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "_run_and_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 351, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[int, bool, str]], bool, int]]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "name", "type": "str"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 128, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "data", "type": "module"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "iterator_1", "type": "Any"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 236, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "text_file", "type": "IO[bytes]"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "name", "type": "str"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "data", "type": "module"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 347, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "_text_file", "type": "IO[bytes]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "_vocab_file", "type": "IO[bytes]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "tx", "type": "module"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "special_tokens", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "local_variables_initializer", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "test_batch_size", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "length_inc", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "mode", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "length_filter_mode", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "pad_to_max_seq_length", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "OutOfRangeError", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "tx", "type": "module"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "tx", "type": "module"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "text_data_1", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "local_variables_initializer", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "iterator_1", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "length_", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "OutOfRangeError", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "length_tensor_name", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "_transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "_transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "tx", "type": "module"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "list_items", "type": "Callable[[], List[Any]]"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "tx", "type": "module"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "list_items", "type": "Callable[[], List[Any]]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "_text_file", "type": "IO[bytes]"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "_vocab_file", "type": "IO[bytes]"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "tx", "type": "module"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 299, "col_offset": 44, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "special_tokens", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 304, "col_offset": 13, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "local_variables_initializer", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "tables_initializer", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 319, "col_offset": 20, "nodeName": "utt_ind", "type": "Any"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "utt_cnt", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "pad_to_max_seq_length", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "OutOfRangeError", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[int, bool, str]], bool, int]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "added_length", "type": "Any"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "length", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "errors", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "data_batch_1_", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "run", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "length_", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "last_batch_size", "type": "int"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "last_batch_size", "type": "int"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "errors", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 278, "col_offset": 34, "nodeName": "text", "type": "List[str]"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 307, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "run", "type": "Any"}, {"lineNumber": 313, "col_offset": 43, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 320, "col_offset": 37, "nodeName": "utt_ind", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 327, "col_offset": 24, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "added_length", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "errors", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "text_", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "_decoder", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "length", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "added_length", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "sess", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "text_data_batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "text_data_batch_1", "type": "Any"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 178, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "data_specs", "type": "Any"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "sess", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 315, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 316, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 320, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "_decoder", "type": "Any"}, {"lineNumber": 328, "col_offset": 33, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "xx", "type": "Any"}, {"lineNumber": 329, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 331, "col_offset": 33, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "xx", "type": "Any"}, {"lineNumber": 332, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 336, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "keys", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "list_items", "type": "Callable[[], List[Any]]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "assertLessEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 49, "nodeName": "length", "type": "Any"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "mode", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "num_length_6", "type": "int"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "length", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "_decoder", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, Union[str, int, List[Callable[[Any, Any], Any]], bool]], int, bool, List[int]]]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "data_batch_1_", "type": "Any"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "keys", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "list_items", "type": "Callable[[], List[Any]]"}, {"lineNumber": 319, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "utt_cnt", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "length_inc", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "length", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "num_length_6", "type": "int"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "num_length_6", "type": "int"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 56, "nodeName": "last_batch_size", "type": "int"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "last_batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 326, "col_offset": 32, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 330, "col_offset": 58, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "index", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "self", "type": "MonoTextDataTest"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "mode", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "utterance_cnt_name", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 330, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 330, "col_offset": 53, "nodeName": "xx", "type": "Any"}, {"lineNumber": 333, "col_offset": 32, "nodeName": "self", "type": "VarUttMonoTextDataTest"}, {"lineNumber": 333, "col_offset": 49, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 333, "col_offset": 53, "nodeName": "xx", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "text_", "type": "Any"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 88, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "length", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "data_batch_", "type": "Any"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "text_data", "type": "texar.tf.data.data.mono_text_data.MonoTextData"}]