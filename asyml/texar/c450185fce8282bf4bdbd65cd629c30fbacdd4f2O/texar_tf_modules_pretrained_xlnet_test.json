[{"lineNumber": 18, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 54, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "pretrained_model_dir", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "info", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "model_config", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "expected_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "download_checkpoint", "type": "Callable[..., str]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "files", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "info", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "files", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "files", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "files", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "files", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "files", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "_transform_config", "type": "Callable[[Any, Any, Any], Dict[str, Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "model_config", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "expected_config", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "PretrainedXLNetMixin", "type": "Type[texar.tf.modules.pretrained.xlnet.PretrainedXLNetMixin]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "walk", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "pretrained_model_dir", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "PretrainedXLNetMixin", "type": "Type[texar.tf.modules.pretrained.xlnet.PretrainedXLNetMixin]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "pretrained_model_dir", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "os", "type": "module"}]