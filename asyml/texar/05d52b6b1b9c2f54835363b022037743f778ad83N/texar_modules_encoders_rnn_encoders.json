[{"lineNumber": 26, "col_offset": 0, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 370, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "noise_shape", "type": "None"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "variational_dropout", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "other_dense_kwargs", "type": "Any"}, {"lineNumber": 36, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "todict", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "final_layer_activation", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "activation", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "layers", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "noise_shape", "type": "Optional[List[Optional[int]]]"}, {"lineNumber": 89, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "training", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 337, "col_offset": 18, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 338, "col_offset": 41, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 339, "col_offset": 40, "nodeName": "mode", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 353, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 391, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 452, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 480, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "output_states", "type": "Any"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 517, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 523, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "layers", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "mode", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "layer", "type": "Any"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 116, "col_offset": 65, "nodeName": "training", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 264, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 319, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 367, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 451, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 452, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 454, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 479, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 479, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 517, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "layers", "type": "module"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 193, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 198, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 322, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 323, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 325, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 327, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 333, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 335, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 346, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 347, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 394, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 394, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 399, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 402, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 494, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 495, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 497, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 505, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 507, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 346, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 349, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 405, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 408, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 482, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 491, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 492, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 505, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 507, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 348, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 348, "col_offset": 62, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 404, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 407, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 408, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]