[{"lineNumber": 19, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 144, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "hparams_dim", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "hparams_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "WordEmbedder", "type": "Type[texar.modules.embedders.embedders.WordEmbedder]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "hparams_dim", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "hparams_dim", "type": "Union[Any, List[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "PositionEmbedder", "type": "Type[texar.modules.embedders.position_embedders.PositionEmbedder]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "hparams_dim", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "hparams_dim", "type": "Union[Any, List[Any]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "position_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 51, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "int32", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 73, "col_offset": 68, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "tf", "type": "Any"}]