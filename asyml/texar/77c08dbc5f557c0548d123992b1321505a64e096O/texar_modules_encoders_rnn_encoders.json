[{"lineNumber": 29, "col_offset": 0, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 406, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "noise_shape", "type": "None"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "variational_dropout", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "other_dense_kwargs", "type": "Any"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "todict", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "final_layer_activation", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "activation", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 57, "col_offset": 52, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "layers", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "noise_shape", "type": "Optional[List[Optional[int]]]"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "training", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 18, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "map_func", "type": "functools.partial[nothing]"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 427, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 487, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 490, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 516, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "output_states", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 559, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 565, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "layers", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "mode", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "layer", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 119, "col_offset": 65, "nodeName": "training", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 348, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 366, "col_offset": 19, "nodeName": "functools", "type": "module"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 369, "col_offset": 23, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 371, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 372, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 438, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 487, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 488, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 490, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 515, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 515, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 516, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 536, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "layers", "type": "module"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 116, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 207, "col_offset": 37, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 351, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 353, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 354, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 356, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 361, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 430, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 432, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 435, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 522, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 523, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 525, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 530, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 531, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 532, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 533, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 534, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 540, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 541, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 543, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 349, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 358, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 370, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 379, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 439, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 440, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 443, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 444, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 527, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 528, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 529, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 541, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 543, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 381, "col_offset": 35, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 381, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 381, "col_offset": 62, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 440, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 443, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 444, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]