[{"lineNumber": 18, "col_offset": 35, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "test", "type": "Any"}, {"lineNumber": 147, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "max_time", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "max_time", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "UnidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "UnidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "UnidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "BidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "BidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "inputs", "type": "List[List[int]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "BidirectionalRNNEncoder", "type": "Type[txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "state", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "UnidirectionalRNNEncoderTest"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 39, "col_offset": 65, "nodeName": "hparams", "type": "Dict[unicode, Dict[unicode, Dict[unicode, float]]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "UnidirectionalRNNEncoderTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "max_time", "type": "int"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "state_", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "run", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BidirectionalRNNEncoderTest"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "hparams", "type": "Dict[unicode, Dict[unicode, Dict[unicode, float]]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BidirectionalRNNEncoderTest"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "max_time", "type": "int"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "cell", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "state_", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "run", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "self", "type": "UnidirectionalRNNEncoderTest"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "sess", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "state", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoderTest"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "max_time", "type": "int"}, {"lineNumber": 61, "col_offset": 68, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoderTest"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "self", "type": "BidirectionalRNNEncoderTest"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "sess", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "state", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoderTest"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "max_time", "type": "int"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoderTest"}, {"lineNumber": 109, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "cell_dim", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "state_", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.UnidirectionalRNNEncoder"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "encoder", "type": "txtgen.modules.encoders.rnn_encoders.BidirectionalRNNEncoder"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "state_", "type": "Any"}]