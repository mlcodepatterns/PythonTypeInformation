[{"lineNumber": 21, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 192, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "inputs_soft", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "outputs_soft", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "hparams_dim", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "hparams_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "dim", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "init_value", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "ids", "type": "numpy.ndarray"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "soft_ids", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "soft_outputs", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "WordEmbedder", "type": "Type[texar.modules.embedders.embedders.WordEmbedder]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "hparams_dim", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "hparams_dim", "type": "Union[List[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "PositionEmbedder", "type": "Type[texar.modules.embedders.position_embedders.PositionEmbedder]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "hparams_dim", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "hparams_dim", "type": "Union[List[Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "position_size", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, int]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[float, List[int]]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_test_word_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "_test_position_embedder", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "hparams", "type": "Dict[str, Union[str, float, List[int]]]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "WordEmbedder", "type": "Type[texar.modules.embedders.embedders.WordEmbedder]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "emb_dim", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "WordEmbedder", "type": "Type[texar.modules.embedders.embedders.WordEmbedder]"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "inputs_soft", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "outputs_soft", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "pos_size", "type": "int"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "int32", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "run", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "hparams", "type": "Dict[str, Union[str, float, int]]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "int32", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "int32", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 55, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "arange", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "init_value", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "ids", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "soft_ids", "type": "numpy.ndarray"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "soft_outputs_", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "soft_outputs_", "type": "Any"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 34, "col_offset": 67, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "embedder", "type": "texar.modules.embedders.embedders.WordEmbedder"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "outputs_soft", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "outputs_soft_", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 73, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "embedder", "type": "texar.modules.embedders.position_embedders.PositionEmbedder"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "sess", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "tf", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 189, "col_offset": 57, "nodeName": "soft_outputs", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "EmbedderTest"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "seq_length", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "max_seq_length", "type": "Any"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 58, "nodeName": "emb_dim", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "tf", "type": "Any"}]