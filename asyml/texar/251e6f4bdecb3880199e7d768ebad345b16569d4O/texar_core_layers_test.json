[{"lineNumber": 23, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 270, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "mode", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 242, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "hparams", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[bool, Dict[str, Union[List[int], bool, float]], int, Dict[str, int], str]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "string", "type": "Any"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, float], int, Dict[str, int]]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, List[Dict[str, str]]], str]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "MaxReducePooling1D", "type": "Type[texar.core.layers.MaxReducePooling1D]"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "AverageReducePooling1D", "type": "Type[texar.core.layers.AverageReducePooling1D]"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 45, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 58, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 60, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "SequentialLayer", "type": "Type[texar.core.layers.SequentialLayer]"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 258, "col_offset": 18, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 263, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "num_units", "type": "int"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "num_units", "type": "int"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "state_", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "num_units", "type": "int"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "run", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "output_", "type": "Any"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "output_", "type": "Any"}, {"lineNumber": 161, "col_offset": 51, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 174, "col_offset": 64, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "output_", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "output_", "type": "Any"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "layers", "type": "module"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 212, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 240, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 265, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "num_units", "type": "int"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "core", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 160, "col_offset": 56, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 169, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 169, "col_offset": 49, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 170, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 174, "col_offset": 64, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 178, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 178, "col_offset": 56, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 214, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 236, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 239, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 239, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 39, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 257, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 260, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 260, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 263, "col_offset": 13, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "output_", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "output_train", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "output_test", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 42, "nodeName": "tx", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 239, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "context", "type": "module"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "tf", "type": "Any"}]