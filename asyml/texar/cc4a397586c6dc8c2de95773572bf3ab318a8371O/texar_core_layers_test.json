[{"lineNumber": 22, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_get_rnn_cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "test_get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "test_layer_logics", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_seq_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 189, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "hparams", "type": "Dict[unicode, Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "hparams", "type": "Dict[unicode, Union[unicode, Dict[unicode, int], int, Dict[unicode, Union[float, bool, List[int]]], bool]]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "hparams", "type": "Dict[unicode, unicode]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "hparams", "type": "Dict[unicode, Union[unicode, Dict[unicode, List[Dict[unicode, unicode]]]]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 64, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "SequentialLayer", "type": "Type[texar.core.layers.SequentialLayer]"}, {"lineNumber": 171, "col_offset": 43, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "num_units", "type": "int"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "num_units", "type": "int"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[Any]]]]]]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "state_", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "layers", "type": "module"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 155, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "num_units", "type": "int"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 59, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "core", "type": "module"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 133, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 158, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 179, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 179, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "output_", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "tx", "type": "module"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 185, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "is_train", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "context", "type": "module"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "inputs", "type": "Any"}]