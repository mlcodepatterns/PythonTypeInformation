[{"lineNumber": 29, "col_offset": 0, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 452, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "noise_shape", "type": "None"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "variational_dropout", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "other_dense_kwargs", "type": "Any"}, {"lineNumber": 53, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 118, "col_offset": 7, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 427, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 661, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "outputs_fw", "type": "Any"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "hparams_output_layer_bw", "type": "Any"}, {"lineNumber": 762, "col_offset": 34, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 763, "col_offset": 11, "nodeName": "output_layer_share_config", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "outputs_bw", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 793, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 809, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "todict", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "final_layer_activation", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "activation", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "inputs_T", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "layers", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "noise_shape", "type": "Optional[List[Optional[int]]]"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "training", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "map_func", "type": "functools.partial[nothing]"}, {"lineNumber": 413, "col_offset": 47, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 486, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 651, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 732, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 755, "col_offset": 12, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 760, "col_offset": 21, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 760, "col_offset": 40, "nodeName": "map_func_fw", "type": "functools.partial[nothing]"}, {"lineNumber": 762, "col_offset": 34, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 763, "col_offset": 11, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 764, "col_offset": 12, "nodeName": "hparams_output_layer_bw", "type": "Any"}, {"lineNumber": 764, "col_offset": 38, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 765, "col_offset": 22, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "_forward_output_layers", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 771, "col_offset": 21, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 771, "col_offset": 40, "nodeName": "map_func_bw", "type": "functools.partial[nothing]"}, {"lineNumber": 773, "col_offset": 19, "nodeName": "outputs_fw", "type": "Any"}, {"lineNumber": 773, "col_offset": 31, "nodeName": "outputs_bw", "type": "Any"}, {"lineNumber": 775, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 791, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 803, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 803, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 809, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 837, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 843, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "layers", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "mode", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 58, "nodeName": "layer", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 133, "col_offset": 56, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 133, "col_offset": 65, "nodeName": "training", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 389, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 389, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 390, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "functools", "type": "module"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 412, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 413, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 428, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 428, "col_offset": 35, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 430, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 490, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 497, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 506, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 506, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 507, "col_offset": 15, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 508, "col_offset": 40, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 513, "col_offset": 15, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 514, "col_offset": 40, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "output_layer_share_config", "type": "Any"}, {"lineNumber": 651, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 731, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 731, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 732, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 733, "col_offset": 42, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 744, "col_offset": 42, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 756, "col_offset": 25, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 757, "col_offset": 23, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 758, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 759, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 760, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 760, "col_offset": 53, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 762, "col_offset": 34, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 763, "col_offset": 11, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 764, "col_offset": 38, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 765, "col_offset": 22, "nodeName": "functools", "type": "module"}, {"lineNumber": 767, "col_offset": 25, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 768, "col_offset": 23, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "hparams_output_layer_bw", "type": "Any"}, {"lineNumber": 770, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 771, "col_offset": 21, "nodeName": "nest", "type": "Any"}, {"lineNumber": 771, "col_offset": 53, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 775, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 783, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 787, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 791, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 794, "col_offset": 19, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 794, "col_offset": 28, "nodeName": "output_states", "type": "Any"}, {"lineNumber": 794, "col_offset": 43, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 796, "col_offset": 19, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 796, "col_offset": 28, "nodeName": "output_states", "type": "Any"}, {"lineNumber": 803, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 831, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "layers", "type": "module"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 390, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 394, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 395, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 401, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 403, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 404, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 489, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 489, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 494, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 506, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 506, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 508, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 510, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 653, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 656, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 657, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 733, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 736, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 737, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 738, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 739, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 740, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 741, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 742, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 744, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 745, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 746, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 747, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 748, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 749, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 750, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 751, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 752, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 756, "col_offset": 25, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 758, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 764, "col_offset": 38, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 767, "col_offset": 25, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 780, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 782, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 783, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 785, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 787, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 789, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 390, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 420, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 422, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 498, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 500, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 503, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 515, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 516, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 519, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 653, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 654, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 733, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 734, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 735, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 741, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 744, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 745, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 746, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 758, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 780, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 782, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 784, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 784, "col_offset": 35, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 785, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 788, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 788, "col_offset": 35, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 789, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 422, "col_offset": 35, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 422, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 422, "col_offset": 62, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 502, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 784, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 784, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 784, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 786, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 788, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 788, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 788, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 517, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]