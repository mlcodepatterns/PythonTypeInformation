[{"lineNumber": 41, "col_offset": 0, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.tf.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 244, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 554, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "dense_layers", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "noise_shape", "type": "None"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "variational_dropout", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "map_func", "type": "functools.partial[nothing]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "cell_outputs_flat", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "cell_output_size_flat", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "o", "type": "List[nothing]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "other_dense_kwargs", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "HParams", "type": "Type[texar.tf.hyperparams.HParams]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "dense_layers", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "prod", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 7, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 153, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "output_layer", "type": "Union[List[Any], Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "output_size", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_forward_output_layers", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "cell_output_size", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "outputs_flat", "type": "Any"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "output_size_flat", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 198, "col_offset": 50, "nodeName": "outputs_flat", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "output_size_flat", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "rets", "type": "Tuple[Any, Any]"}, {"lineNumber": 527, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "return_output_size", "type": "Any"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "rets", "type": "Union[Tuple[Any, ...], Tuple[Any, Any]]"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 730, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 851, "col_offset": 8, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 852, "col_offset": 8, "nodeName": "output_size", "type": "Tuple[Any, Any]"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "returns", "type": "Tuple[Tuple[Any, Any], Any]"}, {"lineNumber": 873, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 875, "col_offset": 11, "nodeName": "return_output_size", "type": "Any"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "returns", "type": "Union[Tuple[Tuple[Any, Any], ...], Tuple[Any, ...], Tuple[Tuple[Any, Any], Any]]"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 905, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 911, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "todict", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "final_layer_activation", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "activation", "type": "Any"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "dim", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "layers", "type": "Any"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "noise_shape", "type": "Optional[List[Optional[int]]]"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "training", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "output_layer", "type": "Union[Any, List[Any]]"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "mask_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "functools", "type": "module"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "mode", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "nest", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "o", "type": "List[nothing]"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "nest", "type": "Any"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 214, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 510, "col_offset": 17, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 510, "col_offset": 31, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "_output_layer_hparams", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 512, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 526, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "rets", "type": "Tuple[Any, ...]"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "rets", "type": "Tuple[Any, ...]"}, {"lineNumber": 537, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 551, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 607, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 720, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 821, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "outputs_fw", "type": "Any"}, {"lineNumber": 843, "col_offset": 20, "nodeName": "output_size_fw", "type": "Any"}, {"lineNumber": 843, "col_offset": 37, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 844, "col_offset": 35, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 844, "col_offset": 47, "nodeName": "_output_layer_hparams_fw", "type": "Any"}, {"lineNumber": 845, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 845, "col_offset": 35, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "outputs_bw", "type": "Any"}, {"lineNumber": 847, "col_offset": 20, "nodeName": "output_size_bw", "type": "Any"}, {"lineNumber": 847, "col_offset": 37, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 848, "col_offset": 35, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 848, "col_offset": 47, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 849, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 849, "col_offset": 35, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 851, "col_offset": 19, "nodeName": "outputs_fw", "type": "Any"}, {"lineNumber": 851, "col_offset": 31, "nodeName": "outputs_bw", "type": "Any"}, {"lineNumber": 852, "col_offset": 23, "nodeName": "output_size_fw", "type": "Any"}, {"lineNumber": 852, "col_offset": 39, "nodeName": "output_size_bw", "type": "Any"}, {"lineNumber": 854, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 872, "col_offset": 28, "nodeName": "states", "type": "Any"}, {"lineNumber": 874, "col_offset": 12, "nodeName": "returns", "type": "Tuple[Any, ...]"}, {"lineNumber": 876, "col_offset": 12, "nodeName": "returns", "type": "Union[Tuple[Tuple[Any, Any], ...], Tuple[Any, ...]]"}, {"lineNumber": 883, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 889, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 905, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 911, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 917, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "mode", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "_forward_single_output_layer", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "layer", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "output_layer", "type": "Union[Any, List[Any]]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "training", "type": "Any"}, {"lineNumber": 180, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 196, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 196, "col_offset": 16, "nodeName": "xs", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "cell_outputs_flat", "type": "Any"}, {"lineNumber": 196, "col_offset": 45, "nodeName": "cell_output_size_flat", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.tf.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 292, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 300, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "_output_layer_hparams", "type": "None"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "_output_layer_hparams", "type": "Any"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 403, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 492, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 492, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 493, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 493, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 502, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 511, "col_offset": 44, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 610, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 610, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 612, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 617, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 618, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 627, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 627, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 628, "col_offset": 15, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 629, "col_offset": 16, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 629, "col_offset": 40, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "_output_layer_hparams_fw", "type": "None"}, {"lineNumber": 634, "col_offset": 16, "nodeName": "_output_layer_hparams_fw", "type": "Any"}, {"lineNumber": 634, "col_offset": 48, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 637, "col_offset": 40, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "None"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "output_layer_share_config", "type": "Any"}, {"lineNumber": 720, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]], bool]]"}, {"lineNumber": 820, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 820, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 821, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 822, "col_offset": 26, "nodeName": "states", "type": "Any"}, {"lineNumber": 822, "col_offset": 35, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 833, "col_offset": 12, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 833, "col_offset": 26, "nodeName": "states", "type": "Any"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 844, "col_offset": 47, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 845, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 845, "col_offset": 35, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 848, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 848, "col_offset": 47, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 849, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 849, "col_offset": 35, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 854, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 862, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 866, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 870, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 874, "col_offset": 24, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 876, "col_offset": 24, "nodeName": "output_size", "type": "Tuple[Any, Any]"}, {"lineNumber": 897, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 905, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "layers", "type": "module"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 171, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 295, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]]]"}, {"lineNumber": 406, "col_offset": 28, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 493, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 494, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 495, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 496, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 498, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 505, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 506, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 508, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 519, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 610, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 610, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 614, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 615, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 627, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 627, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 629, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 630, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 632, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 633, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 634, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 634, "col_offset": 48, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 637, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 638, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 642, "col_offset": 48, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 646, "col_offset": 48, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]]]"}, {"lineNumber": 723, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]]]"}, {"lineNumber": 725, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 726, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 822, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 823, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 825, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 826, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 827, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 828, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 829, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 830, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 831, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 836, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 837, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 838, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 839, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 840, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 841, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 845, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 849, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 859, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 859, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 861, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 862, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 864, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 866, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 868, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 869, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "dim", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 493, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 494, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 502, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 519, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 614, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 619, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 620, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 621, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 624, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 633, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 634, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 639, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 640, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 641, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 642, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 642, "col_offset": 48, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 644, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 20, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 646, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 646, "col_offset": 48, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 723, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 822, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 823, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 830, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 859, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 859, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 861, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 861, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 863, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 863, "col_offset": 35, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 864, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 867, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 867, "col_offset": 35, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 868, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 869, "col_offset": 20, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 304, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 521, "col_offset": 35, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 521, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 521, "col_offset": 62, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 523, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 620, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 623, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 633, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 641, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 642, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 645, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 646, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 863, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 863, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 863, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 867, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 867, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 867, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 869, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 624, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 641, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 645, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]