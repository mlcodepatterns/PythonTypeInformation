[{"lineNumber": 31, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "RegressorBase", "type": "Type[texar.tf.modules.regressors.regressor_base.RegressorBase]"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "PretrainedXLNetMixin", "type": "Type[texar.tf.modules.pretrained.xlnet.PretrainedXLNetMixin]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Optional[Union[float, int, str, List[str], bool]]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Optional[Union[float, int, str, List[str], bool]]]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "vars_to_learning_rates", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "vars_to_learning_rates", "type": "Dict[Any, Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "regr_strategy", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "use_projection", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "summary", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "logits", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "encoder_hparams", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "use_projection", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "drop_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[str, Any], str]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "_dropout_layer", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "logit_layer_kwargs", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "layer_hparams", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "_logit_layer", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Dict[str, Optional[Union[float, int, str, List[str]]]]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "lr_layer_scale", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "scope", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "projection_vars", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "logits_vars", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "finetune_vars", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "var", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "finetune_vars", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "variable", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "mode", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "_encoder", "type": "texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "token_ids", "type": "Any"}, {"lineNumber": 242, "col_offset": 45, "nodeName": "segment_ids", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "_dropout_layer", "type": "Any"}, {"lineNumber": 265, "col_offset": 38, "nodeName": "summary", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "_logit_layer", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "RegressorBase", "type": "Type[texar.tf.modules.regressors.regressor_base.RegressorBase]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "set_initializer", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "dict_fetch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "encoder_hparams", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "XLNetEncoder", "type": "Type[texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "drop_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "logit_kwargs", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "XLNetEncoder", "type": "Type[texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Optional[Union[float, int, str, List[str], bool]]]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "lr", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "projection_vars", "type": "Any"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "logits_vars", "type": "Any"}, {"lineNumber": 206, "col_offset": 46, "nodeName": "lr", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 214, "col_offset": 51, "nodeName": "lr", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 242, "col_offset": 69, "nodeName": "input_mask", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "mode", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 248, "col_offset": 13, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 265, "col_offset": 56, "nodeName": "is_training", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "_logit_layer", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "summary", "type": "Any"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "get_initializer", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "default_hparams", "type": "Callable[[], Dict[str, Optional[Union[float, int, str, List[str]]]]]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "encoder_hparams", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "pretrained_model_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "encoder_hparams", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[str, Any], str]]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 110, "col_offset": 50, "nodeName": "layer_hparams", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "vars_to_learning_rates", "type": "Dict[Any, Any]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "vars_to_learning_rates", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "param_groups", "type": "Callable"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "vars_to_learning_rates", "type": "Dict[Any, Any]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "length_diff", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "summary_input", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "summary_input_dim", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "summary", "type": "Any"}, {"lineNumber": 262, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "projection", "type": "Any"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "summary", "type": "Any"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "get_variable_scope", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "XLNetEncoder", "type": "Type[texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder]"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "HParams", "type": "Type[texar.tf.hyperparams.HParams]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "todict", "type": "Any"}, {"lineNumber": 201, "col_offset": 59, "nodeName": "scope", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "var", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "_encoder", "type": "texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "lr", "type": "Any"}, {"lineNumber": 210, "col_offset": 58, "nodeName": "lr_layer_scale", "type": "Any"}, {"lineNumber": 211, "col_offset": 61, "nodeName": "decay_base_params", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "variable", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "pad", "type": "Any"}, {"lineNumber": 252, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "max_seq_len", "type": "Any"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "summary_input", "type": "Any"}, {"lineNumber": 258, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "_logit_layer", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "logit_kwargs", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "_encoder", "type": "texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 258, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 63, "nodeName": "token_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 16, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "self", "type": "XLNetRegressor"}, {"lineNumber": 256, "col_offset": 59, "nodeName": "summary_input_dim", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "_encoder", "type": "texar.tf.modules.encoders.xlnet_encoder.XLNetEncoder"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "tf", "type": "Any"}, {"lineNumber": 253, "col_offset": 57, "nodeName": "length_diff", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "self", "type": "XLNetRegressor"}]