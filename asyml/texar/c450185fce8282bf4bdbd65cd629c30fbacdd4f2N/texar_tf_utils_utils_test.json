[{"lineNumber": 16, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 175, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "tokens", "type": "List[Union[List[nothing], List[str]]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "text", "type": "List[List[str]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "text", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "text_", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "dict_patch", "type": "Callable"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 30, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "str_", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "str_", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "str_", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "str_", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "tokens", "type": "List[Union[List[nothing], List[str]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "str_", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "uniquify_str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 47, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "uniquify_str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "Vocab", "type": "Type[texar.tf.data.vocabulary.Vocab]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "text", "type": "List[List[str]]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "map_tokens_to_ids_py", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "text", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "map_ids_to_strs", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 38, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "truncate_seq_pair", "type": "Callable[[List[Union[int, str]], List[Union[int, str]], int], None]"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 165, "col_offset": 29, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "truncate_seq_pair", "type": "Callable[[List[Union[int, str]], List[Union[int, str]], int], None]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 43, "col_offset": 51, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "str_", "type": "str"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "str_", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "str_", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "text_", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "text_", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "str_", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 101, "col_offset": 53, "nodeName": "str_", "type": "str"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "utils", "type": "module"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "str_", "type": "str"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "str_", "type": "str"}]