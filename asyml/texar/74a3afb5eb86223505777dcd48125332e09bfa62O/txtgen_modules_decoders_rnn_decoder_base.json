[{"lineNumber": 19, "col_offset": 21, "nodeName": "ModuleBase", "type": "Type[txtgen.modules.module_base.ModuleBase]"}, {"lineNumber": 19, "col_offset": 33, "nodeName": "TFDecoder", "type": "Any"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "_build", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "initialize", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "finalize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_helper", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_initial_state", "type": "None"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "embedding_trainable", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "helper", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "_initial_state", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_built", "type": "bool"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "cond", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "dynamic_decode", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "ModuleBase", "type": "Type[txtgen.modules.module_base.ModuleBase]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "embedding_trainable", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, Dict[str, Union[bool, float, str, Dict[str, int], List[Any]]]]]]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[str, Dict[str, Optional[float]]]]]]]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "is_train", "type": "Callable[[], Any]"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "layers", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "context", "type": "module"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 49, "nodeName": "self", "type": "RNNDecoderBase"}]