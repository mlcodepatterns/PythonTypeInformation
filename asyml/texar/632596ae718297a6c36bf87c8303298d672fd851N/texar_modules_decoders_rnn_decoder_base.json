[{"lineNumber": 29, "col_offset": 21, "nodeName": "ModuleBase", "type": "Type[texar.module_base.ModuleBase]"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "TFDecoder", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_helper", "type": "None"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_initial_state", "type": "None"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "helper", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "_initial_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "cond", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "dynamic_decode", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "identity", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "ModuleBase", "type": "Type[texar.module_base.ModuleBase]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "identity", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[Any]]]]]]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "default_helper_train_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "default_helper_infer_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "zero_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "global_mode_train", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "output_shape_with_unknown_batch", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 164, "col_offset": 55, "nodeName": "layer_output_shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "context", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 140, "col_offset": 56, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 160, "col_offset": 71, "nodeName": "s", "type": "Any"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 164, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "layers", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "tf", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "tensor_shape", "type": "Any"}]