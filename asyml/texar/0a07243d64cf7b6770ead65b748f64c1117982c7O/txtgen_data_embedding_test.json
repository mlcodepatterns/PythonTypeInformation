[{"lineNumber": 19, "col_offset": 20, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_load_glove", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_load_word2vec", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "test", "type": "Any"}, {"lineNumber": 63, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "word_vec_lines", "type": "List[unicode]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "glove_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "vocab", "type": "Dict[Union[unicode, str], int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "header", "type": "unicode"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "words", "type": "List[unicode]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "word", "type": "unicode"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "words", "type": "List[unicode]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "vocab", "type": "Dict[Union[unicode, str], int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "load_glove", "type": "Callable"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "vocab", "type": "Dict[Union[unicode, str], int]"}, {"lineNumber": 33, "col_offset": 65, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "NamedTemporaryFile", "type": "Callable[..., tempfile._TemporaryFileWrapper]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "load_word2vec", "type": "Callable"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "vocab", "type": "Dict[Union[unicode, str], int]"}, {"lineNumber": 55, "col_offset": 66, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 52, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "vec", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "glove_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "glove_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "embedding", "type": "module"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "glove_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "EmbeddingTest"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "EmbeddingTest"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "header", "type": "unicode"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "embedding", "type": "module"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "EmbeddingTest"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "EmbeddingTest"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "w2v_file", "type": "tempfile._TemporaryFileWrapper"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "word_vecs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "word_vec_lines", "type": "List[unicode]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "tostring", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "word", "type": "unicode"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "vec", "type": "numpy.ndarray"}]