[{"lineNumber": 31, "col_offset": 0, "nodeName": "_default_paired_text_dataset_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "DataBaseBase", "type": "Type[txtgen.data.databases.database_base.DataBaseBase]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "make_dataset", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "_make_data_provider", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "list_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "source_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "target_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "source_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "target_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "source_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "target_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "_default_mono_text_dataset_hparams", "type": "Callable[[], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[Any]]]]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "_default_mono_text_dataset_hparams", "type": "Callable[[], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[Any]]]]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "source_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "target_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "hparams", "type": "Dict[unicode, Optional[Union[int, unicode, List[nothing], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]]]]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "hparams", "type": "Dict[unicode, Optional[Union[int, unicode, List[nothing], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "text_tensor_name", "type": "unicode"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "length_tensor_name", "type": "unicode"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "text_id_tensor_name", "type": "unicode"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "src_reader_kwargs", "type": "None"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "tgt_reader_kwargs", "type": "None"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "data_provider", "type": "txtgen.data.databases.data_providers.PairedDataProvider"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "data_batch", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "_src_dataset", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "_tgt_dataset", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "mono_text_database", "type": "module"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "source_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "mono_text_database", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "target_hparams", "type": "Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[txtgen.data.databases.database_base.DataBaseBase, Any], None]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Dict[unicode, Optional[Union[int, unicode, List[Any]]]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "hparams", "type": "Dict[unicode, Optional[Union[int, unicode, List[nothing], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "make_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "src_hparams", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "default_string", "type": "Callable"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "default_string", "type": "Callable"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "TextDataDecoder", "type": "Type[txtgen.data.databases.text_data_decoder.TextDataDecoder]"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "tgt_embedding", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "tgt_embedding", "type": "None"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "tgt_dataset", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "target_dataset", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "tgt_reader_kwargs", "type": "Any"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "src_reader_kwargs", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "PairedDataProvider", "type": "Type[txtgen.data.databases.data_providers.PairedDataProvider]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "source_dataset", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "target_dataset", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "DataBaseBase", "type": "Type[txtgen.data.databases.database_base.DataBaseBase]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "name_scope", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "make_dataset", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "source_dataset", "type": "Any"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "target_dataset", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "_make_data_provider", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "_src_dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "_tgt_dataset", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "DataBaseBase", "type": "Type[txtgen.data.databases.database_base.DataBaseBase]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "hparams", "type": "Dict[unicode, Optional[Union[int, unicode, List[nothing], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing], bool]], Dict[unicode, Union[unicode, Dict[Union[str, unicode], Optional[Union[int, str, unicode, Dict[str, Union[str, Dict[str, float]]]]]], List[nothing]]]]]]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "_default_paired_text_dataset_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "MonoTextDataBase", "type": "Type[txtgen.data.databases.mono_text_database.MonoTextDataBase]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "src_hparams", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "Vocab", "type": "Type[txtgen.data.vocabulary.Vocab]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "get_class", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "get_class", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "token_to_id_map", "type": "Any"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "tgt_reader_class", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "tgt_decoder", "type": "txtgen.data.databases.text_data_decoder.TextDataDecoder"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "tgt_embedding", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "todict", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 167, "col_offset": 21, "nodeName": "tgt_dataset", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "src_reader_kwargs", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "tgt_reader_kwargs", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_data_provider", "type": "txtgen.data.databases.data_providers.PairedDataProvider"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "list_items", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "bucket_boundaries", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "bucket_by_sequence_length", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "list_items", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "mono_text_database", "type": "module"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "Vocab", "type": "Type[txtgen.data.vocabulary.Vocab]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "utils", "type": "module"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "utils", "type": "module"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "tgt_proc_hparams", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "Embedding", "type": "Type[txtgen.data.embedding.Embedding]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "token_to_id_map_py", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "tf_slim", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "todict", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "list_items", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "train", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 197, "col_offset": 42, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "length_tensor_name", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "training", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "bucket_boundaries", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "_data_provider", "type": "txtgen.data.databases.data_providers.PairedDataProvider"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "src_hparams", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "src_hparams", "type": "Any"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "tgt_hparams", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "tgt_vocab", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "source_dataset", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 65, "col_offset": 38, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "src_dataset", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "source_dataset", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "target_dataset", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "_src_dataset", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "target_dataset", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "PairedTextDataBase"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "self", "type": "PairedTextDataBase"}]