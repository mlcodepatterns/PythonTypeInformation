[{"lineNumber": 21, "col_offset": 16, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "test", "type": "Any"}, {"lineNumber": 180, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "str_", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "tokens", "type": "List[Union[List[nothing], List[str]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "str_", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "text", "type": "List[List[str]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "text", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "text_", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "dict_patch", "type": "Callable"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "str_", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "str_", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "str_", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Any"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "str_", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "tokens", "type": "List[Union[List[nothing], List[str]]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "str_", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "uniquify_str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "uniquify_str", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "unique_str", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "NamedTemporaryFile", "type": "Callable"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "Vocab", "type": "Type[texar.tf.data.vocabulary.Vocab]"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "name", "type": "str"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "text", "type": "List[List[str]]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "map_tokens_to_ids_py", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "text", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "map_ids_to_strs", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "ids", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "truncate_seq_pair", "type": "Callable[[List[Union[int, str]], List[Union[int, str]], int], None]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "truncate_seq_pair", "type": "Callable[[List[Union[int, str]], List[Union[int, str]], int], None]"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 42, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "tokens_a", "type": "List[int]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "tokens_b", "type": "List[int]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "src_dict", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "patched_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "tgt_dict", "type": "Dict[str, Union[str, Dict[str, str]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "str_", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "str_", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "strip_bos", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "str_", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "strip_eos", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "str_", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "str_", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "strip_special_tokens", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "utils", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "str_set", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "utils", "type": "module"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "vocab_file", "type": "IO[bytes]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "vocab", "type": "texar.tf.data.vocabulary.Vocab"}, {"lineNumber": 159, "col_offset": 14, "nodeName": "ids", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "utils", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "text_", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "text_", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "utils", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "UtilsTest"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "str_", "type": "str"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "strip_token", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "utils", "type": "module"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 71, "col_offset": 44, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "str_", "type": "str"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 111, "col_offset": 53, "nodeName": "str_", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "str_", "type": "str"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "utils", "type": "module"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "vocab_list", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "str_", "type": "str"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "str_", "type": "str"}]