[{"lineNumber": 17, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 116, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "hypothesis", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "references", "type": "List[List[str]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "hypothesis", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "references", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "sentence_bleu_moses", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "sentence_bleu", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "references", "type": "List[List[str]]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "hypothesis", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "references", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "hypothesis", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "corpus_bleu_moses", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "corpus_bleu", "type": "Callable[..., Union[float, List[Any]]]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_test_corpus_bleu", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "list_of_references", "type": "List[Union[List[str], List[List[str]]]]"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "hypotheses", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_test_corpus_bleu", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "list_of_references", "type": "List[Union[List[str], List[List[str]]]]"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "hypotheses", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "references", "type": "Any"}, {"lineNumber": 24, "col_offset": 46, "nodeName": "hypothesis", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "references", "type": "Any"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "hypothesis", "type": "Any"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "list_of_references", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "hypotheses", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "ret", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "true", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "list_of_references", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "hypotheses", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "bleu", "type": "Union[float, List[Any]]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "ret", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "true", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "bleu", "type": "Union[float, List[Any]]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 55, "nodeName": "r", "type": "str"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "ret", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "true", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "ret", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "true", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "r", "type": "str"}]