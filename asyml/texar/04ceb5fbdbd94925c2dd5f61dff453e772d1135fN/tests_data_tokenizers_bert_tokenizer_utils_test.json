[{"lineNumber": 12, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 91, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "vocab", "type": "Dict[str, int]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.WordpieceTokenizer"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "BasicTokenizer", "type": "Type[texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "BasicTokenizer", "type": "Type[texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "BasicTokenizer", "type": "Type[texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "token", "type": "str"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "vocab_tokens", "type": "List[str]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "WordpieceTokenizer", "type": "Type[texar.tf.data.tokenizers.bert_tokenizer_utils.WordpieceTokenizer]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertListEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[..., List[str]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[..., List[str]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "tokenize", "type": "Callable[..., List[str]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "vocab", "type": "Dict[str, int]"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "vocab", "type": "Dict[str, int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "tokenize", "type": "Callable[[str], List[str]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[[str], List[str]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "tokenize", "type": "Callable[[str], List[str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "_is_whitespace", "type": "Callable[[str], bool]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "_is_control", "type": "Callable[[str], bool]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "_is_control", "type": "Callable[[str], bool]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "_is_control", "type": "Callable[[str], bool]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "_is_control", "type": "Callable[[str], bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "_is_control", "type": "Callable[[str], bool]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "BERTTokenizerUtilsTest"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "_is_punctuation", "type": "Callable[[str], bool]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.BasicTokenizer"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "token", "type": "str"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.WordpieceTokenizer"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.WordpieceTokenizer"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "tokenizer", "type": "texar.tf.data.tokenizers.bert_tokenizer_utils.WordpieceTokenizer"}]