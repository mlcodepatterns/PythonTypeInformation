[{"lineNumber": 24, "col_offset": 0, "nodeName": "default_text_dataset_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "make_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "_make_data_provider", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "DataBaseBase", "type": "Type[DataBaseBase]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "make_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "_make_data_provider", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "__call__", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "list_items", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 74, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_data_provider", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "embedding", "type": "None"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "data_provider", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "data_batch", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "_dataset", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "default_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[str, Dict[str, float]]]]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "DataBaseBase"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "DataBaseBase"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "HParams", "type": "Type[txtgen.hyperparams.HParams]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "make_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "_make_data_provider", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "_dataset", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "default_string", "type": "Callable"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "default_string", "type": "Callable"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "Vocab", "type": "Type[txtgen.data.vocabulary.Vocab]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "get_class", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "TextDataDecoder", "type": "Type[txtgen.data.text_data_decoder.TextDataDecoder]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "embedding", "type": "txtgen.data.embedding.Embedding"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "DatasetDataProvider", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "list_items", "type": "Any"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "Embedding", "type": "Type[txtgen.data.embedding.Embedding]"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "DataBaseBase", "type": "Type[DataBaseBase]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "copy", "type": "module"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "utils", "type": "module"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "bos_token", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "eos_token", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "token_to_id_map", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "Embedding", "type": "Type[txtgen.data.embedding.Embedding]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "token_to_id_map_py", "type": "Any"}, {"lineNumber": 139, "col_offset": 60, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "reader_class", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "decoder", "type": "txtgen.data.text_data_decoder.TextDataDecoder"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "vocab", "type": "txtgen.data.vocabulary.Vocab"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "embedding", "type": "Optional[txtgen.data.embedding.Embedding]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "dataset_data_provider", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "seed", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_data_provider", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "list_items", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 168, "col_offset": 58, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "bucket_boundaries", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "batch", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "bucket_by_sequence_length", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "self", "type": "DataBaseBase"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "DataBaseBase", "type": "Type[DataBaseBase]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "default_text_dataset_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 127, "col_offset": 24, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "proc_hparams", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "vocab", "type": "txtgen.data.vocabulary.Vocab"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "vocab", "type": "txtgen.data.vocabulary.Vocab"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "tf_slim", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "dataset_hparams", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "tf_slim", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "_data_provider", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "list_items", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "train", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "length_tensor_name", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "training", "type": "Any"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "data", "type": "Dict[Any, Any]"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "bucket_boundaries", "type": "Any"}, {"lineNumber": 195, "col_offset": 28, "nodeName": "num_threads", "type": "int"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "capacity", "type": "Any"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "allow_smaller_final_batch", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "_dataset", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "emb_hparams", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "_data_provider", "type": "Any"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "decoder", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "input_length", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "_hparams", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 186, "col_offset": 42, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "_dataset", "type": "Any"}, {"lineNumber": 190, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 198, "col_offset": 42, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "self", "type": "TextDataBase"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "self", "type": "TextDataBase"}]