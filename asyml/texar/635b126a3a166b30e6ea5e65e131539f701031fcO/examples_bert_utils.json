[{"lineNumber": 5, "col_offset": 0, "nodeName": "get_assignment_map_from_checkpoint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "assignment_map", "type": "Dict[nothing, nothing]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Union[str, Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "tvars", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "init_vars", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "assignment_map", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "init_vars", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 16, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "list_variables", "type": "Any"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "init_checkpoint", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "assignment_map", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 13, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Union[str, Any], Any]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "train", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "collections", "type": "module"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Union[str, Any], Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assignment_map", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "group", "type": "Callable"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "name", "type": "Union[str, Any]"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "m", "type": "Optional[Match[str]]"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "name", "type": "Any"}]