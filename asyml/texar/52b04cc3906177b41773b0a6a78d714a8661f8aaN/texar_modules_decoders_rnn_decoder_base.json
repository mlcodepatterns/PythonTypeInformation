[{"lineNumber": 29, "col_offset": 21, "nodeName": "ModuleBase", "type": "Type[texar.modules.module_base.ModuleBase]"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "TFDecoder", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "_build", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "_rnn_output_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "batch_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "output_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "output_dtype", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "initialize", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "step", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "finalize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "embedding", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "state_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "vocab_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_helper", "type": "None"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_initial_state", "type": "None"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_embedding", "type": "None"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "use_embedding", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "helper", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_initial_state", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_built", "type": "bool"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 178, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "trainable", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "cond", "type": "Any"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "dynamic_decode", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "identity", "type": "Any"}, {"lineNumber": 155, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "ModuleBase", "type": "Type[texar.modules.module_base.ModuleBase]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "use_embedding", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "identity", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, Dict[str, Union[bool, float, str, Dict[str, int], List[Any]]]]]]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[str, Dict[str, Optional[float]]]]]]]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "default_helper_train_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "default_helper_infer_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 132, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "is_train", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 141, "col_offset": 45, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "_compute_output_shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "output_shape_with_unknown_batch", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 168, "col_offset": 55, "nodeName": "layer_output_shape", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "context", "type": "module"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "layers", "type": "module"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 163, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "layers", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 164, "col_offset": 71, "nodeName": "s", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 168, "col_offset": 48, "nodeName": "s", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "layers", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "TensorShape", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "_embedding", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "tensor_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "self", "type": "RNNDecoderBase"}]