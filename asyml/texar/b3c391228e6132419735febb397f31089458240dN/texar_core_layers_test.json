[{"lineNumber": 21, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_get_rnn_cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_get_embedding", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "test_seq_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "hparams", "type": "Dict[unicode, Dict[unicode, Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "hparams", "type": "Dict[unicode, Union[Dict[unicode, Union[unicode, Dict[unicode, int]]], int, Dict[unicode, Union[float, bool, List[int]]], bool]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "hparams", "type": "Dict[unicode, unicode]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "SequentialLayer", "type": "Type[texar.core.layers.SequentialLayer]"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "_compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, Dict[str, Union[bool, float, str, Dict[str, int], List[Any]]]]]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "state_", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "layers", "type": "module"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "hparams", "type": "Dict[unicode, Union[unicode, Dict[unicode, Any]]]"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "num_units", "type": "int"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "num_units", "type": "int"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "num_units", "type": "int"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 73, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "L1L2", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 131, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "output_", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "layers", "type": "module"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "is_train", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "context", "type": "module"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "tf", "type": "Any"}]