[{"lineNumber": 23, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[Any]]]]]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[Any]]]]]]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[Any]]]]]]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Union[int, str, Dict[str, Union[float, int, List[nothing]]]]], bool]]"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "output_states", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 337, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 343, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "layers", "type": "module"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "layers", "type": "module"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 299, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 300, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 309, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 318, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 225, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 308, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 37, "nodeName": "tf", "type": "Any"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 325, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 327, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]