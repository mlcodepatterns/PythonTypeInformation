[{"lineNumber": 21, "col_offset": 15, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "test", "type": "Any"}, {"lineNumber": 122, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "hypothesis", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "references", "type": "List[List[str]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "hypothesis", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "references", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "sentence_bleu_moses", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "sentence_bleu", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "references", "type": "List[List[str]]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "hypothesis", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_test_sentence_bleu", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "references", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "hypothesis", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "corpus_bleu_moses", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "corpus_bleu", "type": "Callable[..., Union[float, List[Any]]]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_test_corpus_bleu", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "list_of_references", "type": "List[Union[List[str], List[List[str]]]]"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "hypotheses", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_test_corpus_bleu", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "list_of_references", "type": "List[Union[List[str], List[List[str]]]]"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "hypotheses", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "references", "type": "Any"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "hypothesis", "type": "Any"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "references", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "hypothesis", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 82, "col_offset": 52, "nodeName": "list_of_references", "type": "Any"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "hypotheses", "type": "Any"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "ret", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "true", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "list_of_references", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "hypotheses", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "lowercase", "type": "Any"}, {"lineNumber": 96, "col_offset": 38, "nodeName": "return_all", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "bleu", "type": "Union[float, List[Any]]"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "ret", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "true", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "bleu", "type": "Union[float, List[Any]]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "true_bleu", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "hypothesis", "type": "str"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "r", "type": "str"}, {"lineNumber": 75, "col_offset": 60, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "ret", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "true", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "ret", "type": "Any"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "true", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "self", "type": "BLEUTest"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "r", "type": "str"}]