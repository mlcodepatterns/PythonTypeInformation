[{"lineNumber": 24, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "test", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "test", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 332, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "mode", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "fn_output", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "fn", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "fn_output", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 243, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "hparams", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "hparams", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[bool, Dict[str, Any], int, Dict[str, int], str]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "string", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, float], int, Dict[str, int]]]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "mode", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "get_activation_fn", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "fn", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "identity", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "get_activation_fn", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "fn", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "relu", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "get_activation_fn", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "fn", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 145, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "get_activation_fn", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "fn", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 154, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Union[Dict[str, List[Dict[str, str]]], str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "hparams", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "MaxReducePooling1D", "type": "Type[texar.core.layers.MaxReducePooling1D]"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "reduce_max", "type": "Any"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "AverageReducePooling1D", "type": "Type[texar.core.layers.AverageReducePooling1D]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 17, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 233, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "reduce_mean", "type": "Any"}, {"lineNumber": 234, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 238, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 64, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "concat_output_shape", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "sum_output_shape", "type": "Any"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "input_shapes", "type": "List[Union[List[Optional[int]], List[int]]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "esum_output_shape", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 296, "col_offset": 36, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "SequentialLayer", "type": "Type[texar.core.layers.SequentialLayer]"}, {"lineNumber": 314, "col_offset": 43, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 320, "col_offset": 18, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "num_vars", "type": "int"}, {"lineNumber": 325, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "num_units", "type": "int"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "cell", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "BasicLSTMCell", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "num_units", "type": "int"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "keep_prob_x", "type": "Any"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "keep_prob_x", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "output_", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "state_", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "state_", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "num_units", "type": "int"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "run", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "GetActivationFnTest"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "GetActivationFnTest"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 60, "nodeName": "int32", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "fn_output_", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "ref_output_", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "fn_output_", "type": "Any"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "ref_output_", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "layers", "type": "module"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "fn_output_", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "ref_output_", "type": "Any"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "fn_output_", "type": "Any"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "ref_output_", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "MergeLayer", "type": "Type[texar.core.layers.MergeLayer]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "GetLayerTest"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "layer", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "pool_layer", "type": "texar.core.layers.MaxReducePooling1D"}, {"lineNumber": 214, "col_offset": 55, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 218, "col_offset": 64, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "output_", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 42, "nodeName": "output_", "type": "Any"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 228, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "_seq_length", "type": "int"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "pool_layer", "type": "texar.core.layers.AverageReducePooling1D"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 236, "col_offset": 46, "nodeName": "_batch_size", "type": "int"}, {"lineNumber": 236, "col_offset": 64, "nodeName": "_emb_dim", "type": "int"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "output_", "type": "Any"}, {"lineNumber": 240, "col_offset": 21, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "run", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 241, "col_offset": 42, "nodeName": "output_", "type": "Any"}, {"lineNumber": 241, "col_offset": 51, "nodeName": "output_reduce_", "type": "Any"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "layers", "type": "module"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "concat_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "sum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "layers", "type": "module"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "esum_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 274, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 276, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "Conv1D", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "layers", "type": "module"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "layers", "type": "module"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 323, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 39, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "run", "type": "Any"}, {"lineNumber": 327, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "num_units", "type": "int"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "global_mode", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "sess", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "output", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "tf", "type": "Any"}, {"lineNumber": 141, "col_offset": 60, "nodeName": "tf", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "self", "type": "GetActivationFnTest"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "fn_output", "type": "Any"}, {"lineNumber": 148, "col_offset": 59, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "self", "type": "GetActivationFnTest"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "fn_output", "type": "Any"}, {"lineNumber": 156, "col_offset": 59, "nodeName": "ref_output", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "core", "type": "module"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "layers", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "test", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 214, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 218, "col_offset": 64, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 222, "col_offset": 56, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 236, "col_offset": 46, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 236, "col_offset": 64, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 238, "col_offset": 13, "nodeName": "self", "type": "ReducePoolingLayerTest"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 240, "col_offset": 38, "nodeName": "sess", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "output_reduce", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 278, "col_offset": 13, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "self", "type": "MergeLayerTest"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "compute_output_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 301, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 301, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 322, "col_offset": 59, "nodeName": "layer", "type": "Any"}, {"lineNumber": 322, "col_offset": 68, "nodeName": "layers_", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 39, "nodeName": "seq_layer", "type": "texar.core.layers.SequentialLayer"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "sess", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 328, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "SequentialLayerTest"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "context", "type": "module"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "output_", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 116, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "TRAIN", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "output_train", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "EVAL", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "output_test", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 42, "nodeName": "tx", "type": "module"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "tf", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "m_layer", "type": "texar.core.layers.MergeLayer"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 291, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 326, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 328, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "outputs_", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "hparams_", "type": "texar.hyperparams.HParams"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "ModeKeys", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "estimator", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "tf", "type": "Any"}]