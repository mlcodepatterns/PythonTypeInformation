[{"lineNumber": 20, "col_offset": 25, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "test", "type": "Any"}, {"lineNumber": 136, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "n_xlnet_vars", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "n_projection_vars", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "n_logits_vars", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "max_time", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "random_uniform", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "max_time", "type": "int"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "placeholder", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "int32", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "XLNetRegressor", "type": "Type[texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "int32", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "n_projection_vars", "type": "int"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "n_projection_vars", "type": "int"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "n_projection_vars", "type": "int"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "max_time", "type": "int"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "int32", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "logits", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "logits", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, Union[int, str]]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "tf", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "hparams", "type": "Dict[str, str]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "run", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "tf", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "n_xlnet_vars", "type": "int"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "n_logits_vars", "type": "int"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "n_xlnet_vars", "type": "int"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "n_logits_vars", "type": "int"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "regressor", "type": "texar.tf.modules.regressors.xlnet_regressor.XLNetRegressor"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "n_xlnet_vars", "type": "int"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "n_logits_vars", "type": "int"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 84, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "max_time", "type": "int"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 123, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "sess", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "XLNetRegressorTest"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "logits_", "type": "Any"}, {"lineNumber": 133, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "randint", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "randint", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "random", "type": "Any"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 59, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "batch_size", "type": "int"}]