[{"lineNumber": 18, "col_offset": 21, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_get_rnn_cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "test", "type": "Any"}, {"lineNumber": 66, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "num_units", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "hparams_", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "HParams", "type": "Type[txtgen.hyperparams.HParams]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "hparams", "type": "Dict[unicode, Union[Dict[unicode, Union[unicode, Dict[unicode, int]]], int, Dict[unicode, Union[float, bool, List[int]]], bool]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get_rnn_cell", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "hparams_", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "cell", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "sess", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, Dict[str, Union[bool, float, str, Dict[str, int], List[Any]]]]]]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "layers", "type": "module"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "test_session", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "run", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "state_", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "num_units", "type": "int"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "emb_dim", "type": "int"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "num_units", "type": "int"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "layers", "type": "module"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "sess", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "num_units", "type": "Any"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "tf", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "output_", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "GetRNNCellTest"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "is_train", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "cell", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "context", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "state_", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "hparams_", "type": "txtgen.hyperparams.HParams"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "hparams_", "type": "txtgen.hyperparams.HParams"}]