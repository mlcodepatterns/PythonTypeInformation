[{"lineNumber": 32, "col_offset": 0, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 547, "col_offset": 30, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "dense_layers", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "flatten_inputs", "type": "bool"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "noise_shape", "type": "None"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "variational_dropout", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "cell_outputs_flat", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "cell_output_size_flat", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 49, "col_offset": 7, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 55, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "other_dense_kwargs", "type": "Any"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "HParams", "type": "Type[texar.hyperparams.HParams]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "dense_layers", "type": "Any"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "prod", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "concat", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "output_flat", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "output_layer", "type": "Union[List[Any], Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "output_size", "type": "Union[Any, numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "_forward_output_layers", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 182, "col_offset": 41, "nodeName": "cell_output_size", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "outputs_flat", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "output_size_flat", "type": "Any"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 50, "nodeName": "outputs_flat", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "pack_sequence_as", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 187, "col_offset": 54, "nodeName": "output_size_flat", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 383, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "returns", "type": "Tuple[Any, Any]"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "return_output_size", "type": "Any"}, {"lineNumber": 500, "col_offset": 15, "nodeName": "returns", "type": "Union[Tuple[Any, ...], Tuple[Any, Any]]"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 761, "col_offset": 15, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 831, "col_offset": 8, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 862, "col_offset": 8, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 863, "col_offset": 8, "nodeName": "output_size", "type": "Tuple[Any, Any]"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "returns", "type": "Tuple[Tuple[Any, Any], Any]"}, {"lineNumber": 884, "col_offset": 11, "nodeName": "return_cell_output", "type": "Any"}, {"lineNumber": 886, "col_offset": 11, "nodeName": "return_output_size", "type": "Any"}, {"lineNumber": 888, "col_offset": 15, "nodeName": "returns", "type": "Union[Tuple[Any, ...], Tuple[Tuple[Any, Any], Any], Tuple[Tuple[Any, Any], ...]]"}, {"lineNumber": 901, "col_offset": 15, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 907, "col_offset": 15, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "todict", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "final_layer_activation", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "activation", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "activation", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "activation", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 74, "col_offset": 52, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "inputs_flat", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "tf", "type": "Any"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "output_size", "type": "numpy.ndarray"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "noise_shape", "type": "List[Optional[int]]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "layers", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "dropout_rate", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "noise_shape", "type": "Optional[List[Optional[int]]]"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "training", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "_forward_single_output_layer", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "_to_list", "type": "Callable"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "dropout_layer_ids", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "training", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "output_layer", "type": "Union[List[Any], Any]"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "mask_sequences", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "functools", "type": "module"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "mode", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "nest", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "nest", "type": "Any"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "o", "type": "List[nothing]"}, {"lineNumber": 186, "col_offset": 14, "nodeName": "nest", "type": "Any"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "nest", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 479, "col_offset": 31, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 480, "col_offset": 32, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 480, "col_offset": 44, "nodeName": "_output_layer_hparams", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 481, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "returns", "type": "Tuple[Any, ...]"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "returns", "type": "Tuple[Any, ...]"}, {"lineNumber": 531, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 581, "col_offset": 32, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 581, "col_offset": 38, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 751, "col_offset": 18, "nodeName": "default_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 832, "col_offset": 39, "nodeName": "no_initial_state", "type": "bool"}, {"lineNumber": 854, "col_offset": 37, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 855, "col_offset": 35, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 855, "col_offset": 47, "nodeName": "_output_layer_hparams_fw", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 856, "col_offset": 35, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 858, "col_offset": 37, "nodeName": "_apply_rnn_encoder_output_layer", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 859, "col_offset": 35, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 859, "col_offset": 47, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 860, "col_offset": 12, "nodeName": "mode", "type": "Any"}, {"lineNumber": 860, "col_offset": 35, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 862, "col_offset": 19, "nodeName": "outputs_fw", "type": "Any"}, {"lineNumber": 862, "col_offset": 31, "nodeName": "outputs_bw", "type": "Any"}, {"lineNumber": 863, "col_offset": 23, "nodeName": "output_size_fw", "type": "Any"}, {"lineNumber": 863, "col_offset": 39, "nodeName": "output_size_bw", "type": "Any"}, {"lineNumber": 865, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 881, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 883, "col_offset": 19, "nodeName": "outputs", "type": "Tuple[Any, Any]"}, {"lineNumber": 883, "col_offset": 28, "nodeName": "states", "type": "Any"}, {"lineNumber": 885, "col_offset": 12, "nodeName": "returns", "type": "Tuple[Any, ...]"}, {"lineNumber": 887, "col_offset": 12, "nodeName": "returns", "type": "Union[Tuple[Any, ...], Tuple[Tuple[Any, Any], ...]]"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "concat", "type": "Any"}, {"lineNumber": 895, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 901, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 907, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 929, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 935, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "other_kwargs", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "nlayers", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "layer_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "kwargs_i", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "dense_layers", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "get_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "dim", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "mode", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "dropout_layer_ids", "type": "Union[List[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "_forward_single_output_layer", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "layer", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "output_layer", "type": "Union[List[Any], Any]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "output", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 165, "col_offset": 65, "nodeName": "training", "type": "Any"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "xs", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "cell_outputs_flat", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "cell_output_size_flat", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "EncoderBase", "type": "Type[texar.modules.encoders.encoder_base.EncoderBase]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 276, "col_offset": 37, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "_output_layer_hparams", "type": "None"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "_output_layer_hparams", "type": "Any"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "dynamic_rnn", "type": "Any"}, {"lineNumber": 480, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 480, "col_offset": 44, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 499, "col_offset": 24, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 581, "col_offset": 8, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 584, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 586, "col_offset": 32, "nodeName": "cell_fw", "type": "Any"}, {"lineNumber": 591, "col_offset": 15, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 592, "col_offset": 32, "nodeName": "cell_bw", "type": "Any"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "rnn_cell_share_config", "type": "Any"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 601, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 602, "col_offset": 15, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 603, "col_offset": 40, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "_output_layer_hparams_fw", "type": "None"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "_output_layer_hparams_fw", "type": "Any"}, {"lineNumber": 608, "col_offset": 48, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 610, "col_offset": 15, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 611, "col_offset": 40, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "None"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "output_layer_share_config", "type": "Any"}, {"lineNumber": 751, "col_offset": 18, "nodeName": "RNNEncoderBase", "type": "Type[RNNEncoderBase]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "hparams", "type": "Dict[str, Union[str, Dict[str, Optional[Union[List[str], bool, float, List[nothing], str, int]]], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]], bool]]"}, {"lineNumber": 831, "col_offset": 27, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 831, "col_offset": 56, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 832, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 844, "col_offset": 35, "nodeName": "bidirectional_dynamic_rnn", "type": "Any"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 855, "col_offset": 47, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 856, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 856, "col_offset": 35, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 859, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 859, "col_offset": 47, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 860, "col_offset": 18, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 860, "col_offset": 35, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 865, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 873, "col_offset": 15, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 881, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 885, "col_offset": 24, "nodeName": "cell_outputs", "type": "Any"}, {"lineNumber": 887, "col_offset": 24, "nodeName": "output_size", "type": "Tuple[Any, Any]"}, {"lineNumber": 895, "col_offset": 15, "nodeName": "tf", "type": "Any"}, {"lineNumber": 915, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 923, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "layers", "type": "module"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "layer_hparams", "type": "Dict[str, Union[Dict[Union[str, Any], Any], str]]"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "utils", "type": "module"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "_apply_dropout", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 160, "col_offset": 69, "nodeName": "training", "type": "Any"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 274, "col_offset": 31, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 464, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 467, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 469, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 473, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 474, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 475, "col_offset": 30, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 476, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 477, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 32, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 584, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 584, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 586, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 589, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 592, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 601, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 601, "col_offset": 31, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 603, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 604, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 608, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 608, "col_offset": 48, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 611, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "_output_layer_hparams_bw", "type": "Any"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 753, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]]]]]"}, {"lineNumber": 756, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 757, "col_offset": 31, "nodeName": "_default_output_layer_hparams", "type": "Callable[[], Any]"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 836, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 837, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 838, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 839, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 840, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 841, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 842, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 844, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 845, "col_offset": 24, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 846, "col_offset": 24, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 847, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 848, "col_offset": 32, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 849, "col_offset": 33, "nodeName": "initial_state_fw", "type": "Any"}, {"lineNumber": 850, "col_offset": 33, "nodeName": "initial_state_bw", "type": "Any"}, {"lineNumber": 851, "col_offset": 27, "nodeName": "time_major", "type": "Any"}, {"lineNumber": 852, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 856, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 860, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 869, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 870, "col_offset": 56, "nodeName": "_cell_fw", "type": "Any"}, {"lineNumber": 871, "col_offset": 12, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 872, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 872, "col_offset": 56, "nodeName": "_cell_bw", "type": "Any"}, {"lineNumber": 873, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 876, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 877, "col_offset": 15, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 880, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "dim", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "tf", "type": "Any"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 462, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 471, "col_offset": 34, "nodeName": "tf", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 488, "col_offset": 56, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 490, "col_offset": 35, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 491, "col_offset": 16, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 588, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 593, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "rnn_cell_fw", "type": "Any"}, {"lineNumber": 595, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "rnn_cell_bw", "type": "Any"}, {"lineNumber": 598, "col_offset": 47, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 608, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 613, "col_offset": 17, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 614, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "output_layer_fw", "type": "Any"}, {"lineNumber": 616, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 618, "col_offset": 40, "nodeName": "_build_dense_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "output_layer_bw", "type": "Any"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 753, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 754, "col_offset": 27, "nodeName": "layers", "type": "module"}, {"lineNumber": 833, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 835, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 841, "col_offset": 22, "nodeName": "tf", "type": "Any"}, {"lineNumber": 844, "col_offset": 35, "nodeName": "tf", "type": "Any"}, {"lineNumber": 845, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 846, "col_offset": 24, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 870, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 870, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 872, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 872, "col_offset": 56, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 874, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 874, "col_offset": 35, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 875, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 876, "col_offset": 20, "nodeName": "_output_layer_fw", "type": "Any"}, {"lineNumber": 878, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 878, "col_offset": 35, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 879, "col_offset": 16, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 880, "col_offset": 20, "nodeName": "_output_layer_bw", "type": "Any"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 490, "col_offset": 35, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 490, "col_offset": 56, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 490, "col_offset": 62, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "self", "type": "UnidirectionalRNNEncoder"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 594, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 597, "col_offset": 32, "nodeName": "layers", "type": "module"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 616, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "_hparams", "type": "texar.hyperparams.HParams"}, {"lineNumber": 620, "col_offset": 48, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 874, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 874, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 874, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 876, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 878, "col_offset": 35, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 878, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 878, "col_offset": 65, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 880, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 598, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "self", "type": "BidirectionalRNNEncoder"}]