[{"lineNumber": 17, "col_offset": 23, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_get_embedding", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "test", "type": "Any"}, {"lineNumber": 45, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "tf", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "emb", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "main", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "get_embedding", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 40, "col_offset": 45, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test", "type": "Any"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "hparams", "type": "Dict[unicode, Dict[unicode, Any]]"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "vocab_size", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "GetEmbeddingTest"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "tf", "type": "Any"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Optional[Union[float, int, str, Dict[str, Union[str, Dict[str, float]]], List[str]]]]]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "random_uniform_initializer", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "L1L2", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "default_embedding_hparams", "type": "Callable[[], Dict[str, Optional[Union[float, int, str, Dict[str, Union[str, Dict[str, float]]], List[str]]]]]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "regularizers", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "emb", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "embedder_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "keras", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "tf", "type": "Any"}]