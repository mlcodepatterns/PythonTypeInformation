[{"lineNumber": 56, "col_offset": 0, "nodeName": "_get_assignment_map_from_checkpoint", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "init_bert_checkpoint", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "load_pretrained_bert", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 0, "nodeName": "transform_bert_to_texar_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "var", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "tvars", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "init_vars", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "init_vars", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "tvars", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "init_checkpoint", "type": "Union[str, unicode]"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "init_checkpoint", "type": "Union[unicode, str]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "file_name", "type": "unicode"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "cache_path", "type": "Union[str, unicode]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "cache_path", "type": "Union[str, unicode]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_BERT_PATH", "type": "unicode"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "m", "type": "Optional[Match[Any]]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "var", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "list_variables", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "init_checkpoint", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "check_name", "type": "unicode"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "items", "type": "Callable"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "_", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "assignment_map", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 139, "col_offset": 35, "nodeName": "init_checkpoint_dir", "type": "Any"}, {"lineNumber": 151, "col_offset": 7, "nodeName": "pretrained_model_name", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "_MODEL2URL", "type": "Dict[unicode, unicode]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "download_path", "type": "unicode"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "configs", "type": "Dict[unicode, Any]"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "collections", "type": "module"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "var", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "m", "type": "Optional[Match[Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "train", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "assignment_map", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "_get_assignment_map_from_checkpoint", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "tvars", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "init_checkpoint", "type": "Union[unicode, str]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "init_from_checkpoint", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "init_checkpoint", "type": "Union[unicode, str]"}, {"lineNumber": 144, "col_offset": 55, "nodeName": "assignment_map", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "_MODEL2URL", "type": "Dict[unicode, unicode]"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "default_download_dir", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "cache_path", "type": "Union[str, unicode]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "maybe_download", "type": "Callable[..., List[Any]]"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "download_path", "type": "unicode"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "json", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "group", "type": "Callable"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "replace", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "pretrained_model_name", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 155, "col_offset": 53, "nodeName": "pretrained_model_name", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "download_path", "type": "unicode"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "pretrained_model_name", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "cache_dir", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "m", "type": "Optional[Match[Any]]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "scope_name", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "re", "type": "module"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 114, "col_offset": 61, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "replace", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "assignment_map", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "initialized_variable_names", "type": "Dict[Any, int]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "info", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "file_name", "type": "unicode"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "replace", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "re", "type": "module"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "check_name_scope", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "name_to_variable", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "check_name", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "logging", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 124, "col_offset": 65, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "config_dir", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "hidden_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "replace", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "replace", "type": "Any"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "path", "type": "module"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "config_ckpt", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "group", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "os", "type": "module"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "group", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "x", "type": "Any"}]