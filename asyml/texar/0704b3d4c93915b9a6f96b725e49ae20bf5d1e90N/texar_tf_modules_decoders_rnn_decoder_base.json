[{"lineNumber": 45, "col_offset": 0, "nodeName": "_make_output_layer_from_tensor", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "_make_output_layer", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "__all__", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "ModuleBase", "type": "Type[texar.tf.module_base.ModuleBase]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "TFDecoder", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "affine_bias", "type": "None"}, {"lineNumber": 51, "col_offset": 7, "nodeName": "output_layer_bias", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "_outputs_to_logits", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "logits", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "is_callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_helper", "type": "None"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_initial_state", "type": "None"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_beam_search_cell", "type": "None"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "max_decoding_length", "type": "None"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 445, "col_offset": 23, "nodeName": "helper", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 455, "col_offset": 16, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "max_decoding_length", "type": "Any"}, {"lineNumber": 465, "col_offset": 35, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "_beam_search_cell", "type": "Any"}, {"lineNumber": 491, "col_offset": 33, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 520, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 526, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 531, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 536, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 541, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "state_size", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "affine_bias", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "shape_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "output_layer_tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "affine_bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "logits", "type": "Any"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "affine_bias", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "logits", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_output_layer", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "hparams", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "_make_output_layer", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "output_layer_bias", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 413, "col_offset": 11, "nodeName": "helper", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "_initial_state", "type": "Any"}, {"lineNumber": 449, "col_offset": 34, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 456, "col_offset": 11, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "max_l_train", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "max_decoding_length_train", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "max_l_infer", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "max_decoding_length_infer", "type": "Any"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 467, "col_offset": 17, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 467, "col_offset": 30, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 467, "col_offset": 49, "nodeName": "dynamic_decode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "_built", "type": "bool"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "_built", "type": "bool"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "final_state", "type": "Any"}, {"lineNumber": 488, "col_offset": 37, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 491, "col_offset": 33, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 492, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "identity", "type": "Any"}, {"lineNumber": 497, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "output_shape_with_unknown_batch", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "layer_output_shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "_helper", "type": "Any"}, {"lineNumber": 547, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "zero_state", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 567, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "get_variable", "type": "Any"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "dim", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "framework", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "_make_output_layer_from_tensor", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "output_layer_bias", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 79, "col_offset": 9, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ModuleBase", "type": "Type[texar.tf.module_base.ModuleBase]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "cell", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "cell", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "default_rnn_cell_hparams", "type": "Callable[[], Dict[str, Union[int, str, Dict[str, Union[float, int, List[str]]], List[str]]]]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "default_helper_train_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "default_helper_infer_hparams", "type": "Callable[[], Dict[str, Union[str, Dict[Any, Any]]]]"}, {"lineNumber": 415, "col_offset": 13, "nodeName": "decoding_strategy", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "helper", "type": "Any"}, {"lineNumber": 449, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "zero_state", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "max_l_train", "type": "Any"}, {"lineNumber": 459, "col_offset": 16, "nodeName": "max_l_train", "type": "Any"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 461, "col_offset": 15, "nodeName": "max_l_infer", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "max_l_infer", "type": "Any"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "MAX_SEQ_LENGTH", "type": "Any"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 468, "col_offset": 42, "nodeName": "impute_finished", "type": "Any"}, {"lineNumber": 469, "col_offset": 31, "nodeName": "max_l", "type": "Any"}, {"lineNumber": 469, "col_offset": 56, "nodeName": "output_time_major", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "_add_internal_trainable_variables", "type": "Callable[[], None]"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 477, "col_offset": 46, "nodeName": "Layer", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "_beam_search_cell", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 496, "col_offset": 11, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "tf", "type": "Any"}, {"lineNumber": 505, "col_offset": 46, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 507, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "compute_output_shape", "type": "Any"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "output_shape_with_unknown_batch", "type": "Any"}, {"lineNumber": 510, "col_offset": 19, "nodeName": "map_structure", "type": "Any"}, {"lineNumber": 510, "col_offset": 55, "nodeName": "layer_output_shape", "type": "Any"}, {"lineNumber": 514, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 554, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 554, "col_offset": 41, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 561, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 53, "col_offset": 58, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "contrib", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "shape_list", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "get_rnn_cell", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "rnn_cell", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "cell_dropout_mode", "type": "Any"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "layers", "type": "module"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "decoding_strategy", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "helper", "type": "texar.tf.modules.decoders.tf_helpers.TrainingHelper"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "is_train_mode_py", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 32, "nodeName": "mode", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "kwargs_", "type": "Any"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "helper_type", "type": "Any"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "type", "type": "Any"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "kwargs_", "type": "Any"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "helper_type", "type": "Any"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "type", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 443, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "get_helper", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 52, "nodeName": "helper_type", "type": "Any"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "utils", "type": "module"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 462, "col_offset": 30, "nodeName": "utils", "type": "module"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "tf", "type": "Any"}, {"lineNumber": 463, "col_offset": 28, "nodeName": "is_train_mode", "type": "Callable[[Any], Any]"}, {"lineNumber": 463, "col_offset": 42, "nodeName": "mode", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "get_rnn_cell_trainable_variables", "type": "Callable[[Any], Any]"}, {"lineNumber": 476, "col_offset": 56, "nodeName": "_cell", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 477, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "_add_trainable_variable", "type": "Callable[[Any], None]"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "trainable_variables", "type": "Any"}, {"lineNumber": 505, "col_offset": 46, "nodeName": "nest", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 510, "col_offset": 19, "nodeName": "nest", "type": "Any"}, {"lineNumber": 553, "col_offset": 15, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "tf", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "layers", "type": "module"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "_get_training_helper", "type": "Callable[..., texar.tf.modules.decoders.tf_helpers.TrainingHelper]"}, {"lineNumber": 418, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 418, "col_offset": 28, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 418, "col_offset": 45, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 418, "col_offset": 56, "nodeName": "input_time_major", "type": "Any"}, {"lineNumber": 419, "col_offset": 17, "nodeName": "decoding_strategy", "type": "Any"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "helper", "type": "texar.tf.modules.decoders.tf_helpers.GreedyEmbeddingHelper"}, {"lineNumber": 430, "col_offset": 26, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "helper_train", "type": "Any"}, {"lineNumber": 433, "col_offset": 26, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "helper_infer", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "kwargs_", "type": "Any"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 437, "col_offset": 35, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 438, "col_offset": 30, "nodeName": "input_time_major", "type": "Any"}, {"lineNumber": 439, "col_offset": 29, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 440, "col_offset": 32, "nodeName": "start_tokens", "type": "Any"}, {"lineNumber": 441, "col_offset": 29, "nodeName": "end_token", "type": "Any"}, {"lineNumber": 442, "col_offset": 39, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "kwargs_", "type": "Any"}, {"lineNumber": 444, "col_offset": 21, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 444, "col_offset": 67, "nodeName": "kwargs_", "type": "Any"}, {"lineNumber": 452, "col_offset": 27, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 476, "col_offset": 16, "nodeName": "layers", "type": "module"}, {"lineNumber": 476, "col_offset": 56, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 477, "col_offset": 46, "nodeName": "tf", "type": "Any"}, {"lineNumber": 478, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "_beam_search_cell", "type": "Any"}, {"lineNumber": 508, "col_offset": 33, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "layers", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "_vocab_size", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "output_layer_bias", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "rnn_decoder_helpers", "type": "module"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "GreedyEmbeddingHelper", "type": "Type[texar.tf.modules.decoders.tf_helpers.GreedyEmbeddingHelper]"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 421, "col_offset": 31, "nodeName": "start_tokens", "type": "Any"}, {"lineNumber": 421, "col_offset": 45, "nodeName": "end_token", "type": "Any"}, {"lineNumber": 422, "col_offset": 17, "nodeName": "decoding_strategy", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "helper", "type": "texar.tf.modules.decoders.tf_helpers.SampleEmbeddingHelper"}, {"lineNumber": 430, "col_offset": 26, "nodeName": "copy", "type": "module"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "todict", "type": "Any"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 433, "col_offset": 26, "nodeName": "copy", "type": "module"}, {"lineNumber": 433, "col_offset": 36, "nodeName": "todict", "type": "Any"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "tf", "type": "Any"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "tx_helper", "type": "module"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "SampleEmbeddingHelper", "type": "Type[texar.tf.modules.decoders.tf_helpers.SampleEmbeddingHelper]"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 424, "col_offset": 31, "nodeName": "start_tokens", "type": "Any"}, {"lineNumber": 424, "col_offset": 45, "nodeName": "end_token", "type": "Any"}, {"lineNumber": 424, "col_offset": 56, "nodeName": "softmax_temperature", "type": "Any"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 433, "col_offset": 36, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 434, "col_offset": 30, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 423, "col_offset": 25, "nodeName": "tx_helper", "type": "module"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 427, "col_offset": 59, "nodeName": "decoding_strategy", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "helper_train", "type": "Any"}, {"lineNumber": 433, "col_offset": 36, "nodeName": "helper_infer", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 433, "col_offset": 36, "nodeName": "_hparams", "type": "texar.tf.hyperparams.HParams"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}, {"lineNumber": 433, "col_offset": 36, "nodeName": "self", "type": "RNNDecoderBase"}]