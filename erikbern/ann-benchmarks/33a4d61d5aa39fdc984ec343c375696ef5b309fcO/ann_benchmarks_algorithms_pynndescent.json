[{"lineNumber": 8, "col_offset": 18, "nodeName": "BaseANN", "type": "Type[ann_benchmarks.algorithms.base.BaseANN]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "_n_search_trees", "type": "int"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "lil_data", "type": "List[List[int]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_n_cols", "type": "int"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_n_rows", "type": "int"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "lil_data", "type": "List[List[int]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "indptr", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_epsilon", "type": "float"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "str_template", "type": "str"}, {"lineNumber": 10, "col_offset": 28, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "_n_neighbors", "type": "int"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "_n_neighbors", "type": "int"}, {"lineNumber": 15, "col_offset": 42, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "_pruning_degree_multiplier", "type": "float"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "_diversify_prob", "type": "float"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "_diversify_prob", "type": "float"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_leaf_size", "type": "int"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "leaf_size", "type": "int"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "n_search_trees", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "_n_rows", "type": "int"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "lil_matrix", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "rows", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "tocsr", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "csr_matrix", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "int32", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "_pynnd_metric", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "NNDescent", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_init_search_graph", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "_index", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "epsilon", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "_pynnd_metric", "type": "str"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "ind", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "str_template", "type": "str"}, {"lineNumber": 11, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 11, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 10, "nodeName": "metric", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "_n_cols", "type": "int"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "_n_cols", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "_n_rows", "type": "int"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "_n_cols", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "int", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "_n_cols", "type": "Any"}, {"lineNumber": 59, "col_offset": 66, "nodeName": "int", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "int", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_sparse_convert_for_fit", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "pynndescent", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "_n_neighbors", "type": "int"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "_pynnd_metric", "type": "str"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "_leaf_size", "type": "int"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "_pruning_degree_multiplier", "type": "float"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "_diversify_prob", "type": "float"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "_n_search_trees", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_index", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_init_search_function", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "_sparse_convert_for_query", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "v", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "ind", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "dist", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "v", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "ind", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "dist", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "query", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "_n_neighbors", "type": "int"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_pruning_degree_multiplier", "type": "float"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "_diversify_prob", "type": "float"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "_epsilon", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "_leaf_size", "type": "int"}, {"lineNumber": 11, "col_offset": 36, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "index_param_dict", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "lil_data", "type": "List[List[int]]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 59, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "v", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_index", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "_index", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "_epsilon", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "_index", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "astype", "type": "Any"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "_epsilon", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "max", "type": "Callable"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "self", "type": "PyNNDescent"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "X", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "X", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "v", "type": "Any"}]