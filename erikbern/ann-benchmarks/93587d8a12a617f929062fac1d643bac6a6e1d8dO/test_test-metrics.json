[{"lineNumber": 8, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "__getitem__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "__setitem__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "__contains__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "create_group", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_recall", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_epsilon_recall", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_relative", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_queries_per_second", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_index_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_build_time", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_candidates", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 91, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "attrs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "value", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "run1", "type": "List[List[nothing]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "run3", "type": "List[List[float]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "run4", "type": "List[List[float]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "run1", "type": "List[List[nothing]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "run1", "type": "List[nothing]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "run3", "type": "List[List[float]]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "key", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "d", "type": "Dict[Any, Union[Any, DummyMetric]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "rel", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "run1", "type": "List[nothing]"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "rel", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "rel", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "run3", "type": "List[List[float]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "queries_per_second", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "index_size", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "build_time", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestMetrics"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "candidates", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 72, "col_offset": 56, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "knn", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "run1", "type": "List[List[nothing]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "knn", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "knn", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "run3", "type": "List[List[float]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "knn", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "run4", "type": "List[List[float]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "epsilon", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "run1", "type": "List[List[nothing]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "epsilon", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "epsilon", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "epsilon", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "exact_queries", "type": "List[List[float]]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "run2", "type": "List[List[float]]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}]