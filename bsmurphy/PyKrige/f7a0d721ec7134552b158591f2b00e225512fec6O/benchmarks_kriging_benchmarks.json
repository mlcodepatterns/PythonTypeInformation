[{"lineNumber": 14, "col_offset": 0, "nodeName": "make_benchark", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "print_benchmark", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "BACKENDS", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "N_MOVING_WINDOW", "type": "List[Optional[int]]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "seed", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "res", "type": "Dict[str, float]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "variogram_model", "type": "str"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "VARIOGRAM_MODELS", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "backend", "type": "str"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "BACKENDS", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "res", "type": "Dict[str, float]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "n_closest_points", "type": "Optional[int]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "N_MOVING_WINDOW", "type": "List[Optional[int]]"}, {"lineNumber": 99, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "random", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "n_train", "type": "int"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "n_dim", "type": "int"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "n_train", "type": "int"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "rand", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "n_test", "type": "int"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "n_dim", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tic", "type": "float"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "n_closest_points", "type": "Optional[int]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "N_MOVING_WINDOW", "type": "List[Optional[int]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "results", "type": "Dict[str, float]"}, {"lineNumber": 6, "col_offset": 0, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "OrdinaryKriging", "type": "Type[pykrige.ok.OrdinaryKriging]"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "y_train", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "res", "type": "Dict[str, float]"}, {"lineNumber": 42, "col_offset": 61, "nodeName": "tic", "type": "float"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "tic", "type": "float"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "n_dim", "type": "int"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "n_train", "type": "int"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "n_test", "type": "int"}, {"lineNumber": 79, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 82, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "make_benchark", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "no_train", "type": "int"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "no_test", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "print_benchmark", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "no_train", "type": "int"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "no_test", "type": "int"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "results", "type": "Dict[str, float]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 39, "col_offset": 44, "nodeName": "X_train", "type": "Any"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "execute", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "res", "type": "Dict[str, float]"}, {"lineNumber": 55, "col_offset": 77, "nodeName": "tic", "type": "float"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "mod", "type": "str"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "BACKENDS", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "variogram_model", "type": "str"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "backend", "type": "str"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "n_closest_points", "type": "Optional[int]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "OK", "type": "pykrige.ok.OrdinaryKriging"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "X_test", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "backend", "type": "str"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "n_closest_points", "type": "Optional[int]"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "VARIOGRAM_MODELS", "type": "List[str]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "el", "type": "str"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "el", "type": "str"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "BACKENDS", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "backend", "type": "str"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "n_closest_points", "type": "Optional[int]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "VARIOGRAM_MODELS", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 68, "nodeName": "BACKENDS", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "el", "type": "Union[float, str]"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "el", "type": "Union[float, str]"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "timing_results", "type": "List[Union[float, str]]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "mod", "type": "str"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "VARIOGRAM_MODELS", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "n_closest_points", "type": "Optional[int]"}]