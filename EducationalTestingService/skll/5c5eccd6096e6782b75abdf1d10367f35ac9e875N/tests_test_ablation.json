[{"lineNumber": 35, "col_offset": 0, "nodeName": "setup", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "tearDown", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "test_ablation_cv", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_ablation_cv_all_combos", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "test_ablation_cv_feature_hasher", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 0, "nodeName": "test_ablation_cv_feature_hasher_all_combos", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "test_ablation_cv_sampler", "type": "Callable[[], Any]"}, {"lineNumber": 270, "col_offset": 0, "nodeName": "test_ablation_cv_all_combos_sampler", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 0, "nodeName": "test_ablation_cv_feature_hasher_sampler", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_ablation_cv_feature_hasher_all_combos_sampler", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_ALL_MODELS", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "config_dir", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "output_file", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "cf", "type": "str"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "features", "type": "List[collections.OrderedDict[str, Any]]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "row_num", "type": "int"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "row_num", "type": "int"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 307, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "__file__", "type": "str"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "y", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "ex_id", "type": "str"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "x", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "train_path", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "sub_features", "type": "List[Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "row_num", "type": "int"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "row", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "reader", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "expected_fs", "type": "Set[Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "expected_ablated", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "expected_fs", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "actual_fs", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 140, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 147, "col_offset": 69, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 167, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 174, "col_offset": 69, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 202, "col_offset": 65, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 208, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 223, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 231, "col_offset": 65, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 252, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 252, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 259, "col_offset": 69, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 276, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 278, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 285, "col_offset": 69, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 294, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 304, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 307, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 309, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 315, "col_offset": 65, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 321, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "make_ablation_data", "type": "Callable[[], Any]"}, {"lineNumber": 334, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 334, "col_offset": 32, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 337, "col_offset": 18, "nodeName": "fill_in_config_paths", "type": "Any"}, {"lineNumber": 337, "col_offset": 39, "nodeName": "config_template_path", "type": "str"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 339, "col_offset": 22, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 345, "col_offset": 65, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "num_result_files", "type": "int"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "_DEFAULT_PARAM_GRIDS", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "glob", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "output_file", "type": "str"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "glob", "type": "module"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "old_file", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "y", "type": "str"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "j", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "ex_id", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "y", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "x", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "num_examples", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "feat_num", "type": "int"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "FeatureSet", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "NDJWriter", "type": "Type[skll.data.writers.NDJWriter]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "train_path", "type": "str"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "row", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "actual_ablated", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "actual_ablated", "type": "List[nothing]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "ablated_str", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "expected_ablated", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "actual_ablated", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "expected_fs", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "actual_fs", "type": "Any"}, {"lineNumber": 147, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 174, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 203, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 232, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 233, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 285, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 286, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 314, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 344, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "check_ablation_rows", "type": "Callable[[Any], Any]"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "num_rows", "type": "int"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "config_dir", "type": "str"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "cf", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "feat_num", "type": "int"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "randint", "type": "Any"}, {"lineNumber": 86, "col_offset": 65, "nodeName": "feat_num", "type": "int"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "features", "type": "List[collections.OrderedDict[str, Any]]"}, {"lineNumber": 94, "col_offset": 44, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 59, "nodeName": "sub_features", "type": "List[Dict[str, Any]]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "fs_str", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "ablated_str", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "fs_str", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "ablated_str", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "split", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "split", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "split", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "expected_fs", "type": "Set[Any]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "row", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 201, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 208, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 232, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 238, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 238, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 259, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 259, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 265, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 285, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 292, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 316, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 316, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 321, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 344, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 344, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 346, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "glob", "type": "module"}, {"lineNumber": 352, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 352, "col_offset": 42, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "config_dir", "type": "str"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "cf", "type": "str"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "j", "type": "int"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "random", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "feat_num", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "sub_features", "type": "List[Dict[str, Any]]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "json", "type": "module"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "fs_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "ablated_str", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "expected_ablated", "type": "Any"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 260, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 316, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "features", "type": "List[collections.OrderedDict[str, Any]]"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "row", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "row", "type": "Any"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "t", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "example_num", "type": "int"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "feat_num", "type": "int"}]