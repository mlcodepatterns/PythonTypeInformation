[{"lineNumber": 22, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "valid_extensions", "type": "Set[unicode]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "merged_set", "type": "None"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "infile", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "infile", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 119, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "argv", "type": "None"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "captureWarnings", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "ext", "type": "unicode"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "valid_extensions", "type": "Set[unicode]"}, {"lineNumber": 87, "col_offset": 7, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "EXT_TO_WRITER", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 107, "col_offset": 7, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "DelimitedFileWriter", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 115, "col_offset": 39, "nodeName": "merged_set", "type": "Optional[skll.data.featureset.FeatureSet]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "ext", "type": "unicode"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "EXT_TO_READER", "type": "Dict[unicode, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "lower", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "inf", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "infile", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "input_extension_set", "type": "Set[Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "input_extension_set", "type": "Set[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "infile", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "read", "type": "Callable[[], skll.data.featureset.FeatureSet]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "merged_set", "type": "None"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "merged_set", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "ARFFWriter", "type": "Any"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "regression", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "relation", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "__version__", "type": "str"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "ext", "type": "unicode"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "EXT_TO_READER", "type": "Dict[unicode, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "reader", "type": "Union[skll.data.readers.MegaMReader, skll.data.readers.ARFFReader, skll.data.readers.NDJReader, skll.data.readers.CSVReader, skll.data.readers.TSVReader, skll.data.readers.LibSVMReader]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "reader", "type": "Union[skll.data.readers.MegaMReader, skll.data.readers.ARFFReader, skll.data.readers.NDJReader, skll.data.readers.CSVReader, skll.data.readers.TSVReader, skll.data.readers.LibSVMReader]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[unicode, Any]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "reader", "type": "Union[skll.data.readers.MegaMReader, skll.data.readers.ARFFReader, skll.data.readers.NDJReader, skll.data.readers.CSVReader, skll.data.readers.TSVReader, skll.data.readers.LibSVMReader]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 96, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 70, "col_offset": 44, "nodeName": "inf", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "os", "type": "module"}]