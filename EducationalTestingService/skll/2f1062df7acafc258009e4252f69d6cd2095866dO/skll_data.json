[{"lineNumber": 50, "col_offset": 0, "nodeName": "load_examples", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "DictVectorizer", "type": "Any"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "feat_dict_generator", "type": "Iterator[Any]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "ExamplesTuple", "type": "Type[`namedtuple-ExamplesTuple-ids-classes-features-feat_vectorizer`]"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "ids", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "classes", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "char_num", "type": "int"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "f", "type": "file"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "example_num", "type": "int"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "f", "type": "file"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "path", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "itemgetter", "type": "Callable"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 47, "nodeName": "path", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "ord", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "text", "type": "unicode"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 144, "col_offset": 43, "nodeName": "f", "type": "file"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 171, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 171, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "unicode_markup", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "line", "type": "unicode"}, {"lineNumber": 214, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 229, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "f", "type": "file"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 231, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 231, "col_offset": 42, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 64, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 114, "col_offset": 73, "nodeName": "char", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "class_name", "type": "str"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "class_name", "type": "None"}, {"lineNumber": 238, "col_offset": 27, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "curr_id", "type": "str"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "fname", "type": "str"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "fval", "type": "str"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "char_num", "type": "int"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "char_num", "type": "int"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "example_num", "type": "int"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "example", "type": "Any"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "example", "type": "Any"}, {"lineNumber": 169, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "UnicodeDammit", "type": "Any"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "strip", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "line", "type": "unicode"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 181, "col_offset": 17, "nodeName": "line", "type": "unicode"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "example_num", "type": "int"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 246, "col_offset": 29, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "fval", "type": "str"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "curr_id", "type": "Union[unicode, str]"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "class_name", "type": "Optional[str]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 58, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 177, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 181, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "class_name", "type": "unicode"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "class_name", "type": "None"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 210, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "line", "type": "unicode"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "update", "type": "Callable"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "class_name", "type": "Optional[unicode]"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "fieldnames", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "fieldnames", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "fname", "type": "str"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 48, "nodeName": "val", "type": "unicode"}, {"lineNumber": 197, "col_offset": 57, "nodeName": "val", "type": "unicode"}, {"lineNumber": 203, "col_offset": 20, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 203, "col_offset": 59, "nodeName": "field_values", "type": "Generator[float, Any, None]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "example_num", "type": "int"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "sys", "type": "module"}]