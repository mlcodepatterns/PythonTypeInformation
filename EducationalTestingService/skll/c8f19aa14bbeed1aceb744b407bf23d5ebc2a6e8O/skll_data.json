[{"lineNumber": 48, "col_offset": 0, "nodeName": "_ids_for_gen_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "_classes_for_gen_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "_features_for_gen_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "load_examples", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 0, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "DictVectorizer", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "feat_dict_generator", "type": "Iterator[Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "Pool", "type": "Callable[..., multiprocessing.pool.Pool]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "_ids_for_gen_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "_classes_for_gen_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "_features_for_gen_func", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "ExamplesTuple", "type": "Type[`namedtuple-ExamplesTuple-ids-classes-features-feat_vectorizer`]"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "classes", "type": "Any"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 139, "col_offset": 49, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "char_num", "type": "int"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "f", "type": "file"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "example_num", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "f", "type": "file"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "itemgetter", "type": "Callable"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "path", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "path", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 129, "col_offset": 22, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 135, "col_offset": 10, "nodeName": "ids_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "classes_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "features_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "ord", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "text", "type": "unicode"}, {"lineNumber": 184, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "line", "type": "str"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 188, "col_offset": 43, "nodeName": "f", "type": "file"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "unicode_markup", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "line", "type": "unicode"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 283, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 283, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 284, "col_offset": 28, "nodeName": "f", "type": "file"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 59, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 128, "col_offset": 62, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 63, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 73, "nodeName": "char", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 218, "col_offset": 57, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "class_name", "type": "str"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "class_name", "type": "None"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "curr_id", "type": "str"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "fname", "type": "str"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "fval", "type": "str"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "path", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "path", "type": "Any"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 153, "col_offset": 53, "nodeName": "char_num", "type": "int"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "char_num", "type": "int"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 186, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "example_num", "type": "int"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "example", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 194, "col_offset": 39, "nodeName": "example", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 218, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "UnicodeDammit", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "strip", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "line", "type": "unicode"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "line", "type": "unicode"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "example_num", "type": "int"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 293, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "fval", "type": "str"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "curr_id", "type": "Union[unicode, str]"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "class_name", "type": "Optional[str]"}, {"lineNumber": 305, "col_offset": 39, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 308, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 186, "col_offset": 61, "nodeName": "sys", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 196, "col_offset": 29, "nodeName": "example_num", "type": "int"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "class_name", "type": "unicode"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "class_name", "type": "None"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 259, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 259, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "example_num", "type": "int"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "line", "type": "unicode"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 243, "col_offset": 34, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "update", "type": "Callable"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "class_name", "type": "Optional[unicode]"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "fieldnames", "type": "Any"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "fieldnames", "type": "Any"}, {"lineNumber": 303, "col_offset": 24, "nodeName": "fname", "type": "str"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 246, "col_offset": 36, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 48, "nodeName": "val", "type": "unicode"}, {"lineNumber": 246, "col_offset": 57, "nodeName": "val", "type": "unicode"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 252, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "field_values", "type": "Generator[float, Any, None]"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "example_num", "type": "int"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 262, "col_offset": 44, "nodeName": "sys", "type": "module"}]