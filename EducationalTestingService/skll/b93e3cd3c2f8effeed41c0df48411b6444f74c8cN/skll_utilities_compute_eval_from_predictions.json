[{"lineNumber": 19, "col_offset": 0, "nodeName": "compute_eval_from_predictions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 114, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "read", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "pred_file", "type": "file"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "score", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "argv", "type": "None"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "captureWarnings", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "compute_eval_from_predictions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "examples_file", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "pred_file", "type": "file"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "next", "type": "Callable"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "use_score_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "for_path", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "examples_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "safe_float", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "__version__", "type": "str"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "Reader", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "csv", "type": "module"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 68, "col_offset": 57, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "metric_name", "type": "Any"}]