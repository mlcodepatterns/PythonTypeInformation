[{"lineNumber": 24, "col_offset": 0, "nodeName": "_pair_to_dict_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "number", "type": "int"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "label_group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "feature_set", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 161, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "number", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "split", "type": "Any"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "number", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "number", "type": "int"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "argv", "type": "None"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "captureWarnings", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "__name__", "type": "str"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "lower", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "lower", "type": "Any"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "EXT_TO_READER", "type": "Any"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "reuse_libsvm_map", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "feat_map", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "label_map", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "reuse_libsvm_map", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "feat_vectorizer", "type": "skll.data.dict_vectorizer.DictVectorizer"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "vocabulary_", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "feat_map", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "feat_vectorizer", "type": "None"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "label_map", "type": "None"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "no_labels", "type": "Any"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "infile", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "read", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "EXT_TO_WRITER", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "feature_set", "type": "Any"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "pair", "type": "Any"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "label_group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "label_group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "comments", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "DictVectorizer", "type": "Type[skll.data.dict_vectorizer.DictVectorizer]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "feat_vectorizer", "type": "skll.data.dict_vectorizer.DictVectorizer"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "EXT_TO_READER", "type": "Any"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "reader", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "output_extension", "type": "Any"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 147, "col_offset": 7, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "CSVWriter", "type": "Any"}, {"lineNumber": 147, "col_offset": 35, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "TSVWriter", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "ARFFWriter", "type": "Any"}, {"lineNumber": 151, "col_offset": 35, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "arff_regression", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "arff_relation", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "writer", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "__version__", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "line", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "label_map_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "feat_map_str", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "split", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "feat_vectorizer", "type": "skll.data.dict_vectorizer.DictVectorizer"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "input_extension", "type": "Any"}, {"lineNumber": 140, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 155, "col_offset": 9, "nodeName": "writer_type", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "LibSVMWriter", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "label_map", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "infile", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "outfile", "type": "Any"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "UnicodeDammit", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "comments", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "feat_map", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "label_map", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 51, "nodeName": "feat_map", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "writer_args", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "_pair_to_dict_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "pair", "type": "Any"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "pair", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "_pair_to_dict_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "pair", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "pair", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "split", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "strip", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "feat_map_str", "type": "Any"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "label_map_str", "type": "Any"}]