[{"lineNumber": 50, "col_offset": 0, "nodeName": "_ids_for_gen_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "_classes_for_gen_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "_features_for_gen_func", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "load_examples", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 0, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "feat_dict_generator", "type": "Iterator[Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "ids", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "classes", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 7, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "DictVectorizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "fit_transform", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "feat_dict_generator", "type": "Iterator[Any]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "features", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "_tsv_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "Pool", "type": "Callable[..., multiprocessing.pool.Pool]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "_ids_for_gen_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "_classes_for_gen_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "apply_async", "type": "Callable[..., multiprocessing.pool.AsyncResult]"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "_features_for_gen_func", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "join", "type": "Callable[[], None]"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "get", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "ExamplesTuple", "type": "Type[`namedtuple-ExamplesTuple-ids-classes-features-feat_vectorizer`]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "classes", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "features", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "char_num", "type": "int"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 227, "col_offset": 11, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "megam_file", "type": "IO[Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "example_num", "type": "int"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "megam_file", "type": "IO[Any]"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 297, "col_offset": 23, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "features", "type": "Any"}, {"lineNumber": 367, "col_offset": 7, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "features", "type": "Any"}, {"lineNumber": 371, "col_offset": 7, "nodeName": "ids", "type": "Any"}, {"lineNumber": 378, "col_offset": 7, "nodeName": "classes", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "classes", "type": "Generator[None, Any, None]"}, {"lineNumber": 382, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "example_gen_func", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "path", "type": "Any"}, {"lineNumber": 85, "col_offset": 44, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "itemgetter", "type": "Callable"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "path", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "_json_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 17, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "pool", "type": "multiprocessing.pool.Pool"}, {"lineNumber": 151, "col_offset": 10, "nodeName": "ids_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "classes_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "features_result", "type": "multiprocessing.pool.AsyncResult"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "ord", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "text", "type": "Any"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 201, "col_offset": 43, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "class_name", "type": "Optional[float]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "example", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 230, "col_offset": 9, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "unicode_markup", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "line", "type": "unicode"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 297, "col_offset": 9, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 361, "col_offset": 7, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "inverse_transform", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "features", "type": "Any"}, {"lineNumber": 372, "col_offset": 11, "nodeName": "id_prefix", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "ids", "type": "Generator[unicode, Any, None]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "ids", "type": "Generator[None, Any, None]"}, {"lineNumber": 382, "col_offset": 7, "nodeName": "path", "type": "Any"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "file_mode", "type": "unicode"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 389, "col_offset": 38, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "instances", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "fields", "type": "Set[Any]"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "file_mode", "type": "unicode"}, {"lineNumber": 56, "col_offset": 67, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 68, "col_offset": 67, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 71, "col_offset": 56, "nodeName": "gen_results", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 126, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 59, "nodeName": "path", "type": "Any"}, {"lineNumber": 141, "col_offset": 65, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 62, "nodeName": "path", "type": "Any"}, {"lineNumber": 143, "col_offset": 68, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "example_gen_func", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 63, "nodeName": "path", "type": "Any"}, {"lineNumber": 145, "col_offset": 69, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 73, "nodeName": "char", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "path", "type": "Any"}, {"lineNumber": 295, "col_offset": 57, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 298, "col_offset": 39, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "class_name", "type": "float"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "class_name", "type": "None"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "curr_id", "type": "str"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "fname", "type": "str"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "fval", "type": "str"}, {"lineNumber": 313, "col_offset": 31, "nodeName": "iteritems", "type": "Callable"}, {"lineNumber": 313, "col_offset": 41, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 314, "col_offset": 16, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 52, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 362, "col_offset": 63, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "feat_vectorizer", "type": "Any"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 383, "col_offset": 11, "nodeName": "sys", "type": "module"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "file_mode", "type": "unicode"}, {"lineNumber": 391, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 393, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 393, "col_offset": 55, "nodeName": "ids", "type": "Union[Generator[None, Any, None], Generator[unicode, Any, None], Any]"}, {"lineNumber": 393, "col_offset": 60, "nodeName": "classes", "type": "Union[Generator[None, Any, None], Any]"}, {"lineNumber": 393, "col_offset": 69, "nodeName": "features", "type": "Any"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "DictWriter", "type": "Type[csv.DictWriter]"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "writeheader", "type": "Callable[[], None]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "writerows", "type": "Callable[[Iterable[Mapping[str, Any]]], None]"}, {"lineNumber": 416, "col_offset": 29, "nodeName": "instances", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 421, "col_offset": 38, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "_", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "_", "type": "Any"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "_", "type": "Any"}, {"lineNumber": 128, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "char_num", "type": "int"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "char_num", "type": "int"}, {"lineNumber": 199, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "path", "type": "Any"}, {"lineNumber": 199, "col_offset": 61, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "strip", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "example", "type": "Any"}, {"lineNumber": 203, "col_offset": 40, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 203, "col_offset": 60, "nodeName": "example_num", "type": "int"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "example", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "curr_id", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "class_name", "type": "Optional[float]"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "example", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "UnicodeDammit", "type": "Any"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "strip", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "line", "type": "unicode"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 240, "col_offset": 17, "nodeName": "line", "type": "unicode"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "has_labels", "type": "bool"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "has_labels", "type": "bool"}, {"lineNumber": 270, "col_offset": 16, "nodeName": "example_num", "type": "int"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 295, "col_offset": 57, "nodeName": "sys", "type": "module"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 300, "col_offset": 15, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 300, "col_offset": 54, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 307, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 41, "nodeName": "fval", "type": "str"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "curr_id", "type": "Union[unicode, str]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "class_name", "type": "Optional[float]"}, {"lineNumber": 319, "col_offset": 39, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 361, "col_offset": 63, "nodeName": "features", "type": "Any"}, {"lineNumber": 373, "col_offset": 19, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "id_prefix", "type": "Any"}, {"lineNumber": 373, "col_offset": 44, "nodeName": "num", "type": "int"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "num", "type": "int"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "_", "type": "int"}, {"lineNumber": 379, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 395, "col_offset": 36, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 402, "col_offset": 31, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 409, "col_offset": 33, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 413, "col_offset": 42, "nodeName": "delimiter", "type": "str"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "version_info", "type": "Tuple[int, int, int, str, int]"}, {"lineNumber": 421, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "file_mode", "type": "unicode"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 423, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 423, "col_offset": 55, "nodeName": "ids", "type": "Union[Generator[None, Any, None], Generator[unicode, Any, None], Any]"}, {"lineNumber": 423, "col_offset": 60, "nodeName": "classes", "type": "Union[Generator[None, Any, None], Any]"}, {"lineNumber": 423, "col_offset": 69, "nodeName": "features", "type": "Any"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "example_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 434, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 449, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 199, "col_offset": 61, "nodeName": "sys", "type": "module"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "line", "type": "Any"}, {"lineNumber": 204, "col_offset": 37, "nodeName": "example", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "example_num", "type": "int"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "line", "type": "unicode"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "class_name", "type": "float"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "class_name", "type": "None"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 251, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 271, "col_offset": 46, "nodeName": "example_num", "type": "int"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "row", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "example_num", "type": "int"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "sys", "type": "module"}, {"lineNumber": 373, "col_offset": 60, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 379, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 379, "col_offset": 43, "nodeName": "features", "type": "Any"}, {"lineNumber": 396, "col_offset": 23, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 397, "col_offset": 50, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 408, "col_offset": 16, "nodeName": "fields", "type": "Set[Any]"}, {"lineNumber": 408, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "instances", "type": "List[Any]"}, {"lineNumber": 412, "col_offset": 46, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 412, "col_offset": 53, "nodeName": "fields", "type": "Set[Any]"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "sys", "type": "module"}, {"lineNumber": 426, "col_offset": 19, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 427, "col_offset": 40, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 429, "col_offset": 41, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 430, "col_offset": 16, "nodeName": "example_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 431, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 13, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 435, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 437, "col_offset": 16, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 437, "col_offset": 23, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 437, "col_offset": 35, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 437, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 437, "col_offset": 55, "nodeName": "ids", "type": "Union[Generator[None, Any, None], Generator[unicode, Any, None], Any]"}, {"lineNumber": 437, "col_offset": 60, "nodeName": "classes", "type": "Union[Generator[None, Any, None], Any]"}, {"lineNumber": 437, "col_offset": 69, "nodeName": "features", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 132, "col_offset": 71, "nodeName": "path", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "line", "type": "unicode"}, {"lineNumber": 247, "col_offset": 33, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "update", "type": "Callable"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "class_name", "type": "Optional[float]"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "fname", "type": "str"}, {"lineNumber": 322, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 373, "col_offset": 66, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 70, "nodeName": "features", "type": "Any"}, {"lineNumber": 375, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 43, "nodeName": "features", "type": "Any"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 400, "col_offset": 65, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 404, "col_offset": 24, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 408, "col_offset": 30, "nodeName": "feature_dict", "type": "Any"}, {"lineNumber": 427, "col_offset": 20, "nodeName": "example_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "example_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 431, "col_offset": 22, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 431, "col_offset": 33, "nodeName": "example_dict", "type": "Dict[unicode, Any]"}, {"lineNumber": 431, "col_offset": 69, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 439, "col_offset": 19, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 443, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 450, "col_offset": 71, "nodeName": "path", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 258, "col_offset": 36, "nodeName": "_safe_float", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 48, "nodeName": "val", "type": "unicode"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "val", "type": "unicode"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 264, "col_offset": 46, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 264, "col_offset": 59, "nodeName": "field_values", "type": "Generator[float, Any, None]"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "example_num", "type": "int"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "tsv_label", "type": "Any"}, {"lineNumber": 431, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 440, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 442, "col_offset": 26, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 259, "col_offset": 36, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 259, "col_offset": 43, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 274, "col_offset": 44, "nodeName": "sys", "type": "module"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 440, "col_offset": 40, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 440, "col_offset": 53, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 442, "col_offset": 53, "nodeName": "f", "type": "IO[Any]"}, {"lineNumber": 443, "col_offset": 65, "nodeName": "field", "type": "Any"}, {"lineNumber": 443, "col_offset": 72, "nodeName": "value", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 444, "col_offset": 35, "nodeName": "items", "type": "Any"}, {"lineNumber": 444, "col_offset": 60, "nodeName": "Decimal", "type": "Type[decimal.Decimal]"}, {"lineNumber": 444, "col_offset": 68, "nodeName": "value", "type": "Any"}, {"lineNumber": 444, "col_offset": 35, "nodeName": "feature_dict", "type": "Any"}]