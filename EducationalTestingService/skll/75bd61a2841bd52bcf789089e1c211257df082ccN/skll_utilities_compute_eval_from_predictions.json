[{"lineNumber": 20, "col_offset": 0, "nodeName": "get_prediction_from_probabilities", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 188, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "prediction_method", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "read", "type": "Any"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "pred_file", "type": "file"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "probabilities", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 136, "col_offset": 27, "nodeName": "score", "type": "Any"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "argv", "type": "None"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "captureWarnings", "type": "Callable[[Optional[bool]], None]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "compute_eval_from_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "examples_file", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "metric_names", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "probability", "type": "Any"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "prediction_method", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "prediction_method", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "exp_val", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "labels", "type": "Any"}, {"lineNumber": 100, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "pred_file", "type": "file"}, {"lineNumber": 102, "col_offset": 17, "nodeName": "next", "type": "Callable"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "classes", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 127, "col_offset": 7, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "use_score_func", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "res", "type": "Dict[Any, Any]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "ArgumentDefaultsHelpFormatter", "type": "Type[argparse.ArgumentDefaultsHelpFormatter]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 181, "col_offset": 43, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "classes", "type": "Union[List[int], List[str]]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "classes", "type": "Union[List[int], List[str]]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "for_path", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "examples_file", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "csv", "type": "module"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "c", "type": "str"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "prediction_method", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "safe_float", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "__version__", "type": "str"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 185, "col_offset": 34, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "predictions_file", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "random", "type": "module"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "round", "type": "Callable[..., float]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "exp_val", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "Reader", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "csv", "type": "module"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "c", "type": "str"}, {"lineNumber": 108, "col_offset": 48, "nodeName": "c", "type": "str"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "classes", "type": "List[int]"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "get_prediction_from_probabilities", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 63, "nodeName": "classes", "type": "Union[List[str], List[int]]"}, {"lineNumber": 118, "col_offset": 72, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "prediction_method", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "safe_float", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "prediction", "type": "Optional[Union[int, str]]"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "gold", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "pred", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 135, "col_offset": 57, "nodeName": "example_ids", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "scores", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 47, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "prob", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "safe_float", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "p", "type": "str"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "p", "type": "str"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 37, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "ex_id", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "max", "type": "Callable"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "classes", "type": "Union[List[int], List[str]]"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "prob", "type": "Any"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "probs", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "c", "type": "str"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "classes", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "c", "type": "str"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "c", "type": "str"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "classes", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "c", "type": "str"}]