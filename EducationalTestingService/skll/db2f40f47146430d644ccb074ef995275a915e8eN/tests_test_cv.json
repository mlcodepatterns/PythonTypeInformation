[{"lineNumber": 87, "col_offset": 0, "nodeName": "test_specified_cv_folds", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_ALL_MODELS", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "SCORE_OUTPUT_RE", "type": "Pattern[str]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "GRID_RE", "type": "Pattern[str]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 35, "col_offset": 10, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "num_total_examples", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "foldgen", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "folds", "type": "List[nothing]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "feature_names", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "custom_cv_folds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 34, "col_offset": 10, "nodeName": "re", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "__file__", "type": "str"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "num_examples_per_fold", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "num_folds", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "make_classification", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "classid", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "foldnum", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "folds", "type": "List[nothing]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "string_feature_name", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "string_feature_value", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "feat_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 48, "nodeName": "use_feature_hashing", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "cv_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "custom_cv_folds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "sampler", "type": "Optional[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "folds", "type": "Union[Dict[nothing, nothing], int]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "fold_test_scores", "type": "List[Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "overall_score", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "fold_score", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "fold_test_scores", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "_DEFAULT_PARAM_GRIDS", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "num_total_examples", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "num_examples_per_fold", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 66, "col_offset": 48, "nodeName": "classid", "type": "Any"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "foldnum", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "feat_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "FeatureHasher", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "folds", "type": "List[nothing]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "assert_less", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "assert_greater", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "assert_less", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "assert_greater", "type": "Any"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "use_sampler", "type": "bool"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "cv_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "custom_cv_folds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "make_cv_folds_data", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "custom_cv_folds", "type": "Dict[nothing, nothing]"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "cross_validate", "type": "Callable[..., Tuple[List[Any], List[Any]]]"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "cv_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "fold_test_scores", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assert_func", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "overall_score", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "test_value", "type": "float"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "grid_size", "type": "int"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "num_folds", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "itertools", "type": "module"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "foldgen", "type": "Generator[List[int], Any, None]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "feature_names", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "feat_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "string_feature_name", "type": "str"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "string_feature_value", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "num_folds", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "num_examples_per_fold", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "sampler", "type": "Optional[str]"}, {"lineNumber": 111, "col_offset": 72, "nodeName": "use_hashing", "type": "bool"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "use_hashing", "type": "bool"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "folds", "type": "Union[int, Dict[nothing, nothing]]"}, {"lineNumber": 116, "col_offset": 58, "nodeName": "use_hashing", "type": "bool"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "t", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "fold_test_scores", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "assert_func", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "fold_score", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "test_value", "type": "float"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "num_total_examples", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "cv_output", "type": "Tuple[List[Any], List[Any]]"}]