[{"lineNumber": 57, "col_offset": 0, "nodeName": "setup", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "tearDown", "type": "Callable[[], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "test_compute_eval_from_predictions", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "test_generate_predictions", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "test_generate_predictions_console", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 0, "nodeName": "check_skll_convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 298, "col_offset": 0, "nodeName": "test_skll_convert", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 0, "nodeName": "test_skll_convert_libsvm_map", "type": "Callable[[], Any]"}, {"lineNumber": 367, "col_offset": 0, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 429, "col_offset": 0, "nodeName": "test_print_model_weights", "type": "Callable[[], Any]"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 0, "nodeName": "test_summarize_results_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 539, "col_offset": 0, "nodeName": "test_run_experiment_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 662, "col_offset": 0, "nodeName": "test_filter_features_no_arff_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 779, "col_offset": 0, "nodeName": "test_filter_features_arff_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 792, "col_offset": 0, "nodeName": "test_filter_features_libsvm_input_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 802, "col_offset": 0, "nodeName": "test_filter_features_libsvm_output_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 812, "col_offset": 0, "nodeName": "test_filter_features_unknown_input_format", "type": "Callable[[], Any]"}, {"lineNumber": 822, "col_offset": 0, "nodeName": "test_filter_features_unknown_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 831, "col_offset": 0, "nodeName": "check_filter_features_raises_system_exit", "type": "Callable[[Any], Any]"}, {"lineNumber": 840, "col_offset": 0, "nodeName": "test_filter_features_unmatched_formats", "type": "Callable[[], Any]"}, {"lineNumber": 922, "col_offset": 0, "nodeName": "test_join_features_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 934, "col_offset": 0, "nodeName": "test_join_features_libsvm_input_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 944, "col_offset": 0, "nodeName": "test_join_features_libsvm_output_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 954, "col_offset": 0, "nodeName": "test_join_features_unknown_input_format", "type": "Callable[[], Any]"}, {"lineNumber": 964, "col_offset": 0, "nodeName": "test_join_features_unknown_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 974, "col_offset": 0, "nodeName": "check_join_features_raises_system_exit", "type": "Callable[[Any], Any]"}, {"lineNumber": 983, "col_offset": 0, "nodeName": "test_join_features_unmatched_input_formats", "type": "Callable[[], Any]"}, {"lineNumber": 993, "col_offset": 0, "nodeName": "test_join_features_unmatched_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "_ALL_MODELS", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 10, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "f", "type": "str"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "score_row", "type": "str"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 161, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "p", "type": "skll.utilities.generate_predictions.Predictor"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "predictions_after_saving", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 215, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "writer", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "reader", "type": "Union[skll.data.readers.ARFFReader, skll.data.readers.CSVReader, skll.data.readers.LibSVMReader, skll.data.readers.MegaMReader, skll.data.readers.NDJReader, skll.data.readers.TSVReader]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.LibSVMWriter"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 331, "col_offset": 32, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.MegaMWriter"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "reader", "type": "skll.data.readers.LibSVMReader"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "print_model_weights_cmd", "type": "List[str]"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "_write_summary_file", "type": "Any"}, {"lineNumber": 444, "col_offset": 29, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 451, "col_offset": 7, "nodeName": "use_ablation", "type": "Any"}, {"lineNumber": 457, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 481, "col_offset": 4, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 485, "col_offset": 4, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 486, "col_offset": 4, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 488, "col_offset": 7, "nodeName": "multiple_config_files", "type": "Any"}, {"lineNumber": 498, "col_offset": 7, "nodeName": "keep_models", "type": "Any"}, {"lineNumber": 501, "col_offset": 7, "nodeName": "resume", "type": "Any"}, {"lineNumber": 504, "col_offset": 7, "nodeName": "local", "type": "Any"}, {"lineNumber": 517, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 519, "col_offset": 7, "nodeName": "multiple_config_files", "type": "Any"}, {"lineNumber": 529, "col_offset": 7, "nodeName": "local", "type": "Any"}, {"lineNumber": 565, "col_offset": 4, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 569, "col_offset": 4, "nodeName": "infile", "type": "str"}, {"lineNumber": 570, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 613, "col_offset": 7, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 616, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 689, "col_offset": 4, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "ARFFWriter", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "infile", "type": "str"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 698, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.ARFFWriter"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 739, "col_offset": 7, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 742, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 798, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 860, "col_offset": 4, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 863, "col_offset": 4, "nodeName": "infile1", "type": "str"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "infile2", "type": "str"}, {"lineNumber": 865, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 892, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 940, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 950, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 960, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 970, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "__file__", "type": "str"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "input_path", "type": "str"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "threshold", "type": "float"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "predictions", "type": "List[int]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "threshold", "type": "None"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "Predictor", "type": "Type[skll.utilities.generate_predictions.Predictor]"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "model_file", "type": "str"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "predictions_after_saving", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 199, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "NDJWriter", "type": "Type[skll.data.writers.NDJWriter]"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "input_file", "type": "str"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "threshold", "type": "float"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "predictions", "type": "List[int]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "threshold", "type": "None"}, {"lineNumber": 223, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "predictions_after_saving", "type": "List[int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 269, "col_offset": 26, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "from_suffix_file", "type": "str"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "from_suffix_file", "type": "str"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "to_suffix_file", "type": "str"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 286, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 290, "col_offset": 38, "nodeName": "to_suffix_file", "type": "str"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "read", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 295, "col_offset": 17, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 316, "col_offset": 28, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 318, "col_offset": 13, "nodeName": "LibSVMWriter", "type": "Type[skll.data.writers.LibSVMWriter]"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 318, "col_offset": 44, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "features", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "features", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 334, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "MegaMWriter", "type": "Type[skll.data.writers.MegaMWriter]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "swapped_megam_file", "type": "str"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 341, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "converted_libsvm_file", "type": "str"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "LibSVMReader", "type": "Type[skll.data.readers.LibSVMReader]"}, {"lineNumber": 359, "col_offset": 26, "nodeName": "converted_libsvm_file", "type": "str"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "read", "type": "Callable[[], Any]"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 370, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 377, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 385, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 387, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 396, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 407, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "intercept", "type": "int"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "intercept", "type": "int"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 443, "col_offset": 30, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 46, "nodeName": "_write_summary_file", "type": "Callable[..., None]"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "sr", "type": "module"}, {"lineNumber": 447, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 447, "col_offset": 29, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 449, "col_offset": 19, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 450, "col_offset": 23, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 457, "col_offset": 46, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 458, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 459, "col_offset": 38, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 460, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 481, "col_offset": 29, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 45, "nodeName": "run_configuration", "type": "Callable[..., List[str]]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "rex", "type": "module"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 485, "col_offset": 29, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 486, "col_offset": 20, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 487, "col_offset": 20, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 493, "col_offset": 7, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 517, "col_offset": 46, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 524, "col_offset": 7, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 534, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 536, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 536, "col_offset": 37, "nodeName": "resume", "type": "Any"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "product", "type": "Callable"}, {"lineNumber": 565, "col_offset": 19, "nodeName": "EXT_TO_READER", "type": "Dict[str, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 569, "col_offset": 28, "nodeName": "extension", "type": "Any"}, {"lineNumber": 570, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "extension", "type": "Any"}, {"lineNumber": 573, "col_offset": 4, "nodeName": "fs", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 575, "col_offset": 19, "nodeName": "infile", "type": "str"}, {"lineNumber": 575, "col_offset": 27, "nodeName": "outfile", "type": "str"}, {"lineNumber": 577, "col_offset": 7, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 578, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "f", "type": "str"}, {"lineNumber": 585, "col_offset": 17, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 625, "col_offset": 44, "nodeName": "read_init_mock", "type": "Any"}, {"lineNumber": 627, "col_offset": 65, "nodeName": "filter_mock", "type": "Any"}, {"lineNumber": 629, "col_offset": 47, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 635, "col_offset": 48, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 637, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 664, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "writers", "type": "module"}, {"lineNumber": 692, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 692, "col_offset": 18, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "fs", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 696, "col_offset": 12, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 698, "col_offset": 13, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 698, "col_offset": 26, "nodeName": "infile", "type": "str"}, {"lineNumber": 698, "col_offset": 34, "nodeName": "fs", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 701, "col_offset": 19, "nodeName": "infile", "type": "str"}, {"lineNumber": 701, "col_offset": 27, "nodeName": "outfile", "type": "str"}, {"lineNumber": 703, "col_offset": 7, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 711, "col_offset": 12, "nodeName": "f", "type": "str"}, {"lineNumber": 711, "col_offset": 17, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 749, "col_offset": 62, "nodeName": "filter_mock", "type": "Any"}, {"lineNumber": 751, "col_offset": 47, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 752, "col_offset": 66, "nodeName": "write_mock", "type": "Any"}, {"lineNumber": 757, "col_offset": 52, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 758, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 781, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 837, "col_offset": 12, "nodeName": "cmd_args", "type": "Any"}, {"lineNumber": 843, "col_offset": 25, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 860, "col_offset": 19, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 863, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 863, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 864, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 865, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 865, "col_offset": 29, "nodeName": "extension", "type": "Any"}, {"lineNumber": 868, "col_offset": 13, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 871, "col_offset": 13, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 876, "col_offset": 19, "nodeName": "infile1", "type": "str"}, {"lineNumber": 876, "col_offset": 28, "nodeName": "infile2", "type": "str"}, {"lineNumber": 876, "col_offset": 37, "nodeName": "outfile", "type": "str"}, {"lineNumber": 878, "col_offset": 7, "nodeName": "extension", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "writer1", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "writer2", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 899, "col_offset": 63, "nodeName": "add_mock", "type": "Any"}, {"lineNumber": 901, "col_offset": 47, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 902, "col_offset": 66, "nodeName": "write_mock", "type": "Any"}, {"lineNumber": 907, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 908, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 923, "col_offset": 49, "nodeName": "product", "type": "Callable"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 980, "col_offset": 12, "nodeName": "cmd_args", "type": "Any"}, {"lineNumber": 986, "col_offset": 22, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 996, "col_offset": 22, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "_DEFAULT_PARAM_GRIDS", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "f", "type": "str"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 18, "nodeName": "ffile", "type": "str"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "score", "type": "str"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "score", "type": "str"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 148, "col_offset": 28, "nodeName": "use_feature_hashing", "type": "Any"}, {"lineNumber": 151, "col_offset": 51, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "gp", "type": "module"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "threshold", "type": "Optional[float]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "p", "type": "skll.utilities.generate_predictions.Predictor"}, {"lineNumber": 186, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 187, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 205, "col_offset": 51, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "model_file", "type": "str"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "input_file", "type": "str"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 238, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "predictions_after_saving", "type": "List[int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 256, "col_offset": 10, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 10, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 268, "col_offset": 60, "nodeName": "from_suffix", "type": "Any"}, {"lineNumber": 270, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 270, "col_offset": 59, "nodeName": "to_suffix", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "writer", "type": "Union[skll.data.writers.NDJWriter, skll.data.writers.CSVWriter, skll.data.writers.TSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.ARFFWriter]"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 287, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "EXT_TO_READER", "type": "Dict[str, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "reader", "type": "Union[skll.data.readers.MegaMReader, skll.data.readers.CSVReader, skll.data.readers.LibSVMReader, skll.data.readers.NDJReader, skll.data.readers.TSVReader, skll.data.readers.ARFFReader]"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 319, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.LibSVMWriter"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.MegaMWriter"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 353, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "reader", "type": "skll.data.readers.LibSVMReader"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 371, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "make_regression_data", "type": "Any"}, {"lineNumber": 378, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 387, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 393, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 394, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "print_model_weights_cmd", "type": "List[str]"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 409, "col_offset": 20, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 411, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 415, "col_offset": 28, "nodeName": "intercept", "type": "int"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 416, "col_offset": 48, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "intercept", "type": "int"}, {"lineNumber": 425, "col_offset": 39, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 426, "col_offset": 45, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 430, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 431, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "sr", "type": "module"}, {"lineNumber": 453, "col_offset": 17, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 460, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 460, "col_offset": 43, "nodeName": "use_ablation", "type": "Any"}, {"lineNumber": 464, "col_offset": 10, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 10, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "rex", "type": "module"}, {"lineNumber": 513, "col_offset": 18, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 522, "col_offset": 37, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 530, "col_offset": 40, "nodeName": "local", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 532, "col_offset": 40, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 534, "col_offset": 44, "nodeName": "keep_models", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 566, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 588, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "idee", "type": "str"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 610, "col_offset": 30, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 611, "col_offset": 36, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 624, "col_offset": 22, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 626, "col_offset": 25, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 627, "col_offset": 25, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 628, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 630, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "read_pos_arguments", "type": "Any"}, {"lineNumber": 635, "col_offset": 28, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 635, "col_offset": 48, "nodeName": "read_init_mock", "type": "Any"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 636, "col_offset": 30, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 636, "col_offset": 52, "nodeName": "filter_mock", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 637, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 637, "col_offset": 50, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 640, "col_offset": 35, "nodeName": "infile", "type": "str"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 641, "col_offset": 40, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 642, "col_offset": 44, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 643, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 643, "col_offset": 41, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 645, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 646, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 651, "col_offset": 37, "nodeName": "fs", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 652, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 654, "col_offset": 11, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "data", "type": "module"}, {"lineNumber": 698, "col_offset": 48, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 698, "col_offset": 66, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 699, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.ARFFWriter"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 714, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 715, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "idee", "type": "str"}, {"lineNumber": 722, "col_offset": 20, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 736, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 736, "col_offset": 30, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 737, "col_offset": 36, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 749, "col_offset": 22, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 752, "col_offset": 25, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 757, "col_offset": 30, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 757, "col_offset": 52, "nodeName": "filter_mock", "type": "Any"}, {"lineNumber": 758, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 758, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 758, "col_offset": 50, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 761, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 762, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 768, "col_offset": 37, "nodeName": "fs", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 769, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 771, "col_offset": 11, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 799, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 809, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 819, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 828, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 860, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 863, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 863, "col_offset": 68, "nodeName": "extension", "type": "Any"}, {"lineNumber": 864, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 864, "col_offset": 68, "nodeName": "extension", "type": "Any"}, {"lineNumber": 879, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 879, "col_offset": 31, "nodeName": "infile1", "type": "str"}, {"lineNumber": 879, "col_offset": 40, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 881, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 881, "col_offset": 31, "nodeName": "infile2", "type": "str"}, {"lineNumber": 881, "col_offset": 40, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 886, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 886, "col_offset": 31, "nodeName": "infile1", "type": "str"}, {"lineNumber": 886, "col_offset": 40, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 887, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 887, "col_offset": 31, "nodeName": "infile2", "type": "str"}, {"lineNumber": 887, "col_offset": 40, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 889, "col_offset": 4, "nodeName": "writer1", "type": "Union[skll.data.writers.TSVWriter, skll.data.writers.ARFFWriter, skll.data.writers.NDJWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter]"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "writer2", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.LibSVMWriter, skll.data.writers.CSVWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 899, "col_offset": 9, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 899, "col_offset": 22, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 900, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "object", "type": "Union[Callable[..., unittest.mock._patch], Callable[..., mock._patch]]"}, {"lineNumber": 902, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 907, "col_offset": 27, "nodeName": "add_kw_arguments", "type": "Any"}, {"lineNumber": 907, "col_offset": 46, "nodeName": "add_mock", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 908, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 908, "col_offset": 50, "nodeName": "write_init_mock", "type": "Any"}, {"lineNumber": 911, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 911, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 912, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 918, "col_offset": 34, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 919, "col_offset": 34, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 941, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 941, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 951, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 951, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 961, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 971, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 971, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 980, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "cefp", "type": "module"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "score_row", "type": "str"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 217, "col_offset": 55, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "threshold", "type": "Optional[float]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "gp", "type": "module"}, {"lineNumber": 241, "col_offset": 14, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 242, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 243, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 243, "col_offset": 40, "nodeName": "x", "type": "str"}, {"lineNumber": 243, "col_offset": 47, "nodeName": "x", "type": "str"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "from_suffix", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "sk", "type": "module"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 290, "col_offset": 27, "nodeName": "to_suffix", "type": "Any"}, {"lineNumber": 303, "col_offset": 14, "nodeName": "check_skll_convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "from_suffix", "type": "str"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "to_suffix", "type": "str"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "sk", "type": "module"}, {"lineNumber": 353, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "pmw", "type": "module"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 408, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 408, "col_offset": 60, "nodeName": "l", "type": "str"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 414, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 415, "col_offset": 39, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 418, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 418, "col_offset": 56, "nodeName": "l", "type": "str"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 424, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 425, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 29, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 491, "col_offset": 29, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 509, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 520, "col_offset": 37, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 525, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 525, "col_offset": 47, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 530, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 549, "col_offset": 15, "nodeName": "check_run_experiments_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 549, "col_offset": 47, "nodeName": "multiple_config_files", "type": "bool"}, {"lineNumber": 550, "col_offset": 15, "nodeName": "n_ablated_features", "type": "str"}, {"lineNumber": 550, "col_offset": 35, "nodeName": "keep_models", "type": "bool"}, {"lineNumber": 550, "col_offset": 48, "nodeName": "local", "type": "bool"}, {"lineNumber": 550, "col_offset": 55, "nodeName": "resume", "type": "bool"}, {"lineNumber": 583, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 586, "col_offset": 31, "nodeName": "f", "type": "str"}, {"lineNumber": 590, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 592, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 600, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 607, "col_offset": 12, "nodeName": "lbl", "type": "str"}, {"lineNumber": 607, "col_offset": 19, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 614, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 624, "col_offset": 9, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 626, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 626, "col_offset": 75, "nodeName": "fs", "type": "Any"}, {"lineNumber": 627, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 628, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "ff", "type": "module"}, {"lineNumber": 632, "col_offset": 21, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 640, "col_offset": 12, "nodeName": "read_pos_arguments", "type": "Any"}, {"lineNumber": 641, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 642, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 652, "col_offset": 12, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 655, "col_offset": 49, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 674, "col_offset": 15, "nodeName": "check_filter_features_no_arff_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 674, "col_offset": 55, "nodeName": "extension", "type": "str"}, {"lineNumber": 675, "col_offset": 15, "nodeName": "filter_type", "type": "str"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "label_col", "type": "str"}, {"lineNumber": 675, "col_offset": 39, "nodeName": "id_col", "type": "str"}, {"lineNumber": 675, "col_offset": 47, "nodeName": "inverse", "type": "bool"}, {"lineNumber": 675, "col_offset": 56, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 689, "col_offset": 19, "nodeName": "skll", "type": "module"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 712, "col_offset": 31, "nodeName": "f", "type": "str"}, {"lineNumber": 716, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 718, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 725, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 726, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "lbl", "type": "str"}, {"lineNumber": 733, "col_offset": 19, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 749, "col_offset": 9, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 750, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 752, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "ff", "type": "module"}, {"lineNumber": 754, "col_offset": 21, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 761, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 762, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 768, "col_offset": 12, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 772, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 772, "col_offset": 49, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 773, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 788, "col_offset": 15, "nodeName": "check_filter_features_arff_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 788, "col_offset": 52, "nodeName": "filter_type", "type": "str"}, {"lineNumber": 789, "col_offset": 15, "nodeName": "label_col", "type": "str"}, {"lineNumber": 789, "col_offset": 26, "nodeName": "id_col", "type": "str"}, {"lineNumber": 789, "col_offset": 34, "nodeName": "inverse", "type": "bool"}, {"lineNumber": 789, "col_offset": 43, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 845, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 845, "col_offset": 38, "nodeName": "inext", "type": "str"}, {"lineNumber": 845, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 845, "col_offset": 61, "nodeName": "outext", "type": "str"}, {"lineNumber": 847, "col_offset": 14, "nodeName": "check_filter_features_raises_system_exit", "type": "Any"}, {"lineNumber": 847, "col_offset": 56, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 879, "col_offset": 55, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 880, "col_offset": 38, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 881, "col_offset": 55, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 882, "col_offset": 38, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 883, "col_offset": 34, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 884, "col_offset": 40, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 899, "col_offset": 9, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 902, "col_offset": 12, "nodeName": "patch", "type": "Union[unittest.mock._patcher, mock._patcher]"}, {"lineNumber": 904, "col_offset": 8, "nodeName": "jf", "type": "module"}, {"lineNumber": 904, "col_offset": 21, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 918, "col_offset": 12, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 919, "col_offset": 12, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 930, "col_offset": 15, "nodeName": "check_join_features_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 930, "col_offset": 45, "nodeName": "extension", "type": "str"}, {"lineNumber": 930, "col_offset": 56, "nodeName": "label_col", "type": "str"}, {"lineNumber": 930, "col_offset": 67, "nodeName": "id_col", "type": "str"}, {"lineNumber": 931, "col_offset": 15, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 988, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 988, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 988, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 988, "col_offset": 60, "nodeName": "ext2", "type": "str"}, {"lineNumber": 989, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 989, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 990, "col_offset": 14, "nodeName": "check_join_features_raises_system_exit", "type": "Any"}, {"lineNumber": 990, "col_offset": 54, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 998, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 998, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 998, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 998, "col_offset": 60, "nodeName": "ext1", "type": "str"}, {"lineNumber": 999, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 999, "col_offset": 38, "nodeName": "ext2", "type": "str"}, {"lineNumber": 1000, "col_offset": 14, "nodeName": "check_join_features_raises_system_exit", "type": "Any"}, {"lineNumber": 1000, "col_offset": 54, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "threshold", "type": "float"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "threshold", "type": "float"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 414, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 415, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 419, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 422, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 424, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 424, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 425, "col_offset": 39, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 494, "col_offset": 47, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 509, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 509, "col_offset": 49, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 597, "col_offset": 31, "nodeName": "idee", "type": "str"}, {"lineNumber": 601, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 603, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 655, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 657, "col_offset": 44, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 658, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 723, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 723, "col_offset": 31, "nodeName": "idee", "type": "str"}, {"lineNumber": 727, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 774, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 774, "col_offset": 44, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 775, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 413, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 413, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 415, "col_offset": 39, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 418, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 423, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 590, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 590, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 590, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 592, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 592, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 608, "col_offset": 31, "nodeName": "lbl", "type": "str"}, {"lineNumber": 657, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 659, "col_offset": 47, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 716, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 716, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 716, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 718, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 718, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 718, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 723, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 734, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "lbl", "type": "str"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 776, "col_offset": 47, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 408, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 419, "col_offset": 31, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 423, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 590, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 592, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 659, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 716, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 718, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 734, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 243, "col_offset": 52, "nodeName": "out", "type": "str"}]