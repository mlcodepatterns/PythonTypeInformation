[{"lineNumber": 58, "col_offset": 0, "nodeName": "setup", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "tearDown", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_compute_eval_from_predictions", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_compute_eval_from_predictions_with_probs", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "test_compute_eval_from_predictions_breaks_with_expval_and_nonnumeric_classes", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 0, "nodeName": "test_generate_predictions", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 332, "col_offset": 0, "nodeName": "test_generate_predictions_console", "type": "Callable[[], Any]"}, {"lineNumber": 341, "col_offset": 0, "nodeName": "check_skll_convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 379, "col_offset": 0, "nodeName": "test_skll_convert", "type": "Callable[[], Any]"}, {"lineNumber": 387, "col_offset": 0, "nodeName": "test_skll_convert_libsvm_map", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 0, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 565, "col_offset": 0, "nodeName": "test_print_model_weights", "type": "Callable[[], Any]"}, {"lineNumber": 573, "col_offset": 0, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 0, "nodeName": "test_summarize_results_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 678, "col_offset": 0, "nodeName": "test_run_experiment_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 801, "col_offset": 0, "nodeName": "test_filter_features_no_arff_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 918, "col_offset": 0, "nodeName": "test_filter_features_arff_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 931, "col_offset": 0, "nodeName": "test_filter_features_libsvm_input_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 941, "col_offset": 0, "nodeName": "test_filter_features_libsvm_output_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 951, "col_offset": 0, "nodeName": "test_filter_features_unknown_input_format", "type": "Callable[[], Any]"}, {"lineNumber": 961, "col_offset": 0, "nodeName": "test_filter_features_unknown_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 970, "col_offset": 0, "nodeName": "check_filter_features_raises_system_exit", "type": "Callable[[Any], Any]"}, {"lineNumber": 979, "col_offset": 0, "nodeName": "test_filter_features_unmatched_formats", "type": "Callable[[], Any]"}, {"lineNumber": 1061, "col_offset": 0, "nodeName": "test_join_features_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 1073, "col_offset": 0, "nodeName": "test_join_features_libsvm_input_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 1083, "col_offset": 0, "nodeName": "test_join_features_libsvm_output_argparse", "type": "Callable[[], Any]"}, {"lineNumber": 1093, "col_offset": 0, "nodeName": "test_join_features_unknown_input_format", "type": "Callable[[], Any]"}, {"lineNumber": 1103, "col_offset": 0, "nodeName": "test_join_features_unknown_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 1113, "col_offset": 0, "nodeName": "check_join_features_raises_system_exit", "type": "Callable[[Any], Any]"}, {"lineNumber": 1122, "col_offset": 0, "nodeName": "test_join_features_unmatched_input_formats", "type": "Callable[[], Any]"}, {"lineNumber": 1132, "col_offset": 0, "nodeName": "test_join_features_unmatched_output_format", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "_ALL_MODELS", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "f", "type": "str"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "input_path", "type": "str"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "score_row", "type": "str"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "input_path", "type": "str"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "score_row", "type": "str"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "score_row", "type": "str"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "input_path", "type": "str"}, {"lineNumber": 218, "col_offset": 4, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "model_file", "type": "str"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "p", "type": "skll.utilities.generate_predictions.Predictor"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "predictions_after_saving", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "input_file", "type": "str"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 296, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "model_file", "type": "str"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 310, "col_offset": 7, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "from_suffix_file", "type": "str"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "to_suffix_file", "type": "str"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "writer", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 357, "col_offset": 4, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "reader", "type": "Union[skll.data.readers.ARFFReader, skll.data.readers.CSVReader, skll.data.readers.LibSVMReader, skll.data.readers.MegaMReader, skll.data.readers.NDJReader, skll.data.readers.TSVReader]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 399, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.LibSVMWriter"}, {"lineNumber": 403, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 412, "col_offset": 32, "nodeName": "tmp", "type": "Any"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "swapped_megam_file", "type": "str"}, {"lineNumber": 417, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.MegaMWriter"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "converted_libsvm_file", "type": "str"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "reader", "type": "skll.data.readers.LibSVMReader"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "model_file", "type": "str"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "print_model_weights_cmd", "type": "List[str]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "err", "type": "str"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "_write_summary_file", "type": "Any"}, {"lineNumber": 583, "col_offset": 29, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 586, "col_offset": 4, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 587, "col_offset": 4, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 588, "col_offset": 4, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 590, "col_offset": 7, "nodeName": "use_ablation", "type": "Any"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 620, "col_offset": 4, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "run_configuration", "type": "Any"}, {"lineNumber": 621, "col_offset": 28, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 625, "col_offset": 4, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 626, "col_offset": 4, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 627, "col_offset": 7, "nodeName": "multiple_config_files", "type": "Any"}, {"lineNumber": 637, "col_offset": 7, "nodeName": "keep_models", "type": "Any"}, {"lineNumber": 640, "col_offset": 7, "nodeName": "resume", "type": "Any"}, {"lineNumber": 643, "col_offset": 7, "nodeName": "local", "type": "Any"}, {"lineNumber": 656, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 658, "col_offset": 7, "nodeName": "multiple_config_files", "type": "Any"}, {"lineNumber": 668, "col_offset": 7, "nodeName": "local", "type": "Any"}, {"lineNumber": 704, "col_offset": 4, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 705, "col_offset": 4, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 708, "col_offset": 4, "nodeName": "infile", "type": "str"}, {"lineNumber": 709, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 714, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 752, "col_offset": 7, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 755, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 828, "col_offset": 4, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "ARFFWriter", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "infile", "type": "str"}, {"lineNumber": 832, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 837, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.ARFFWriter"}, {"lineNumber": 840, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 878, "col_offset": 7, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 881, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 937, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 947, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 957, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 966, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1002, "col_offset": 4, "nodeName": "infile1", "type": "str"}, {"lineNumber": 1003, "col_offset": 4, "nodeName": "infile2", "type": "str"}, {"lineNumber": 1004, "col_offset": 4, "nodeName": "outfile", "type": "str"}, {"lineNumber": 1015, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 1031, "col_offset": 7, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 1079, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1099, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1109, "col_offset": 4, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "__file__", "type": "str"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "glob", "type": "Callable"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "input_path", "type": "str"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "input_path", "type": "str"}, {"lineNumber": 156, "col_offset": 53, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "input_path", "type": "str"}, {"lineNumber": 183, "col_offset": 53, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "score_rows", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 215, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "input_path", "type": "str"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 14, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 227, "col_offset": 14, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "threshold", "type": "float"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "predictions", "type": "List[int]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "threshold", "type": "None"}, {"lineNumber": 250, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "Predictor", "type": "Type[skll.utilities.generate_predictions.Predictor]"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "model_file", "type": "str"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "predictions_after_saving", "type": "Any"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 276, "col_offset": 14, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 276, "col_offset": 24, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 282, "col_offset": 13, "nodeName": "NDJWriter", "type": "Type[skll.data.writers.NDJWriter]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "input_file", "type": "str"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "test_fs", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "threshold", "type": "float"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "predictions", "type": "List[int]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "threshold", "type": "None"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 304, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 320, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "predictions_after_saving", "type": "List[int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 328, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 344, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 344, "col_offset": 17, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 348, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 350, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "from_suffix_file", "type": "str"}, {"lineNumber": 353, "col_offset": 58, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 357, "col_offset": 24, "nodeName": "from_suffix_file", "type": "str"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "to_suffix_file", "type": "str"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "to_suffix_file", "type": "str"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "read", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "permutations", "type": "Callable"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 393, "col_offset": 13, "nodeName": "_", "type": "Any"}, {"lineNumber": 393, "col_offset": 17, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 397, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "LibSVMWriter", "type": "Type[skll.data.writers.LibSVMWriter]"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 399, "col_offset": 44, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 403, "col_offset": 31, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "vocabulary_", "type": "Any"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "features", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "features", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "features", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 415, "col_offset": 30, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 417, "col_offset": 13, "nodeName": "MegaMWriter", "type": "Type[skll.data.writers.MegaMWriter]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "swapped_megam_file", "type": "str"}, {"lineNumber": 417, "col_offset": 45, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 426, "col_offset": 46, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "orig_libsvm_file", "type": "str"}, {"lineNumber": 428, "col_offset": 24, "nodeName": "converted_libsvm_file", "type": "str"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 432, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 436, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "LibSVMReader", "type": "Type[skll.data.readers.LibSVMReader]"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "converted_libsvm_file", "type": "str"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "read", "type": "Callable[[], Any]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "orig_fs", "type": "Any"}, {"lineNumber": 445, "col_offset": 17, "nodeName": "converted_fs", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 474, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 474, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 476, "col_offset": 17, "nodeName": "model_file", "type": "str"}, {"lineNumber": 479, "col_offset": 31, "nodeName": "model_file", "type": "str"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "stderr", "type": "io.StringIO"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "stdout", "type": "io.StringIO"}, {"lineNumber": 485, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "err", "type": "str"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "stderr", "type": "TextIO"}, {"lineNumber": 490, "col_offset": 21, "nodeName": "old_stderr", "type": "TextIO"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 491, "col_offset": 21, "nodeName": "old_stdout", "type": "TextIO"}, {"lineNumber": 496, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "intercept", "type": "int"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 582, "col_offset": 30, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 46, "nodeName": "_write_summary_file", "type": "Callable[..., None]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "sr", "type": "module"}, {"lineNumber": 586, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 586, "col_offset": 29, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 588, "col_offset": 19, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 596, "col_offset": 26, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 596, "col_offset": 46, "nodeName": "write_summary_file_mock", "type": "Any"}, {"lineNumber": 597, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 597, "col_offset": 33, "nodeName": "list_of_input_files", "type": "List[str]"}, {"lineNumber": 598, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 598, "col_offset": 38, "nodeName": "summary_file_name", "type": "str"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 620, "col_offset": 29, "nodeName": "create_autospec", "type": "Callable[..., Any]"}, {"lineNumber": 620, "col_offset": 45, "nodeName": "run_configuration", "type": "Callable[..., List[str]]"}, {"lineNumber": 621, "col_offset": 4, "nodeName": "rex", "type": "module"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 624, "col_offset": 29, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 625, "col_offset": 20, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 626, "col_offset": 20, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 632, "col_offset": 7, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 656, "col_offset": 4, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 656, "col_offset": 26, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 656, "col_offset": 46, "nodeName": "run_configuration_mock", "type": "Any"}, {"lineNumber": 663, "col_offset": 7, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 673, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 675, "col_offset": 37, "nodeName": "resume", "type": "Any"}, {"lineNumber": 682, "col_offset": 20, "nodeName": "product", "type": "Callable"}, {"lineNumber": 704, "col_offset": 19, "nodeName": "EXT_TO_READER", "type": "Dict[str, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 705, "col_offset": 19, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 708, "col_offset": 13, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 708, "col_offset": 28, "nodeName": "extension", "type": "Any"}, {"lineNumber": 709, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 709, "col_offset": 29, "nodeName": "extension", "type": "Any"}, {"lineNumber": 712, "col_offset": 4, "nodeName": "fs", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 712, "col_offset": 12, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 714, "col_offset": 19, "nodeName": "infile", "type": "str"}, {"lineNumber": 714, "col_offset": 27, "nodeName": "outfile", "type": "str"}, {"lineNumber": 716, "col_offset": 7, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 717, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "f", "type": "str"}, {"lineNumber": 724, "col_offset": 17, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 764, "col_offset": 44, "nodeName": "read_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 766, "col_offset": 65, "nodeName": "filter_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 768, "col_offset": 47, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 774, "col_offset": 48, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 775, "col_offset": 52, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 776, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 803, "col_offset": 39, "nodeName": "product", "type": "Callable"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "writers", "type": "module"}, {"lineNumber": 831, "col_offset": 13, "nodeName": "join", "type": "Callable"}, {"lineNumber": 831, "col_offset": 18, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 835, "col_offset": 4, "nodeName": "fs", "type": "Any"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 835, "col_offset": 12, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 837, "col_offset": 13, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 837, "col_offset": 26, "nodeName": "infile", "type": "str"}, {"lineNumber": 837, "col_offset": 34, "nodeName": "fs", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 840, "col_offset": 19, "nodeName": "infile", "type": "str"}, {"lineNumber": 840, "col_offset": 27, "nodeName": "outfile", "type": "str"}, {"lineNumber": 842, "col_offset": 7, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 843, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 850, "col_offset": 12, "nodeName": "f", "type": "str"}, {"lineNumber": 850, "col_offset": 17, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 888, "col_offset": 62, "nodeName": "filter_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 890, "col_offset": 47, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 891, "col_offset": 66, "nodeName": "write_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 896, "col_offset": 52, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 897, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 920, "col_offset": 28, "nodeName": "product", "type": "Callable"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 976, "col_offset": 12, "nodeName": "cmd_args", "type": "Any"}, {"lineNumber": 982, "col_offset": 25, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 984, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 999, "col_offset": 19, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 1002, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1002, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 1003, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 1003, "col_offset": 19, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 1004, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1004, "col_offset": 29, "nodeName": "extension", "type": "Any"}, {"lineNumber": 1007, "col_offset": 4, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 1007, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 1007, "col_offset": 13, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 1010, "col_offset": 4, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 1010, "col_offset": 9, "nodeName": "_", "type": "Any"}, {"lineNumber": 1010, "col_offset": 13, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 1015, "col_offset": 19, "nodeName": "infile1", "type": "str"}, {"lineNumber": 1015, "col_offset": 28, "nodeName": "infile2", "type": "str"}, {"lineNumber": 1015, "col_offset": 37, "nodeName": "outfile", "type": "str"}, {"lineNumber": 1017, "col_offset": 7, "nodeName": "extension", "type": "Any"}, {"lineNumber": 1018, "col_offset": 8, "nodeName": "writer1", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1020, "col_offset": 8, "nodeName": "writer2", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1025, "col_offset": 8, "nodeName": "writer1", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1026, "col_offset": 8, "nodeName": "writer2", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "write", "type": "Callable[[], None]"}, {"lineNumber": 1038, "col_offset": 63, "nodeName": "add_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1040, "col_offset": 47, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1041, "col_offset": 66, "nodeName": "write_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1046, "col_offset": 46, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 1047, "col_offset": 50, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 1062, "col_offset": 49, "nodeName": "product", "type": "Callable"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1119, "col_offset": 4, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1119, "col_offset": 12, "nodeName": "cmd_args", "type": "Any"}, {"lineNumber": 1125, "col_offset": 22, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 1127, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1135, "col_offset": 22, "nodeName": "combinations", "type": "Callable"}, {"lineNumber": 1137, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "_DEFAULT_PARAM_GRIDS", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "model_chunk", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "f", "type": "str"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "join", "type": "Callable"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "unlink", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "ffile", "type": "str"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "score", "type": "str"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "score", "type": "str"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "score", "type": "str"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "score", "type": "str"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 187, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 189, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "compute_eval_from_predictions_cmd", "type": "List[str]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "score", "type": "str"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "pred_path", "type": "str"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 201, "col_offset": 36, "nodeName": "score", "type": "str"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "scores", "type": "Dict[str, float]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "cefp", "type": "module"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "use_feature_hashing", "type": "Any"}, {"lineNumber": 232, "col_offset": 51, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 238, "col_offset": 18, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "gp", "type": "module"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "threshold", "type": "Optional[float]"}, {"lineNumber": 257, "col_offset": 31, "nodeName": "p", "type": "skll.utilities.generate_predictions.Predictor"}, {"lineNumber": 267, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 10, "nodeName": "check_generate_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.NDJWriter"}, {"lineNumber": 286, "col_offset": 51, "nodeName": "use_threshold", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "model_file", "type": "str"}, {"lineNumber": 312, "col_offset": 37, "nodeName": "input_file", "type": "str"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 320, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "predictions_after_saving", "type": "List[int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 337, "col_offset": 10, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 10, "nodeName": "check_generate_predictions_console", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 349, "col_offset": 60, "nodeName": "from_suffix", "type": "Any"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 351, "col_offset": 59, "nodeName": "to_suffix", "type": "Any"}, {"lineNumber": 353, "col_offset": 13, "nodeName": "EXT_TO_WRITER", "type": "Dict[str, Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "writer", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 362, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 363, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 371, "col_offset": 13, "nodeName": "EXT_TO_READER", "type": "Dict[str, Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]]"}, {"lineNumber": 372, "col_offset": 19, "nodeName": "reader", "type": "Union[skll.data.readers.ARFFReader, skll.data.readers.CSVReader, skll.data.readers.LibSVMReader, skll.data.readers.MegaMReader, skll.data.readers.NDJReader, skll.data.readers.TSVReader]"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "itertools", "type": "module"}, {"lineNumber": 400, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.LibSVMWriter"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 410, "col_offset": 10, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.MegaMWriter"}, {"lineNumber": 431, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 432, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "skll_convert_cmd", "type": "List[str]"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 437, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "reader", "type": "skll.data.readers.LibSVMReader"}, {"lineNumber": 451, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 451, "col_offset": 35, "nodeName": "task", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 452, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 453, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 460, "col_offset": 7, "nodeName": "task", "type": "Any"}, {"lineNumber": 460, "col_offset": 35, "nodeName": "task", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 462, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 463, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 483, "col_offset": 21, "nodeName": "sys", "type": "module"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 484, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 485, "col_offset": 32, "nodeName": "StringIO", "type": "Type[io.StringIO]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 486, "col_offset": 17, "nodeName": "print_model_weights_cmd", "type": "List[str]"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "sys", "type": "module"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 14, "nodeName": "err", "type": "str"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "intercept", "type": "int"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 505, "col_offset": 48, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 506, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "intercept_string", "type": "str"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "feature_values", "type": "List[Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 566, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 567, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 569, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 570, "col_offset": 10, "nodeName": "check_print_model_weights", "type": "Callable[..., Any]"}, {"lineNumber": 589, "col_offset": 4, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "sr", "type": "module"}, {"lineNumber": 592, "col_offset": 17, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 599, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 599, "col_offset": 43, "nodeName": "use_ablation", "type": "Any"}, {"lineNumber": 603, "col_offset": 10, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 604, "col_offset": 10, "nodeName": "check_summarize_results_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 628, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 628, "col_offset": 33, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 652, "col_offset": 4, "nodeName": "rex", "type": "module"}, {"lineNumber": 652, "col_offset": 18, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 661, "col_offset": 37, "nodeName": "config_file1_name", "type": "str"}, {"lineNumber": 664, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 669, "col_offset": 40, "nodeName": "local", "type": "Any"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 671, "col_offset": 40, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 673, "col_offset": 44, "nodeName": "keep_models", "type": "Any"}, {"lineNumber": 674, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 704, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 705, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 718, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 727, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 728, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 735, "col_offset": 12, "nodeName": "idee", "type": "str"}, {"lineNumber": 735, "col_offset": 20, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 749, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 749, "col_offset": 30, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 750, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 750, "col_offset": 36, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 763, "col_offset": 9, "nodeName": "object", "type": "Callable"}, {"lineNumber": 763, "col_offset": 22, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 765, "col_offset": 25, "nodeName": "reader_class", "type": "Union[Type[skll.data.readers.ARFFReader], Type[skll.data.readers.CSVReader], Type[skll.data.readers.LibSVMReader], Type[skll.data.readers.MegaMReader], Type[skll.data.readers.NDJReader], Type[skll.data.readers.TSVReader]]"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 766, "col_offset": 25, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 767, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 769, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "read_pos_arguments", "type": "Any"}, {"lineNumber": 774, "col_offset": 28, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 774, "col_offset": 48, "nodeName": "read_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 775, "col_offset": 30, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 775, "col_offset": 52, "nodeName": "filter_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 776, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 776, "col_offset": 50, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 779, "col_offset": 35, "nodeName": "infile", "type": "str"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 780, "col_offset": 40, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 781, "col_offset": 44, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 782, "col_offset": 41, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 784, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 785, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 790, "col_offset": 37, "nodeName": "fs", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 791, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 793, "col_offset": 11, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "data", "type": "module"}, {"lineNumber": 837, "col_offset": 48, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 837, "col_offset": 66, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 838, "col_offset": 4, "nodeName": "writer", "type": "skll.data.writers.ARFFWriter"}, {"lineNumber": 844, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 853, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 854, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 861, "col_offset": 12, "nodeName": "idee", "type": "str"}, {"lineNumber": 861, "col_offset": 20, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 875, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 875, "col_offset": 30, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 876, "col_offset": 4, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 876, "col_offset": 36, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 888, "col_offset": 9, "nodeName": "object", "type": "Callable"}, {"lineNumber": 888, "col_offset": 22, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 889, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 889, "col_offset": 25, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 891, "col_offset": 25, "nodeName": "writer_class", "type": "Type[skll.data.writers.ARFFWriter]"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 896, "col_offset": 8, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 896, "col_offset": 30, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 896, "col_offset": 52, "nodeName": "filter_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 897, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 897, "col_offset": 50, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 900, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 900, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 901, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 907, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 907, "col_offset": 37, "nodeName": "fs", "type": "Any"}, {"lineNumber": 908, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 908, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 910, "col_offset": 11, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 938, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 938, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 948, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 948, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 958, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 958, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 967, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 967, "col_offset": 17, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "ff", "type": "module"}, {"lineNumber": 999, "col_offset": 33, "nodeName": "extension", "type": "Any"}, {"lineNumber": 1002, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1002, "col_offset": 68, "nodeName": "extension", "type": "Any"}, {"lineNumber": 1003, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1003, "col_offset": 68, "nodeName": "extension", "type": "Any"}, {"lineNumber": 1018, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1018, "col_offset": 31, "nodeName": "infile1", "type": "str"}, {"lineNumber": 1018, "col_offset": 40, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 1020, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1020, "col_offset": 31, "nodeName": "infile2", "type": "str"}, {"lineNumber": 1020, "col_offset": 40, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 1025, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1025, "col_offset": 31, "nodeName": "infile1", "type": "str"}, {"lineNumber": 1025, "col_offset": 40, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 1026, "col_offset": 18, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1026, "col_offset": 31, "nodeName": "infile2", "type": "str"}, {"lineNumber": 1026, "col_offset": 40, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "writer1", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "writer2", "type": "Union[skll.data.writers.ARFFWriter, skll.data.writers.CSVWriter, skll.data.writers.LibSVMWriter, skll.data.writers.MegaMWriter, skll.data.writers.NDJWriter, skll.data.writers.TSVWriter]"}, {"lineNumber": 1032, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 1038, "col_offset": 9, "nodeName": "object", "type": "Callable"}, {"lineNumber": 1038, "col_offset": 22, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 1039, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 1039, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1041, "col_offset": 12, "nodeName": "object", "type": "Callable"}, {"lineNumber": 1041, "col_offset": 25, "nodeName": "writer_class", "type": "Union[Type[skll.data.writers.ARFFWriter], Type[skll.data.writers.CSVWriter], Type[skll.data.writers.LibSVMWriter], Type[skll.data.writers.MegaMWriter], Type[skll.data.writers.NDJWriter], Type[skll.data.writers.TSVWriter]]"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 1046, "col_offset": 8, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 1046, "col_offset": 27, "nodeName": "add_kw_arguments", "type": "Any"}, {"lineNumber": 1046, "col_offset": 46, "nodeName": "add_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 1047, "col_offset": 29, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 1047, "col_offset": 50, "nodeName": "write_init_mock", "type": "Union[mock.MagicMock, unittest.mock.MagicMock]"}, {"lineNumber": 1050, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 1050, "col_offset": 36, "nodeName": "outfile", "type": "str"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 1051, "col_offset": 41, "nodeName": "quiet", "type": "Any"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 1057, "col_offset": 34, "nodeName": "fs1", "type": "Any"}, {"lineNumber": 1058, "col_offset": 8, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 1058, "col_offset": 34, "nodeName": "fs2", "type": "Any"}, {"lineNumber": 1080, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 1080, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 1090, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1100, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 1100, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1110, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 1110, "col_offset": 17, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1119, "col_offset": 4, "nodeName": "jf", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 100, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "other_dir", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "cefp", "type": "module"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 137, "col_offset": 40, "nodeName": "score_row", "type": "str"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "cefp", "type": "module"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "score_row", "type": "str"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "cefp", "type": "module"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 200, "col_offset": 40, "nodeName": "score_row", "type": "str"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "metric_name", "type": "str"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 244, "col_offset": 55, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 298, "col_offset": 50, "nodeName": "p", "type": "Any"}, {"lineNumber": 298, "col_offset": 55, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 300, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "generate_cmd", "type": "List[str]"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 311, "col_offset": 43, "nodeName": "threshold", "type": "Optional[float]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "gp", "type": "module"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 323, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 324, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 324, "col_offset": 40, "nodeName": "x", "type": "str"}, {"lineNumber": 324, "col_offset": 47, "nodeName": "x", "type": "str"}, {"lineNumber": 353, "col_offset": 27, "nodeName": "from_suffix", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "sk", "type": "module"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 371, "col_offset": 27, "nodeName": "to_suffix", "type": "Any"}, {"lineNumber": 384, "col_offset": 14, "nodeName": "check_skll_convert", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "from_suffix", "type": "str"}, {"lineNumber": 384, "col_offset": 47, "nodeName": "to_suffix", "type": "str"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "swapped_fs", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "sk", "type": "module"}, {"lineNumber": 434, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 454, "col_offset": 22, "nodeName": "make_classification_data", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "make_regression_data", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 464, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 466, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "pmw", "type": "module"}, {"lineNumber": 487, "col_offset": 14, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 488, "col_offset": 14, "nodeName": "mystderr", "type": "io.StringIO"}, {"lineNumber": 497, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 497, "col_offset": 60, "nodeName": "l", "type": "str"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 503, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 503, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 510, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 512, "col_offset": 32, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "weights", "type": "List[Tuple[str, int]]"}, {"lineNumber": 520, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 520, "col_offset": 40, "nodeName": "feature_values", "type": "List[Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 523, "col_offset": 19, "nodeName": "weights", "type": "Any"}, {"lineNumber": 523, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 526, "col_offset": 34, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 526, "col_offset": 45, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 527, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "intercept", "type": "int"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 531, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "sr_cmd_args", "type": "List[str]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 629, "col_offset": 29, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 630, "col_offset": 29, "nodeName": "config_file2_name", "type": "str"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "rex_cmd_args", "type": "List[str]"}, {"lineNumber": 648, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 659, "col_offset": 37, "nodeName": "config_files", "type": "List[str]"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "positional_arguments", "type": "Any"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 664, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 664, "col_offset": 47, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 666, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 669, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 671, "col_offset": 12, "nodeName": "keyword_arguments", "type": "Any"}, {"lineNumber": 688, "col_offset": 15, "nodeName": "check_run_experiments_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 688, "col_offset": 47, "nodeName": "multiple_config_files", "type": "bool"}, {"lineNumber": 689, "col_offset": 15, "nodeName": "n_ablated_features", "type": "str"}, {"lineNumber": 689, "col_offset": 35, "nodeName": "keep_models", "type": "bool"}, {"lineNumber": 689, "col_offset": 48, "nodeName": "local", "type": "bool"}, {"lineNumber": 689, "col_offset": 55, "nodeName": "resume", "type": "bool"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 725, "col_offset": 31, "nodeName": "f", "type": "str"}, {"lineNumber": 729, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 731, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 738, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 746, "col_offset": 12, "nodeName": "lbl", "type": "str"}, {"lineNumber": 746, "col_offset": 19, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 763, "col_offset": 9, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 765, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 765, "col_offset": 75, "nodeName": "fs", "type": "Any"}, {"lineNumber": 766, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 767, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 769, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "ff", "type": "module"}, {"lineNumber": 771, "col_offset": 21, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 779, "col_offset": 12, "nodeName": "read_pos_arguments", "type": "Any"}, {"lineNumber": 780, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 781, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 782, "col_offset": 12, "nodeName": "read_kw_arguments", "type": "Any"}, {"lineNumber": 784, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 785, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 790, "col_offset": 12, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 791, "col_offset": 12, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 794, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 794, "col_offset": 49, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 795, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 813, "col_offset": 15, "nodeName": "check_filter_features_no_arff_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 813, "col_offset": 55, "nodeName": "extension", "type": "str"}, {"lineNumber": 814, "col_offset": 15, "nodeName": "filter_type", "type": "str"}, {"lineNumber": 814, "col_offset": 28, "nodeName": "label_col", "type": "str"}, {"lineNumber": 814, "col_offset": 39, "nodeName": "id_col", "type": "str"}, {"lineNumber": 814, "col_offset": 47, "nodeName": "inverse", "type": "bool"}, {"lineNumber": 814, "col_offset": 56, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 828, "col_offset": 19, "nodeName": "skll", "type": "module"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 851, "col_offset": 31, "nodeName": "f", "type": "str"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 864, "col_offset": 9, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 865, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 872, "col_offset": 12, "nodeName": "lbl", "type": "str"}, {"lineNumber": 872, "col_offset": 19, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 879, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 882, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 888, "col_offset": 9, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 889, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 893, "col_offset": 8, "nodeName": "ff", "type": "module"}, {"lineNumber": 893, "col_offset": 21, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 900, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 901, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 907, "col_offset": 12, "nodeName": "filter_pos_arguments", "type": "Any"}, {"lineNumber": 908, "col_offset": 12, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 911, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 911, "col_offset": 49, "nodeName": "features_to_keep", "type": "List[str]"}, {"lineNumber": 912, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 927, "col_offset": 15, "nodeName": "check_filter_features_arff_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 927, "col_offset": 52, "nodeName": "filter_type", "type": "str"}, {"lineNumber": 928, "col_offset": 15, "nodeName": "label_col", "type": "str"}, {"lineNumber": 928, "col_offset": 26, "nodeName": "id_col", "type": "str"}, {"lineNumber": 928, "col_offset": 34, "nodeName": "inverse", "type": "bool"}, {"lineNumber": 928, "col_offset": 43, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 984, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 984, "col_offset": 38, "nodeName": "inext", "type": "str"}, {"lineNumber": 984, "col_offset": 46, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 984, "col_offset": 61, "nodeName": "outext", "type": "str"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "check_filter_features_raises_system_exit", "type": "Any"}, {"lineNumber": 986, "col_offset": 56, "nodeName": "ff_cmd_args", "type": "List[str]"}, {"lineNumber": 1018, "col_offset": 55, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 1019, "col_offset": 38, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 1020, "col_offset": 55, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 1021, "col_offset": 38, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 1022, "col_offset": 34, "nodeName": "label_col", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 1023, "col_offset": 40, "nodeName": "id_col", "type": "Any"}, {"lineNumber": 1032, "col_offset": 8, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 1038, "col_offset": 9, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 1039, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 1041, "col_offset": 12, "nodeName": "patch", "type": "Union[mock._patcher, unittest.mock._patcher]"}, {"lineNumber": 1043, "col_offset": 8, "nodeName": "jf", "type": "module"}, {"lineNumber": 1043, "col_offset": 21, "nodeName": "jf_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 1050, "col_offset": 12, "nodeName": "write_pos_arguments", "type": "Any"}, {"lineNumber": 1051, "col_offset": 12, "nodeName": "write_kw_arguments", "type": "Any"}, {"lineNumber": 1057, "col_offset": 12, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 1058, "col_offset": 12, "nodeName": "add_pos_arguments", "type": "Any"}, {"lineNumber": 1069, "col_offset": 15, "nodeName": "check_join_features_argparse", "type": "Callable[..., Any]"}, {"lineNumber": 1069, "col_offset": 45, "nodeName": "extension", "type": "str"}, {"lineNumber": 1069, "col_offset": 56, "nodeName": "label_col", "type": "str"}, {"lineNumber": 1069, "col_offset": 67, "nodeName": "id_col", "type": "str"}, {"lineNumber": 1070, "col_offset": 15, "nodeName": "quiet", "type": "bool"}, {"lineNumber": 1127, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1127, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 1127, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1127, "col_offset": 60, "nodeName": "ext2", "type": "str"}, {"lineNumber": 1128, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1128, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 1129, "col_offset": 14, "nodeName": "check_join_features_raises_system_exit", "type": "Any"}, {"lineNumber": 1129, "col_offset": 54, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 1137, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1137, "col_offset": 38, "nodeName": "ext1", "type": "str"}, {"lineNumber": 1137, "col_offset": 45, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1137, "col_offset": 60, "nodeName": "ext1", "type": "str"}, {"lineNumber": 1138, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 1138, "col_offset": 38, "nodeName": "ext2", "type": "str"}, {"lineNumber": 1139, "col_offset": 14, "nodeName": "check_join_features_raises_system_exit", "type": "Any"}, {"lineNumber": 1139, "col_offset": 54, "nodeName": "jf_cmd_args", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "threshold", "type": "float"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "threshold", "type": "float"}, {"lineNumber": 324, "col_offset": 52, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 467, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 470, "col_offset": 18, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "train_fs", "type": "Any"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 501, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 503, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 503, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 510, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 510, "col_offset": 60, "nodeName": "l", "type": "str"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "feature_values", "type": "List[Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 524, "col_offset": 38, "nodeName": "weights", "type": "Any"}, {"lineNumber": 526, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 528, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 531, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 532, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 535, "col_offset": 28, "nodeName": "intercept", "type": "int"}, {"lineNumber": 535, "col_offset": 39, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 536, "col_offset": 48, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 537, "col_offset": 9, "nodeName": "task", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "intercept", "type": "int"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "intercept_list", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "intercept_string", "type": "Any"}, {"lineNumber": 552, "col_offset": 32, "nodeName": "intercept_list", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "ltp", "type": "str"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 633, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 633, "col_offset": 47, "nodeName": "n_ablated_features", "type": "Any"}, {"lineNumber": 648, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 648, "col_offset": 49, "nodeName": "machine_list", "type": "List[str]"}, {"lineNumber": 725, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 736, "col_offset": 31, "nodeName": "idee", "type": "str"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 794, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 796, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 796, "col_offset": 44, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 851, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 859, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 862, "col_offset": 31, "nodeName": "idee", "type": "str"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 868, "col_offset": 12, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 911, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 913, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 913, "col_offset": 44, "nodeName": "ids_to_keep", "type": "List[str]"}, {"lineNumber": 914, "col_offset": 13, "nodeName": "filter_type", "type": "Any"}, {"lineNumber": 244, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 298, "col_offset": 27, "nodeName": "p", "type": "Any"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 502, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 502, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 504, "col_offset": 39, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 513, "col_offset": 29, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 517, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 521, "col_offset": 27, "nodeName": "index", "type": "int"}, {"lineNumber": 521, "col_offset": 37, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 521, "col_offset": 46, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 523, "col_offset": 40, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 524, "col_offset": 47, "nodeName": "feature_values", "type": "List[Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 526, "col_offset": 45, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 528, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 528, "col_offset": 60, "nodeName": "l", "type": "str"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 534, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 534, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 535, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 538, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 541, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "intercept", "type": "int"}, {"lineNumber": 545, "col_offset": 39, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 546, "col_offset": 45, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 548, "col_offset": 26, "nodeName": "l", "type": "str"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "literal_eval", "type": "Callable[[Union[str, _ast.AST]], Any]"}, {"lineNumber": 556, "col_offset": 19, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 561, "col_offset": 34, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 45, "nodeName": "intercept_", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 562, "col_offset": 24, "nodeName": "coef_", "type": "Any"}, {"lineNumber": 562, "col_offset": 45, "nodeName": "feature_values", "type": "List[int]"}, {"lineNumber": 729, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 729, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 729, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 731, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 731, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 731, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 736, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 747, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 747, "col_offset": 31, "nodeName": "lbl", "type": "str"}, {"lineNumber": 796, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 798, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 798, "col_offset": 47, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 855, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 855, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 855, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 857, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 857, "col_offset": 47, "nodeName": "x", "type": "int"}, {"lineNumber": 857, "col_offset": 54, "nodeName": "x", "type": "int"}, {"lineNumber": 862, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 870, "col_offset": 8, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 873, "col_offset": 31, "nodeName": "lbl", "type": "str"}, {"lineNumber": 913, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 915, "col_offset": 12, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 915, "col_offset": 47, "nodeName": "labels_to_keep", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], str]"}, {"lineNumber": 324, "col_offset": 52, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 497, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 502, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 510, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "feature_values", "type": "List[Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 518, "col_offset": 51, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 518, "col_offset": 62, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 521, "col_offset": 51, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 521, "col_offset": 58, "nodeName": "weights", "type": "List[Tuple[str, int]]"}, {"lineNumber": 524, "col_offset": 62, "nodeName": "index", "type": "int"}, {"lineNumber": 529, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 532, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 533, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 534, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 535, "col_offset": 39, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 538, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 538, "col_offset": 56, "nodeName": "l", "type": "str"}, {"lineNumber": 542, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 544, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 544, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 545, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "l", "type": "str"}, {"lineNumber": 548, "col_offset": 56, "nodeName": "l", "type": "str"}, {"lineNumber": 550, "col_offset": 25, "nodeName": "ast", "type": "module"}, {"lineNumber": 550, "col_offset": 42, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 559, "col_offset": 26, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 559, "col_offset": 35, "nodeName": "t", "type": "Tuple[str, int]"}, {"lineNumber": 561, "col_offset": 45, "nodeName": "model", "type": "Any"}, {"lineNumber": 562, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 729, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 731, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 747, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 798, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 855, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 857, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 873, "col_offset": 12, "nodeName": "ff_cmd_args", "type": "List[Union[str, Any]]"}, {"lineNumber": 915, "col_offset": 16, "nodeName": "filter_kw_arguments", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "mystdout", "type": "io.StringIO"}, {"lineNumber": 324, "col_offset": 52, "nodeName": "out", "type": "str"}, {"lineNumber": 510, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 513, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 518, "col_offset": 73, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 533, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 533, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 536, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 538, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 542, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 544, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 544, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 545, "col_offset": 39, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 548, "col_offset": 37, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "intercept", "type": "List[int]"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "intercept_string", "type": "Any"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "ltp", "type": "str"}, {"lineNumber": 558, "col_offset": 12, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 559, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 559, "col_offset": 47, "nodeName": "feature_values", "type": "List[Tuple[str, int]]"}, {"lineNumber": 561, "col_offset": 45, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 562, "col_offset": 24, "nodeName": "learner", "type": "skll.learner.Learner"}, {"lineNumber": 513, "col_offset": 40, "nodeName": "intercept_string", "type": "str"}, {"lineNumber": 518, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 529, "col_offset": 31, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 533, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 538, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 543, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 543, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 548, "col_offset": 37, "nodeName": "out", "type": "str"}, {"lineNumber": 558, "col_offset": 35, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 558, "col_offset": 46, "nodeName": "safe_float", "type": "Callable[..., int]"}, {"lineNumber": 518, "col_offset": 31, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 539, "col_offset": 31, "nodeName": "lines_to_parse", "type": "List[str]"}, {"lineNumber": 543, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 550, "col_offset": 42, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 558, "col_offset": 57, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 550, "col_offset": 42, "nodeName": "lines_to_parse", "type": "List[str]"}]