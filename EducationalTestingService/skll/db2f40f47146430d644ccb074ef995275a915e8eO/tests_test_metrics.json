[{"lineNumber": 35, "col_offset": 0, "nodeName": "setup", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_quadratic_weighted_kappa", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_allow_off_by_one_qwk", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_linear_weighted_kappa", "type": "Callable[[], Any]"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "test_unweighted_kappa", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "test_invalid_weighted_kappa", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_invalid_lists_kappa", "type": "Callable[[], Any]"}, {"lineNumber": 173, "col_offset": 0, "nodeName": "check_invalid_regr_grid_obj_func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 0, "nodeName": "test_invalid_grid_obj_func", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "_ALL_MODELS", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "SCORE_OUTPUT_RE", "type": "Pattern[str]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "GRID_RE", "type": "Pattern[str]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 32, "col_offset": 10, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "row", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "weightdict", "type": "Dict[Any, Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "clf", "type": "skll.learner.Learner"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "grid_search_score", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "model", "type": "str"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "re", "type": "module"}, {"lineNumber": 31, "col_offset": 10, "nodeName": "re", "type": "module"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "__file__", "type": "str"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "_my_dir", "type": "str"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 66, "nodeName": "expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 82, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 82, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 106, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "expected", "type": "float"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "kappa_inputs", "type": "List[Tuple[List[int], List[int]]]"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "outputs", "type": "List[float]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "kappa", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "kappa", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "kappa", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "make_regression", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "train_ids", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "test_ids", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "use_feature_hashing", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "FeatureSet", "type": "Type[skll.data.featureset.FeatureSet]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "test_ids", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "train_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "test_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "weightdict", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 5, "nodeName": "train_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "_", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 179, "col_offset": 18, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "make_regression_data", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 10, "nodeName": "Learner", "type": "Type[skll.learner.Learner]"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "learner_name", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "train_fs", "type": "skll.data.featureset.FeatureSet"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "metric", "type": "str"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "_DEFAULT_PARAM_GRIDS", "type": "Dict[Any, Any]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "train_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "test_dir", "type": "str"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "kappa", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "y_true", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "y_pred", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 9, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 9, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 94, "col_offset": 9, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 98, "col_offset": 9, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 9, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "num_features", "type": "Any"}, {"lineNumber": 134, "col_offset": 42, "nodeName": "sd_noise", "type": "Any"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "n", "type": "int"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "n", "type": "int"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "n", "type": "int"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "feature_names", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "weights", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "round", "type": "Callable"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "y", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 52, "nodeName": "ids", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "train_ids", "type": "List[str]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "train_features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 167, "col_offset": 50, "nodeName": "test_features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "vectorizer", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "clf", "type": "skll.learner.Learner"}, {"lineNumber": 181, "col_offset": 59, "nodeName": "grid_objective_function", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "weights", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "allow_off_by_one", "type": "Any"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 71, "col_offset": 63, "nodeName": "expected", "type": "float"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 63, "nodeName": "expected", "type": "float"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 62, "nodeName": "expected", "type": "float"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "expected", "type": "float"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "expected", "type": "float"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "expected", "type": "float"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 56, "nodeName": "expected", "type": "float"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "check_kappa", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "y_true", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "y_pred", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 56, "nodeName": "expected", "type": "float"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "start_feature_num", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "features", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "train_test_ratio", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "num_train_examples", "type": "int"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "num_examples", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "start_feature_num", "type": "Any"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "num_features", "type": "Any"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "feature_names", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "check_invalid_regr_grid_obj_func", "type": "Any"}, {"lineNumber": 200, "col_offset": 52, "nodeName": "model", "type": "str"}, {"lineNumber": 200, "col_offset": 59, "nodeName": "metric", "type": "str"}]