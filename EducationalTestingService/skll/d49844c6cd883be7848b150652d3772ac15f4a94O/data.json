[{"lineNumber": 38, "col_offset": 0, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "load_examples", "type": "Callable[..., Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "_preprocess_tsv_row", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "char", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "line_count", "type": "int"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "x", "type": "Dict[unicode, float]"}, {"lineNumber": 156, "col_offset": 7, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "example_id", "type": "unicode"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "char_num", "type": "int"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "join", "type": "Callable[[Union[bytearray, Iterable[basestring], Iterable[Any]]], unicode]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "curr_id", "type": "None"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "megam_file", "type": "file"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "out", "type": "List[nothing]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "out", "type": "Union[List[Dict[unicode, Optional[Union[unicode, Dict[Any, Any]]]]], List[Any], List[Dict[unicode, Optional[Union[str, Dict[unicode, float], unicode]]]]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "feature_start_col", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "y", "type": "None"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "feature_start_col", "type": "int"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "example_num", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "y", "type": "Optional[Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "x", "type": "Dict[unicode, float]"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "example_id", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "ord", "type": "Callable[[Union[str, unicode]], int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "char", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "encode", "type": "Callable[..., str]"}, {"lineNumber": 60, "col_offset": 69, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "path", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "unicode_markup", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "line", "type": "unicode"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "line_count", "type": "int"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "path", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "f", "type": "file"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "row", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "header", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "feature_start_col", "type": "int"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "row", "type": "Any"}, {"lineNumber": 165, "col_offset": 39, "nodeName": "feature_start_col", "type": "int"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "fname", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "example_id", "type": "Any"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "fval", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "char_list", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 73, "nodeName": "char", "type": "Any"}, {"lineNumber": 60, "col_offset": 69, "nodeName": "sys", "type": "module"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "_sanitize_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "curr_id", "type": "unicode"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "f", "type": "file"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "next", "type": "Callable"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "f", "type": "file"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "example_num", "type": "int"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "f", "type": "file"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "fval", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 172, "col_offset": 40, "nodeName": "fval_float", "type": "float"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "char_num", "type": "int"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "char_num", "type": "int"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "UnicodeDammit", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "line", "type": "str"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "strip", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "line", "type": "unicode"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "line", "type": "unicode"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "has_labels", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "curr_id", "type": "None"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "line_count", "type": "int"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "sys", "type": "module"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "excel_tab", "type": "Type[csv.excel_tab]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "example", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "example_num", "type": "int"}, {"lineNumber": 129, "col_offset": 9, "nodeName": "path", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "x", "type": "Dict[unicode, float]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "line", "type": "Any"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "class_name", "type": "unicode"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "class_name", "type": "None"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 114, "col_offset": 43, "nodeName": "csv", "type": "module"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "example_num", "type": "int"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "row", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 118, "col_offset": 53, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "example", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "example", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "line", "type": "unicode"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "line", "type": "unicode"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "split_line", "type": "List[unicode]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "update", "type": "Callable"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "curr_id", "type": "None"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "class_name", "type": "Optional[unicode]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "sys", "type": "module"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "example", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "example_num", "type": "int"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "out", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "path", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "format", "type": "Callable[..., unicode]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "fname", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "val", "type": "unicode"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "val", "type": "unicode"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "curr_info_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "field_names", "type": "Iterator[unicode]"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "field_values", "type": "Generator[float, Any, None]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "line", "type": "str"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "_megam_dict_iter", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "path", "type": "Any"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "islice", "type": "Callable"}, {"lineNumber": 87, "col_offset": 65, "nodeName": "field_pairs", "type": "List[unicode]"}, {"lineNumber": 135, "col_offset": 62, "nodeName": "has_labels", "type": "Any"}]