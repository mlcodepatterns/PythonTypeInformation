[{"lineNumber": 22, "col_offset": 0, "nodeName": "test_calculate_bartlett_sphericity", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_calculate_kmo", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "expected_by_item", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "p", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "calculate_bartlett_sphericity", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 46, "col_offset": 5, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 47, "col_offset": 5, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "calculate_kmo", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "expected_by_item", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "expected_weights", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "expected_r2", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "loadings_", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "variance", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "expected_weights", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "weights_", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 95, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "dropna", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "smc", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "expected_r2", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "variance", "type": "Any"}, {"lineNumber": 175, "col_offset": 52, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "get_factor_variance", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "corr", "type": "Any"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "data", "type": "Any"}]