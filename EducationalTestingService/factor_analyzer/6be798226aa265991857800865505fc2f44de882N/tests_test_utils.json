[{"lineNumber": 21, "col_offset": 0, "nodeName": "test_unique_elements", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_fill_lower_diag", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "test_merge_variance_covariance_no_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_merge_variance_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "test_get_first_idxs_from_values", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "test_get_free_parameter_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "test_duplication_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "test_duplication_matrix_pre_post", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "test_commutation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "unique_elements", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "fill_lower_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "get_first_idxs_from_values", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "get_free_parameter_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "duplication_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "duplication_matrix_pre_post", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "commutation_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "nan", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "nan", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "nan", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "np", "type": "module"}]