[{"lineNumber": 22, "col_offset": 0, "nodeName": "test_calculate_bartlett_sphericity", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "test_calculate_kmo", "type": "Callable[[], Any]"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "test_covariance_to_correlation", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_covariance_to_correlation_value_error", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "test_partial_correlations", "type": "Callable[[], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "test_partial_correlations_num_columns_greater", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "test_partial_correlations_catch_linalgerror", "type": "Callable[[], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "expected_by_item", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "values", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "corr", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "expected", "type": "List[List[float]]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "p", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "calculate_bartlett_sphericity", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 52, "col_offset": 5, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 53, "col_offset": 5, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "calculate_kmo", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "expected_by_item", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "covariance_to_correlation", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "values", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "covariance_to_correlation", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "expected", "type": "List[List[float]]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "expected_r2", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "variance", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "corr", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 148, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "dropna", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 178, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 187, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 239, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "smc", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "expected_r2", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 262, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "analyze", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 273, "col_offset": 41, "nodeName": "variance", "type": "Any"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "loc", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 279, "col_offset": 28, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 279, "col_offset": 60, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "cov", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "get_factor_variance", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 274, "col_offset": 32, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}]