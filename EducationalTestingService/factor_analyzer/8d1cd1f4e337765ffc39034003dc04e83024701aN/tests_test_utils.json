[{"lineNumber": 27, "col_offset": 0, "nodeName": "test_unique_elements", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_fill_lower_diag", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "test_merge_variance_covariance_no_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "test_merge_variance_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "test_get_first_idxs_from_values", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "test_get_free_parameter_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "test_duplication_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "test_duplication_matrix_pre_post", "type": "Callable[[], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "test_commutation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "unique_elements", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "fill_lower_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "get_first_idxs_from_values", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "get_free_parameter_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 89, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "duplication_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "duplication_matrix_pre_post", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "commutation_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "nan", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "nan", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "nan", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "np", "type": "module"}]