[{"lineNumber": 26, "col_offset": 0, "nodeName": "test_calculate_bartlett_sphericity", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "test_calculate_kmo", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_gridsearch", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "test_analyze_weights", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_analyze_impute_mean", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_analyze_impute_median", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_analyze_impute_drop", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "test_analyze_bad_svd_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_analyze_impute_value_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_analyze_rotation_value_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_analyze_infinite", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_smc_is_r_squared", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_factor_variance", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "expected_by_item", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "fa", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "decisiontree", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "p", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "calculate_bartlett_sphericity", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "values", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "calculate_kmo", "type": "Any"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "values", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "expected_by_item", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "Series", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "DecisionTreeClassifier", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "make_pipeline", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "fa", "type": "Any"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "decisiontree", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "GridSearchCV", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "grid", "type": "Dict[str, Union[List[int], List[Optional[str]]]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "fit", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "y", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "values", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "expected_r2", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "loadings_", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "variance", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "choice", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "gridsearch", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "transform", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "expected_weights", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "weights_", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "dropna", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 136, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "corr_", "type": "Any"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 163, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "smc", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "expected_r2", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "fa", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "variance", "type": "Any"}, {"lineNumber": 196, "col_offset": 52, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 199, "col_offset": 28, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 199, "col_offset": 60, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "fa", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "fa", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "fa", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "fa", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "fa", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "fa", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "get_factor_variance", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "corr", "type": "Any"}, {"lineNumber": 197, "col_offset": 32, "nodeName": "fa", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "np", "type": "module"}]