[{"lineNumber": 20, "col_offset": 0, "nodeName": "test_calculate_bartlett_sphericity", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_calculate_kmo", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "expected_by_item", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "s", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "p", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "calculate_bartlett_sphericity", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 50, "col_offset": 5, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 51, "col_offset": 5, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "calculate_kmo", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "kmo_by_item", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "expected_by_item", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "kmo_overall", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "expected_overall", "type": "float"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "empty", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "expected_r2", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "path", "type": "str"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "variance", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "index", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "iloc", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "median", "type": "Any"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "dropna", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "corr", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Any"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Any"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "result", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "remove_non_numeric", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "expected", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "result", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "expected_r2", "type": "List[float]"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "smc", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "smc_result", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "expected_r2", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "path", "type": "str"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "variance", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "loc", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "proportional_variance_expected", "type": "Any"}, {"lineNumber": 201, "col_offset": 60, "nodeName": "proportional_variance", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "expected", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "pd", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "pd", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "loadings", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "nan", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "FactorAnalyzer", "type": "Type[factor_analyzer.factor_analyzer.FactorAnalyzer]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "get_factor_variance", "type": "Callable[[], Any]"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "fa", "type": "factor_analyzer.factor_analyzer.FactorAnalyzer"}]