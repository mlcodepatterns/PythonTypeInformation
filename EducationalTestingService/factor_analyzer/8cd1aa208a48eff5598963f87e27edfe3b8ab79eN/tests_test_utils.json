[{"lineNumber": 29, "col_offset": 0, "nodeName": "test_unique_elements", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "test_fill_lower_diag", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_merge_variance_covariance_no_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "test_merge_variance_covariance", "type": "Callable[[], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_get_first_idxs_from_values", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "test_get_free_parameter_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "test_duplication_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "test_duplication_matrix_pre_post", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_commutation_matrix", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_get_symmetric_lower_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs", "type": "Callable[[], Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "test_get_symmetric_upper_idxs_no_diag", "type": "Callable[[], Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "test_covariance_to_correlation", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 0, "nodeName": "test_covariance_to_correlation_value_error", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "test_partial_correlations", "type": "Callable[[], Any]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "test_partial_correlations_num_columns_greater", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "test_partial_correlations_catch_linalgerror", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "path", "type": "str"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "values", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "corr", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "expected", "type": "List[List[float]]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 221, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "expected", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "unique_elements", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "expected", "type": "List[int]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "fill_lower_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "eye", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "expected", "type": "List[List[Union[int, float]]]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "merge_variance_covariance", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "x", "type": "List[int]"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "y", "type": "List[float]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 13, "nodeName": "get_first_idxs_from_values", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "eq_", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "output", "type": "Tuple[Any, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "expected", "type": "Tuple[List[int], List[int]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "get_free_parameter_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "duplication_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "duplication_matrix_pre_post", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "assert_frame_equal", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "expected", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "commutation_matrix", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "get_symmetric_lower_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 13, "nodeName": "get_symmetric_upper_idxs", "type": "Callable[..., Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "output", "type": "Any"}, {"lineNumber": 177, "col_offset": 31, "nodeName": "expected", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "path", "type": "str"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "covariance_to_correlation", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "values", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "corr", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "expected_corr", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "covariance_to_correlation", "type": "Callable[[Any], Any]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "expected", "type": "List[List[float]]"}, {"lineNumber": 214, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 226, "col_offset": 21, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 246, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "fill_diagonal", "type": "Any"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 249, "col_offset": 28, "nodeName": "empty_array", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "partial_correlations", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "expected", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "corr", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 210, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 239, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 245, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "nan", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "nan", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "nan", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "nan", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "nan", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "cov", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "data", "type": "Any"}]