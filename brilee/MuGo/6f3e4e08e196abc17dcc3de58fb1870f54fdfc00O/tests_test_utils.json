[{"lineNumber": 10, "col_offset": 0, "nodeName": "load_board", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_parsing", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "assertEqualNPArray", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertEqualPositions", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "set_board_size", "type": "Callable[[Any], None]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "string", "type": "str"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "board", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "board", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "sort_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "go", "type": "module"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "EMPTY", "type": "int"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "FILL", "type": "int"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "KO", "type": "int"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "UNKNOWN", "type": "int"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "string", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "char", "type": "str"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "string", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "string", "type": "str"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "N", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "N", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "N", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "int8", "type": "Any"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "reverse_map", "type": "Dict[str, int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "_replace", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "board", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "board", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "n", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "n", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "groups", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "groups", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "caps", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "caps", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "ko", "type": "Any"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "ko", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "board", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "char", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "parse_kgs_coords", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "parse_kgs_coords", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "parse_kgs_coords", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "parse_pygtp_coords", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "parse_pygtp_coords", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "parse_pygtp_coords", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "unparse_pygtp_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "unparse_pygtp_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "unparse_pygtp_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "flatten_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "flatten_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "flatten_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "unflatten_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "unflatten_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "unflatten_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "flatten_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestUtils"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "unflatten_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "groups", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "position1", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "position2", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "GoPositionTestCase"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "GoPositionTestCase"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 62, "col_offset": 41, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "GoPositionTestCase"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "GoPositionTestCase"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "GoPositionTestCase"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "canonical_p1", "type": "Any"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "canonical_p2", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "unflatten_coords", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "utils", "type": "module"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "flatten_coords", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "array1", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "array2", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 48, "col_offset": 46, "nodeName": "utils", "type": "module"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "utils", "type": "module"}, {"lineNumber": 55, "col_offset": 88, "nodeName": "array1", "type": "Any"}, {"lineNumber": 55, "col_offset": 96, "nodeName": "array2", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "map", "type": "Callable"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "sort_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "groups", "type": "Any"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "map", "type": "Callable"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "sort_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 72, "nodeName": "groups", "type": "Any"}, {"lineNumber": 59, "col_offset": 72, "nodeName": "position1", "type": "Any"}, {"lineNumber": 60, "col_offset": 72, "nodeName": "position2", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "stones", "type": "Any"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 58, "col_offset": 74, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "g", "type": "Any"}, {"lineNumber": 58, "col_offset": 74, "nodeName": "g", "type": "Any"}]