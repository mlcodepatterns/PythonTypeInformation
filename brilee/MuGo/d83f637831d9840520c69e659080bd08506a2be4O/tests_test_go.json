[{"lineNumber": 15, "col_offset": 0, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_load_board", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_parsing", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_neighbors", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_flood_fill", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_find_liberties", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_deduce_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_update_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_eyeish", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_likely_eye", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_move_with_capture", "type": "Callable[[Any], Any]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "test_ko_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "test_scoring", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "set_board_size", "type": "Callable[[Any], None]"}, {"lineNumber": 10, "col_offset": 13, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "go", "type": "module"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "N", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "corner", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "side", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stones", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "stones", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "expected_liberties", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "actual_liberties", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "actual_groups", "type": "Tuple[Any, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "go", "type": "module"}, {"lineNumber": 13, "col_offset": 6, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "map", "type": "Callable"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "copy", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "flood_fill", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 47, "nodeName": "stones", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "find_liberties", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "stones", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "expected_liberties", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "actual_liberties", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "expected_groups", "type": "Tuple[List[go.Group], List[go.Group]]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "actual_groups", "type": "Tuple[Any, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "existing_X_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "place_stone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "updated_X_groups", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "updated_O_groups", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "update_groups", "type": "Callable[[Any, Any, Any, Any], Tuple[List[Any], List[Any]]]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 79, "col_offset": 77, "nodeName": "existing_X_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 96, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "updated_X_groups", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "updated_O_groups", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 134, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "_replace", "type": "Callable"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "expected_position2", "type": "go.Position"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "c", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "go", "type": "module"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "go", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "go", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "go", "type": "module"}, {"lineNumber": 79, "col_offset": 115, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "go", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "is_likely_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "go", "type": "module"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "is_likely_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 101, "col_offset": 60, "nodeName": "go", "type": "module"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "is_likely_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "is_likely_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "expected_board2", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 148, "col_offset": 53, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 220, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "string", "type": "str"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "N", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "N", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "c", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "go", "type": "module"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 88, "col_offset": 50, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 143, "col_offset": 36, "nodeName": "expected_board2", "type": "Any"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 208, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "board", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "deduce_groups", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 267, "col_offset": 40, "nodeName": "board", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "go", "type": "module"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 68, "nodeName": "N", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "corner", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "go", "type": "module"}, {"lineNumber": 36, "col_offset": 66, "nodeName": "side", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "go", "type": "module"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 68, "nodeName": "go", "type": "module"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}]