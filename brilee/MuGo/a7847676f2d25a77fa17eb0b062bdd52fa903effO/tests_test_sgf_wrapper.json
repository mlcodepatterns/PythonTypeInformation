[{"lineNumber": 8, "col_offset": 0, "nodeName": "JAPANESE_HANDICAP_SGF", "type": "str"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "CHINESE_HANDICAP_SGF", "type": "str"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_sgf_props", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_japanese_handicap_handling", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_chinese_handicap_handling", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "sgf_replayer", "type": "Generator[sgf_wrapper.PositionWithContext, Any, None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "initial", "type": "sgf_wrapper.PositionWithContext"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "replay_sgf", "type": "Callable[[Any], Generator[sgf_wrapper.PositionWithContext, Any, None]]"}, {"lineNumber": 15, "col_offset": 34, "nodeName": "CHINESE_HANDICAP_SGF", "type": "str"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "next", "type": "Callable"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "sgf_replayer", "type": "Generator[sgf_wrapper.PositionWithContext, Any, None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "result", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "board_size", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "komi", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "intermediate_board", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "final_board", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "intermediate_position", "type": "go.Position"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "position", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "final_position", "type": "go.Position"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "position", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "intermediate_board", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "final_board", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "intermediate_position", "type": "go.Position"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "position", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "next_move", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "final_position", "type": "go.Position"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "position", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "position", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "replay_sgf", "type": "Callable[[Any], Generator[sgf_wrapper.PositionWithContext, Any, None]]"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "JAPANESE_HANDICAP_SGF", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "replay_sgf", "type": "Callable[[Any], Generator[sgf_wrapper.PositionWithContext, Any, None]]"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "CHINESE_HANDICAP_SGF", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 107, "col_offset": 59, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "is_usable", "type": "Callable[[], bool]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestSgfWrapper"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "is_usable", "type": "Callable[[], bool]"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "initial", "type": "sgf_wrapper.PositionWithContext"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "initial", "type": "sgf_wrapper.PositionWithContext"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "initial", "type": "sgf_wrapper.PositionWithContext"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "go", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "go", "type": "module"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "go", "type": "module"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "go", "type": "module"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 102, "col_offset": 30, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "positions_w_context", "type": "List[sgf_wrapper.PositionWithContext]"}]