[{"lineNumber": 16, "col_offset": 0, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_load_board", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_parsing", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_neighbors", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_is_koish", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_is_eyeish", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "test_is_reasonable", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_is_suicidal", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "test_lib_tracker_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_place_stone", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "test_place_stone_opposite_color", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_merge_multiple_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_capture_stone", "type": "Callable[[Any], Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "test_capture_many", "type": "Callable[[Any], Any]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "test_capture_multiple_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_same_friendly_group_neighboring_twice", "type": "Callable[[Any], Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "test_same_opponent_group_neighboring_twice", "type": "Callable[[Any], Any]"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "test_passing", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "test_flipturn", "type": "Callable[[Any], Any]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "test_legal_moves", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "test_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "test_move_with_capture", "type": "Callable[[Any], Any]"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "test_ko_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "test_scoring", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "set_board_size", "type": "Callable[[Any], None]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 501, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "go", "type": "module"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "N", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "corner", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "side", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "B_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "W_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "not_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "be", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "B_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "we", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "W_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "ne", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "not_eyes", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "reasonable_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "unreasonable_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "reasonable_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "unreasonable_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "suicidal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "nonsuicidal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "suicidal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "nonsuicidal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "board", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "board", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "board", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "left_group", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "right_group", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "top_group", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "bottom_group", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "corner_stone", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "surrounding_stones", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "stone", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "stones", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "sole_group_id", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "flip_position", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "empty_spots", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "B_legal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "empty_spots", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "W_legal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 371, "col_offset": 20, "nodeName": "empty_spots", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "pass_twice", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "ko_delayed_retake", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "go", "type": "module"}, {"lineNumber": 14, "col_offset": 6, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "map", "type": "Callable"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 134, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 63, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 63, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertNotEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "color", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 189, "col_offset": 41, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 60, "nodeName": "MISSING_GROUP_ID", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "groups", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "groups", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "top_group", "type": "Any"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "left_group", "type": "Any"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "right_group", "type": "Any"}, {"lineNumber": 229, "col_offset": 21, "nodeName": "bottom_group", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 241, "col_offset": 41, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "groups", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 254, "col_offset": 21, "nodeName": "corner_stone", "type": "Any"}, {"lineNumber": 256, "col_offset": 21, "nodeName": "surrounding_stones", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "groups", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 25, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "from_board", "type": "Callable[[Any], go.LibertyTracker]"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "board", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "add_stone", "type": "Callable[[Any, Any], Set[Any]]"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "stones", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "liberties", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "captured", "type": "Set[Any]"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 305, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "pass_move", "type": "Callable[..., Any]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "flip_playerturn", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "flip_position", "type": "Any"}, {"lineNumber": 337, "col_offset": 49, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 351, "col_offset": 19, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 24, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "pass_move", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "play_move", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 402, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 417, "col_offset": 53, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 418, "col_offset": 34, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 418, "col_offset": 52, "nodeName": "expected_position2", "type": "go.Position"}, {"lineNumber": 421, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 436, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "play_move", "type": "Callable[..., Any]"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 452, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 452, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 468, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 472, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "play_move", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 483, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 483, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "pass_move", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 489, "col_offset": 49, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 499, "col_offset": 34, "nodeName": "ko_delayed_retake", "type": "Any"}, {"lineNumber": 499, "col_offset": 53, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 503, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 514, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 526, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 547, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 22, "col_offset": 48, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "parse_sgf_coords", "type": "Callable[[Any], Optional[Tuple[int, int]]]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "c", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 44, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "board", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 106, "col_offset": 18, "nodeName": "board", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "EMPTY", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "EMPTY", "type": "int"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "go", "type": "module"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 128, "col_offset": 44, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 129, "col_offset": 47, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "go", "type": "module"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 141, "col_offset": 44, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 142, "col_offset": 47, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 150, "col_offset": 63, "nodeName": "go", "type": "module"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 151, "col_offset": 63, "nodeName": "go", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 157, "col_offset": 48, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 160, "col_offset": 48, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "go", "type": "module"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 174, "col_offset": 44, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 191, "col_offset": 60, "nodeName": "go", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 201, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 203, "col_offset": 60, "nodeName": "go", "type": "module"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "left_group", "type": "Any"}, {"lineNumber": 207, "col_offset": 44, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "left_group", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "right_group", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "right_group", "type": "Any"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "top_group", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "top_group", "type": "Any"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "bottom_group", "type": "Any"}, {"lineNumber": 219, "col_offset": 46, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "bottom_group", "type": "Any"}, {"lineNumber": 220, "col_offset": 49, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 241, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "corner_stone", "type": "Any"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "corner_stone", "type": "Any"}, {"lineNumber": 247, "col_offset": 49, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "surrounding_stones", "type": "Any"}, {"lineNumber": 250, "col_offset": 52, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "surrounding_stones", "type": "Any"}, {"lineNumber": 251, "col_offset": 55, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 270, "col_offset": 21, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 270, "col_offset": 40, "nodeName": "sole_group_id", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "sole_group", "type": "Any"}, {"lineNumber": 272, "col_offset": 47, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 273, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 281, "col_offset": 22, "nodeName": "LibertyTracker", "type": "Type[go.LibertyTracker]"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 282, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "groups", "type": "Any"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "black_group", "type": "Any"}, {"lineNumber": 286, "col_offset": 48, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 290, "col_offset": 25, "nodeName": "white_group", "type": "Any"}, {"lineNumber": 290, "col_offset": 48, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 292, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 306, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 314, "col_offset": 24, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 328, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 352, "col_offset": 18, "nodeName": "board", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 363, "col_offset": 27, "nodeName": "B_legal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 369, "col_offset": 24, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 372, "col_offset": 27, "nodeName": "W_legal_moves", "type": "Set[Optional[Tuple[Any, int]]]"}, {"lineNumber": 380, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 393, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 399, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 401, "col_offset": 58, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 409, "col_offset": 18, "nodeName": "expected_board2", "type": "Any"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 417, "col_offset": 27, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 417, "col_offset": 60, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 428, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 443, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 449, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 451, "col_offset": 58, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 460, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 473, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 481, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 481, "col_offset": 58, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 486, "col_offset": 31, "nodeName": "IllegalMove", "type": "Type[go.IllegalMove]"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 487, "col_offset": 38, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "pass_twice", "type": "Any"}, {"lineNumber": 489, "col_offset": 56, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 491, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 524, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 538, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 544, "col_offset": 24, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 547, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "string", "type": "str"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "N", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "N", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "go", "type": "module"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "go", "type": "module"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "be", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 65, "nodeName": "be", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "we", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 66, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "we", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "is_eyeish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "board", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "ne", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 64, "nodeName": "ne", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "is_reasonable", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 89, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 66, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "is_reasonable", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 91, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 67, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "board", "type": "Any"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "go", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "is_suicidal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "board", "type": "Any"}, {"lineNumber": 115, "col_offset": 43, "nodeName": "go", "type": "module"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "is_suicidal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 65, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 151, "col_offset": 28, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 180, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 218, "col_offset": 42, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 224, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 226, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 226, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 228, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 228, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 228, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 230, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 230, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 232, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 239, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 255, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "self", "type": "TestLibertyTracker"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "liberty_cache", "type": "Any"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "stone", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 269, "col_offset": 48, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "group_index", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 356, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "play_move", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 367, "col_offset": 42, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 376, "col_offset": 40, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 376, "col_offset": 47, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 385, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 391, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 421, "col_offset": 33, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 436, "col_offset": 36, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 458, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 465, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 471, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 486, "col_offset": 13, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 486, "col_offset": 31, "nodeName": "go", "type": "module"}, {"lineNumber": 487, "col_offset": 12, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 487, "col_offset": 45, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "pass_move", "type": "Any"}, {"lineNumber": 495, "col_offset": 15, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 520, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 524, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 21, "col_offset": 58, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "go", "type": "module"}, {"lineNumber": 22, "col_offset": 68, "nodeName": "N", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "go", "type": "module"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "corner", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "go", "type": "module"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "side", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 113, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 137, "col_offset": 52, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 150, "col_offset": 52, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 153, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 172, "col_offset": 52, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 191, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 206, "col_offset": 40, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 210, "col_offset": 41, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 218, "col_offset": 42, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 224, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 226, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 230, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 232, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 249, "col_offset": 48, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 255, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 257, "col_offset": 43, "nodeName": "stone", "type": "Any"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "lib_tracker", "type": "go.LibertyTracker"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 364, "col_offset": 39, "nodeName": "IllegalMove", "type": "Type[go.IllegalMove]"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "play_move", "type": "Callable[..., Any]"}, {"lineNumber": 365, "col_offset": 39, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 365, "col_offset": 46, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "IllegalMove", "type": "Type[go.IllegalMove]"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 374, "col_offset": 44, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 374, "col_offset": 51, "nodeName": "move", "type": "Optional[Tuple[Any, int]]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 414, "col_offset": 30, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 488, "col_offset": 21, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 496, "col_offset": 20, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 496, "col_offset": 42, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 22, "col_offset": 68, "nodeName": "go", "type": "module"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 140, "col_offset": 64, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 155, "col_offset": 65, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 173, "col_offset": 64, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 206, "col_offset": 64, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 210, "col_offset": 65, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 214, "col_offset": 63, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 218, "col_offset": 66, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 245, "col_offset": 66, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 249, "col_offset": 72, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 284, "col_offset": 65, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 288, "col_offset": 65, "nodeName": "pc", "type": "Callable[[Any], Optional[Tuple[Any, int]]]"}, {"lineNumber": 364, "col_offset": 21, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 364, "col_offset": 39, "nodeName": "go", "type": "module"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 373, "col_offset": 21, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 373, "col_offset": 39, "nodeName": "go", "type": "module"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "pass_position", "type": "Any"}]