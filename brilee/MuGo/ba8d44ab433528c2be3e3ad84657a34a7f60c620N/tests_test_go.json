[{"lineNumber": 17, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_load_board", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_parsing", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_neighbors", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_flood_fill", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_update_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "corner", "type": "Optional[int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "neighbors", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "side", "type": "Optional[int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "side_neighbors", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "actual_board", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "updated_groups", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "EMPTY_BOARD", "type": "str"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "MANUAL_EMPTY_BOARD", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "EMPTY_BOARD", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 59, "nodeName": "W", "type": "int"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "load_board", "type": "Callable[[Any], str]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "load_board", "type": "Callable[[Any], str]"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "flood_fill", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "board", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "expected_board", "type": "str"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "actual_board", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "load_board", "type": "Callable[[Any], str]"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "go", "type": "module"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "place_stone", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "board", "type": "str"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "update_groups", "type": "Callable[[Any, Any, Any], List[Any]]"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "existing_groups", "type": "List[go.Group]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "updated_groups", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "EMPTY_BOARD", "type": "str"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "W", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "load_board", "type": "Callable[[Any], str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 24, "col_offset": 59, "nodeName": "go", "type": "module"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "go", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "EMPTY_BOARD", "type": "str"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "EMPTY_BOARD", "type": "str"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "go", "type": "module"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "go", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "go", "type": "module"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "parse_coords", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 19, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "go", "type": "module"}, {"lineNumber": 19, "col_offset": 55, "nodeName": "W", "type": "int"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "go", "type": "module"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "go", "type": "module"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "c", "type": "Any"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "neighbors", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 28, "col_offset": 61, "nodeName": "corner", "type": "Optional[int]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "neighbors", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 32, "col_offset": 66, "nodeName": "side", "type": "Optional[int]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "go", "type": "module"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "go", "type": "module"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 19, "col_offset": 55, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "N", "type": "int"}, {"lineNumber": 24, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "N", "type": "int"}, {"lineNumber": 28, "col_offset": 48, "nodeName": "go", "type": "module"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "n", "type": "str"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "neighbors", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "go", "type": "module"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "n", "type": "str"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "side_neighbors", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "go", "type": "module"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "n", "type": "str"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "n", "type": "str"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "pc", "type": "Callable[[Any], Optional[int]]"}]