[{"lineNumber": 4, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 5, "col_offset": 4, "nodeName": "test_possible_moves", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_win_conditions", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_updates", "type": "Callable[[Any], Any]"}, {"lineNumber": 4, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 6, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "expected_board", "type": "tictactoe.TicTacToe"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "new_board", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 6, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 7, "col_offset": 45, "nodeName": "ALL_POSITIONS", "type": "List[str]"}, {"lineNumber": 9, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "player1wins", "type": "bool"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "player2wins", "type": "bool"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "player1wins", "type": "bool"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "player2wins", "type": "bool"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "player1wins", "type": "bool"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "player2wins", "type": "bool"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "new_board", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "expected_board", "type": "tictactoe.TicTacToe"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "load_board", "type": "Callable[[Any, Any], tictactoe.TicTacToe]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 7, "col_offset": 25, "nodeName": "possible_moves", "type": "Callable[[], List[str]]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "possible_moves", "type": "Callable[[], List[str]]"}, {"lineNumber": 10, "col_offset": 45, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestTicTacToe"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 25, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "t", "type": "tictactoe.TicTacToe"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "t", "type": "tictactoe.TicTacToe"}]