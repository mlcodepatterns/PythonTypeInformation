[{"lineNumber": 15, "col_offset": 0, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_load_board", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_parsing", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_neighbors", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_flood_fill", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_find_liberties", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_deduce_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_update_groups", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_is_koish", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_is_eye", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "GoPositionTestCase", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_legal_moves", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_move_with_capture", "type": "Callable[[Any], Any]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "test_ko_move", "type": "Callable[[Any], Any]"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "test_scoring", "type": "Callable[[Any], Any]"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "set_board_size", "type": "Callable[[Any], None]"}, {"lineNumber": 10, "col_offset": 13, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 7, "col_offset": 0, "nodeName": "go", "type": "module"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "N", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "corner", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "side", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "stones", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "stones", "type": "Set[Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "expected_liberties", "type": "Set[Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "actual_liberties", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "actual_groups", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "B_eyes", "type": "Set[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "W_eyes", "type": "Set[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "not_eyes", "type": "Set[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "be", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "B_eyes", "type": "Set[Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "we", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "W_eyes", "type": "Set[Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "ne", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "not_eyes", "type": "Set[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "empty_spots", "type": "Set[Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "B_legal_moves", "type": "Set[Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "move", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "empty_spots", "type": "Set[Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "W_legal_moves", "type": "Set[Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "move", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "empty_spots", "type": "Set[Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "ko_immediate_retake", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "pass_twice", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "ko_delayed_retake", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 9, "col_offset": 18, "nodeName": "go", "type": "module"}, {"lineNumber": 13, "col_offset": 6, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "map", "type": "Callable"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "pc", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "pc", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "pc", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "copy", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "flood_fill", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqualNPArray", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "test_board_copy", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "stones", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "find_liberties", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "stones", "type": "Set[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "expected_liberties", "type": "Set[Any]"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "actual_liberties", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "expected_groups", "type": "Tuple[List[Any], List[Any]]"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "actual_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "existing_X_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "place_stone", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "updated_X_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "updated_O_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "update_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "updated_board", "type": "Any"}, {"lineNumber": 79, "col_offset": 77, "nodeName": "existing_X_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 96, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "updated_X_groups", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "existing_O_groups", "type": "Any"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "updated_O_groups", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "pass_move", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 193, "col_offset": 34, "nodeName": "actual_position2", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "expected_position2", "type": "go.Position"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 229, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "play_move", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 262, "col_offset": 51, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "ko_immediate_retake", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "pass_move", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqualPositions", "type": "Any"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "ko_delayed_retake", "type": "Any"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "expected_position", "type": "go.Position"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "Position", "type": "Type[go.Position]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 47, "nodeName": "expected_score", "type": "float"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "load_board", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "pc", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "pc", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "parse_sgf_coords", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "pc", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "parse_sgf_coords", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "c", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "neighbors", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "EMPTY_BOARD", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "c", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGoBoard"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "side_neighbors", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "go", "type": "module"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "pc", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "go", "type": "module"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "go", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "pc", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "go", "type": "module"}, {"lineNumber": 79, "col_offset": 115, "nodeName": "pc", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestGroupHandling"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "go", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "is_koish", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "BLACK", "type": "int"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "WHITE", "type": "int"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "board", "type": "Any"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "play_move", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "move", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "play_move", "type": "Any"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "move", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "pc", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "expected_board2", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 192, "col_offset": 53, "nodeName": "pc", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 203, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "pc", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 251, "col_offset": 18, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "start_position", "type": "go.Position"}, {"lineNumber": 260, "col_offset": 51, "nodeName": "pc", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 265, "col_offset": 56, "nodeName": "pc", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "pass_twice", "type": "Any"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 269, "col_offset": 28, "nodeName": "go", "type": "module"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 294, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 295, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 319, "col_offset": 22, "nodeName": "board", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "TestScoring"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "score", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "string", "type": "str"}, {"lineNumber": 20, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "N", "type": "Any"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "N", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "c", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "go", "type": "module"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "NEIGHBORS", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "Group", "type": "Type[go.Group]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "go", "type": "module"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "pc", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "is_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 39, "nodeName": "board", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "be", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "is_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "board", "type": "Any"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "we", "type": "Any"}, {"lineNumber": 111, "col_offset": 51, "nodeName": "go", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "TestEyeHandling"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "is_eye", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "board", "type": "Any"}, {"lineNumber": 113, "col_offset": 46, "nodeName": "ne", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "board", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "pc", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "move", "type": "Any"}, {"lineNumber": 142, "col_offset": 57, "nodeName": "B_legal_moves", "type": "Set[Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "pass_position", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestPosition"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "move", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "W_legal_moves", "type": "Set[Any]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 156, "col_offset": 36, "nodeName": "TEST_BOARD", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 181, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "expected_board2", "type": "Any"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "EMPTY_ROW", "type": "str"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "expected_board", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "pc", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "pass_move", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "start_board", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "pc", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "board", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "deduce_groups", "type": "Any"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "board", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 329, "col_offset": 29, "nodeName": "position", "type": "go.Position"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "go", "type": "module"}, {"lineNumber": 20, "col_offset": 64, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 68, "nodeName": "N", "type": "Any"}, {"lineNumber": 32, "col_offset": 48, "nodeName": "go", "type": "module"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "corner", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "go", "type": "module"}, {"lineNumber": 36, "col_offset": 66, "nodeName": "side", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "go", "type": "module"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "go", "type": "module"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "go", "type": "module"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "pc", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "pc", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "pc", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "pc", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 255, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "pc", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "actual_position", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "go", "type": "module"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "pc", "type": "Any"}, {"lineNumber": 276, "col_offset": 42, "nodeName": "pc", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "go", "type": "module"}, {"lineNumber": 21, "col_offset": 68, "nodeName": "go", "type": "module"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "pc_set", "type": "Callable[[Any], Any]"}]