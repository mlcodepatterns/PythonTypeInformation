[{"lineNumber": 257, "col_offset": 0, "nodeName": "suite", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "PATH", "type": "str"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 263, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "result", "type": "unittest.result.TestResult"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 35, "nodeName": "join", "type": "Callable"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "PATH", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "t1", "type": "Tuple[Any, int, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "t2", "type": "Tuple[Any, int, Any, Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "sentence", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "p", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "TestSuite", "type": "Type[unittest.suite.TestSuite]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "addTest", "type": "Callable[[Union[unittest.suite.TestSuite, unittest.case.TestCase]], None]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "addTest", "type": "Callable[[Union[unittest.suite.TestSuite, unittest.case.TestCase]], None]"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "run", "type": "Callable[[Union[unittest.suite.TestSuite, unittest.case.TestCase]], unittest.result.TestResult]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 16, "nodeName": "sys", "type": "module"}, {"lineNumber": 10, "col_offset": 35, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 48, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 10, "col_offset": 64, "nodeName": "__file__", "type": "str"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "realpath", "type": "Callable"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "__file__", "type": "str"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "tag", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "load", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "sg", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "pl", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "pl", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "tag", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "load", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "sg", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "pl", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "pl", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "tag", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "load", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "attr", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "v1", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "v2", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "items", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "n", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "lexeme1", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "lexeme2", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "lexeme", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "SG", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "SG", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "find_lemmata", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "parse", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "n", "type": "int"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "s2", "type": "List[List[Any]]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "s2", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "s2", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "tag", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 248, "col_offset": 29, "nodeName": "p", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "wait", "type": "Callable[..., int]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "decode", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "strip", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "v", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "unittest", "type": "module"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 259, "col_offset": 62, "nodeName": "TestInflection", "type": "Type[TestInflection]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "suite", "type": "unittest.suite.TestSuite"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "loadTestsFromTestCase", "type": "Callable[[Type[unittest.case.TestCase]], unittest.suite.TestSuite]"}, {"lineNumber": 260, "col_offset": 62, "nodeName": "TestParser", "type": "Type[TestParser]"}, {"lineNumber": 265, "col_offset": 54, "nodeName": "suite", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "sys", "type": "module"}, {"lineNumber": 10, "col_offset": 35, "nodeName": "os", "type": "module"}, {"lineNumber": 10, "col_offset": 48, "nodeName": "path", "type": "module"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "Datasheet", "type": "Any"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "PATH", "type": "str"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "pl", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "Datasheet", "type": "Any"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 47, "col_offset": 60, "nodeName": "PATH", "type": "str"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "sg", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "attributive", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "gender", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "inflected", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "Datasheet", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "join", "type": "Callable"}, {"lineNumber": 75, "col_offset": 60, "nodeName": "PATH", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "tag", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "pred", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "inflections", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "v2", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "infinitives", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "find_lexeme", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "v", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "INFINITIVE", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 54, "nodeName": "v2", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "es", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "es", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "es", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "es", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "es", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "t1", "type": "Tuple[Any, int, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "t2", "type": "Tuple[Any, int, Any, Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "t1", "type": "Tuple[Any, int, Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "t2", "type": "Tuple[Any, int, Any, Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestParser"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "parser", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestParser"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "parse", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "s2", "type": "List[List[Any]]"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "range", "type": "Type[builtins.range]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestParser"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "es", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestParser"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestParser"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "TextTestRunner", "type": "Type[unittest.runner.TextTestRunner]"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "wasSuccessful", "type": "Callable[[], bool]"}, {"lineNumber": 10, "col_offset": 48, "nodeName": "os", "type": "module"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "w", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "pl", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "pluralize", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "sg", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "append", "type": "Callable"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "w", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "pl", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "singularize", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "pl", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "MALE", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "MALE", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "FEMALE", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "FEMALE", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "MALE", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "FEMALE", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "es", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "path", "type": "module"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "append", "type": "Callable"}, {"lineNumber": 76, "col_offset": 61, "nodeName": "w", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "attr", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "predicative", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "attr", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "find_lemma", "type": "Any"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "v1", "type": "Any"}, {"lineNumber": 93, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "lexeme2", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "PARTICIPLE", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "PARTICIPLE", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "IMPERFECT", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "PRETERITE", "type": "Any"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 134, "col_offset": 53, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "FUTURE", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "IMPERATIVE", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "IMPERATIVE", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 146, "col_offset": 61, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "SINGULAR", "type": "Any"}, {"lineNumber": 154, "col_offset": 58, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "PAST", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "PLURAL", "type": "Any"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "SUBJUNCTIVE", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TestInflection"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "conjugate", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "v1", "type": "Any"}, {"lineNumber": 158, "col_offset": 46, "nodeName": "tense", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "PRESENT", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "SG", "type": "Any"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "tenses", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "es", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "es", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "open", "type": "Callable"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "w", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "es", "type": "Any"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "PAROLE", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 230, "col_offset": 35, "nodeName": "w", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "n", "type": "int"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "read", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "TestLoader", "type": "Type[unittest.loader.TestLoader]"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "unittest", "type": "module"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "result", "type": "unittest.result.TestResult"}, {"lineNumber": 32, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "es", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "es", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "es", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "es", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "es", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "inflect", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "inflect", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "inflect", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "lexeme1", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "lexeme2", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 112, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 114, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "es", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 119, "col_offset": 43, "nodeName": "es", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "es", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 127, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 131, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 134, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 136, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "es", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 142, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "es", "type": "Any"}, {"lineNumber": 144, "col_offset": 62, "nodeName": "es", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 145, "col_offset": 59, "nodeName": "es", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 146, "col_offset": 61, "nodeName": "es", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 147, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "es", "type": "Any"}, {"lineNumber": 148, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 148, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 148, "col_offset": 61, "nodeName": "es", "type": "Any"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "es", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "es", "type": "Any"}, {"lineNumber": 150, "col_offset": 60, "nodeName": "es", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "es", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "es", "type": "Any"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 152, "col_offset": 45, "nodeName": "es", "type": "Any"}, {"lineNumber": 152, "col_offset": 58, "nodeName": "es", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "es", "type": "Any"}, {"lineNumber": 153, "col_offset": 58, "nodeName": "es", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "es", "type": "Any"}, {"lineNumber": 154, "col_offset": 58, "nodeName": "es", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "es", "type": "Any"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "es", "type": "Any"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "es", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "es", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "es", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "es", "type": "Any"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "es", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "es", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "es", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "es", "type": "Any"}, {"lineNumber": 178, "col_offset": 50, "nodeName": "es", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "es", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "es", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "es", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "es", "type": "Any"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "es", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "conjugate", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "es", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "conjugate", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 225, "col_offset": 42, "nodeName": "PATH", "type": "str"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "decode", "type": "Any"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "split", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "es", "type": "Any"}, {"lineNumber": 230, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "split", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "es", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "inflect", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "es", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "es", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "j", "type": "int"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "es", "type": "Any"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "INDICATIVE", "type": "Any"}, {"lineNumber": 187, "col_offset": 86, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 188, "col_offset": 40, "nodeName": "es", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "CONDITIONAL", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "path", "type": "module"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "sentence", "type": "str"}, {"lineNumber": 227, "col_offset": 40, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "w", "type": "Any"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "pos", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "s2", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "s1", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "s2", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "p", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "test", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "es", "type": "Any"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "es", "type": "Any"}, {"lineNumber": 187, "col_offset": 86, "nodeName": "es", "type": "Any"}, {"lineNumber": 188, "col_offset": 65, "nodeName": "es", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "os", "type": "module"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "j", "type": "int"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "j", "type": "int"}]