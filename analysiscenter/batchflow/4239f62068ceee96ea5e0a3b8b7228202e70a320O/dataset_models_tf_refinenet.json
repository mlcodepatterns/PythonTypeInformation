[{"lineNumber": 11, "col_offset": 16, "nodeName": "TFModel", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "filters", "type": "int"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "filters", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "filters", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "upsample_args", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "upsample_args", "type": "Dict[Any, Any]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "names", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "fill_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "x", "type": "None"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "make_encoder", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "upsample_args", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "after_rcu", "type": "List[Any]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "after_rcu", "type": "None"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "after_crp", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "num_pools", "type": "int"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "TFModel", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "ResNet101", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "self", "type": "RefineNet"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "make_encoder", "type": "Any"}, {"lineNumber": 69, "col_offset": 47, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "decoder_inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "base_class", "type": "Any"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 130, "col_offset": 39, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "after_mrf", "type": "int"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "x", "type": "Union[Any, int]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "after_mrf", "type": "None"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "after_mrf", "type": "Union[Any, int]"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "relu", "type": "Any"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "x", "type": "Union[int, Any]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "num_pools", "type": "int"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "after_crp", "type": "Any"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "after_crp", "type": "None"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "after_crp", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "double_block", "type": "Any"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "identity", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 180, "col_offset": 41, "nodeName": "filters", "type": "Any"}, {"lineNumber": 180, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 180, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 68, "nodeName": "filters", "type": "int"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 69, "col_offset": 68, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "decoder_block", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "decoder_inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "double_block", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "after_rcu", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "after_mrf", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "conv_block", "type": "Any"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "ResNet", "type": "Any"}, {"lineNumber": 158, "col_offset": 62, "nodeName": "filters", "type": "Any"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "x", "type": "None"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 74, "col_offset": 100, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "ResNet", "type": "Any"}, {"lineNumber": 131, "col_offset": 56, "nodeName": "filters", "type": "Any"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "after_rcu", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "conv_block", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "filters", "type": "Any"}, {"lineNumber": 154, "col_offset": 81, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 62, "nodeName": "filters", "type": "Any"}, {"lineNumber": 133, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 140, "col_offset": 64, "nodeName": "filters", "type": "Any"}, {"lineNumber": 141, "col_offset": 57, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "cls", "type": "Type[RefineNet]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 99, "nodeName": "upsample_args", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 74, "col_offset": 90, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 74, "col_offset": 94, "nodeName": "i", "type": "int"}, {"lineNumber": 141, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "after_rcu", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 94, "nodeName": "i", "type": "int"}]