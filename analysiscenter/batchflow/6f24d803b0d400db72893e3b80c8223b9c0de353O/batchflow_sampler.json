[{"lineNumber": 30, "col_offset": 0, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "arithmetize", "type": "Callable[[Any], Any]"}, {"lineNumber": 553, "col_offset": 0, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 571, "col_offset": 0, "nodeName": "sample_histodd", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "SMALL_SHARE", "type": "float"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "__or__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "__and__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "__rand__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "truncate", "type": "Callable[..., Any]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 388, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 463, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 484, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 510, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 524, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 542, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "fullname", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "rops", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "grids", "type": "Any"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "probs", "type": "Any"}, {"lineNumber": 592, "col_offset": 4, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 600, "col_offset": 4, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "tf_distributions", "type": "None"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 88, "nodeName": "module", "type": "str"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "fullname", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "oper", "type": "str"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "rop", "type": "str"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "rops", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "__array_priority__", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "concat_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "truncated", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "distr", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 482, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "bins", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "meshgrid", "type": "Any"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "choice", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 596, "col_offset": 12, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 599, "col_offset": 4, "nodeName": "low", "type": "Any"}, {"lineNumber": 599, "col_offset": 9, "nodeName": "high", "type": "Any"}, {"lineNumber": 600, "col_offset": 14, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 600, "col_offset": 54, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 601, "col_offset": 11, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "fullname", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "oper", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "rop", "type": "str"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "other", "type": "numpy.ndarray"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "oper", "type": "str"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "rop", "type": "str"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "rtransform", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 162, "col_offset": 31, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "_up", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "_low", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "weight", "type": "float"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "high", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "high", "type": "Any"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "low", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "low", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "ctr", "type": "int"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 345, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "SequenceSampler"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 379, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "choice", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 430, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 430, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 431, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "distr", "type": "Any"}, {"lineNumber": 479, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 481, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 511, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "edges", "type": "Any"}, {"lineNumber": 511, "col_offset": 39, "nodeName": "seed", "type": "Any"}, {"lineNumber": 512, "col_offset": 11, "nodeName": "histo", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 540, "col_offset": 15, "nodeName": "sample_histodd", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 540, "col_offset": 61, "nodeName": "state", "type": "Any"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "histogramdd", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 25, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 569, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 569, "col_offset": 52, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 592, "col_offset": 32, "nodeName": "arange", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "size", "type": "Any"}, {"lineNumber": 592, "col_offset": 60, "nodeName": "probs", "type": "Any"}, {"lineNumber": 592, "col_offset": 72, "nodeName": "size", "type": "Any"}, {"lineNumber": 599, "col_offset": 16, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 599, "col_offset": 33, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 600, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 600, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 600, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 601, "col_offset": 23, "nodeName": "low", "type": "Any"}, {"lineNumber": 601, "col_offset": 33, "nodeName": "high", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "alias", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "rnd_submodules", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "weight", "type": "float"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "weight", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "size", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "concat_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 37, "nodeName": "transform", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "prob", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "cond", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "_share", "type": "Any"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "cumulated", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "ctr", "type": "int"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 362, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 385, "col_offset": 34, "nodeName": "self", "type": "SequenceSampler"}, {"lineNumber": 385, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 409, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 413, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 430, "col_offset": 26, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 431, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 431, "col_offset": 38, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 460, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 29, "nodeName": "ss", "type": "Any"}, {"lineNumber": 461, "col_offset": 33, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 461, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 478, "col_offset": 18, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 479, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 511, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 513, "col_offset": 24, "nodeName": "histo", "type": "Any"}, {"lineNumber": 514, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 515, "col_offset": 13, "nodeName": "edges", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 516, "col_offset": 25, "nodeName": "edges", "type": "Any"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 522, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 540, "col_offset": 31, "nodeName": "bins", "type": "Any"}, {"lineNumber": 540, "col_offset": 42, "nodeName": "edges", "type": "Any"}, {"lineNumber": 540, "col_offset": 61, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 550, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 550, "col_offset": 45, "nodeName": "points", "type": "Any"}, {"lineNumber": 550, "col_offset": 58, "nodeName": "edges", "type": "Any"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 569, "col_offset": 20, "nodeName": "grids", "type": "Any"}, {"lineNumber": 592, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 592, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 599, "col_offset": 22, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 599, "col_offset": 39, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 600, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "ALIASES", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "module", "type": "str"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "alias", "type": "Any"}, {"lineNumber": 40, "col_offset": 80, "nodeName": "alias", "type": "Any"}, {"lineNumber": 40, "col_offset": 87, "nodeName": "module", "type": "str"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "module", "type": "str"}, {"lineNumber": 44, "col_offset": 80, "nodeName": "fullname", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 44, "col_offset": 90, "nodeName": "module", "type": "str"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 74, "nodeName": "other", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 119, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "other", "type": "Any"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "other", "type": "Any"}, {"lineNumber": 173, "col_offset": 37, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "_up", "type": "Any"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "_low", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "_left", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "_right", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "sample", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "size", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 293, "col_offset": 56, "nodeName": "bool", "type": "Any"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "low", "type": "Any"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "high", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 310, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "cond", "type": "Any"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "constant", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "self", "type": "SequenceSampler"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 381, "col_offset": 96, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 431, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 33, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 480, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 522, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 31, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 540, "col_offset": 42, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 550, "col_offset": 58, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 569, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 13, "nodeName": "histo", "type": "Tuple[Any, Any]"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "histo", "type": "Tuple[Any, Any]"}, {"lineNumber": 595, "col_offset": 24, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 595, "col_offset": 43, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 596, "col_offset": 42, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 38, "col_offset": 53, "nodeName": "module", "type": "str"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 68, "nodeName": "fake", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "sample", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "high", "type": "Any"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 273, "col_offset": 27, "nodeName": "low", "type": "Any"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 283, "col_offset": 49, "nodeName": "prob", "type": "Any"}, {"lineNumber": 284, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 292, "col_offset": 25, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 292, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 293, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 301, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "high", "type": "Any"}, {"lineNumber": 306, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "cond", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "_share", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "SMALL_SHARE", "type": "float"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "ctr", "type": "int"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 31, "nodeName": "sample", "type": "Any"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 96, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 517, "col_offset": 49, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 517, "col_offset": 62, "nodeName": "edges", "type": "Any"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 518, "col_offset": 39, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 518, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 591, "col_offset": 31, "nodeName": "histo", "type": "Tuple[Any, Any]"}, {"lineNumber": 595, "col_offset": 56, "nodeName": "histo", "type": "Tuple[Any, Any]"}, {"lineNumber": 596, "col_offset": 55, "nodeName": "histo", "type": "Tuple[Any, Any]"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 72, "nodeName": "fake", "type": "Any"}, {"lineNumber": 72, "col_offset": 78, "nodeName": "sample", "type": "Any"}, {"lineNumber": 72, "col_offset": 91, "nodeName": "size", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 72, "nodeName": "fake", "type": "Any"}, {"lineNumber": 74, "col_offset": 78, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 74, "col_offset": 87, "nodeName": "other", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "sample", "type": "Any"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 121, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 121, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "other", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "_left", "type": "Any"}, {"lineNumber": 214, "col_offset": 46, "nodeName": "_right", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 40, "nodeName": "prob", "type": "Any"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 38, "nodeName": "cond", "type": "Any"}, {"lineNumber": 381, "col_offset": 96, "nodeName": "self", "type": "SequenceSampler"}, {"lineNumber": 517, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 517, "col_offset": 30, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 518, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "sample", "type": "Any"}, {"lineNumber": 72, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 72, "col_offset": 78, "nodeName": "other", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "sample", "type": "Any"}, {"lineNumber": 74, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 74, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "sample", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 296, "col_offset": 87, "nodeName": "low", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 298, "col_offset": 49, "nodeName": "sample", "type": "Any"}, {"lineNumber": 298, "col_offset": 57, "nodeName": "low", "type": "Any"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 302, "col_offset": 84, "nodeName": "high", "type": "Any"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "sample", "type": "Any"}, {"lineNumber": 304, "col_offset": 54, "nodeName": "high", "type": "Any"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 49, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 296, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 302, "col_offset": 67, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 304, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 296, "col_offset": 54, "nodeName": "sample", "type": "Any"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "expr", "type": "Any"}, {"lineNumber": 302, "col_offset": 51, "nodeName": "sample", "type": "Any"}]