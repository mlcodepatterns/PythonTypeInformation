[{"lineNumber": 9, "col_offset": 11, "nodeName": "EncoderDecoder", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "num_stages", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "initial_block_filters", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "f_0", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "encoder_filters", "type": "List[Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "decoder_filters", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "names", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "get", "type": "Any"}, {"lineNumber": 87, "col_offset": 97, "nodeName": "initial_block_filters", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "encoder_filters", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "num_stages", "type": "Any"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "block", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "block", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "config", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "initial_block_filters", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "initial_block_filters", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "f_0", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "encoder_filters", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "encoder_filters", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 56, "nodeName": "decoder_filters", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "ResNet", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "ResNet", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 87, "col_offset": 78, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 87, "col_offset": 84, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "num_stages", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "config", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 94, "col_offset": 90, "nodeName": "i", "type": "int"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "f_0", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "f_0", "type": "Any"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 95, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 101, "nodeName": "num_stages", "type": "Any"}, {"lineNumber": 103, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 73, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 79, "nodeName": "num_stages", "type": "Any"}]