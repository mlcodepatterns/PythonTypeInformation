[{"lineNumber": 28, "col_offset": 0, "nodeName": "base_config_segment", "type": "Callable[[], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "base_config_clf", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "UNet", "type": "Type[batchflow.models.eager_torch.unet.UNet]"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "ResUNet", "type": "Type[batchflow.models.eager_torch.unet.ResUNet]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "VGG7", "type": "Type[batchflow.models.eager_torch.vgg.VGG7]"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "VGG16", "type": "Type[batchflow.models.eager_torch.vgg.VGG16]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "VGG19", "type": "Type[batchflow.models.eager_torch.vgg.VGG19]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "ResNet18", "type": "Type[batchflow.models.eager_torch.resnet.ResNet18]"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "ResNet34", "type": "Type[batchflow.models.eager_torch.resnet.ResNet34]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "ResNet50", "type": "Type[batchflow.models.eager_torch.resnet.ResNet50]"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "ResNet101", "type": "Type[batchflow.models.eager_torch.resnet.ResNet101]"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "ResNet152", "type": "Type[batchflow.models.eager_torch.resnet.ResNet152]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "ResNeXt18", "type": "Type[batchflow.models.eager_torch.resnet.ResNeXt18]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "ResNeXt34", "type": "Type[batchflow.models.eager_torch.resnet.ResNeXt34]"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "ResNeXt50", "type": "Type[batchflow.models.eager_torch.resnet.ResNeXt50]"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "ResNeXt101", "type": "Type[batchflow.models.eager_torch.resnet.ResNeXt101]"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "ResNeXt152", "type": "Type[batchflow.models.eager_torch.resnet.ResNeXt152]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "SEResNet18", "type": "Type[batchflow.models.eager_torch.resnet.SEResNet18]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "SEResNet34", "type": "Type[batchflow.models.eager_torch.resnet.SEResNet34]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "SEResNet50", "type": "Type[batchflow.models.eager_torch.resnet.SEResNet50]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "SEResNet101", "type": "Type[batchflow.models.eager_torch.resnet.SEResNet101]"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "SEResNet152", "type": "Type[batchflow.models.eager_torch.resnet.SEResNet152]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "SEResNeXt18", "type": "Type[batchflow.models.eager_torch.resnet.SEResNeXt18]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "SEResNeXt34", "type": "Type[batchflow.models.eager_torch.resnet.SEResNeXt34]"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "SEResNeXt50", "type": "Type[batchflow.models.eager_torch.resnet.SEResNeXt50]"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "SEResNeXt101", "type": "Type[batchflow.models.eager_torch.resnet.SEResNeXt101]"}, {"lineNumber": 24, "col_offset": 57, "nodeName": "SEResNeXt152", "type": "Type[batchflow.models.eager_torch.resnet.SEResNeXt152]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "config", "type": "Dict[str, Union[str, Dict[str, str], Dict[str, Union[Dict[str, Union[Tuple[int, int, int], str]], Dict[str, Tuple[int, int, int]]]]]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "config", "type": "Dict[str, Union[str, int, Tuple[int, int, int]]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "base_config_segment", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "base_config_clf", "type": "Any"}]