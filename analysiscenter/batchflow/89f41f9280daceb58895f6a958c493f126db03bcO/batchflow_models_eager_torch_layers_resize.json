[{"lineNumber": 10, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "PixelShuffle", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "PixelShuffle", "type": "Type[PixelShuffle]"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "Module", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "Module", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "ALL_OPS", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "mode", "type": "Union[str, Any]"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "mode", "type": "Union[str, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "info", "type": "str"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "info", "type": "str"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "units", "type": "Union[Any, List[Any]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "activations", "type": "Union[Any, List[str]]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 258, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "result", "type": "Union[int, Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 281, "col_offset": 11, "nodeName": "alias", "type": "str"}, {"lineNumber": 281, "col_offset": 18, "nodeName": "method", "type": "Any"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "op", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "shape_", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dim_", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "spatial_shape_", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "IncreaseDim"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "dim", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "dim", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "ReduceDim"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "max", "type": "Callable"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "dim", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Reshape"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "reshape_to", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "MODES", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "info", "type": "str"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "info", "type": "str"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "mode", "type": "Union[str, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "upscale_factor", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Crop"}, {"lineNumber": 114, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "shape", "type": "Tuple[slice, ...]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "Upsample"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "squeeze_units", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "squeeze_activations", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "SEBlock"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "SideBlock"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "cat", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "concat", "type": "staticmethod"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "sum", "type": "staticmethod"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "mul", "type": "staticmethod"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "mean", "type": "staticmethod"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "softsum", "type": "staticmethod"}, {"lineNumber": 281, "col_offset": 64, "nodeName": "alias", "type": "str"}, {"lineNumber": 281, "col_offset": 73, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "conv", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "op", "type": "Callable[[Any], Any]"}, {"lineNumber": 300, "col_offset": 17, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 301, "col_offset": 15, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "shape_", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "__name__", "type": "Union[Any, str]"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "self", "type": "IncreaseDim"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "dim", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "MODES", "type": "Dict[str, str]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "mode", "type": "Union[str, Any]"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "size", "type": "Any"}, {"lineNumber": 73, "col_offset": 77, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "self", "type": "Crop"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 172, "col_offset": 18, "nodeName": "layout", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "layout", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 173, "col_offset": 65, "nodeName": "factor", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "factor", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "layout", "type": "Any"}, {"lineNumber": 177, "col_offset": 68, "nodeName": "factor", "type": "Any"}, {"lineNumber": 177, "col_offset": 82, "nodeName": "shape", "type": "Any"}, {"lineNumber": 177, "col_offset": 91, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "Upsample"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "squeeze_layout", "type": "Any"}, {"lineNumber": 207, "col_offset": 60, "nodeName": "units", "type": "Union[List[Any], Any]"}, {"lineNumber": 207, "col_offset": 79, "nodeName": "activations", "type": "Union[Any, List[str]]"}, {"lineNumber": 207, "col_offset": 99, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "self", "type": "SEBlock"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 222, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "self", "type": "SideBlock"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 259, "col_offset": 21, "nodeName": "result", "type": "int"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "conv", "type": "Any"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "method", "type": "Any"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "items", "type": "Callable"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "self", "type": "Combine"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 294, "col_offset": 38, "nodeName": "conv", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "self", "type": "Combine"}, {"lineNumber": 300, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 307, "col_offset": 18, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 311, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "spatial_resize", "type": "Callable[[Any], Any]"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "self", "type": "Combine"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 320, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "self", "type": "Combine"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 323, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 323, "col_offset": 63, "nodeName": "ALL_OPS", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 77, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "self", "type": "Combine"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 29, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "self", "type": "ReduceDim"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "self", "type": "Reshape"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 73, "col_offset": 77, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 118, "col_offset": 33, "nodeName": "c", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "c", "type": "Any"}, {"lineNumber": 119, "col_offset": 67, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "shape", "type": "Tuple[slice, ...]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "in_units", "type": "Any"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 270, "col_offset": 35, "nodeName": "conv", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 270, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "conv", "type": "Any"}, {"lineNumber": 270, "col_offset": 66, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "stack", "type": "Any"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "OPS", "type": "Dict[Any, List[str]]"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 290, "col_offset": 17, "nodeName": "self", "type": "Combine"}, {"lineNumber": 293, "col_offset": 20, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 293, "col_offset": 57, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 293, "col_offset": 67, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 295, "col_offset": 50, "nodeName": "self", "type": "Combine"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 302, "col_offset": 33, "nodeName": "dim_", "type": "Any"}, {"lineNumber": 309, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "spatial_shape_", "type": "Any"}, {"lineNumber": 309, "col_offset": 64, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 81, "nodeName": "spatial_shape_", "type": "Any"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "self", "type": "Combine"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "self", "type": "Combine"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 63, "nodeName": "self", "type": "Combine"}, {"lineNumber": 323, "col_offset": 77, "nodeName": "self", "type": "Combine"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "self", "type": "Combine"}, {"lineNumber": 328, "col_offset": 37, "nodeName": "self", "type": "Combine"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 308, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 310, "col_offset": 23, "nodeName": "Crop", "type": "Type[Crop]"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "self", "type": "Combine"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "op", "type": "Union[Any, Callable[[Any], Any]]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "self", "type": "Combine"}, {"lineNumber": 290, "col_offset": 39, "nodeName": "op", "type": "Any"}, {"lineNumber": 291, "col_offset": 44, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "self", "type": "Combine"}, {"lineNumber": 295, "col_offset": 46, "nodeName": "op", "type": "Any"}, {"lineNumber": 309, "col_offset": 55, "nodeName": "dim", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "self", "type": "Combine"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 291, "col_offset": 54, "nodeName": "inputs", "type": "Any"}]