[{"lineNumber": 22, "col_offset": 0, "nodeName": "CONV_LETTERS", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "Encoder", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "ResNet", "type": "Type[ResNet]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "ResNet", "type": "Type[ResNet]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "ResNet34", "type": "Type[ResNet34]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "ResNet50", "type": "Type[ResNet50]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "ResNet50", "type": "Type[ResNet50]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "ResNet18", "type": "Type[ResNet18]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "ResNet34", "type": "Type[ResNet34]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "ResNet50", "type": "Type[ResNet50]"}, {"lineNumber": 179, "col_offset": 17, "nodeName": "ResNet101", "type": "Type[ResNet101]"}, {"lineNumber": 188, "col_offset": 17, "nodeName": "ResNet152", "type": "Type[ResNet152]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "num_convs", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "filters", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "kernel_size", "type": "Union[List[Any], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "strides", "type": "Union[List[Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "strides_d", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "groups", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "side_branch_stride", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "side_branch_stride_d", "type": "int"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "downsample", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "bottleneck", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "layout", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "layer_params", "type": "List[Union[Dict[str, Union[Any, int, List[int], List[Any], List[Union[Any, int]]]], Dict[nothing, nothing]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "filters", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "filters", "type": "Any"}, {"lineNumber": 36, "col_offset": 73, "nodeName": "filters", "type": "Any"}, {"lineNumber": 37, "col_offset": 85, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 73, "nodeName": "strides", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "strides", "type": "Union[List[Any], Any]"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "num_convs", "type": "bool"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "prod", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "strides", "type": "Union[List[Any], Any]"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "side_branch_stride", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "downsample", "type": "Union[int, Any]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "downsample", "type": "Union[int, Any]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "side_branch_stride_d", "type": "Union[int, Any]"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "downsample", "type": "Union[int, Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "layout", "type": "str"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "kernel_size", "type": "Union[List[int], List[Any], List[Union[Any, int]]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "strides", "type": "Union[List[int], List[Union[Any, int]], List[Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "strides_d", "type": "Union[List[int], List[Union[Any, int]], List[Any]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "groups", "type": "Union[List[int], List[Union[Any, int]]]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "bottleneck", "type": "Union[int, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "op", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "block", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "classes", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "classes", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "eval", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "filters", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "filters", "type": "Any"}, {"lineNumber": 36, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "num_convs", "type": "bool"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 37, "col_offset": 75, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 38, "nodeName": "num_convs", "type": "bool"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 54, "nodeName": "strides", "type": "Any"}, {"lineNumber": 38, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "num_convs", "type": "bool"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "groups", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "downsample", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "strides_d", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "bottleneck", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "layout", "type": "Union[Any, str]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "layer_params", "type": "List[Union[Dict[str, Union[Any, int, List[int], List[Any], List[Union[Any, int]]]], Dict[nothing, nothing]]]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 68, "nodeName": "layout", "type": "str"}, {"lineNumber": 59, "col_offset": 84, "nodeName": "filters", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "kernel_size", "type": "Union[List[Any], Any, List[int], List[Union[Any, int]]]"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "strides", "type": "Union[List[int], List[Any], Any, List[Union[Any, int]]]"}, {"lineNumber": 60, "col_offset": 80, "nodeName": "groups", "type": "Union[List[Union[Any, int]], List[int], List[Any]]"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "ResBlock"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "ResBlock", "type": "Type[ResBlock]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "self", "type": "ResNet"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "self", "type": "ResNet"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "letter", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "CONV_LETTERS", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "letter", "type": "Any"}, {"lineNumber": 31, "col_offset": 62, "nodeName": "layout", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "filters", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "strides", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "downsample", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "layout", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "kernel_size", "type": "Union[Any, List[Any]]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "strides", "type": "Union[List[Any], Any]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "strides_d", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "groups", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "bottleneck", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "filters", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "strides_d", "type": "Union[List[Any], List[Union[Any, int]], List[int]]"}, {"lineNumber": 58, "col_offset": 70, "nodeName": "side_branch_stride_d", "type": "Union[Any, int]"}, {"lineNumber": 58, "col_offset": 101, "nodeName": "n_reps", "type": "Any"}, {"lineNumber": 61, "col_offset": 94, "nodeName": "side_branch_stride", "type": "Any"}, {"lineNumber": 78, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "get_num_channels", "type": "Any"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 75, "nodeName": "key", "type": "str"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "bottleneck", "type": "Union[int, Any]"}, {"lineNumber": 61, "col_offset": 70, "nodeName": "filters", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "filters", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "filters", "type": "Any"}]