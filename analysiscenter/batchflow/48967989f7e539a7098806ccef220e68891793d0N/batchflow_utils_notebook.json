[{"lineNumber": 9, "col_offset": 0, "nodeName": "in_notebook", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "get_notebook_path", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "get_notebook_name", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "kernel_id", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "servers", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "server", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "servers", "type": "Any"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "path", "type": "Optional[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "options", "type": "Union[Any, str]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "ignore_codes", "type": "Union[Any, List[str]]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "code_list", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "code", "type": "str"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "errors", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "report", "type": "Any"}, {"lineNumber": 142, "col_offset": 7, "nodeName": "errors", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 183, "col_offset": 7, "nodeName": "return_report", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "shell", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "list_running_servers", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "path", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "options", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "ignore_codes", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "code", "type": "Any"}, {"lineNumber": 96, "col_offset": 10, "nodeName": "_", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "from_filename", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "path", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "cell_codes", "type": "List[int]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "cell_counter", "type": "int"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "cell_code_lines", "type": "List[int]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "cell_code_counter", "type": "int"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "part", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "lines", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "code_list", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "temp_file", "type": "TextIO"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "pylint_stdout", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "pylint_stderr", "type": "Any"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "py_run", "type": "Any"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "getvalue", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "printer", "type": "Any"}, {"lineNumber": 180, "col_offset": 11, "nodeName": "keep_script", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "shell", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "shell", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "in_notebook", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "text", "type": "str"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "in_notebook", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "in_notebook", "type": "Callable[[], Any]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "get_notebook_path", "type": "Callable[[], Any]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "options", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "code", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "lines", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "cell_code_counter", "type": "int"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "cell_counter", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "cell_code_counter", "type": "int"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "code", "type": "str"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "lint", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 59, "nodeName": "options", "type": "Union[Any, str]"}, {"lineNumber": 140, "col_offset": 13, "nodeName": "pylint_stderr", "type": "Any"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "pylint_stdout", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "printer", "type": "Any"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "errors", "type": "Any"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "report", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "code_line_number", "type": "int"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "code_line", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "cell_number", "type": "int"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "cell_code_number", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "error_code", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "error_msg", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "report_msg", "type": "str"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "report_msg", "type": "str"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "search", "type": "Callable"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "requests", "type": "module"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "urljoin", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "json", "type": "module"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "kernel_id", "type": "str"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "relative_path", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "PythonExporter", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "line", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "line", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "line", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "part", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "cell_counter", "type": "int"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "cell_code_counter", "type": "int"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "line", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "temp_file", "type": "TextIO"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "replace", "type": "Any"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "temp_name", "type": "Any"}, {"lineNumber": 150, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "code_list", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "ignore_comments", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "cell_codes", "type": "List[int]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "report_msg", "type": "str"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "get_ipython", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "get_connection_file", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "compat", "type": "module"}, {"lineNumber": 38, "col_offset": 56, "nodeName": "server", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "relative_path", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "line", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "line", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "code_list", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "cell_codes", "type": "List[int]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "cell_code_lines", "type": "List[int]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "path", "type": "module"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "cell_code_lines", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "strip", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "report_", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "connect", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "requests", "type": "module"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "get", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "server", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "splitext", "type": "Callable"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "split", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "code_line_number", "type": "int"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "code_line", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "code", "type": "Union[Any, str]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "code", "type": "Union[Any, str]"}, {"lineNumber": 158, "col_offset": 50, "nodeName": "ignore_codes", "type": "Union[Any, List[str]]"}, {"lineNumber": 162, "col_offset": 37, "nodeName": "code_line_number", "type": "int"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "ipykernel", "type": "Any"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "server", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "get_notebook_path", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "find", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "find", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 163, "col_offset": 47, "nodeName": "code_line_number", "type": "int"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "find", "type": "Any"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "find", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "find", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "find", "type": "Any"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "line", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "line", "type": "Any"}, {"lineNumber": 164, "col_offset": 36, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "error_line", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "line", "type": "Any"}]