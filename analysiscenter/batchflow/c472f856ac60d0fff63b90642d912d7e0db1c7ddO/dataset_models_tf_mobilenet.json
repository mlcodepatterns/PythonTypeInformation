[{"lineNumber": 17, "col_offset": 16, "nodeName": "TFModel", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "names", "type": "Union[Any, List[str]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "data_format", "type": "Optional[Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "filters", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "data_format", "type": "Optional[Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "new_shape", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "names", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "names", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "_build_config", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "names", "type": "Union[Any, List[str]]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "get_from_config", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "get_from_config", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "get_from_config", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "input_block", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "data_format", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "get_from_config", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "get_from_config", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "channels_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "data_format", "type": "Optional[Any]"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "double_filters", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "conv_block", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "filters", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "filters", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "width_factor", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "data_format", "type": "Optional[Any]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "resize_images", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "new_shape", "type": "List[int]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "conv_block", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 163, "col_offset": 29, "nodeName": "filters", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "_DEFAULT_BODY", "type": "Dict[str, Union[List[bool], List[int]]]"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 69, "col_offset": 64, "nodeName": "_DEFAULT_BODY", "type": "Dict[str, Union[List[bool], List[int]]]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "stride", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "strides", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "cls", "type": "Type[MobileNet]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "strides", "type": "Any"}, {"lineNumber": 129, "col_offset": 81, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "cls", "type": "Type[MobileNet]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "size", "type": "Any"}, {"lineNumber": 160, "col_offset": 61, "nodeName": "initial_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "stride", "type": "Any"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 127, "col_offset": 73, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "resolution_factor", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "cls", "type": "Type[MobileNet]"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "double_filters", "type": "Any"}, {"lineNumber": 100, "col_offset": 87, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "self", "type": "MobileNet"}, {"lineNumber": 100, "col_offset": 56, "nodeName": "index", "type": "int"}, {"lineNumber": 100, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "index", "type": "int"}]