[{"lineNumber": 13, "col_offset": 21, "nodeName": "Module", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "Module", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "Module", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "Module", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "Module", "type": "Any"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 183, "col_offset": 10, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "spatial_shape", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "filters", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "modules", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "level", "type": "int"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "pyramid", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "modules", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "combine", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "levels", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pyramid", "type": "Union[Any, List[Any]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "modules", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "bottleneck", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "level", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "rates", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "pyramid_layer", "type": "PyramidPooling"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "modules", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "combine", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "levels", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "conv3", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "phi", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "theta", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "attention", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "depth", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "inputs_spatial_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "enc_layout", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "emb_layout", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "combine_layout", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "main_layout", "type": "str"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "main_kernel_size", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "main_strides", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "branches", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "combine", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "attention", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "main", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "inputs_spatial_shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "mid_branch", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "depth_layers", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "depth", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "skip_layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "skips", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "upsample_layers", "type": "Any"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "upsamples", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "combine_pyramid", "type": "List[Any]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "combine_attention", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "mid", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "skips", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "pyramid_out", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "attention", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "filters", "type": "None"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "filters", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "PyramidPooling"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PyramidPooling"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "combine", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "levels", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "pyramid", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "bottleneck", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "PyramidPooling", "type": "Type[PyramidPooling]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "pyramid_layer", "type": "PyramidPooling"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ASPP"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "ASPP"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "combine", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "levels", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "bs", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "spatial", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "prod", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "spatial", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "view", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "bs", "type": "Any"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "N", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "bs", "type": "Any"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "N", "type": "Any"}, {"lineNumber": 145, "col_offset": 44, "nodeName": "N", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "view", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "bs", "type": "Any"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "N", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "view", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "bs", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "depth", "type": "int"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "layout", "type": "Any"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "upsample_layout", "type": "Any"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "combine_layout", "type": "str"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "FeaturePyramidAttention"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "attention", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "pyramid", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "combine", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "skips", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "upsamples", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "depth", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "depth_layer", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "skip_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "skip_out", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "upsample_layer", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "FPA"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "mid_branch", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "mid", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "depth_layer", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "skip_layer", "type": "Any"}, {"lineNumber": 219, "col_offset": 39, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "depth_layers", "type": "Any"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "skip_layers", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "skip", "type": "Any"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "skips", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "pyramid_out", "type": "nothing"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "pyramid_out", "type": "nothing"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "attention_branch", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "combine_attention", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "level", "type": "int"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "pool_size", "type": "Tuple[Any, ...]"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "pool_strides", "type": "Tuple[Any, ...]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "self", "type": "PyramidPooling"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "pyramid", "type": "Any"}, {"lineNumber": 97, "col_offset": 70, "nodeName": "pyramid", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 53, "nodeName": "layout", "type": "Any"}, {"lineNumber": 100, "col_offset": 69, "nodeName": "filters", "type": "Any"}, {"lineNumber": 100, "col_offset": 95, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "modules", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "filters", "type": "Any"}, {"lineNumber": 108, "col_offset": 79, "nodeName": "pyramid", "type": "Union[Any, List[Any]]"}, {"lineNumber": 108, "col_offset": 90, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "modules", "type": "Any"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "layer", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "ASPP"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 145, "col_offset": 30, "nodeName": "phi", "type": "Any"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "theta", "type": "Any"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "spatial", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "gamma", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "out", "type": "Any"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "filters", "type": "Any"}, {"lineNumber": 160, "col_offset": 97, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 48, "nodeName": "layout", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "enc_layout", "type": "str"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "emb_layout", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "main_layout", "type": "str"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 174, "col_offset": 76, "nodeName": "filters", "type": "Any"}, {"lineNumber": 174, "col_offset": 97, "nodeName": "main_kernel_size", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "main_strides", "type": "List[int]"}, {"lineNumber": 175, "col_offset": 62, "nodeName": "branches", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 175, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "self", "type": "FeaturePyramidAttention"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "FeaturePyramidAttention"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "FeaturePyramidAttention"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "attention", "type": "Any"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "main", "type": "Any"}, {"lineNumber": 187, "col_offset": 31, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 188, "col_offset": 107, "nodeName": "filters", "type": "Any"}, {"lineNumber": 189, "col_offset": 87, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 191, "col_offset": 58, "nodeName": "layout", "type": "Any"}, {"lineNumber": 191, "col_offset": 89, "nodeName": "filters", "type": "Any"}, {"lineNumber": 191, "col_offset": 100, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 194, "col_offset": 81, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "depth_layer", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "depth_layer", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "skip_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "skip_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 207, "col_offset": 29, "nodeName": "Upsample", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "upsample_layer", "type": "Any"}, {"lineNumber": 217, "col_offset": 14, "nodeName": "self", "type": "FPA"}, {"lineNumber": 219, "col_offset": 43, "nodeName": "self", "type": "FPA"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "self", "type": "FPA"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "depth_layer", "type": "Any"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "skip_layer", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "skip", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "upsample", "type": "nothing"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "combine", "type": "nothing"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "upsample_layers", "type": "Any"}, {"lineNumber": 225, "col_offset": 76, "nodeName": "combine_pyramid", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "upsample", "type": "nothing"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "pyramid_out", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "combine", "type": "nothing"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "self", "type": "FPA"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "self", "type": "FPA"}, {"lineNumber": 231, "col_offset": 39, "nodeName": "pyramid_out", "type": "Any"}, {"lineNumber": 231, "col_offset": 52, "nodeName": "attention", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "pyramid", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "Identity", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "Upsample", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "layer", "type": "Any"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "upsample_layer", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "modules", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "self", "type": "PyramidPooling"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "layout", "type": "Any"}, {"lineNumber": 104, "col_offset": 68, "nodeName": "filters", "type": "Any"}, {"lineNumber": 104, "col_offset": 89, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "level", "type": "Any"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "modules", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "self", "type": "ASPP"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "device", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "layout", "type": "Any"}, {"lineNumber": 134, "col_offset": 75, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 134, "col_offset": 96, "nodeName": "strides", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 135, "col_offset": 65, "nodeName": "reduction_ratio", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "reduction_ratio", "type": "Any"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "conv3", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "attention", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 159, "col_offset": 75, "nodeName": "upsample_layout", "type": "Any"}, {"lineNumber": 160, "col_offset": 72, "nodeName": "inputs_spatial_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "downsample_layout", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "depth", "type": "int"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "depth", "type": "int"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "layout", "type": "Any"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "filters", "type": "Any"}, {"lineNumber": 171, "col_offset": 113, "nodeName": "filters", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "branches", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 188, "col_offset": 82, "nodeName": "upsample_layout", "type": "Any"}, {"lineNumber": 189, "col_offset": 62, "nodeName": "inputs_spatial_shape", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "nn", "type": "Any"}, {"lineNumber": 194, "col_offset": 81, "nodeName": "nn", "type": "Any"}, {"lineNumber": 196, "col_offset": 71, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 92, "nodeName": "filters", "type": "Any"}, {"lineNumber": 196, "col_offset": 103, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "depth", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "args", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 54, "nodeName": "layout", "type": "Any"}, {"lineNumber": 202, "col_offset": 70, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "skips", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "upsample_layout", "type": "Any"}, {"lineNumber": 207, "col_offset": 70, "nodeName": "filters", "type": "Any"}, {"lineNumber": 207, "col_offset": 86, "nodeName": "skip_out", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "upsamples", "type": "Any"}, {"lineNumber": 213, "col_offset": 32, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "skips", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "self", "type": "FPA"}, {"lineNumber": 225, "col_offset": 76, "nodeName": "self", "type": "FPA"}, {"lineNumber": 228, "col_offset": 48, "nodeName": "pyramid_out", "type": "nothing"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 73, "nodeName": "filters", "type": "str"}, {"lineNumber": 49, "col_offset": 94, "nodeName": "kernel_size", "type": "int"}, {"lineNumber": 50, "col_offset": 42, "nodeName": "pool_op", "type": "str"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "pool_size", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 85, "nodeName": "pool_strides", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 101, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 81, "nodeName": "kwargs", "type": "Dict[str, Union[Any, List[Any]]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 147, "col_offset": 14, "nodeName": "self", "type": "SelfAttention"}, {"lineNumber": 148, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "layout", "type": "Any"}, {"lineNumber": 166, "col_offset": 50, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "layout", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "upsample_layout", "type": "Any"}, {"lineNumber": 171, "col_offset": 72, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 188, "col_offset": 73, "nodeName": "layout", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 81, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "downsample_layout", "type": "Any"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "layout", "type": "Any"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "Combine", "type": "Any"}, {"lineNumber": 213, "col_offset": 72, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 213, "col_offset": 76, "nodeName": "pyramid_kernel_size", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "skip", "type": "Any"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "layout", "type": "str"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 46, "col_offset": 72, "nodeName": "int32", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "astype", "type": "Any"}, {"lineNumber": 47, "col_offset": 86, "nodeName": "int32", "type": "Any"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 46, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 86, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 54, "nodeName": "spatial_shape", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "floor", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "spatial_shape", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "level", "type": "int"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 68, "nodeName": "level", "type": "int"}, {"lineNumber": 47, "col_offset": 47, "nodeName": "spatial_shape", "type": "numpy.ndarray"}]