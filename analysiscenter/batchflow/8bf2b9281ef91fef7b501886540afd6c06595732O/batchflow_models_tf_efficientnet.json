[{"lineNumber": 11, "col_offset": 20, "nodeName": "TFModel", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "ScalableModel", "type": "Type[ScalableModel]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "EfficientNetB0", "type": "Type[EfficientNetB0]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "resolution", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "base_block", "type": "Optional[Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "new_layer_args", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "scalable", "type": "Union[Any, bool]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "w_factor", "type": "Optional[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "d_factor", "type": "Optional[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "repeats", "type": "Optional[Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "block", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "divisor", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "min_depth", "type": "int"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "filters", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "factor", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "min_depth", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "new_filters", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 276, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "config", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "default_config", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "build_config", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "names", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "fill_params", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "non_repeated_block", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "fill_params", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "non_repeated_block", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "update_layer_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "block_args", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "base_block", "type": "Optional[Any]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "scalable", "type": "Union[Any, bool]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "repeats", "type": "Optional[Any]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "MobileNet_v2", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "factor", "type": "Any"}, {"lineNumber": 172, "col_offset": 19, "nodeName": "filters", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "min_depth", "type": "int"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "max", "type": "Callable"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "min_depth", "type": "int"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "new_filters", "type": "int"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "new_filters", "type": "int"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "divisor", "type": "int"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "new_filters", "type": "int"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "default_config", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "factor", "type": "Optional[Any]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "ceil", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 53, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "block_args", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 69, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "block_args", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "repeats", "type": "Union[Any, int, List[Any]]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "base_block", "type": "Optional[Any]"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "w_factor", "type": "Optional[Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "d_factor", "type": "Optional[Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "round_repeats", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "repeats", "type": "Optional[Any]"}, {"lineNumber": 109, "col_offset": 63, "nodeName": "d_factor", "type": "Optional[Any]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "swish", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "swish", "type": "Any"}, {"lineNumber": 176, "col_offset": 77, "nodeName": "divisor", "type": "int"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "filters", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "self", "type": "ScalableModel"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "repeats", "type": "Optional[Any]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "factor", "type": "Optional[Any]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "block", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "variable_scope", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "repeats", "type": "Union[List[Any], int, Any]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "new_layer_args", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "round_filters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 100, "col_offset": 67, "nodeName": "w_factor", "type": "Optional[Any]"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "nn", "type": "Any"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "swish", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "divisor", "type": "int"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 205, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 253, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "new_layer_args", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 81, "col_offset": 24, "nodeName": "conv_block", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 133, "col_offset": 50, "nodeName": "tf", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 63, "col_offset": 69, "nodeName": "block_args", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "new_layer_args", "type": "Dict[Union[Any, str], Union[Any, int, List[Any]]]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "round_filters", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "w_factor", "type": "Optional[Any]"}, {"lineNumber": 102, "col_offset": 76, "nodeName": "f", "type": "Any"}, {"lineNumber": 102, "col_offset": 81, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 140, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "tf", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "filters", "type": "Any"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "cls", "type": "Type[ScalableModel]"}, {"lineNumber": 104, "col_offset": 82, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 104, "col_offset": 87, "nodeName": "filters", "type": "Optional[Any]"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "divisor", "type": "int"}]