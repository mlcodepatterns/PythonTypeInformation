[{"lineNumber": 31, "col_offset": 0, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "arithmetize", "type": "Callable[[Any], Any]"}, {"lineNumber": 606, "col_offset": 0, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "MAX_ITERS", "type": "float"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "__or__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "__and__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "__rand__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "apply", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "truncate", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 342, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 355, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 370, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 385, "col_offset": 18, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 401, "col_offset": 22, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 415, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 436, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 504, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 553, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 575, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "operation", "type": "None"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 386, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "operation", "type": "str"}, {"lineNumber": 394, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "grids", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "tf_distributions", "type": "None"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 39, "col_offset": 88, "nodeName": "module", "type": "str"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "__array_priority__", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 180, "col_offset": 75, "nodeName": "MAX_ITERS", "type": "float"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "normed", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "up_size", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "low_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "up_sample", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "low_sample", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "sample_points", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "sample_points", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "sample_points", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "left_sample", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "right_sample", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 273, "col_offset": 84, "nodeName": "MAX_ITERS", "type": "float"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "bases", "type": "List[Sampler]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "high", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "low", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "expr", "type": "Any"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "expr", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "prob", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "sample_anyways", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "sample_anyways", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 282, "col_offset": 25, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "ctr", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 394, "col_offset": 15, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 483, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 507, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "distr", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "nonzero_probs", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "state_sampler", "type": "Any"}, {"lineNumber": 573, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "bins", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "meshgrid", "type": "Any"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "oper", "type": "str"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "_class", "type": "Union[Type[RPowSampler], Type[RFloordivSampler], Type[RModSampler], Type[AddSampler], Type[MulSampler], Type[TruedivSampler], Type[SubSampler], Type[PowSampler], Type[FloordivSampler], Type[ModSampler], Type[RAddSampler], Type[RMulSampler], Type[RTruedivSampler], Type[RSubSampler]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "oper", "type": "str"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "OrSampler", "type": "Type[OrSampler]"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "weight", "type": "float"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "AndSampler", "type": "Type[AndSampler]"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "ApplySampler", "type": "Type[ApplySampler]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "transform", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "TruncateSampler", "type": "Type[TruncateSampler]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "high", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "low", "type": "Any"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "expr", "type": "Any"}, {"lineNumber": 211, "col_offset": 54, "nodeName": "prob", "type": "Any"}, {"lineNumber": 211, "col_offset": 60, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 211, "col_offset": 71, "nodeName": "sample_anyways", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 219, "col_offset": 22, "nodeName": "left", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "right", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "up_size", "type": "Any"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "sample_points", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "left", "type": "Any"}, {"lineNumber": 246, "col_offset": 28, "nodeName": "right", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "sample", "type": "Any"}, {"lineNumber": 252, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "ApplySampler"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "ApplySampler"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "transform", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 276, "col_offset": 22, "nodeName": "sampler", "type": "Sampler"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 288, "col_offset": 11, "nodeName": "size", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "low", "type": "Any"}, {"lineNumber": 291, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "prob", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "high", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "low", "type": "Any"}, {"lineNumber": 291, "col_offset": 53, "nodeName": "expr", "type": "Any"}, {"lineNumber": 291, "col_offset": 64, "nodeName": "prob", "type": "Any"}, {"lineNumber": 293, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "prob", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 301, "col_offset": 14, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 301, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "cond", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "cumulated", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "ctr", "type": "int"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 344, "col_offset": 22, "nodeName": "left", "type": "Any"}, {"lineNumber": 344, "col_offset": 28, "nodeName": "right", "type": "Any"}, {"lineNumber": 347, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "AddSampler", "type": "Type[AddSampler]"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "MulSampler", "type": "Type[MulSampler]"}, {"lineNumber": 396, "col_offset": 44, "nodeName": "TruedivSampler", "type": "Type[TruedivSampler]"}, {"lineNumber": 396, "col_offset": 60, "nodeName": "SubSampler", "type": "Type[SubSampler]"}, {"lineNumber": 396, "col_offset": 72, "nodeName": "PowSampler", "type": "Type[PowSampler]"}, {"lineNumber": 396, "col_offset": 84, "nodeName": "FloordivSampler", "type": "Type[FloordivSampler]"}, {"lineNumber": 396, "col_offset": 101, "nodeName": "ModSampler", "type": "Type[ModSampler]"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "RAddSampler", "type": "Type[RAddSampler]"}, {"lineNumber": 397, "col_offset": 33, "nodeName": "RMulSampler", "type": "Type[RMulSampler]"}, {"lineNumber": 397, "col_offset": 46, "nodeName": "RTruedivSampler", "type": "Type[RTruedivSampler]"}, {"lineNumber": 397, "col_offset": 63, "nodeName": "RSubSampler", "type": "Type[RSubSampler]"}, {"lineNumber": 397, "col_offset": 76, "nodeName": "RPowSampler", "type": "Type[RPowSampler]"}, {"lineNumber": 397, "col_offset": 89, "nodeName": "RFloordivSampler", "type": "Type[RFloordivSampler]"}, {"lineNumber": 398, "col_offset": 20, "nodeName": "RModSampler", "type": "Type[RModSampler]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 457, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 460, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 460, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 479, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 479, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 480, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 505, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 505, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 506, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 506, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "distr", "type": "Any"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "edges", "type": "Any"}, {"lineNumber": 554, "col_offset": 39, "nodeName": "seed", "type": "Any"}, {"lineNumber": 555, "col_offset": 11, "nodeName": "histo", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 565, "col_offset": 21, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 566, "col_offset": 21, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "probs", "type": "Any"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 573, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "high", "type": "Any"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "state_sampler", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "histogramdd", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 603, "col_offset": 21, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 618, "col_offset": 25, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 619, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 619, "col_offset": 52, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "alias", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "rnd_submodules", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "classes", "type": "Dict[str, Union[Type[RFloordivSampler], Type[RModSampler], Type[AddSampler], Type[MulSampler], Type[TruedivSampler], Type[SubSampler], Type[PowSampler], Type[FloordivSampler], Type[ModSampler], Type[RAddSampler], Type[RMulSampler], Type[RTruedivSampler], Type[RSubSampler], Type[RPowSampler]]]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "_class", "type": "Union[Type[MulSampler], Type[RMulSampler], Type[TruedivSampler], Type[RTruedivSampler], Type[SubSampler], Type[RPowSampler], Type[RSubSampler], Type[PowSampler], Type[RFloordivSampler], Type[FloordivSampler], Type[RModSampler], Type[ModSampler], Type[AddSampler], Type[RAddSampler]]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "weight", "type": "Any"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "weight", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "sum", "type": "Any"}, {"lineNumber": 224, "col_offset": 39, "nodeName": "weights", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "normed", "type": "Any"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "up_size", "type": "Any"}, {"lineNumber": 235, "col_offset": 48, "nodeName": "low_size", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "up_sample", "type": "Any"}, {"lineNumber": 236, "col_offset": 51, "nodeName": "low_sample", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 245, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 31, "nodeName": "left_sample", "type": "Any"}, {"lineNumber": 254, "col_offset": 44, "nodeName": "right_sample", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 260, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "self", "type": "ApplySampler"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "sample", "type": "Any"}, {"lineNumber": 268, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 275, "col_offset": 26, "nodeName": "args", "type": "Tuple[()]"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 291, "col_offset": 32, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 291, "col_offset": 53, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 291, "col_offset": 64, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "bool", "type": "Any"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "low", "type": "Any"}, {"lineNumber": 311, "col_offset": 15, "nodeName": "high", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "cond", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "ctr", "type": "int"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "sample_anyways", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 332, "col_offset": 32, "nodeName": "cond", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 40, "nodeName": "size", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "operation", "type": "Any"}, {"lineNumber": 349, "col_offset": 67, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 433, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 461, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 479, "col_offset": 26, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 479, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 480, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 480, "col_offset": 38, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 481, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 505, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 508, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 509, "col_offset": 29, "nodeName": "ss", "type": "Any"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 509, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 523, "col_offset": 18, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 524, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 524, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 554, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 556, "col_offset": 24, "nodeName": "histo", "type": "Any"}, {"lineNumber": 557, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 558, "col_offset": 13, "nodeName": "edges", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 559, "col_offset": 25, "nodeName": "edges", "type": "Any"}, {"lineNumber": 560, "col_offset": 12, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 569, "col_offset": 33, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 572, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 573, "col_offset": 29, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 589, "col_offset": 36, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 589, "col_offset": 62, "nodeName": "nonzero_probs", "type": "Any"}, {"lineNumber": 589, "col_offset": 87, "nodeName": "size", "type": "Any"}, {"lineNumber": 592, "col_offset": 20, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 593, "col_offset": 15, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 593, "col_offset": 38, "nodeName": "low", "type": "Any"}, {"lineNumber": 593, "col_offset": 48, "nodeName": "high", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 602, "col_offset": 45, "nodeName": "points", "type": "Any"}, {"lineNumber": 602, "col_offset": 58, "nodeName": "edges", "type": "Any"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 619, "col_offset": 20, "nodeName": "grids", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "ALIASES", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "module", "type": "str"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "alias", "type": "Any"}, {"lineNumber": 41, "col_offset": 80, "nodeName": "alias", "type": "Any"}, {"lineNumber": 41, "col_offset": 87, "nodeName": "module", "type": "str"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "module", "type": "str"}, {"lineNumber": 45, "col_offset": 80, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 45, "col_offset": 90, "nodeName": "module", "type": "str"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "fake", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 224, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 237, "col_offset": 60, "nodeName": "size", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 294, "col_offset": 45, "nodeName": "prob", "type": "Any"}, {"lineNumber": 295, "col_offset": 43, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 303, "col_offset": 47, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 304, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "expr", "type": "Any"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "high", "type": "Any"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "low", "type": "Any"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 321, "col_offset": 21, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 27, "nodeName": "sample", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 55, "nodeName": "operation", "type": "Any"}, {"lineNumber": 348, "col_offset": 71, "nodeName": "sample", "type": "Any"}, {"lineNumber": 348, "col_offset": 92, "nodeName": "size", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 349, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 349, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 349, "col_offset": 76, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "constant", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 481, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 482, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 508, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 509, "col_offset": 33, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 524, "col_offset": 49, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 561, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 561, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 563, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "bins", "type": "Any"}, {"lineNumber": 570, "col_offset": 40, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 589, "col_offset": 62, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 592, "col_offset": 20, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 592, "col_offset": 31, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 592, "col_offset": 42, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 592, "col_offset": 53, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 602, "col_offset": 58, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 619, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 53, "nodeName": "module", "type": "str"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 20, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "prob", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 331, "col_offset": 34, "nodeName": "cond", "type": "Any"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "sample", "type": "Any"}, {"lineNumber": 348, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 348, "col_offset": 55, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 349, "col_offset": 76, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 416, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 560, "col_offset": 49, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 560, "col_offset": 62, "nodeName": "edges", "type": "Any"}, {"lineNumber": 561, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 561, "col_offset": 39, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 561, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 565, "col_offset": 52, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 565, "col_offset": 65, "nodeName": "edges", "type": "Any"}, {"lineNumber": 566, "col_offset": 33, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 566, "col_offset": 51, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 566, "col_offset": 64, "nodeName": "edges", "type": "Any"}, {"lineNumber": 568, "col_offset": 22, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 568, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 568, "col_offset": 41, "nodeName": "bins", "type": "Any"}, {"lineNumber": 569, "col_offset": 33, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "self", "type": "ApplySampler"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 304, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "expr", "type": "Any"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "sample", "type": "Any"}, {"lineNumber": 323, "col_offset": 20, "nodeName": "warnings", "type": "module"}, {"lineNumber": 323, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 325, "col_offset": 42, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 327, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "max_iters", "type": "Any"}, {"lineNumber": 348, "col_offset": 71, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 560, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 560, "col_offset": 30, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 561, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 565, "col_offset": 65, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 566, "col_offset": 64, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 568, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 568, "col_offset": 41, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 569, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 44, "nodeName": "probs", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 83, "nodeName": "low", "type": "Any"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "sample", "type": "Any"}, {"lineNumber": 309, "col_offset": 53, "nodeName": "low", "type": "Any"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 313, "col_offset": 80, "nodeName": "high", "type": "Any"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "sample", "type": "Any"}, {"lineNumber": 315, "col_offset": 50, "nodeName": "high", "type": "Any"}, {"lineNumber": 325, "col_offset": 42, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 328, "col_offset": 68, "nodeName": "self", "type": "TruncateSampler"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "bases", "type": "List[Any]"}, {"lineNumber": 348, "col_offset": 71, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 569, "col_offset": 44, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 309, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 313, "col_offset": 63, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 315, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 348, "col_offset": 27, "nodeName": "self", "type": "BaseOperationSampler"}, {"lineNumber": 307, "col_offset": 45, "nodeName": "expr", "type": "Any"}, {"lineNumber": 307, "col_offset": 50, "nodeName": "sample", "type": "Any"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "expr", "type": "Any"}, {"lineNumber": 313, "col_offset": 47, "nodeName": "sample", "type": "Any"}]