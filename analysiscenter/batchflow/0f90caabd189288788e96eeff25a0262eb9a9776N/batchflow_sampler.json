[{"lineNumber": 30, "col_offset": 0, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "arithmetize", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "SMALL_SHARE", "type": "float"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "__or__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "__and__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 215, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "BaseOperationSampler", "type": "Type[BaseOperationSampler]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "sample", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "oper", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 243, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "tf_distributions", "type": "None"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 88, "nodeName": "module", "type": "str"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "__array_priority__", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "left", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "right", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_up", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "_low", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "left", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "right", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "_left", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "_right", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "left", "type": "Any"}, {"lineNumber": 191, "col_offset": 20, "nodeName": "left", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "right", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "right", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "oper", "type": "str"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "_class", "type": "Union[Type[PowSampler], Type[FloordivSampler], Type[ModSampler], Type[AddSampler], Type[MulSampler], Type[TruedivSampler], Type[SubSampler]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "oper", "type": "str"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "OrSampler", "type": "Type[OrSampler]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "other", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "AndSampler", "type": "Type[AndSampler]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "sample", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "sample", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 217, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 231, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "right", "type": "Any"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 245, "col_offset": 20, "nodeName": "AddSampler", "type": "Type[AddSampler]"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "MulSampler", "type": "Type[MulSampler]"}, {"lineNumber": 245, "col_offset": 44, "nodeName": "TruedivSampler", "type": "Type[TruedivSampler]"}, {"lineNumber": 245, "col_offset": 60, "nodeName": "SubSampler", "type": "Type[SubSampler]"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "PowSampler", "type": "Type[PowSampler]"}, {"lineNumber": 246, "col_offset": 32, "nodeName": "FloordivSampler", "type": "Type[FloordivSampler]"}, {"lineNumber": 246, "col_offset": 49, "nodeName": "ModSampler", "type": "Type[ModSampler]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 272, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "alias", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "rnd_submodules", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "classes", "type": "Dict[str, Union[Type[FloordivSampler], Type[ModSampler], Type[AddSampler], Type[MulSampler], Type[TruedivSampler], Type[SubSampler], Type[PowSampler]]]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "_class", "type": "Union[Type[SubSampler], Type[AddSampler], Type[PowSampler], Type[MulSampler], Type[FloordivSampler], Type[TruedivSampler], Type[ModSampler]]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "other", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "weight", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "weight", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "left", "type": "Any"}, {"lineNumber": 168, "col_offset": 36, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "right", "type": "Any"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "_up", "type": "Any"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "_low", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 177, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "left", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "right", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "_left", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "_right", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 190, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "self", "type": "MulSampler"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "self", "type": "TruedivSampler"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "self", "type": "SubSampler"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "self", "type": "PowSampler"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "self", "type": "FloordivSampler"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "self", "type": "ModSampler"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 273, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 291, "col_offset": 26, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "ALIASES", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "module", "type": "str"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "alias", "type": "Any"}, {"lineNumber": 40, "col_offset": 80, "nodeName": "alias", "type": "Any"}, {"lineNumber": 40, "col_offset": 87, "nodeName": "module", "type": "str"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "module", "type": "str"}, {"lineNumber": 44, "col_offset": 80, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 44, "col_offset": 90, "nodeName": "module", "type": "str"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "fake", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "left", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "right", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 171, "col_offset": 47, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "self", "type": "AndSampler"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 197, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "sample", "type": "Any"}, {"lineNumber": 197, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 199, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 199, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "sample", "type": "Any"}, {"lineNumber": 204, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 211, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "sample", "type": "Any"}, {"lineNumber": 211, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "sample", "type": "Any"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 220, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "sample", "type": "Any"}, {"lineNumber": 225, "col_offset": 63, "nodeName": "size", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "right", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "sample", "type": "Any"}, {"lineNumber": 232, "col_offset": 63, "nodeName": "size", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 234, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 234, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "right", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 239, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "sample", "type": "Any"}, {"lineNumber": 239, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 53, "nodeName": "right", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 38, "col_offset": 53, "nodeName": "module", "type": "str"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "self", "type": "OrSampler"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "random", "type": "Any"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 199, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 53, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 53, "nodeName": "self", "type": "MulSampler"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "self", "type": "TruedivSampler"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 220, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "self", "type": "SubSampler"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "right", "type": "Any"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 54, "nodeName": "self", "type": "PowSampler"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "right", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 234, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 54, "nodeName": "self", "type": "FloordivSampler"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "right", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "left", "type": "Any"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 53, "nodeName": "self", "type": "ModSampler"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 19, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 197, "col_offset": 44, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "self", "type": "AddSampler"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "self", "type": "MulSampler"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "self", "type": "MulSampler"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "self", "type": "MulSampler"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "self", "type": "TruedivSampler"}, {"lineNumber": 211, "col_offset": 44, "nodeName": "self", "type": "TruedivSampler"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "self", "type": "TruedivSampler"}, {"lineNumber": 218, "col_offset": 19, "nodeName": "self", "type": "SubSampler"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "self", "type": "SubSampler"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "self", "type": "SubSampler"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "self", "type": "PowSampler"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "self", "type": "PowSampler"}, {"lineNumber": 227, "col_offset": 19, "nodeName": "self", "type": "PowSampler"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "FloordivSampler"}, {"lineNumber": 232, "col_offset": 45, "nodeName": "self", "type": "FloordivSampler"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "self", "type": "FloordivSampler"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "self", "type": "ModSampler"}, {"lineNumber": 239, "col_offset": 44, "nodeName": "self", "type": "ModSampler"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "self", "type": "ModSampler"}]