[{"lineNumber": 10, "col_offset": 0, "nodeName": "piecewise_constant", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "cyclic_learning_rate", "type": "Callable[..., Any]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "piecewise_constant", "type": "Any"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "train", "type": "Any"}, {"lineNumber": 12, "col_offset": 53, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 12, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "name_scope_v2", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "convert_to_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "cast", "type": "Any"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "cast", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 54, "col_offset": 45, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "second_comp", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "inside_sin", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "second_comp", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "divided_global_step", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "ops", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "name", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "ops", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "divide", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "sin", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "divide", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "add", "type": "Any"}, {"lineNumber": 61, "col_offset": 80, "nodeName": "second_comp", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "divide", "type": "Any"}, {"lineNumber": 64, "col_offset": 85, "nodeName": "pi", "type": "float"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 65, "col_offset": 99, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "asin", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "divide", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "add", "type": "Any"}, {"lineNumber": 68, "col_offset": 80, "nodeName": "second_comp", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "divide", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "divided_global_step", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "add", "type": "Any"}, {"lineNumber": 74, "col_offset": 80, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 58, "col_offset": 76, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "divide", "type": "Any"}, {"lineNumber": 59, "col_offset": 84, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "add", "type": "Any"}, {"lineNumber": 60, "col_offset": 55, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 60, "col_offset": 70, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 61, "col_offset": 64, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "subtract", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 64, "col_offset": 69, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "divide", "type": "Any"}, {"lineNumber": 65, "col_offset": 87, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "sin", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "inside_sin", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "add", "type": "Any"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "learning_rate", "type": "Any"}, {"lineNumber": 67, "col_offset": 70, "nodeName": "max_lr", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 68, "col_offset": 64, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 73, "col_offset": 67, "nodeName": "floor", "type": "Any"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "divided_global_step", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "first_factor", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "second_factor", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 59, "col_offset": 66, "nodeName": "pi", "type": "float"}, {"lineNumber": 59, "col_offset": 70, "nodeName": "global_step", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "multiply", "type": "Any"}, {"lineNumber": 67, "col_offset": 42, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "math_ops", "type": "Any"}, {"lineNumber": 65, "col_offset": 82, "nodeName": "pi", "type": "float"}]