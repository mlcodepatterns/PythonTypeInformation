[{"lineNumber": 33, "col_offset": 0, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "arithmetize", "type": "Callable[[Any], Any]"}, {"lineNumber": 547, "col_offset": 0, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "SMALL_SHARE", "type": "float"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "ALIASES", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 331, "col_offset": 22, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 416, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "rnd_submodules", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "rops", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 562, "col_offset": 4, "nodeName": "grids", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "random", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "tf_distributions", "type": "None"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "ss", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 41, "col_offset": 88, "nodeName": "module", "type": "str"}, {"lineNumber": 42, "col_offset": 7, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "oper", "type": "str"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "rop", "type": "str"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "ops", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "rops", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "__array_priority__", "type": "int"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "weight", "type": "float"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 24, "nodeName": "concat_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 326, "col_offset": 24, "nodeName": "truncated", "type": "Callable[[Any], Any]"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "constant", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "distr", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "rvs", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "nonzero_probs", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "state_sampler", "type": "Any"}, {"lineNumber": 510, "col_offset": 29, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "bins", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "meshgrid", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "oper", "type": "str"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "rop", "type": "str"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "other", "type": "numpy.ndarray"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "oper", "type": "str"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "transform", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "rop", "type": "str"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "rtransform", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "sample", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 18, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "_up", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "_low", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 180, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 203, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "sample", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "weight", "type": "float"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 246, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 273, "col_offset": 11, "nodeName": "high", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "high", "type": "Any"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "low", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "low", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "ctr", "type": "int"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 17, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "constant", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 388, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 389, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 391, "col_offset": 23, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "state", "type": "Any"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 411, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "seed", "type": "Any"}, {"lineNumber": 438, "col_offset": 15, "nodeName": "_get_method_by_alias", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "distr", "type": "Any"}, {"lineNumber": 459, "col_offset": 17, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "sample", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 491, "col_offset": 32, "nodeName": "edges", "type": "Any"}, {"lineNumber": 491, "col_offset": 39, "nodeName": "seed", "type": "Any"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "histo", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 502, "col_offset": 21, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 503, "col_offset": 21, "nodeName": "cart_prod", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 505, "col_offset": 22, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "probs", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 510, "col_offset": 29, "nodeName": "state", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "choice", "type": "Any"}, {"lineNumber": 529, "col_offset": 36, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 532, "col_offset": 13, "nodeName": "high", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "state_sampler", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "histogramdd", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 544, "col_offset": 21, "nodeName": "histo_update", "type": "Any"}, {"lineNumber": 562, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 563, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 563, "col_offset": 52, "nodeName": "arrs", "type": "Generator[Any, Any, None]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "alias", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "rnd_submodules", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "other", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "cls", "type": "Type[Sampler]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "weight", "type": "float"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "weight", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 166, "col_offset": 31, "nodeName": "_ws", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "binomial", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "size", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 173, "col_offset": 31, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "sample", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "sample", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "_sample", "type": "Any"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "Sampler", "type": "Type[Sampler]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "concat_sample", "type": "Callable[[Any], Any]"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 285, "col_offset": 33, "nodeName": "prob", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "cumulated", "type": "int"}, {"lineNumber": 293, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 296, "col_offset": 16, "nodeName": "cond", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "_share", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "cumulated", "type": "Any"}, {"lineNumber": 320, "col_offset": 16, "nodeName": "ctr", "type": "int"}, {"lineNumber": 348, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 365, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 388, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 392, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 410, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 411, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "_params", "type": "Dict[str, Any]"}, {"lineNumber": 412, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 437, "col_offset": 39, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 440, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 441, "col_offset": 29, "nodeName": "ss", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "name", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 441, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 458, "col_offset": 18, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 459, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 459, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 460, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 491, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 493, "col_offset": 24, "nodeName": "histo", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 494, "col_offset": 25, "nodeName": "histo", "type": "Any"}, {"lineNumber": 495, "col_offset": 13, "nodeName": "edges", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "edges", "type": "Any"}, {"lineNumber": 496, "col_offset": 25, "nodeName": "edges", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "bins", "type": "Any"}, {"lineNumber": 506, "col_offset": 33, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "nonzero_probs_idx", "type": "Any"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 509, "col_offset": 48, "nodeName": "seed", "type": "Any"}, {"lineNumber": 510, "col_offset": 29, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 529, "col_offset": 36, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 529, "col_offset": 62, "nodeName": "nonzero_probs", "type": "Any"}, {"lineNumber": 529, "col_offset": 87, "nodeName": "size", "type": "Any"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "l_all", "type": "Any"}, {"lineNumber": 532, "col_offset": 42, "nodeName": "h_all", "type": "Any"}, {"lineNumber": 533, "col_offset": 15, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 533, "col_offset": 38, "nodeName": "low", "type": "Any"}, {"lineNumber": 533, "col_offset": 48, "nodeName": "high", "type": "Any"}, {"lineNumber": 543, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 45, "nodeName": "points", "type": "Any"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "edges", "type": "Any"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "grids", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "ALIASES", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "module", "type": "str"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "alias", "type": "Any"}, {"lineNumber": 43, "col_offset": 80, "nodeName": "alias", "type": "Any"}, {"lineNumber": 43, "col_offset": 87, "nodeName": "module", "type": "str"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "module", "type": "str"}, {"lineNumber": 47, "col_offset": 80, "nodeName": "fullname", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 47, "col_offset": 90, "nodeName": "module", "type": "str"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 122, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "stacked", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "other", "type": "Any"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "_normed", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "_up_size", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "other", "type": "Any"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "_low_size", "type": "Any"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "_up", "type": "Any"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "_low", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "_left", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "_right", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "result", "type": "Sampler"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 286, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "expectation", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "astype", "type": "Any"}, {"lineNumber": 296, "col_offset": 56, "nodeName": "bool", "type": "Any"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "low", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "high", "type": "Any"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "cond", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 319, "col_offset": 36, "nodeName": "cond", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 322, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "constant", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 392, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 38, "nodeName": "self", "type": "NumpySampler"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 413, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 459, "col_offset": 49, "nodeName": "self", "type": "ScipySampler"}, {"lineNumber": 460, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "sample", "type": "Any"}, {"lineNumber": 491, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 498, "col_offset": 12, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 500, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 505, "col_offset": 22, "nodeName": "bins", "type": "Any"}, {"lineNumber": 507, "col_offset": 40, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 62, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 532, "col_offset": 20, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 532, "col_offset": 31, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 532, "col_offset": 42, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 532, "col_offset": 53, "nodeName": "bin_nums", "type": "Any"}, {"lineNumber": 543, "col_offset": 58, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 563, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 53, "nodeName": "module", "type": "str"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "sample", "type": "Any"}, {"lineNumber": 215, "col_offset": 36, "nodeName": "size", "type": "Any"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "sample", "type": "Any"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "concatenate", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "high", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 27, "nodeName": "low", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 286, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 286, "col_offset": 49, "nodeName": "prob", "type": "Any"}, {"lineNumber": 287, "col_offset": 47, "nodeName": "sigma", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 296, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "expr", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "cond", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "high", "type": "Any"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "low", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 313, "col_offset": 32, "nodeName": "cond", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "_share", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "SMALL_SHARE", "type": "float"}, {"lineNumber": 314, "col_offset": 44, "nodeName": "ctr", "type": "int"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "samples", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "sample", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 49, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 497, "col_offset": 62, "nodeName": "edges", "type": "Any"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 498, "col_offset": 39, "nodeName": "bins_shape", "type": "List[int]"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "float32", "type": "Any"}, {"lineNumber": 502, "col_offset": 33, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 502, "col_offset": 52, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 502, "col_offset": 65, "nodeName": "edges", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 503, "col_offset": 51, "nodeName": "range_dim", "type": "Any"}, {"lineNumber": 503, "col_offset": 64, "nodeName": "edges", "type": "Any"}, {"lineNumber": 505, "col_offset": 22, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 505, "col_offset": 41, "nodeName": "bins", "type": "Any"}, {"lineNumber": 506, "col_offset": 33, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "self", "type": "ConstantSampler"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "args", "type": "Tuple[Any]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "self", "type": "Sampler"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "other", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "_left", "type": "Any"}, {"lineNumber": 217, "col_offset": 46, "nodeName": "_right", "type": "Any"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "prob", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "all", "type": "Any"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 38, "nodeName": "cond", "type": "Any"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 30, "nodeName": "axis_edge", "type": "Any"}, {"lineNumber": 498, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 65, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 503, "col_offset": 64, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 505, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 505, "col_offset": 41, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 506, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 506, "col_offset": 44, "nodeName": "probs", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 37, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "expr", "type": "Any"}, {"lineNumber": 310, "col_offset": 33, "nodeName": "sample", "type": "Any"}, {"lineNumber": 506, "col_offset": 44, "nodeName": "self", "type": "HistoSampler"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 299, "col_offset": 87, "nodeName": "low", "type": "Any"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "greater_equal", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "sample", "type": "Any"}, {"lineNumber": 301, "col_offset": 57, "nodeName": "low", "type": "Any"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 305, "col_offset": 84, "nodeName": "high", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "less_equal", "type": "Any"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "sample", "type": "Any"}, {"lineNumber": 307, "col_offset": 54, "nodeName": "high", "type": "Any"}, {"lineNumber": 299, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 299, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 301, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 305, "col_offset": 67, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "expr", "type": "Any"}, {"lineNumber": 299, "col_offset": 54, "nodeName": "sample", "type": "Any"}, {"lineNumber": 305, "col_offset": 46, "nodeName": "expr", "type": "Any"}, {"lineNumber": 305, "col_offset": 51, "nodeName": "sample", "type": "Any"}]