[{"lineNumber": 10, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "Module", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "Module", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "PixelShuffle", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "PixelShuffle", "type": "Type[PixelShuffle]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "Module", "type": "Any"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "nn", "type": "Any"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "nn", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "dim", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "dim", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "reshape_to", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "reshape_to", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "result", "type": "Union[Any, int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "result", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "result", "type": "Union[int, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "conv", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "conv", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "num_dims", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "weighted", "type": "Union[Any, int]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "concat", "type": "staticmethod"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "sum", "type": "staticmethod"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "mul", "type": "staticmethod"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "mean", "type": "staticmethod"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "softsum", "type": "staticmethod"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "attention", "type": "staticmethod"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "alias", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "op", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "leading_index", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "input_shapes", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "force_resize", "type": "Union[Any, bool]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "res", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "res", "type": "str"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "force_resize", "type": "Union[Any, bool]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "res", "type": "str"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "res", "type": "str"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "shape_", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "dim_", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "spatial_shape_", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "item", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "mode", "type": "Union[Any, str]"}, {"lineNumber": 246, "col_offset": 20, "nodeName": "mode", "type": "Union[Any, str]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "info", "type": "str"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "info", "type": "str"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "IncreaseDim"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "dim", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "dim", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Reshape"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Crop"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "resize_to", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "cat", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "ModuleList", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "conv", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "skip", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "get_num_channels", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "skip", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "skip", "type": "Any"}, {"lineNumber": 138, "col_offset": 97, "nodeName": "x", "type": "Any"}, {"lineNumber": 139, "col_offset": 112, "nodeName": "skip", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "mul", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "sum", "type": "Callable[[Any], Any]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "method", "type": "staticmethod"}, {"lineNumber": 151, "col_offset": 85, "nodeName": "alias", "type": "str"}, {"lineNumber": 151, "col_offset": 94, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "idx", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "input_shapes", "type": "None"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "resized_shapes", "type": "None"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "output_shape", "type": "None"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "idx", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "resized_shapes", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "inputs", "type": "Union[Any, List[Any]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "output", "type": "Any"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "name", "type": "Any"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "res", "type": "str"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "res", "type": "str"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "idx", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "input_shapes", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "res", "type": "str"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "shape_", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "shape", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "dim", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 242, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "MODES", "type": "Dict[str, str]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "mode", "type": "str"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "interpolate", "type": "Any"}, {"lineNumber": 250, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "info", "type": "str"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "info", "type": "str"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "mode", "type": "Union[Any, str]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "upscale_factor", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "Upsample"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 321, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "self", "type": "IncreaseDim"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "ones", "type": "List[int]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "reshape_to", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "self", "type": "Crop"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "i_shape_", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "r_shape_", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "i_shape_", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "r_shape_", "type": "Any"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "output", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "result", "type": "int"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "result", "type": "int"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "conv", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "Combine", "type": "Type[Combine]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "ConvBlock", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "Combine", "type": "Type[Combine]"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "conv2", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "Combine", "type": "Type[Combine]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "weighted", "type": "Union[Any, int]"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "skip", "type": "Any"}, {"lineNumber": 151, "col_offset": 50, "nodeName": "method", "type": "staticmethod"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "aliases", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "items", "type": "Callable"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Combine"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "self", "type": "Combine"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "self", "type": "Combine"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "self", "type": "Combine"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "op", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "force_resize", "type": "Union[Any, bool]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "op", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "force_resize", "type": "Union[Any, bool]"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "op", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "op", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "force_resize", "type": "Union[Any, bool]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "Combine"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "item", "type": "Any"}, {"lineNumber": 182, "col_offset": 57, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "spatial_resize", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "Combine"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "self", "type": "Combine"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "self", "type": "Combine"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 195, "col_offset": 42, "nodeName": "self", "type": "Combine"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "self", "type": "Combine"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "resized_shapes", "type": "Any"}, {"lineNumber": 200, "col_offset": 43, "nodeName": "self", "type": "Combine"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 212, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "get_num_dims", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "item", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "item", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "MODES", "type": "Dict[str, str]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "F", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "mode", "type": "Union[Any, str]"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "shape", "type": "Any"}, {"lineNumber": 250, "col_offset": 78, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 251, "col_offset": 51, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "layout", "type": "Any"}, {"lineNumber": 314, "col_offset": 35, "nodeName": "layout", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 315, "col_offset": 65, "nodeName": "factor", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 316, "col_offset": 57, "nodeName": "factor", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 318, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 318, "col_offset": 53, "nodeName": "layout", "type": "Any"}, {"lineNumber": 318, "col_offset": 68, "nodeName": "factor", "type": "Any"}, {"lineNumber": 318, "col_offset": 82, "nodeName": "shape", "type": "Any"}, {"lineNumber": 318, "col_offset": 91, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "self", "type": "Upsample"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "self", "type": "Reshape"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 53, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 66, "nodeName": "r_shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "r_shape_", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "i_shape_", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "r_shape_", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "zeros_shape", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "r_shape_", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 63, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "conv", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "conv", "type": "Any"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 138, "col_offset": 73, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 138, "col_offset": 89, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "skip", "type": "Any"}, {"lineNumber": 139, "col_offset": 92, "nodeName": "num_dims", "type": "Any"}, {"lineNumber": 139, "col_offset": 104, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "OPS", "type": "Dict[staticmethod, List[str]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "self", "type": "Combine"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "op", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "self", "type": "Combine"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "Combine"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "self", "type": "Combine"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "self", "type": "Combine"}, {"lineNumber": 170, "col_offset": 36, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "self", "type": "Combine"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "Combine"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "self", "type": "Combine"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 185, "col_offset": 45, "nodeName": "item", "type": "Any"}, {"lineNumber": 185, "col_offset": 55, "nodeName": "item", "type": "Any"}, {"lineNumber": 185, "col_offset": 63, "nodeName": "inputs", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "self", "type": "Combine"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "self", "type": "Combine"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "dim_", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 63, "nodeName": "spatial_shape", "type": "Any"}, {"lineNumber": 215, "col_offset": 80, "nodeName": "spatial_shape_", "type": "Any"}, {"lineNumber": 216, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "resized", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "mode", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 250, "col_offset": 78, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 251, "col_offset": 51, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 255, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 257, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "get", "type": "Callable"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "get_shape", "type": "Any"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 55, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "zeros_shape", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "zeros_shape", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "i_shape_", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "idx", "type": "Any"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "idx", "type": "Any"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "op", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "inputs", "type": "Union[List[Any], Any]"}, {"lineNumber": 167, "col_offset": 52, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 170, "col_offset": 52, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "force_resize", "type": "Any"}, {"lineNumber": 176, "col_offset": -1, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 176, "col_offset": 90, "nodeName": "op", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "idx", "type": "Any"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "idx", "type": "Any"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "self", "type": "Combine"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 215, "col_offset": 44, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "Crop", "type": "Type[Crop]"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "self", "type": "Interpolate"}, {"lineNumber": 315, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Optional[Union[Any, str]]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "device", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "i_shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "shape", "type": "List[slice]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "self", "type": "Combine"}, {"lineNumber": 159, "col_offset": 49, "nodeName": "self", "type": "Combine"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "self", "type": "Combine"}, {"lineNumber": 180, "col_offset": 49, "nodeName": "self", "type": "Combine"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "dim", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 72, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 176, "col_offset": 72, "nodeName": "OPS", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 72, "nodeName": "self", "type": "Combine"}]