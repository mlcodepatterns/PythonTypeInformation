[{"lineNumber": 24, "col_offset": 0, "nodeName": "print_model_param_nums", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "count_model_param_flops", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "total", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "prods", "type": "Dict[Any, Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "list_1", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "list_2", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "list_conv", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "list_linear", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "list_bn", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "list_relu", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "list_pooling", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "list_upsample", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "input", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "out", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "total_flops", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "total_flops", "type": "Any"}, {"lineNumber": 25, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "hook_per", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "kernel_ops", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "bias_ops", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "num_weight_params", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "flops", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "weight_ops", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "bias_ops", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "flops", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "kernel_ops", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "bias_ops", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "params", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "flops", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "flops", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "childrens", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "c", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "childrens", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 124, "col_offset": 10, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "alexnet", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "list_2", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "prod", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "size", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 58, "col_offset": 128, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "flops", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "batch_size", "type": "Union[Any, int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "flops", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "size", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 88, "col_offset": 91, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "flops", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "input_height", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "input_width", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "size", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "size", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "flops", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "childrens", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "alexnet", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 127, "col_offset": 107, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 111, "nodeName": "list_upsample", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 27, "col_offset": 68, "nodeName": "param", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "total", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "prods", "type": "Dict[Any, Any]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "prod", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "list_1", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "prod", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 51, "col_offset": 85, "nodeName": "groups", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "bias", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "kernel_ops", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "bias_ops", "type": "int"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "numel", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "kernel_ops", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 58, "col_offset": 113, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "list_conv", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "multiply_adds", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "bias", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "weight_ops", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "bias_ops", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "list_linear", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "list_bn", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "list_relu", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 76, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "list_pooling", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 65, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "list_upsample", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "children", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "BatchNorm2d", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "Upsample", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "foo", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 127, "col_offset": 87, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 91, "nodeName": "list_pooling", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "total_flops", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "torchvision", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "param", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 27, "col_offset": 77, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 49, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 85, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 58, "col_offset": 97, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "dim", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "weight", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "nelement", "type": "Any"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 88, "col_offset": 60, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "input", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "output", "type": "Any"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "net", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "conv_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "linear_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "bn_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "relu_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "MaxPool2d", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 112, "col_offset": 65, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 70, "nodeName": "AvgPool2d", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "pooling_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "register_forward_hook", "type": "Any"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "upsample_hook", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "torchvision", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "input_res", "type": "Any"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "input_res", "type": "Any"}, {"lineNumber": 127, "col_offset": 70, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 74, "nodeName": "list_relu", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "param", "type": "Any"}, {"lineNumber": 27, "col_offset": 77, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "input", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "input", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "input", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "input", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "output_height", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "output_width", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 112, "col_offset": 70, "nodeName": "nn", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "net", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "list_bn", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "num_weight_params", "type": "Any"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "bias_ops", "type": "int"}, {"lineNumber": 58, "col_offset": 78, "nodeName": "output_channels", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "input", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "input", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "kernel_ops", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "bias_ops", "type": "int"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 70, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "list_conv", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "list_linear", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "weight", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "multiply_adds", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "self", "type": "Any"}]