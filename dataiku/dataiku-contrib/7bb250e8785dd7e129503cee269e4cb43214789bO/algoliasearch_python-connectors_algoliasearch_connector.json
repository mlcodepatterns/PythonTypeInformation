[{"lineNumber": 6, "col_offset": 29, "nodeName": "Connector", "type": "Any"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "get_read_schema", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "_get_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "generate_rows", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "CustomDatasetWriter", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "write_row", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "flush", "type": "Callable[[Any], Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "close", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "client", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "index", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "hit", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "index", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "dataset_schema", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "dataset_schema", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "dataset_partitioning", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "dataset_partitioning", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "partition_id", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "partition_id", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "buffer", "type": "List[nothing]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "buffer", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 8, "col_offset": 27, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 8, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "Client", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "init_index", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "_get_index", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "records_limit", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "records_limit", "type": "Any"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "search", "type": "Any"}, {"lineNumber": 29, "col_offset": 63, "nodeName": "search_settings", "type": "Dict[str, Union[List[nothing], Any]]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "res", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "AlgoliaSearchConnectorWriter", "type": "Type[AlgoliaSearchConnectorWriter]"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "config", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "dataset_schema", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "dataset_partitioning", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "partition_id", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "clear_index", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "col", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 62, "nodeName": "row", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "save_objects", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "buffer", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "flush", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "Connector", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "algoliasearch", "type": "Any"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "config", "type": "Any"}, {"lineNumber": 16, "col_offset": 68, "nodeName": "config", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "client", "type": "Any"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "search_settings", "type": "Dict[str, Union[List[nothing], Any]]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "index", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "get", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "hit", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "hit", "type": "Any"}, {"lineNumber": 40, "col_offset": 44, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "_get_index", "type": "Callable[[], Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "CustomDatasetWriter", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "dataset_schema", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "val", "type": "unicode"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "val", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "buffer", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "buffer", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "flush", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 16, "col_offset": 38, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 16, "col_offset": 68, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "hit", "type": "Any"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "col", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "obj", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "AlgoliaSearchConnectorWriter"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "self", "type": "AlgoliaSearchConnector"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "unicode", "type": "Type[unicode]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "val", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "logging", "type": "module"}]