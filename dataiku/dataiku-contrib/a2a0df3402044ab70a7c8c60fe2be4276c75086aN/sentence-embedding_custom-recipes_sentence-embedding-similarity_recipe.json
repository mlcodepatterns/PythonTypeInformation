[{"lineNumber": 14, "col_offset": 0, "nodeName": "FORMAT", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "input_dataset", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "embedding_folder", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "folder_path", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "text_column_names", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "i", "type": "int"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "distance", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "embedding_is_custom", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "aggregation_method", "type": "Any"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "model", "type": "Any"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "embeddings_list", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "text_column_names", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "distances", "type": "Any"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "new_column_name", "type": "str"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "distances", "type": "Any"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "INFO", "type": "int"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "get_dataframe", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "get_path", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "get_recipe_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "get", "type": "Any"}, {"lineNumber": 45, "col_offset": 3, "nodeName": "distance", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 52, "col_offset": 3, "nodeName": "aggregation_method", "type": "Any"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "load_pretrained_model", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "folder_path", "type": "Any"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "embedding_is_custom", "type": "Any"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "texts", "type": "Any"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 3, "nodeName": "distance", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "distance_function", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "cosine", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 117, "col_offset": 167, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "new_column_name", "type": "str"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "columns", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "j", "type": "int"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "new_column_name", "type": "str"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "write_with_schema", "type": "Any"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "df", "type": "Any"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "FORMAT", "type": "str"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "logging", "type": "module"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "get_input_names_for_role", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "get_input_names_for_role", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 40, "col_offset": 7, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "column_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 53, "col_offset": 10, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 5, "nodeName": "aggregation_method", "type": "Any"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 86, "col_offset": 7, "nodeName": "aggregation_method", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "embedded_texts", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "embedded_texts", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "embedded_texts", "type": "Any"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 102, "col_offset": 5, "nodeName": "distance", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "distance_function", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "euclidean", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "distance_function", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "map", "type": "Callable"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "text_column_names", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "df", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "columns", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "j", "type": "int"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "j", "type": "int"}, {"lineNumber": 131, "col_offset": 3, "nodeName": "new_column_name", "type": "str"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "get_output_names_for_role", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "input_dataset", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "Folder", "type": "Any"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "embedding_folder", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "text_column_names", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "smoothing_parameter", "type": "None"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "npc", "type": "None"}, {"lineNumber": 58, "col_offset": 5, "nodeName": "aggregation_method", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "advanced_settings", "type": "Any"}, {"lineNumber": 60, "col_offset": 7, "nodeName": "advanced_settings", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "get_sentence_embedding", "type": "Any"}, {"lineNumber": 87, "col_offset": 54, "nodeName": "texts", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "get_weighted_sentence_embedding", "type": "Any"}, {"lineNumber": 89, "col_offset": 63, "nodeName": "texts", "type": "Any"}, {"lineNumber": 89, "col_offset": 70, "nodeName": "smoothing_parameter", "type": "Optional[float]"}, {"lineNumber": 89, "col_offset": 91, "nodeName": "npc", "type": "Optional[int]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "embeddings_list", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 5, "nodeName": "distance", "type": "Any"}, {"lineNumber": 117, "col_offset": 142, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 126, "col_offset": 10, "nodeName": "new_column_name", "type": "str"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "Dataset", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "output_dataset", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "dataiku", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "dataiku", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "smoothing_parameter", "type": "float"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "npc", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "smoothing_parameter", "type": "float"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "npc", "type": "int"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 5, "nodeName": "distance", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "distance_function", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "wasserstein_distance", "type": "Any"}, {"lineNumber": 117, "col_offset": 134, "nodeName": "nan", "type": "Any"}, {"lineNumber": 117, "col_offset": 147, "nodeName": "embeddings_list", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "dataiku", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "x", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "y", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "norm", "type": "Any"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "distance_function", "type": "Any"}, {"lineNumber": 117, "col_offset": 134, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "recipe_config", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 109, "col_offset": 34, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 72, "nodeName": "sum", "type": "Any"}, {"lineNumber": 117, "col_offset": 102, "nodeName": "sum", "type": "Any"}, {"lineNumber": 117, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 79, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 117, "col_offset": 102, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 109, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 117, "col_offset": 79, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 88, "nodeName": "x", "type": "Any"}, {"lineNumber": 117, "col_offset": 109, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 118, "nodeName": "x", "type": "Any"}]