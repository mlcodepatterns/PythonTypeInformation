[{"lineNumber": 21, "col_offset": 0, "nodeName": "dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "multilevel_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "date_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "null_df", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "multiindex_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "multiindex_with_missing_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "multiindex_with_missing_3level_dataframe", "type": "Callable[[], Any]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "missingdata_df", "type": "Callable[[], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "biodf", "type": "Callable[[], Any]"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "chemdf", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "df_duplicated_columns", "type": "Callable[[], Any]"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "spark", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "spark_df", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "pytest_configure", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "TEST_DATA_DIR", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "EXAMPLES_DIR", "type": "str"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Union[List[str], List[int], List[float]]]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "arrays", "type": "List[numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "tuples", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "index", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "data", "type": "Dict[Tuple[str, str], List[int]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "data", "type": "Dict[Tuple[str, str], List[int]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "data", "type": "Dict[Tuple[str, str, str], List[int]]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "data", "type": "Dict[str, Union[List[str], List[int], List[float], List[Any]]]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "filename", "type": "str"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "columns", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "data", "type": "Dict[str, range]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "clean_df", "type": "Any"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "clean_df", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "spark", "type": "Any"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "schema", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "TEST_DATA_DIR", "type": "str"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "TEST_DATA_DIR", "type": "str"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "EXAMPLES_DIR", "type": "str"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "EXAMPLES_DIR", "type": "str"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "data", "type": "Dict[str, Union[List[str], List[int], List[float]]]"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "from_tuples", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "tuples", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "date_list", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "nan", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "nan", "type": "Any"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "data", "type": "Dict[Tuple[str, str], List[int]]"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "data", "type": "Dict[Tuple[str, str], List[int]]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "data", "type": "Dict[Tuple[str, str, str], List[int]]"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "data", "type": "Dict[str, Union[List[str], List[int], List[float], List[Any]]]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "TEST_DATA_DIR", "type": "str"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "clean_names", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "TEST_DATA_DIR", "type": "str"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "head", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "data", "type": "Dict[str, range]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "clean_names", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "getOrCreate", "type": "Any"}, {"lineNumber": 146, "col_offset": 10, "nodeName": "spark", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "stop", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "StructType", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "createDataFrame", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "schema", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "MultiIndex", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "randn", "type": "Any"}, {"lineNumber": 43, "col_offset": 62, "nodeName": "index", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "date_data", "type": "module"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "choice", "type": "Any"}, {"lineNumber": 58, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 110, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 133, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 137, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "df", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "spark", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "spark", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "arrays", "type": "List[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "pd", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "nan", "type": "Any"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "nan", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "nan", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "filename", "type": "str"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "SparkSession", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "StructField", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "IntegerType", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "IntegerType", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "StringType", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "StringType", "type": "Any"}]